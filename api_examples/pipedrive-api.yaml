openapi: 3.0.1
info:
  title: Pipedrive API v1
  version: 1.0.0
servers:
  - url: 'https://api.pipedrive.com/v1'
tags:
  - name: Activities
    description: 'Activities are appointments/tasks/events on a calendar that can be associated with a Deal, a Person and an Organization. Activities can be of different type (such as call, meeting, lunch or a custom type - see ActivityTypes object) and can be assigned to a particular User. Note that activities can also be created without a specific date/time.'
  - name: ActivityFields
    description: ActivityFields represent different fields that Activity has.
  - name: ActivityTypes
    description: 'ActivityTypes represent different kinds of activities that can be stored. Each ActivityType is presented to the user with an icon and a name. Additionally, a color can be defined (not implemented in the Pipedrive app as of today). ActivityTypes are linked to Activities via ActivityType.key_string = Activity.type. The key_string will be generated by the API based on the given name of the ActivityType upon creation, and cannot be changed. ActivityTypes should be presented to the user in an ordered manner, using the ActivityType.order_nr value.'
  - name: Currencies
    description: 'Supported currencies which can be used to represent the monetary value of a Deal, or a value of any monetary type custom field. The Currency.code field must be used to point to a currency. Currency.code is the ISO-4217 format currency code for non-custom currencies. You can differentiate custom and non-custom currencies using the is_custom_flag property. For custom currencies, it is intended that the formatted sums are displayed in the UI using the following format: [sum][non-breaking space character][currency.symbol], for example: 500 users. Custom currencies cannot be added or removed via the API yet — rather the admin users of the account must configure them from the Pipedrive app.'
  - name: DealFields
    description: 'DealFields represent the near-complete schema for a Deal in the context of the company of the authorized user. Each company can have a different schema for their Deals, with various custom fields. In the context of using DealFiels as a schema for defining the data fields of a Deal, it must be kept in mind that some types of custom fields can have additional data fields which are not separate DealFields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of DealFields. For example, if there is a monetary field with the key ''ffk9s9'' stored on the account, ''ffk9s9'' would hold the numeric value of the field, and ''ffk9s9_currency'' would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one Deal and list its keys.'
  - name: Deals
    description: 'Deals represent ongoing, lost or won sales to an Organization or to a Person. Each deal has a monetary value and must be placed in a Stage. Deals can be owned by a User, and followed by one or many Users. Each Deal consists of standard data fields but can also contain a number of custom fields. The custom fields can be recognized by long hashes as keys. These hashes can be mapped against DealField.key. The corresponding label for each such custom field can be obtained from DealField.name.'
  - name: Files
    description: 'Files are documents of any kind (images, spreadsheets, text files, etc.) that are uploaded to Pipedrive, and usually associated with a particular Deal, Person, Organization, Product, Note or Activity. Remote files can only be associated with a particular Deal, Person or Organization. Note that the API currently does not support downloading files although it lets you retrieve a file’s meta-info along with a URL which can be used to download the file by using a standard HTTP GET request.'
  - name: Filters
    description: 'Each filter is essentially a set of data validation conditions. A filter of the same kind can be applied when fetching list of Deals, Persons, Organizations, Products or Deals in the context of a Pipeline. When applied, only items matching the conditions of the filter are returned. Detailed definitions of filter conditions and additional functionality is not yet available.'
  - name: GlobalMessages
    description: Get or dismiss global messages
  - name: Goals
    description: 'Goals help your team meet your sales targets. There are three types of goals - company, team and user.'
  - name: MailMessages
    description: MailMessages represent mail messages that are being synced with Piperive using the 2-way sync or the Smart Email BCC feature. Messages are grouped in threads.
  - name: MailThreads
    description: MailThreads represent mail threads which contain individual mail messages.
  - name: NoteFields
    description: NoteFields represent different fields that Note has.
  - name: Notes
    description: 'Notes are pieces of textual (HTML-formatted) information that can be attached to Deals, Persons and Organizations. Notes are usually displayed in the UI in chronological order – newest first – and in context with other updates regarding the item they are attached to. The maximum note size is approximately 3,000,000 characters (or 3MB per note).'
  - name: OrganizationFields
    description: 'OrganizationFields represent the near-complete schema for an Organization in the context of the company of the authorized user. Each company can have a different schema for their Organizations, with various custom fields. In the context of using OrganizationFiels as a schema for defining the data fields of an Organization, it must be kept in mind that some types of custom fields can have additional data fields which are not separate OrganizationFields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of OrganizationFields. For example, if there is a monetary field with the key ''ffk9s9'' stored on the account, ''ffk9s9'' would hold the numeric value of the field, and ''ffk9s9_currency'' would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one Organization and list its keys.'
  - name: OrganizationRelationships
  - name: Organizations
    description: Organizations are companies and other kinds of organizations you are making Deals with. Persons can be associated with organizations so that each organization can contain one or more Persons.
  - name: PermissionSets
  - name: PersonFields
    description: 'PersonFields represent the near-complete schema for a Person in the context of the company of the authorized user. Each company can have a different schema for their Persons, with various custom fields. In the context of using PersonFields as a schema for defining the data fields of a Person, it must be kept in mind that some types of custom fields can have additional data fields which are not separate PersonFields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of PersonFields. For example, if there is a monetary field with the key ''ffk9s9'' stored on the account, ''ffk9s9'' would hold the numeric value of the field, and ''ffk9s9_currency'' would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one Person and list its keys.'
  - name: Persons
    description: 'Persons are your contacts, the customers you are doing Deals with. Each Person can belong to an Organization. Persons should not be confused with Users.'
  - name: Pipelines
    description: Pipelines are essentially ordered collections of Stages.
  - name: ProductFields
    description: 'ProductFields represent the near-complete schema for a Product in the context of the company of the authorized user. Each company can have a different schema for their Products, with various custom fields. In the context of using ProductFields as a schema for defining the data fields of a Product, it must be kept in mind that some types of custom fields can have additional data fields which are not separate ProductFields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of ProductFields. For example, if there is a monetary field with the key ''ffk9s9'' stored on the account, ''ffk9s9'' would hold the numeric value of the field, and ''ffk9s9_currency'' would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one Product and list its keys.'
  - name: Products
    description: 'Products are the goods or services you are dealing with. Each product can have N different price points - first, each Product can have a price in N different currencies, and secondly, each Product can have N variations of itself, each having N prices different currencies. Note that only one price per variation per currency is supported. Products can be instantiated to Deals. In the context of instatiation, a custom price, quantity, duration and discount can be applied.'
  - name: Recents
    description: 'Recent changes across all item types in Pipedrive (deals, persons, etc).'
  - name: Roles
    description: Roles are a part of the Visibility groups’ feature that allow the Admin user to categorize other users and dictate what items they will be allowed access to see.
  - name: SearchResults
    description: 'Ordered reference objects, pointing to either Deals, Persons, Organizations, Files or Products.'
  - name: Stages
    description: 'Stage is a logical component of a Pipeline, and essentially a bucket that can hold a number of Deals. In the context of the Pipeline a stage belongs to, it has an order number which defines the order of stages in that Pipeline.'
  - name: Teams
    description: Teams allow you to form groups of users withing the organization for more efficient management.
  - name: UserConnections
    description: Manage user connections.
  - name: UserSettings
    description: User settings
  - name: Users
    description: 'Users are people with access to your Pipedrive account. A user may belong to one or many Pipedrive accounts, so deleting a user from one Pipedrive account will not remove the user from the data store if he/she is connected to multiple accounts. Users should not be confused with Persons.'
  - name: Webhooks
    description: 'See <a href="https://pipedrive.readme.io/docs/guide-for-webhooks?utm_source=api_reference">https://pipedrive.readme.io/docs/guide-for-webhooks</a> for more info about webhooks.'
paths:
  /activities:
    delete:
      summary: Delete multiple activities in bulk
      description: Marks multiple activities as deleted.
      tags:
        - Activities
      security:
        - api_key: []
        - oauth2:
            - 'activities:full'
      parameters:
        - in: query
          name: ids
          required: true
          description: Comma-separated IDs that will be deleted
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get all activities assigned to a particular user
      description: Returns all activities assigned to a particular user.
      tags:
        - Activities
      security:
        - api_key: []
        - oauth2:
            - 'activities:read'
            - 'activities:full'
      parameters:
        - in: query
          name: user_id
          required: false
          schema:
            type: integer
          description: 'ID of the user whose activities will be fetched. If omitted, the user associated with the API token will be used. If 0, activities for all company users will be fetched based on the permission sets.'
        - in: query
          name: filter_id
          required: false
          schema:
            type: integer
          description: ID of the filter to use (will narrow down results if used together with user_id parameter).
        - in: query
          name: type
          required: false
          schema:
            type: string
          description: 'Type of the activity, can be one type or multiple types separated by a comma. This is in correlation with the key_string parameter of ActivityTypes.'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - in: query
          name: start_date
          required: false
          schema:
            type: string
            format: date
          description: Date in format of YYYY-MM-DD from which activities to fetch from.
        - in: query
          name: end_date
          required: false
          schema:
            type: string
            format: date
          description: Date in format of YYYY-MM-DD until which activities to fetch to.
        - $ref: '#/components/parameters/ActivityDone'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: Add an activity
      description: 'Adds a new activity. Includes more_activities_scheduled_in_context property in response''s additional_data which indicates whether there are more undone activities scheduled with the same deal, person or organization (depending on the supplied data). For more information on how to add an activity, see <a href="https://pipedrive.readme.io/docs/adding-an-activity" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - Activities
      security:
        - api_key: []
        - oauth2:
            - 'activities:full'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/activities/{id}':
    delete:
      summary: Delete an activity
      description: Deletes an activity.
      tags:
        - Activities
      security:
        - api_key: []
        - oauth2:
            - 'activities:full'
      parameters:
        - $ref: '#/components/parameters/ActivityID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get details of an activity
      description: Returns details of a specific activity.
      tags:
        - Activities
      security:
        - api_key: []
        - oauth2:
            - 'activities:read'
            - 'activities:full'
      parameters:
        - $ref: '#/components/parameters/ActivityID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    put:
      summary: Edit an activity
      description: 'Modifies an activity. Includes more_activities_scheduled_in_context property in response''s additional_data which indicates whether there are more undone activities scheduled with the same deal, person or organization (depending on the supplied data).'
      tags:
        - Activities
      security:
        - api_key: []
        - oauth2:
            - 'activities:full'
      parameters:
        - $ref: '#/components/parameters/ActivityID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /activityFields:
    get:
      summary: Get all fields for an activity
      description: Return list of all fields for activity
      tags:
        - ActivityFields
      security:
        - api_key: []
        - oauth2:
            - 'activities:read'
            - 'activities:full'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /activityTypes:
    delete:
      summary: Delete multiple activity types in bulk
      description: Marks multiple activity types as deleted.
      tags:
        - ActivityTypes
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - in: query
          name: ids
          description: Comma-separated activity type IDs to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get all activity types
      description: Returns all activity types
      tags:
        - ActivityTypes
      security:
        - api_key: []
        - oauth2:
            - 'activities:read'
            - 'activities:full'
            - admin
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: Add new activity type
      description: 'Adds a new activity type, returns the ID, the key_string and the order number of the newly added activity type upon success.'
      tags:
        - ActivityTypes
      security:
        - api_key: []
        - oauth2:
            - admin
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - name
                - icon_key
              properties:
                name:
                  type: string
                  description: Name of the activity type
                icon_key:
                  $ref: '#/components/schemas/IconKey'
                color:
                  type: string
                  description: 'A designated color for the activity type in 6-character HEX format (e.g. FFFFFF for white, 000000 for black).'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/activityTypes/{id}':
    delete:
      summary: Delete an activity type
      description: Marks an activity type as deleted.
      tags:
        - ActivityTypes
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - $ref: '#/components/parameters/ActivityTypeID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    put:
      summary: Edit activity type
      description: Updates an activity type.
      tags:
        - ActivityTypes
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - $ref: '#/components/parameters/ActivityTypeID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the activity type
                icon_key:
                  $ref: '#/components/schemas/IconKey'
                color:
                  type: string
                  description: 'A designated color for the activity type in 6-character HEX format (e.g. FFFFFF for white, 000000 for black).'
                order_nr:
                  type: integer
                  description: An order number for this activity type. Order numbers should be used to order the types in the activity type selections.
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /currencies:
    get:
      summary: Get all supported currencies
      description: Returns all supported currencies in given account which should be used when saving monetary values with other objects. The 'code' parameter of the returning objects is the currency code according to ISO 4217 for all non-custom currencies.
      tags:
        - Currencies
      security:
        - api_key: []
        - oauth2:
            - base
      parameters:
        - in: query
          name: term
          description: Optional search term that is searched for from currency's name and/or code.
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/CurrenciesGetSuccess'
  /deals:
    delete:
      summary: Delete multiple deals in bulk
      description: Marks multiple deals as deleted.
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
      parameters:
        - in: query
          name: ids
          description: Comma-separated IDs that will be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/DeleteMultipleDealsSuccess'
    get:
      summary: Get all deals
      description: 'Returns all deals. For more information on how to get all deals, see <a href="https://pipedrive.readme.io/docs/getting-all-deals" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
      parameters:
        - in: query
          name: user_id
          schema:
            type: integer
          description: 'If supplied, only deals matching the given user will be returned.'
        - in: query
          name: filter_id
          schema:
            type: integer
          description: ID of the filter to use
        - in: query
          name: stage_id
          schema:
            type: integer
          description: 'If supplied, only deals within the given stage will be returned.'
        - $ref: '#/components/parameters/DealStatus'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/DealSort'
        - in: query
          name: owned_by_you
          description: 'When supplied, only deals owned by you are returned. However filter_id takes precedence over owned_by_you when both are supplied.'
          schema:
            $ref: '#/components/schemas/NumberBoolean'
      responses:
        '200':
          $ref: '#/components/responses/DealsGetSuccess'
    post:
      summary: Add a deal
      description: 'Adds a new deal. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the dealFields and look for ''key'' values. For more information on how to add a deal, see <a href="https://pipedrive.readme.io/docs/creating-a-deal" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewDeal'
      responses:
        '200':
          $ref: '#/components/responses/DealAddSuccess'
  /deals/find:
    get:
      summary: Find deals by name
      description: Searches all deals by their title.
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
      parameters:
        - in: query
          name: term
          required: true
          schema:
            type: string
          description: Search term to look for
        - in: query
          name: person_id
          schema:
            type: integer
          description: ID of the person the Deal is associated with.
        - in: query
          name: org_id
          schema:
            type: integer
          description: ID of the organization the Deal is associated with.
      responses:
        '200':
          $ref: '#/components/responses/DealsGetByNameSuccess'
  /deals/summary:
    get:
      summary: Get deals summary
      description: Returns summary of all the deals.
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - open
              - won
              - lost
          description: 'Only fetch deals with specific status. open = Open, won = Won, lost = Lost'
        - in: query
          name: filter_id
          schema:
            type: integer
          description: user_id will not be considered. Only deals matching the given filter will be returned.
        - in: query
          name: user_id
          schema:
            type: integer
          description: Only deals matching the given user will be returned. user_id will not be considered if you use filter_id.
        - in: query
          name: stage_id
          schema:
            type: integer
          description: Only deals within the given stage will be returned.
      responses:
        '200':
          $ref: '#/components/responses/DealSummaryGetSuccess'
  /deals/timeline:
    get:
      summary: Get deals timeline
      description: 'Returns open and won deals, grouped by defined interval of time set in a date-type dealField (field_key) — e.g. when month is the chosen interval, and 3 months are asked starting from  January 1st, 2012, deals are returned grouped into 3 groups — January, February and March — based on the value of the given field_key.'
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
      parameters:
        - in: query
          name: start_date
          required: true
          schema:
            type: string
            format: date
          description: 'Date where first interval starts. Format: YYYY-MM-DD'
        - in: query
          name: interval
          required: true
          schema:
            type: string
            enum:
              - day
              - week
              - month
              - quarter
          description: Type of interval.<dl class="fields-list"><dt>day</dt><dd>Day</dd><dt>week</dt><dd>A full week (7 days) starting from start_date</dd><dt>month</dt><dd>A full month (depending on the number of days in given month) starting from start_date</dd><dt>quarter</dt><dd>A full quarter (3 months) starting from start_date</dd></dl>
        - in: query
          name: amount
          required: true
          schema:
            type: integer
          description: 'Number of given intervals, starting from start_date, to fetch. E.g. 3 (months).'
        - in: query
          name: field_key
          required: true
          schema:
            type: string
          description: The name of the date field by which to get deals by.
        - in: query
          name: user_id
          schema:
            type: integer
          description: 'If supplied, only deals matching the given user will be returned.'
        - in: query
          name: pipeline_id
          schema:
            type: integer
          description: 'If supplied, only deals matching the given pipeline will be returned.'
        - in: query
          name: filter_id
          schema:
            type: integer
          description: 'If supplied, only deals matching the given filter will be returned.'
        - in: query
          name: exclude_deals
          schema:
            $ref: '#/components/schemas/NumberBoolean'
          description: 'Whether to exclude deals list (1) or not (0). Note that when deals are excluded, the timeline summary (counts and values) is still returned.'
        - in: query
          name: totals_convert_currency
          schema:
            type: string
          description: '3-letter currency code of any of the supported currencies. When supplied, totals_converted is returned per each interval which contains the currency-converted total amounts in the given currency. You may also set this parameter to ''default_currency'' in which case users default currency is used.'
      responses:
        '200':
          $ref: '#/components/responses/DealsTimelineGetSuccess'
  '/deals/{id}':
    delete:
      summary: Delete a deal
      description: Marks a deal as deleted.
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
      parameters:
        - $ref: '#/components/parameters/DealID'
      responses:
        '200':
          $ref: '#/components/responses/DeleteDealSuccess'
    get:
      summary: Get details of a deal
      description: 'Returns details of a specific deal. Note that this also returns some additional fields which are not present when asking for all deals – such as deal age and stay in pipeline stages. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the ''key'' value of dealFields. For more information on how to get all details of a deal, see <a href="https://pipedrive.readme.io/docs/getting-details-of-a-deal" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
      parameters:
        - $ref: '#/components/parameters/DealID'
      responses:
        '200':
          $ref: '#/components/responses/DealGetSuccess'
    put:
      summary: Update a deal
      description: 'Updates the properties of a deal. For more information on how to update a deal, see <a href="https://pipedrive.readme.io/docs/updating-a-deal" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
      parameters:
        - $ref: '#/components/parameters/DealID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BasicDeal'
      responses:
        '200':
          $ref: '#/components/responses/DealAddSuccess'
  '/deals/{id}/activities':
    get:
      summary: List activities associated with a deal
      description: Lists activities associated with a deal.
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'activities:read'
            - 'activities:full'
      parameters:
        - $ref: '#/components/parameters/DealID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/ActivityDone'
        - $ref: '#/components/parameters/ActivityExclude'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/deals/{id}/duplicate':
    post:
      summary: Duplicate deal
      description: Duplicate a deal
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
      parameters:
        - $ref: '#/components/parameters/DealID'
      responses:
        '200':
          $ref: '#/components/responses/DealDuplicatedSuccess'
  '/deals/{id}/files':
    get:
      summary: List files attached to a deal
      description: Lists files associated with a deal.
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
      parameters:
        - $ref: '#/components/parameters/DealID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/IncludeDeletedFiles'
        - $ref: '#/components/parameters/FilesSort'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/deals/{id}/flow':
    get:
      summary: List updates about a deal
      description: Lists updates about a deal.
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'recents:read'
      parameters:
        - $ref: '#/components/parameters/DealID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/deals/{id}/followers':
    get:
      summary: List followers of a deal
      description: Lists the followers of a deal.
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
      parameters:
        - $ref: '#/components/parameters/DealID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: Add a follower to a deal
      description: Adds a follower to a deal.
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
      parameters:
        - $ref: '#/components/parameters/DealID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  type: integer
                  description: ID of the user
      responses:
        '200':
          $ref: '#/components/responses/DealAddFollowerSuccess'
  '/deals/{id}/followers/{follower_id}':
    delete:
      summary: Delete a follower from a deal
      description: Deletes a follower from a deal.
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
      parameters:
        - $ref: '#/components/parameters/DealID'
        - in: path
          name: follower_id
          required: true
          schema:
            type: integer
          description: ID of the follower
      responses:
        '200':
          $ref: '#/components/responses/DeleteDealFollowerSuccess'
  '/deals/{id}/mailMessages':
    get:
      summary: List mail messages associated with a deal
      description: Lists mail messages associated with a deal.
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'mail:read'
            - 'mail:full'
      parameters:
        - $ref: '#/components/parameters/DealID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/deals/{id}/merge':
    put:
      summary: Merge two deals
      description: 'Merges a deal with another deal. For more information on how to merge two deals, see <a href="https://pipedrive.readme.io/docs/merging-two-deals" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
      parameters:
        - $ref: '#/components/parameters/DealID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - merge_with_id
              properties:
                merge_with_id:
                  type: integer
                  description: ID of the deal that the deal will be merged with
      responses:
        '200':
          $ref: '#/components/responses/DealMergedSuccess'
  '/deals/{id}/participants':
    get:
      summary: List participants of a deal
      description: Lists participants associated with a deal.
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
      parameters:
        - $ref: '#/components/parameters/DealID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: Add a participant to a deal
      description: Adds a participant to a deal.
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
      parameters:
        - $ref: '#/components/parameters/DealID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - person_id
              properties:
                person_id:
                  type: integer
                  description: ID of the person
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/deals/{id}/participants/{deal_participant_id}':
    delete:
      summary: Delete a participant from a deal
      description: Deletes a participant from a deal.
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
      parameters:
        - $ref: '#/components/parameters/DealID'
        - in: path
          name: deal_participant_id
          required: true
          schema:
            type: integer
          description: ID of the deal participant
      responses:
        '200':
          $ref: '#/components/responses/DeleteDealParticipantSuccess'
  '/deals/{id}/permittedUsers':
    get:
      summary: List permitted users
      description: List users permitted to access a deal
      tags:
        - Deals
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/DealID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/deals/{id}/persons':
    get:
      summary: List all persons associated with a deal
      description: 'Lists all persons associated with a deal, regardless of whether the person is the primary contact of the deal, or added as a participant.'
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'contacts:read'
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/DealID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/deals/{id}/products':
    get:
      summary: List products attached to a deal
      description: Lists products attached to a deal.
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'products:read'
            - 'products:full'
      parameters:
        - $ref: '#/components/parameters/DealID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - in: query
          name: include_product_data
          description: 'Whether to fetch product data along with each attached product (1) or not (0, default).'
          schema:
            $ref: '#/components/schemas/NumberBoolean'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: 'Add a product to the deal, eventually creating a new item called a deal-product'
      description: Adds a product to the deal.
      tags:
        - Deals
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
            - 'products:full'
      parameters:
        - $ref: '#/components/parameters/DealID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewDealProduct'
      responses:
        '200':
          $ref: '#/components/responses/AddProductToDealSuccess'
  '/deals/{id}/products/{product_attachment_id}':
    put:
      summary: Update product attachment details of the deal-product (a product already attached to a deal)
      description: Updates product attachment details.
      tags:
        - Deals
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/DealID'
        - in: path
          name: product_attachment_id
          required: true
          schema:
            type: integer
          description: ID of the deal-product (the ID of the product attached to the deal)
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BasicDealProduct'
      responses:
        '200':
          $ref: '#/components/responses/UpdateProductDetailsSuccess'
    delete:
      summary: Delete an attached product from a deal
      description: 'Deletes a product attachment from a deal, using the product_attachment_id.'
      tags:
        - Deals
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/DealID'
        - in: path
          name: product_attachment_id
          required: true
          schema:
            type: integer
          description: Product attachment ID. This is returned as product_attachment_id after attaching a product to a deal or as id when listing the products attached to a deal.
      responses:
        '200':
          $ref: '#/components/responses/DeleteDealProductSuccess'
  /dealFields:
    delete:
      summary: Delete multiple deal fields in bulk
      description: Marks multiple fields as deleted.
      tags:
        - DealFields
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - in: query
          name: ids
          required: true
          schema:
            type: string
          description: Comma-separated field IDs to delete
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get all deal fields
      description: Returns data about all fields deals can have
      tags:
        - DealFields
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
            - admin
      parameters:
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: Add a new deal field
      description: 'Adds a new deal field. For more information on adding a new custom field, see <a href="https://pipedrive.readme.io/docs/adding-a-new-custom-field" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - DealFields
      security:
        - api_key: []
        - oauth2:
            - admin
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              allOf:
                - $ref: '#/components/schemas/FieldType'
                - type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                      description: Name of the field
                    options:
                      type: string
                      description: 'When field_type is either set or enum, possible options must be supplied as a JSON-encoded sequential array, for example: ["red","blue","lilac"]'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/dealFields/{id}':
    delete:
      summary: Delete a deal field
      description: 'Marks a field as deleted. For more information on how to delete a custom field, see <a href="https://pipedrive.readme.io/docs/deleting-a-custom-field" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - DealFields
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - $ref: '#/components/parameters/DealFieldID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get one deal field
      description: Returns data about a specific deal field.
      tags:
        - DealFields
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
            - admin
      parameters:
        - $ref: '#/components/parameters/DealFieldID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    put:
      summary: Update a deal field
      description: 'Updates a deal field. See an example of updating custom fields’ values in <a href=" https://pipedrive.readme.io/docs/updating-custom-field-value " target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - DealFields
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - $ref: '#/components/parameters/DealFieldID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - name
                - field_type
              properties:
                name:
                  type: string
                  description: Name of the field
                options:
                  type: string
                  description: 'When field_type is either set or enum, possible options must be supplied as a JSON-encoded sequential array, for example: ["red","blue","lilac"]'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /files:
    get:
      summary: Get all files
      description: Returns data about all files.
      tags:
        - Files
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
            - 'activities:read'
            - 'activities:full'
            - 'contacts:read'
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/IncludeDeletedFiles'
        - $ref: '#/components/parameters/FilesSort'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: Add file
      description: 'Lets you upload a file and associate it with Deal, Person, Organization, Activity or Product. For more information on how to add a file, see <a href="https://pipedrive.readme.io/docs/adding-a-file" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - Files
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
            - 'activities:full'
            - 'contacts:full'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: 'A single file, supplied in the multipart/form-data encoding and contained within the given boundaries.'
                deal_id:
                  type: integer
                  description: ID of the deal to associate file(s) with
                person_id:
                  type: integer
                  description: ID of the person to associate file(s) with
                org_id:
                  type: integer
                  description: ID of the organization to associate file(s) with
                product_id:
                  type: integer
                  description: ID of the product to associate file(s) with
                activity_id:
                  type: integer
                  description: ID of the activity to associate file(s) with
                note_id:
                  type: integer
                  description: ID of the note to associate file(s) with
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /files/remote:
    post:
      summary: Create a remote file and link it to an item
      description: 'Creates a new empty file in the remote location (googledrive) that will be linked to the item you supply. For more information on how to add a remote file, see <a href="https://pipedrive.readme.io/docs/adding-a-remote-file" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - Files
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
            - 'activities:full'
            - 'contacts:full'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - file_type
                - title
                - item_type
                - item_id
                - remote_location
              properties:
                file_type:
                  type: string
                  enum:
                    - gdoc
                    - gslides
                    - gsheet
                    - gform
                    - gdraw
                  description: The file type
                title:
                  type: string
                  description: The title of the file
                item_type:
                  type: string
                  enum:
                    - deal
                    - organization
                    - person
                  description: The item type
                item_id:
                  type: integer
                  description: ID of the item to associate the file with
                remote_location:
                  type: string
                  enum:
                    - googledrive
                  description: The location type to send the file to. Only googledrive is supported at the moment.
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /files/remoteLink:
    post:
      summary: Link a remote file to an item
      description: 'Links an existing remote file (googledrive) to the item you supply. For more information on how to link a remote file, see <a href="https://pipedrive.readme.io/docs/adding-a-remote-file" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - Files
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
            - 'activities:full'
            - 'contacts:full'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - item_type
                - item_id
                - remote_id
                - remote_location
              properties:
                item_type:
                  type: string
                  enum:
                    - deal
                    - organization
                    - person
                  description: The item type
                item_id:
                  type: integer
                  description: ID of the item to associate the file with
                remote_id:
                  type: string
                  description: The remote item id
                remote_location:
                  type: string
                  enum:
                    - googledrive
                  description: The location type to send the file to. Only googledrive is supported at the moment.
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/files/{id}':
    delete:
      summary: Delete a file
      description: Marks a file as deleted.
      tags:
        - Files
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/FileID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get one file
      description: Returns data about a specific file.
      tags:
        - Files
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
            - 'activities:read'
            - 'activities:full'
            - 'contacts:read'
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/FileID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    put:
      summary: Update file details
      description: Updates the properties of a file.
      tags:
        - Files
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
            - 'activities:full'
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/FileID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Visible name of the file
                description:
                  type: string
                  description: Description of the file
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/files/{id}/download':
    get:
      summary: Download one file
      description: Initializes a file download.
      tags:
        - Files
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
            - 'activities:read'
            - 'activities:full'
            - 'contacts:read'
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/FileID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /filters:
    delete:
      summary: Delete multiple filters in bulk
      description: Marks multiple filters as deleted.
      tags:
        - Filters
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
            - 'activities:full'
            - 'contacts:full'
      parameters:
        - in: query
          name: ids
          required: true
          schema:
            type: string
          description: Comma-separated filter IDs to delete
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get all filters
      description: Returns data about all filters
      tags:
        - Filters
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
            - 'activities:read'
            - 'activities:full'
            - 'contacts:read'
            - 'contacts:full'
      parameters:
        - in: query
          name: type
          schema:
            allOf:
              - $ref: '#/components/schemas/FilterType'
          description: Types of filters to fetch
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: Add a new filter
      description: 'Adds a new filter, returns the ID upon success. Note that in the conditions json object only one first-level condition group is supported, and it must be glued with ''AND'', and only two second level condition groups are supported of which one must be glued with ''AND'' and the second with ''OR''. Other combinations do not work (yet) but the syntax supports introducing them in future. For more information on how to add a new filter, see <a href="https://pipedrive.readme.io/docs/adding-a-filter" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - Filters
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
            - 'activities:full'
            - 'contacts:full'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - name
                - conditions
                - type
              properties:
                name:
                  type: string
                  description: Filter name
                conditions:
                  type: string
                  description: 'Filter conditions as a JSON object. It requires a minimum structure as follows: {"glue":"and","conditions":[{"glue":"and","conditions": [CONDITION_OBJECTS]},{"glue":"or","conditions":[CONDITION_OBJECTS]}]}. Replace CONDITION_OBJECTS with JSON objects of the following structure: {"object":"","field_id":"", "operator":"","value":"", "extra_value":""} or leave the array empty. Depending on the object type you should use another API endpoint to get field_id. There are five types of objects you can choose from: "person", "deal", "organization", "product", "activity" and you can use these types of operators depending on what type of a field you have: "IS NOT NULL", "IS NULL", "<=", ">=", "<", ">", "!=", "=", "LIKE ''%$%''", "NOT LIKE ''%$%''", "LIKE ''$%''", "NOT LIKE ''$%''", "LIKE ''%$''", "NOT LIKE ''%$''". To get a better understanding of how filters work try creating them directly from the Pipedrive application.'
                type:
                  allOf:
                    - $ref: '#/components/schemas/FilterType'
                  description: Type of filter to create.
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /filters/helpers:
    get:
      summary: Get all filter helpers
      description: 'Returns all supported filter helpers. It helps to know what conditions and helpers are available when you want to <a href="/docs/api/v1/#!/Filters/post_filters">add</a> or <a href="/docs/api/v1/#!/Filters/put_filters_id">update</a> filters. For more information on how filter’s helpers can be used, see <a href="https://pipedrive.readme.io/docs/adding-a-filter" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - Filters
      security:
        - api_key: []
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/filters/{id}':
    delete:
      summary: Delete a filter
      description: Marks a filter as deleted.
      tags:
        - Filters
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
            - 'activities:full'
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/FilterID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get one filter
      description: Returns data about a specific filter. Note that this also returns the condition lines of the filter.
      tags:
        - Filters
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
            - 'activities:read'
            - 'activities:full'
            - 'contacts:read'
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/FilterID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    put:
      summary: Update filter
      description: Updates existing filter.
      tags:
        - Filters
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
            - 'activities:full'
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/FilterID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - conditions
              properties:
                name:
                  type: string
                  description: Filter name
                conditions:
                  type: string
                  description: 'Filter conditions as a JSON object. It requires a minimum structure as follows: {"glue":"and","conditions":[{"glue":"and","conditions": [CONDITION_OBJECTS]},{"glue":"or","conditions":[CONDITION_OBJECTS]}]}. Replace CONDITION_OBJECTS with JSON objects of the following structure: {"object":"","field_id":"", "operator":"","value":"", "extra_value":""} or leave the array empty. Depending on the object type you should use another API endpoint to get field_id. There are five types of objects you can choose from: "person", "deal", "organization", "product", "activity" and you can use these types of operators depending on what type of a field you have: "IS NOT NULL", "IS NULL", "<=", ">=", "<", ">", "!=", "=", "LIKE ''%$%''", "NOT LIKE ''%$%''", "LIKE ''$%''", "NOT LIKE ''$%''", "LIKE ''%$''", "NOT LIKE ''%$''". To get a better understanding of how filters work try creating them directly from the Pipedrive application.'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /globalMessages:
    get:
      summary: Get global messages
      description: Returns data about global messages to display for the authorized user.
      tags:
        - GlobalMessages
      security:
        - api_key: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 1
          description: Number of messages to get from 1 to 100. The message number 1 is returned by default.
      responses:
        '200':
          $ref: '#/components/responses/GlobalMessagesGetSuccess'
  '/globalMessages/{id}':
    delete:
      summary: Dismiss a global message
      description: 'Removes global message from being shown, if message is dismissible'
      tags:
        - GlobalMessages
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of global message to be dismissed.
      responses:
        '200':
          $ref: '#/components/responses/GlobalMessageDeleteSuccess'
  /goals:
    post:
      summary: Add a new goal
      description: Adds a new goal.
      tags:
        - Goals
      security:
        - api_key: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewGoal'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /goals/find:
    get:
      summary: Find goals
      description: 'Returns data about goals based on criteria. For searching, append `{searchField}={searchValue}` to the URL, where `searchField` can be any one of the lowest-level fields in dot-notation (e.g. `type.params.pipeline_id`; `title`). `searchValue` should be the value you are looking for on that field. Additionally, `is_active=<true|false>` can be provided to search for only active/inactive goals. When providing `period.start`, `period.end` must also be provided and vice versa.'
      tags:
        - Goals
      security:
        - api_key: []
      parameters:
        - in: query
          name: type.name
          schema:
            type: string
            enum:
              - deals_won
              - deals_progressed
              - activities_completed
              - activities_added
              - deals_started
          description: 'Type of the goal. If provided, everyone''s goals will be returned.'
        - in: query
          name: title
          schema:
            type: string
          description: Title of the goal.
        - in: query
          name: is_active
          schema:
            type: boolean
            enum:
              - true
              - false
            default: true
          description: Whether goal is active or not.
        - in: query
          name: assignee.id
          schema:
            type: integer
          description: 'ID of the user who''s goal to fetch. When omitted, only your goals will be returned.'
        - in: query
          name: assignee.type
          schema:
            type: string
            enum:
              - person
              - company
              - team
          description: 'Type of the goal''s assignee. If provided, everyone''s goals will be returned.'
        - in: query
          name: expected_outcome.target
          schema:
            type: number
          description: 'Numeric value of the outcome. If provided, everyone''s goals will be returned.'
        - in: query
          name: expected_outcome.tracking_metric
          schema:
            type: string
            enum:
              - quantity
              - sum
          description: 'Tracking metric of the expected outcome of the goal. If provided, everyone''s goals will be returned.'
        - in: query
          name: expected_outcome.currency_id
          schema:
            type: integer
          description: 'Numeric ID of the goal''s currency. Only applicable to goals with `expected_outcome.tracking_metric` with value `sum`. If provided, everyone''s goals will be returned.'
        - in: query
          name: type.params.pipeline_id
          schema:
            type: integer
          description: 'ID of the pipeline or `null` for all pipelines. If provided, everyone''s goals will be returned.'
        - in: query
          name: type.params.stage_id
          schema:
            type: integer
          description: 'ID of the stage. Applicable to only `deals_progressed` type of goals. If provided, everyone''s goals will be returned.'
        - in: query
          name: type.params.activity_type_id
          schema:
            type: integer
          description: 'ID of the activity type. Applicable to only `activities_completed` or `activities_added` types of goals. If provided, everyone''s goals will be returned.'
        - in: query
          name: period.start
          schema:
            type: string
            format: date
          description: 'Start date of the period for which to find goals. Date in format of YYYY-MM-DD. When `period.start` is provided, `period.end` must be provided too.'
        - in: query
          name: period.end
          schema:
            type: string
            format: date
          description: End date of the period for which to find goals. Date in format of YYYY-MM-DD.
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/goals/{id}':
    put:
      summary: Update existing goal
      description: Updates existing goal.
      tags:
        - Goals
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the goal to be updated.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BasicGoal'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    delete:
      summary: Delete existing goal
      description: Marks goal as deleted.
      tags:
        - Goals
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the goal to be deleted.
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/goals/{id}/results':
    get:
      summary: Get result of a goal
      description: Gets progress of a goal for specified period.
      tags:
        - Goals
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the goal that the results are looked for.
        - in: query
          name: period.start
          required: true
          schema:
            type: string
            format: date
          description: Start date of the period for which to find progress of a goal. Date in format of YYYY-MM-DD.
        - in: query
          name: period.end
          required: true
          schema:
            type: string
            format: date
          description: End date of the period for which to find progress of a goal. Date in format of YYYY-MM-DD.
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/mailbox/mailMessages/{id}':
    get:
      summary: Get one mail message
      description: Returns data about specific mail message.
      tags:
        - MailMessages
      security:
        - api_key: []
        - oauth2:
            - 'mail:read'
            - 'mail:full'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the mail message to fetch.
        - in: query
          name: include_body
          schema:
            allOf:
              - $ref: '#/components/schemas/NumberBooleanDefault0'
          description: 'Whether to include full message body or not. 0 = Don''t include, 1 = Include'
      responses:
        '200':
          $ref: '#/components/responses/MailMessageGetSuccess'
  /mailbox/mailThreads:
    get:
      summary: Get mail threads
      description: Returns mail threads in specified folder ordered by most recent message within.
      tags:
        - MailThreads
      security:
        - api_key: []
        - oauth2:
            - 'mail:read'
            - 'mail:full'
      parameters:
        - in: query
          name: folder
          required: true
          schema:
            type: string
            enum:
              - inbox
              - drafts
              - sent
              - archive
            default: inbox
          description: Type of folder to fetch.
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/MailThreadGetSuccess'
  '/mailbox/mailThreads/{id}':
    delete:
      summary: Delete mail thread
      description: Marks mail thread as deleted.
      tags:
        - MailThreads
      security:
        - api_key: []
        - oauth2:
            - 'mail:full'
      parameters:
        - $ref: '#/components/parameters/MailThreadID'
      responses:
        '200':
          $ref: '#/components/responses/MailThreadDeleteSuccess'
    get:
      summary: Get one mail thread
      description: Returns specific mail thread.
      tags:
        - MailThreads
      security:
        - api_key: []
        - oauth2:
            - 'mail:read'
            - 'mail:full'
      parameters:
        - $ref: '#/components/parameters/MailThreadID'
      responses:
        '200':
          $ref: '#/components/responses/MailThreadGetOneSuccess'
    put:
      summary: Update mail thread details
      description: Updates the properties of a mail thread.
      tags:
        - MailThreads
      security:
        - api_key: []
        - oauth2:
            - 'mail:full'
      parameters:
        - $ref: '#/components/parameters/MailThreadID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                deal_id:
                  type: integer
                  description: ID of the deal this thread is associated with
                shared_flag:
                  allOf:
                    - $ref: '#/components/schemas/NumberBoolean'
                    - description: Whether this thread is shared with other users in your company
                read_flag:
                  allOf:
                    - $ref: '#/components/schemas/NumberBoolean'
                    - description: Whether this thread read or unread
                archived_flag:
                  allOf:
                    - $ref: '#/components/schemas/NumberBoolean'
                    - description: Whether this thread is archived or not. You can only archive threads that belong to Inbox folder. Archived threads will disappear from Inbox.
      responses:
        '200':
          $ref: '#/components/responses/MailThreadPutSuccess'
  '/mailbox/mailThreads/{id}/mailMessages':
    get:
      summary: Get all mail messages of mail thread
      description: Get mail messages inside specified mail thread.
      tags:
        - MailThreads
      security:
        - api_key: []
        - oauth2:
            - 'mail:read'
            - 'mail:full'
      parameters:
        - $ref: '#/components/parameters/MailThreadID'
      responses:
        '200':
          $ref: '#/components/responses/MailThreadGetMailMessagesSuccess'
  /notes:
    get:
      summary: Get all notes
      description: Returns all notes.
      tags:
        - Notes
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
            - 'contacts:read'
            - 'contacts:full'
      parameters:
        - in: query
          name: user_id
          schema:
            type: integer
          description: 'ID of the user whose notes to fetch. If omitted, notes by all users will be returned.'
        - in: query
          name: deal_id
          schema:
            type: integer
          description: 'ID of the deal which notes to fetch. If omitted, notes about all deals with be returned.'
        - in: query
          name: person_id
          schema:
            type: integer
          description: 'ID of the person whose notes to fetch. If omitted, notes about all persons with be returned.'
        - in: query
          name: org_id
          schema:
            type: integer
          description: 'ID of the organization which notes to fetch. If omitted, notes about all organizations with be returned.'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - in: query
          name: sort
          schema:
            type: string
          description: 'Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys). Supported fields: id, user_id, deal_id, person_id, org_id, content, add_time, update_time.'
        - in: query
          name: start_date
          schema:
            type: string
            format: date
          description: Date in format of YYYY-MM-DD from which notes to fetch from.
        - in: query
          name: end_date
          schema:
            type: string
            format: date
          description: Date in format of YYYY-MM-DD until which notes to fetch to.
        - in: query
          name: pinned_to_deal_flag
          schema:
            $ref: '#/components/schemas/NumberBoolean'
          description: 'If set, then results are filtered by note to deal pinning state.'
        - in: query
          name: pinned_to_organization_flag
          schema:
            $ref: '#/components/schemas/NumberBoolean'
          description: 'If set, then results are filtered by note to organization pinning state.'
        - in: query
          name: pinned_to_person_flag
          schema:
            $ref: '#/components/schemas/NumberBoolean'
          description: 'If set, then results are filtered by note to person pinning state.'
      responses:
        '200':
          $ref: '#/components/responses/NotesGetSuccess'
    post:
      summary: Add a note
      description: Adds a new note.
      tags:
        - Notes
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
            - 'contacts:full'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
      responses:
        '200':
          $ref: '#/components/responses/NoteGetPostPutSuccess'
  '/notes/{id}':
    delete:
      summary: Delete a note
      description: Deletes a specific note.
      tags:
        - Notes
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/NoteID'
      responses:
        '200':
          $ref: '#/components/responses/NoteDeleteSuccess'
    get:
      summary: Get one note
      description: Returns details about a specific note.
      tags:
        - Notes
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
            - 'contacts:read'
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/NoteID'
      responses:
        '200':
          $ref: '#/components/responses/NoteGetPostPutSuccess'
    put:
      summary: Update a note
      description: Updates a note.
      tags:
        - Notes
      security:
        - api_key: []
        - oauth2:
            - 'deals:full'
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/NoteID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
      responses:
        '200':
          $ref: '#/components/responses/NoteGetPostPutSuccess'
  /noteFields:
    get:
      summary: Get all fields for a note
      description: Return list of all fields for note
      tags:
        - NoteFields
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
            - 'contacts:read'
            - 'contacts:full'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /organizationFields:
    delete:
      summary: Delete multiple organization fields in bulk
      description: Marks multiple fields as deleted.
      tags:
        - OrganizationFields
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - in: query
          name: ids
          schema:
            type: string
          required: true
          description: Comma-separated field IDs to delete
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get all organization fields
      description: Returns data about all organization fields
      tags:
        - OrganizationFields
      security:
        - api_key: []
        - oauth2:
            - 'contacts:read'
            - 'contacts:full'
            - admin
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: Add a new organization field
      description: 'Adds a new organization field. For more information on adding a new custom field, see <a href="https://pipedrive.readme.io/docs/adding-a-new-custom-field" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - OrganizationFields
      security:
        - api_key: []
        - oauth2:
            - admin
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewOrganizationField'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/organizationFields/{id}':
    delete:
      summary: Delete an organization field
      description: 'Marks a field as deleted. For more information on how to delete a custom field, see <a href="https://pipedrive.readme.io/docs/deleting-a-custom-field" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - OrganizationFields
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - $ref: '#/components/parameters/OrganizationFieldID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get one organization field
      description: Returns data about a specific organization field.
      tags:
        - OrganizationFields
      security:
        - api_key: []
        - oauth2:
            - 'contacts:read'
            - 'contacts:full'
            - admin
      parameters:
        - $ref: '#/components/parameters/OrganizationFieldID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    put:
      summary: Update an organization field
      description: 'Updates an organization field. See an example of updating custom fields’ values in <a href=" https://pipedrive.readme.io/docs/updating-custom-field-value " target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - OrganizationFields
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - $ref: '#/components/parameters/OrganizationFieldID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BasicPersonField'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /organizations:
    delete:
      summary: Delete multiple organizations in bulk
      description: Marks multiple organizations as deleted.
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - 'contacts:full'
      parameters:
        - in: query
          name: ids
          schema:
            type: string
          required: true
          description: Comma-separated IDs that will be deleted
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get all organizations
      description: Returns all organizations
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - 'contacts:read'
            - 'contacts:full'
      parameters:
        - in: query
          name: user_id
          schema:
            type: integer
          description: 'If supplied, only organizations owned by the given user will be returned.'
        - in: query
          name: filter_id
          schema:
            type: integer
          description: ID of the filter to use
        - in: query
          name: first_char
          schema:
            type: string
          description: 'If supplied, only organizations whose name starts with the specified letter will be returned (case insensitive).'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - in: query
          name: sort
          schema:
            type: string
          description: 'Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys).'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: Add an organization
      description: 'Adds a new organization. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the organizationFields and look for ''key'' values. For more information on how to add an organization, see <a href="https://pipedrive.readme.io/docs/adding-an-organization" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - 'contacts:full'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewOrganization'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /organizations/find:
    get:
      summary: Find organizations by name
      description: Searches all organizations by their name.
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - 'contacts:read'
            - 'contacts:full'
            - 'search:read'
      parameters:
        - in: query
          name: term
          schema:
            type: string
          required: true
          description: Search term to look for
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/organizations/{id}':
    delete:
      summary: Delete an organization
      description: Marks an organization as deleted.
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get details of an organization
      description: Returns details of an organization. Note that this also returns some additional fields which are not present when asking for all organizations. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the 'key' value of organizationFields.
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - 'contacts:read'
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    put:
      summary: Update an organization
      description: Updates the properties of an organization.
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BasicOrganization'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/organizations/{id}/activities':
    get:
      summary: List activities associated with an organization
      description: Lists activities associated with an organization.
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - 'activities:read'
            - 'activities:full'
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/ActivityDone'
        - $ref: '#/components/parameters/ActivityExclude'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/organizations/{id}/deals':
    get:
      summary: List deals associated with an organization
      description: Lists deals associated with an organization.
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/DealStatus'
        - $ref: '#/components/parameters/DealSort'
        - in: query
          name: only_primary_association
          schema:
            $ref: '#/components/schemas/NumberBoolean'
          description: 'If set, only deals that are directly associated to the organization are fetched. If not set (default), all deals are fetched that are either directly or indirectly related to the organization. Indirect relations include relations through custom, organization-type fields and through persons of the given organization.'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/organizations/{id}/files':
    get:
      summary: List files attached to an organization
      description: Lists files associated with an organization.
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - 'contacts:read'
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/IncludeDeletedFiles'
        - $ref: '#/components/parameters/FilesSort'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/organizations/{id}/flow':
    get:
      summary: List updates about an organization
      description: Lists updates about an organization.
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - 'recents:read'
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/organizations/{id}/followers':
    get:
      summary: List followers of an organization
      description: Lists the followers of an organization.
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - 'contacts:read'
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: Add a follower to an organization
      description: Adds a follower to an organization.
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  type: integer
                  description: ID of the user
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/organizations/{id}/followers/{follower_id}':
    delete:
      summary: Delete a follower from an organization
      description: 'Deletes a follower from an organization. You can retrieve the follower_id from the <a href="https://developers.pipedrive.com/docs/api/v1/#!/Organizations/get_organizations_id_followers">List followers of an organization</a> endpoint.'
      tags:
        - Organizations
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
        - in: path
          name: follower_id
          required: true
          schema:
            type: integer
          description: ID of the follower
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/organizations/{id}/mailMessages':
    get:
      summary: List mail messages associated with an organization
      description: Lists mail messages associated with an organization.
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - 'mail:read'
            - 'mail:full'
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/organizations/{id}/merge':
    put:
      summary: Merge two organizations
      description: 'Merges an organization with another organization. For more information on how to merge two organizations, see <a href="https://pipedrive.readme.io/docs/merging-two-organizations" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - merge_with_id
              properties:
                merge_with_id:
                  type: integer
                  description: ID of the organization that the organization will be merged with
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/organizations/{id}/permittedUsers':
    get:
      summary: List permitted users
      description: List users permitted to access an organization
      tags:
        - Organizations
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/organizations/{id}/persons':
    get:
      summary: List persons of an organization
      description: Lists persons associated with an organization.
      tags:
        - Organizations
      security:
        - api_key: []
        - oauth2:
            - 'contacts:read'
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /organizationRelationships:
    get:
      summary: Get all relationships for organization
      description: Gets all of the relationships for a supplied organization id.
      tags:
        - OrganizationRelationships
      security:
        - api_key: []
        - oauth2:
            - 'contacts:read'
            - 'contacts:full'
      parameters:
        - in: query
          name: org_id
          required: true
          schema:
            type: integer
          description: ID of the organization to get relationships for
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: Create an organization relationship
      description: Creates and returns an organization relationship.
      tags:
        - OrganizationRelationships
      security:
        - api_key: []
        - oauth2:
            - 'contacts:full'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              allOf:
                - $ref: '#/components/schemas/OrganizationRelationship'
                - type: object
                  required:
                    - type
                    - rel_owner_org_id
                    - rel_linked_org_id
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/organizationRelationships/{id}':
    delete:
      summary: Delete an organization relationship
      description: Deletes an organization relationship and returns the deleted id.
      tags:
        - OrganizationRelationships
      security:
        - api_key: []
        - oauth2:
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/OrganizationRelationshipID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get one organization relationship
      description: Finds and returns an organization relationship from its ID.
      tags:
        - OrganizationRelationships
      security:
        - api_key: []
        - oauth2:
            - 'contacts:read'
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/OrganizationRelationshipID'
        - in: query
          name: org_id
          required: false
          schema:
            type: integer
          description: ID of the base organization for the returned calculated values
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    put:
      summary: Update an organization relationship
      description: Updates and returns an organization relationship.
      tags:
        - OrganizationRelationships
      security:
        - api_key: []
        - oauth2:
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/OrganizationRelationshipID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationRelationship'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /permissionSets:
    get:
      summary: Get all Permission Sets
      tags:
        - PermissionSets
      security:
        - api_key: []
      responses:
        '200':
          $ref: '#/components/responses/PermissionSets'
        '404':
          $ref: '#/components/responses/NotFound'
  '/permissionSets/{id}':
    get:
      summary: Get one Permission Set
      tags:
        - PermissionSets
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/PermissionSetID'
      responses:
        '200':
          $ref: '#/components/responses/PermissionSetID'
        '404':
          $ref: '#/components/responses/NotFound'
  '/permissionSets/{id}/assignments':
    get:
      summary: List Permission Set assignments
      description: The list of assignments for a Permission Set
      tags:
        - PermissionSets
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/PermissionSetID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/Assignments'
        '404':
          $ref: '#/components/responses/NotFound'
  /persons:
    delete:
      summary: Delete multiple persons in bulk
      description: Marks multiple persons as deleted.
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - 'contacts:full'
      parameters:
        - in: query
          name: ids
          required: false
          schema:
            type: string
          description: Comma-separated IDs that will be deleted
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get all persons
      description: Returns all persons
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - 'contacts:read'
            - 'contacts:full'
      parameters:
        - in: query
          name: user_id
          schema:
            type: integer
          description: 'If supplied, only persons owned by the given user will be returned.'
        - in: query
          name: filter_id
          schema:
            type: integer
          description: ID of the filter to use.
        - in: query
          name: first_char
          schema:
            type: string
          description: 'If supplied, only persons whose name starts with the specified letter will be returned (case insensitive).'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - in: query
          name: sort
          schema:
            type: string
          description: 'Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys).'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: Add a person
      description: 'Adds a new person. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the personFields and look for ''key'' values.'
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - 'contacts:full'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewPerson'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /persons/find:
    get:
      summary: Find persons by name
      description: Searches all persons by their name.
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - 'contacts:read'
            - 'contacts:full'
            - 'search:read'
      parameters:
        - in: query
          name: term
          required: true
          schema:
            type: string
          description: Search term to look for
        - in: query
          name: org_id
          schema:
            type: integer
          description: ID of the organization person is associated with.
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - in: query
          name: search_by_email
          schema:
            $ref: '#/components/schemas/NumberBoolean'
          description: 'When enabled, term will only be matched against email addresses of people. Default: false'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/persons/{id}':
    delete:
      summary: Delete a person
      description: Marks a person as deleted.
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/PersonID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get details of a person
      description: Returns details of a person. Note that this also returns some additional fields which are not present when asking for all persons. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the 'key' value of personFields.
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - 'contacts:read'
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/PersonID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    put:
      summary: Update a person
      description: 'Updates the properties of a person. For more information on how to update a person, see <a href="https://pipedrive.readme.io/docs/updating-a-person" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/PersonID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BasicPerson'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/persons/{id}/activities':
    get:
      summary: List activities associated with a person
      description: Lists activities associated with a person.
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - 'activities:read'
            - 'activities:full'
      parameters:
        - $ref: '#/components/parameters/PersonID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/ActivityDone'
        - $ref: '#/components/parameters/ActivityExclude'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/persons/{id}/deals':
    get:
      summary: List deals associated with a person
      description: Lists deals associated with a person.
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
      parameters:
        - $ref: '#/components/parameters/PersonID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/DealStatus'
        - $ref: '#/components/parameters/DealSort'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/persons/{id}/files':
    get:
      summary: List files attached to a person
      description: Lists files associated with a person.
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - 'contacts:read'
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/PersonID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/IncludeDeletedFiles'
        - $ref: '#/components/parameters/FilesSort'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/persons/{id}/flow':
    get:
      summary: List updates about a person
      description: Lists updates about a person.
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - 'recents:read'
      parameters:
        - $ref: '#/components/parameters/PersonID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/persons/{id}/followers':
    get:
      summary: List followers of a person
      description: Lists the followers of a person.
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - 'contacts:read'
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/PersonID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: Add a follower to a person
      description: Adds a follower to a person.
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/PersonID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  type: integer
                  description: ID of the user
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/persons/{id}/followers/{follower_id}':
    delete:
      summary: Deletes a follower from a person.
      description: Delete a follower from a person
      tags:
        - Persons
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/PersonID'
        - in: path
          name: follower_id
          required: true
          schema:
            type: integer
          description: ID of the follower
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/persons/{id}/mailMessages':
    get:
      summary: List mail messages associated with a person
      description: Lists mail messages associated with a person.
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - 'mail:read'
            - 'mail:full'
      parameters:
        - $ref: '#/components/parameters/PersonID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/persons/{id}/merge':
    put:
      summary: Merge two persons
      description: 'Merges a person with another person. For more information on how to merge two persons, see <a href="https://pipedrive.readme.io/docs/merging-two-persons" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/PersonID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - merge_with_id
              properties:
                merge_with_id:
                  type: integer
                  description: ID of the person that the person will be merged with
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/persons/{id}/permittedUsers':
    get:
      summary: List permitted users
      description: List users permitted to access a person
      tags:
        - Persons
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/PersonID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/persons/{id}/picture':
    delete:
      summary: Delete person picture
      description: Delete person picture
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/PersonID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: Add person picture
      description: 'Add a picture to a person. If a picture is already set, the old picture will be replaced. Added image (or the cropping parameters supplied with the request) should have an equal width and height and should be at least 128 pixels. GIF, JPG and PNG are accepted. All added images will be resized to 128 and 512 pixel wide squares.'
      tags:
        - Persons
      security:
        - api_key: []
        - oauth2:
            - 'contacts:full'
      parameters:
        - $ref: '#/components/parameters/PersonID'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: One image supplied in the multipart/form-data encoding.
                crop_x:
                  type: integer
                  description: X coordinate to where start cropping form (in pixels)
                crop_y:
                  type: integer
                  description: Y coordinate to where start cropping form (in pixels)
                crop_width:
                  type: integer
                  description: Width of cropping area (in pixels)
                crop_height:
                  type: integer
                  description: Height of cropping area (in pixels)
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/persons/{id}/products':
    get:
      summary: List products associated with a person
      description: Lists products associated with a person.
      tags:
        - Persons
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/PersonID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /personFields:
    delete:
      summary: Delete multiple person fields in bulk
      description: Marks multiple fields as deleted.
      tags:
        - PersonFields
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - in: query
          name: ids
          required: true
          schema:
            type: string
          description: Comma-separated field IDs to delete
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get all person fields
      description: Returns data about all person fields
      tags:
        - PersonFields
      security:
        - api_key: []
        - oauth2:
            - 'contacts:read'
            - 'contacts:full'
            - admin
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: Add a new person field
      description: 'Adds a new person field. For more information on adding a new custom field, see <a href="https://pipedrive.readme.io/docs/adding-a-new-custom-field" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - PersonFields
      security:
        - api_key: []
        - oauth2:
            - admin
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewPersonField'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/personFields/{id}':
    delete:
      summary: Delete a person field
      description: 'Marks a field as deleted. For more information on how to delete a custom field, see <a href="https://pipedrive.readme.io/docs/deleting-a-custom-field" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - PersonFields
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - $ref: '#/components/parameters/PersonFieldID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get one person field
      description: Returns data about a specific person field.
      tags:
        - PersonFields
      security:
        - api_key: []
        - oauth2:
            - 'contacts:read'
            - 'contacts:full'
            - admin
      parameters:
        - $ref: '#/components/parameters/PersonFieldID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    put:
      summary: Update a person field
      description: 'Updates a person field. See an example of updating custom fields’ values in <a href="https://pipedrive.readme.io/docs/updating-custom-field-value" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - PersonFields
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - $ref: '#/components/parameters/PersonFieldID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BasicPersonField'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /pipelines:
    get:
      summary: Get all pipelines
      description: Returns data about all pipelines
      tags:
        - Pipelines
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
            - admin
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: Add a new pipeline
      description: Adds a new pipeline
      tags:
        - Pipelines
      security:
        - api_key: []
        - oauth2:
            - admin
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pipeline'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/pipelines/{id}':
    delete:
      summary: Delete a pipeline
      description: Marks a pipeline as deleted.
      tags:
        - Pipelines
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - $ref: '#/components/parameters/PipelineID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get one pipeline
      description: Returns data about a specific pipeline. Also returns the summary of the deals in this pipeline across its stages.
      tags:
        - Pipelines
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
            - admin
      parameters:
        - $ref: '#/components/parameters/PipelineID'
        - in: query
          name: totals_convert_currency
          schema:
            type: string
          description: '3-letter currency code of any of the supported currencies. When supplied, per_stages_converted is returned in deals_summary which contains the currency-converted total amounts in the given currency per each stage. You may also set this parameter to ''default_currency'' in which case users default currency is used.'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    put:
      summary: Edit a pipeline
      description: Updates pipeline properties
      tags:
        - Pipelines
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - $ref: '#/components/parameters/PipelineID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pipeline'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/pipelines/{id}/conversion_statistics':
    get:
      summary: Get deals conversion rates in pipeline
      description: Returns all stage-to-stage conversion and pipeline-to-close rates for given time period.
      tags:
        - Pipelines
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
      parameters:
        - $ref: '#/components/parameters/PipelineID'
        - in: query
          name: start_date
          required: true
          schema:
            type: string
            format: date
          description: Start of the period. Date in format of YYYY-MM-DD.
        - in: query
          name: end_date
          required: true
          schema:
            type: string
            format: date
          description: End of the period. Date in format of YYYY-MM-DD.
        - in: query
          name: user_id
          schema:
            type: integer
          description: 'ID of the user who''s pipeline metrics statistics to fetch. If omitted, the authorized user will be used.'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/pipelines/{id}/deals':
    get:
      summary: Get deals in a pipeline
      description: Lists deals in a specific pipeline across all its stages
      tags:
        - Pipelines
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
      parameters:
        - $ref: '#/components/parameters/PipelineID'
        - in: query
          name: filter_id
          schema:
            type: integer
          description: 'If supplied, only deals matching the given filter will be returned.'
        - in: query
          name: user_id
          schema:
            type: integer
          description: 'If supplied, filter_id will not be considered and only deals owned by the given user will be returned. If omitted, deals owned by the authorized user will be returned.'
        - in: query
          name: everyone
          schema:
            $ref: '#/components/schemas/NumberBoolean'
          description: 'If supplied, filter_id and user_id will not be considered – instead, deals owned by everyone will be returned.'
        - in: query
          name: stage_id
          schema:
            type: integer
          description: 'If supplied, only deals within the given stage will be returned.'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - in: query
          name: get_summary
          schema:
            $ref: '#/components/schemas/NumberBoolean'
          description: Whether to include summary of the pipeline in the additional_data or not.
        - in: query
          name: totals_convert_currency
          schema:
            type: string
          description: '3-letter currency code of any of the supported currencies. When supplied, per_stages_converted is returned inside deals_summary inside additional_data which contains the currency-converted total amounts in the given currency per each stage. You may also set this parameter to ''default_currency'' in which case users default currency is used. Only works when get_summary parameter flag is enabled.'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/pipelines/{id}/movement_statistics':
    get:
      summary: Get deals movements in pipeline
      description: Returns statistics for deals movements for given time period.
      tags:
        - Pipelines
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
      parameters:
        - $ref: '#/components/parameters/PipelineID'
        - in: query
          name: start_date
          required: true
          schema:
            type: string
            format: date
          description: Start of the period. Date in format of YYYY-MM-DD.
        - in: query
          name: end_date
          required: true
          schema:
            type: string
            format: date
          description: End of the period. Date in format of YYYY-MM-DD.
        - in: query
          name: user_id
          schema:
            type: integer
          description: 'ID of the user who''s pipeline statistics to fetch. If omitted, the authorized user will be used.'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /products:
    get:
      summary: Get all products
      description: Returns data about all products.
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - 'products:read'
            - 'products:full'
      parameters:
        - in: query
          name: user_id
          schema:
            type: integer
          description: 'If supplied, only products owned by the given user will be returned.'
        - in: query
          name: filter_id
          schema:
            type: integer
          description: ID of the filter to use
        - in: query
          name: first_char
          schema:
            type: string
          description: 'If supplied, only products whose name starts with the specified letter will be returned (case insensitive).'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/ProductsSuccess'
    post:
      summary: Add a product
      description: 'Adds a new product to the products inventory. For more information on how to add a product, see <a href="https://pipedrive.readme.io/docs/adding-a-product" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - 'products:full'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              allOf:
                - $ref: '#/components/schemas/Product'
                - type: object
                  required:
                    - name
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /products/find:
    get:
      summary: Find products by name
      description: 'Returns data about the products that were found. If currency was set in request, prices in that currency are served back.'
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - 'search:read'
            - 'products:read'
            - 'products:full'
      parameters:
        - in: query
          name: term
          required: true
          schema:
            type: string
          description: 'Search term to look for, minimum 3 characters.'
        - in: query
          name: currency
          schema:
            type: string
          description: 'Currency code in which prices should be returned in. If omitted, prices in user''s default currency will be returned.'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/FindProductsByNameSuccess'
  '/products/{id}':
    delete:
      summary: Delete a product
      description: Marks a product as deleted.
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - 'products:full'
      parameters:
        - $ref: '#/components/parameters/ProductID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get one product
      description: Returns data about a specific product.
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - 'products:read'
            - 'products:full'
      parameters:
        - $ref: '#/components/parameters/ProductID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    put:
      summary: Update a product
      description: Updates product data.
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - 'products:full'
      parameters:
        - $ref: '#/components/parameters/ProductID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          $ref: '#/components/responses/UpdateProductSuccess'
  '/products/{id}/deals':
    get:
      summary: Get deals where a product is attached to
      description: Returns data about deals that have a product attached to.
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
      parameters:
        - $ref: '#/components/parameters/ProductID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/DealStatus'
      responses:
        '200':
          $ref: '#/components/responses/ProductDealsSuccess'
  '/products/{id}/files':
    get:
      summary: List files attached to a product
      description: Lists files associated with a product.
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - 'products:read'
            - 'products:full'
      parameters:
        - $ref: '#/components/parameters/ProductID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/IncludeDeletedFiles'
        - $ref: '#/components/parameters/FilesSort'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/products/{id}/followers':
    get:
      summary: List followers of a product
      description: Lists the followers of a Product
      tags:
        - Products
      security:
        - api_key: []
        - oauth2:
            - 'products:read'
            - 'products:full'
      parameters:
        - $ref: '#/components/parameters/ProductID'
      responses:
        '200':
          $ref: '#/components/responses/ProductFollowersSuccess'
    post:
      summary: Add a follower to a product
      description: Adds a follower to a product.
      tags:
        - Products
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/ProductID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  type: integer
                  description: ID of the user
      responses:
        '200':
          $ref: '#/components/responses/NewProductFollowerSuccess'
  '/products/{id}/followers/{follower_id}':
    delete:
      summary: Delete a follower from a product
      description: Deletes a follower from a product.
      tags:
        - Products
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/ProductID'
        - in: path
          name: follower_id
          required: true
          schema:
            type: integer
          description: ID of the follower
      responses:
        '200':
          $ref: '#/components/responses/DeleteProductFollowerSuccess'
  '/products/{id}/permittedUsers':
    get:
      summary: List permitted users
      description: Lists users permitted to access a product.
      tags:
        - Products
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/ProductID'
      responses:
        '200':
          $ref: '#/components/responses/ProductPermittedUsersSuccess'
  /productFields:
    delete:
      summary: Delete multiple product fields in bulk
      description: Marks multiple fields as deleted.
      tags:
        - ProductFields
      security:
        - api_key: []
        - oauth2:
            - 'products:full'
      parameters:
        - in: query
          name: ids
          required: true
          schema:
            type: string
          description: Comma-separated field IDs to delete
      responses:
        '200':
          $ref: '#/components/responses/DeleteMultipleProductFieldsSuccess'
    get:
      summary: Get all product fields
      description: Returns data about all product fields
      tags:
        - ProductFields
      security:
        - api_key: []
        - oauth2:
            - 'products:read'
            - 'products:full'
      responses:
        '200':
          $ref: '#/components/responses/GetAllProductFieldsSuccess'
    post:
      summary: Add a new product field
      description: 'Adds a new product field. For more information on adding a new custom field, see <a href="https://pipedrive.readme.io/docs/adding-a-new-custom-field" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - ProductFields
      security:
        - api_key: []
        - oauth2:
            - 'products:full'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewProductField'
      responses:
        '200':
          $ref: '#/components/responses/GetProductFieldSuccess'
  '/productFields/{id}':
    delete:
      summary: Delete a product field
      description: 'Marks a field as deleted. For more information on how to delete a custom field, see <a href="https://pipedrive.readme.io/docs/deleting-a-custom-field" target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - ProductFields
      security:
        - api_key: []
        - oauth2:
            - 'products:full'
      parameters:
        - $ref: '#/components/parameters/ProductFieldID'
      responses:
        '200':
          $ref: '#/components/responses/DeleteProductFieldSuccess'
        '410':
          $ref: '#/components/responses/ProductFieldNotFound'
    get:
      summary: Get one product field
      description: Returns data about a specific product field.
      tags:
        - ProductFields
      security:
        - api_key: []
        - oauth2:
            - 'products:read'
            - 'products:full'
      parameters:
        - $ref: '#/components/parameters/ProductFieldID'
      responses:
        '200':
          $ref: '#/components/responses/GetProductFieldSuccess'
        '410':
          $ref: '#/components/responses/ProductFieldNotFound'
    put:
      summary: Update a product field
      description: 'Updates a product field. See an example of updating custom fields’ values in <a href=" https://pipedrive.readme.io/docs/updating-custom-field-value " target="_blank" rel="noopener noreferrer">this tutorial</a>.'
      tags:
        - ProductFields
      security:
        - api_key: []
        - oauth2:
            - 'products:full'
      parameters:
        - $ref: '#/components/parameters/ProductFieldID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BasicProductField'
      responses:
        '200':
          $ref: '#/components/responses/GetProductFieldSuccess'
  /recents:
    get:
      summary: Get recents
      description: Returns data about all recent changes occured after given timestamp.
      tags:
        - Recents
      security:
        - api_key: []
        - oauth2:
            - 'recents:read'
            - 'search:read'
      parameters:
        - in: query
          name: since_timestamp
          required: true
          schema:
            type: string
          description: 'Timestamp in UTC. Format: YYYY-MM-DD HH:MM:SS'
        - in: query
          name: items
          schema:
            type: string
            enum:
              - activity
              - activityType
              - deal
              - delete_log
              - file
              - filter
              - note
              - person
              - organization
              - pipeline
              - product
              - stage
              - user
          description: Multiple selection of item types to include in query (optional)
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /roles:
    get:
      summary: Get all roles
      tags:
        - Roles
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/GetRoles'
    post:
      summary: Add a role
      tags:
        - Roles
      security:
        - api_key: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseRole'
                - type: object
                  required:
                    - name
      responses:
        '200':
          $ref: '#/components/responses/PostRoles'
  '/roles/{id}':
    delete:
      summary: Delete a role
      tags:
        - Roles
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/RoleID'
      responses:
        '200':
          $ref: '#/components/responses/DeleteRole'
    get:
      summary: Get one role
      tags:
        - Roles
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/RoleID'
      responses:
        '200':
          $ref: '#/components/responses/GetRole'
    put:
      summary: Update role details
      tags:
        - Roles
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/RoleID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseRole'
      responses:
        '200':
          $ref: '#/components/responses/PutRole'
  '/roles/{id}/assignments':
    delete:
      summary: Delete a role assignment
      description: Delete assignment from a role
      tags:
        - Roles
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/RoleID'
        - in: query
          name: user_id
          required: true
          schema:
            type: integer
          description: ID of the user
      responses:
        '200':
          $ref: '#/components/responses/DeleteRoleAssignment'
    get:
      summary: List role assignments
      description: List assignments for a role
      tags:
        - Roles
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/RoleID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/GetRoleAssignments'
    post:
      summary: Add role assignment
      description: Add assignment for a role
      tags:
        - Roles
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/RoleID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  type: integer
                  description: ID of the user
      responses:
        '200':
          $ref: '#/components/responses/PostRoleAssignment'
  '/roles/{id}/roles':
    get:
      summary: List role sub-roles
      tags:
        - Roles
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/RoleID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/GetRoleSubroles'
  '/roles/{id}/settings':
    get:
      summary: List role settings
      tags:
        - Roles
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/RoleID'
      responses:
        '200':
          $ref: '#/components/responses/GetRoleSettings'
    post:
      summary: Add or update role setting
      tags:
        - Roles
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/RoleID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - setting_key
                - value
              properties:
                setting_key:
                  type: string
                  enum:
                    - deal_default_visibility
                    - org_default_visibility
                    - person_default_visibility
                    - product_default_visibility
                value:
                  allOf:
                    - $ref: '#/components/schemas/NumberBooleanDefault0'
                  description: 'Possible values for default_visibility settings: 0...1.'
      responses:
        '200':
          $ref: '#/components/responses/PostRoleSettings'
  /searchResults:
    get:
      summary: Perform a search
      description: Performs a search across the account and returns SearchResults.
      tags:
        - SearchResults
      security:
        - api_key: []
        - oauth2:
            - 'search:read'
      parameters:
        - in: query
          name: term
          required: true
          schema:
            type: string
          description: 'Search term to look for, minimum 2 characters.'
        - in: query
          name: item_type
          schema:
            type: string
            enum:
              - deal
              - person
              - organization
              - product
              - file
          description: 'Search for items of exact type. If omitted, all types of items are searched.'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
        - in: query
          name: exact_match
          schema:
            $ref: '#/components/schemas/NumberBoolean'
          description: 'When enabled, only full exact matches against the given term are returned. The minimum 2 character limit for the term is discarded when exact_match is enabled. It will only work if search term is 30 characters or less.'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /searchResults/field:
    get:
      summary: Perform a search using a specific field value
      description: 'Performs a search from a specific field''s values. Results can be either the distinct values of the field (useful for searching autocomplete field values), or actual items IDs (deals, persons, organizations or products). Works only with the following field types: varchar, varchar_auto, double, address, text, phone, date.'
      tags:
        - SearchResults
      security:
        - api_key: []
        - oauth2:
            - 'search:read'
      parameters:
        - in: query
          name: term
          required: true
          schema:
            type: string
          description: 'Search term to look for, minimum 2 characters.'
        - in: query
          name: exact_match
          schema:
            $ref: '#/components/schemas/NumberBoolean'
          description: 'When enabled, only full exact matches against the given term are returned. By default, term can be present anywhere in the resulting field values to be considered a match. The minimum 2 character limit for the term is discarded when exact_match is enabled.'
        - in: query
          name: field_type
          required: true
          schema:
            type: string
            enum:
              - dealField
              - personField
              - organizationField
              - productField
          description: Type of the field to perform the search from.
        - in: query
          name: field_key
          required: true
          schema:
            type: string
          description: 'Key of the field to search from. Field key can be obtained by fetching the list of fields using any of fields API GET methods (dealFields, personFields, ..).'
        - in: query
          name: return_field_key
          schema:
            type: string
          description: 'Name of the field in search results from which the search was performed. When omitted, ''value'' will be used. You may want to set this parameter to match the field_key.'
        - in: query
          name: return_item_ids
          schema:
            $ref: '#/components/schemas/NumberBoolean'
          description: 'Whether to return matching items IDs in search results. When omitted or set to 0, only distinct values of the searched field are returned. When enabled, the return_field_key parameter is ignored and the results include the searched field as its own key.'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /stages:
    delete:
      summary: Delete multiple stages in bulk
      description: Marks multiple stages as deleted.
      tags:
        - Stages
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - in: query
          name: ids
          required: true
          schema:
            type: string
          description: Comma-separated stage IDs to delete
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get all stages
      description: Returns data about all stages
      tags:
        - Stages
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
            - admin
      parameters:
        - in: query
          name: pipeline_id
          schema:
            type: integer
          description: 'ID of the pipeline to fetch stages for. If omitted, stages for all pipelines will be fetched.'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: Add a new stage
      description: 'Adds a new stage, returns the ID upon success.'
      tags:
        - Stages
      security:
        - api_key: []
        - oauth2:
            - admin
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              allOf:
                - $ref: '#/components/schemas/Stage'
                - type: object
                  required:
                    - name
                    - pipeline_id
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/stages/{id}':
    delete:
      summary: Delete a stage
      description: Marks a stage as deleted.
      tags:
        - Stages
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - $ref: '#/components/parameters/StageID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: Get one stage
      description: Returns data about a specific stage
      tags:
        - Stages
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
            - admin
      parameters:
        - $ref: '#/components/parameters/StageID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    put:
      summary: Update stage details
      description: Updates the properties of a stage.
      tags:
        - Stages
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - $ref: '#/components/parameters/StageID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              allOf:
                - $ref: '#/components/schemas/Stage'
                - type: object
                  properties:
                    order_nr:
                      type: integer
                      description: An order number for this stage. Order numbers should be used to order the stages in the pipeline.
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/stages/{id}/deals':
    get:
      summary: Get deals in a stage
      description: Lists deals in a specific stage
      tags:
        - Stages
      security:
        - api_key: []
        - oauth2:
            - 'deals:read'
            - 'deals:full'
      parameters:
        - $ref: '#/components/parameters/StageID'
        - in: query
          name: filter_id
          schema:
            type: integer
          description: 'If supplied, only deals matching the given filter will be returned.'
        - in: query
          name: user_id
          schema:
            type: integer
          description: 'If supplied, filter_id will not be considered and only deals owned by the given user will be returned. If omitted, deals owned by the authorized user will be returned.'
        - in: query
          name: everyone
          schema:
            $ref: '#/components/schemas/NumberBoolean'
          description: 'If supplied, filter_id and user_id will not be considered – instead, deals owned by everyone will be returned.'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /teams:
    get:
      summary: Get all teams
      description: Returns data about teams within the company
      tags:
        - Teams
      security:
        - api_key: []
        - oauth2:
            - 'users:read'
      parameters:
        - $ref: '#/components/parameters/TeamsSort'
        - $ref: '#/components/parameters/TeamsUsersExclude'
      responses:
        '200':
          $ref: '#/components/responses/TeamsSuccess'
    post:
      summary: Add a new team
      description: Adds a new team to the company and returns the created object
      tags:
        - Teams
      security:
        - api_key: []
        - oauth2:
            - admin
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateTeam'
      responses:
        '200':
          $ref: '#/components/responses/TeamSuccess'
        '403':
          $ref: '#/components/responses/Forbidden'
  '/teams/{id}':
    get:
      summary: Get a single team
      description: Returns data about a specific team
      tags:
        - Teams
      security:
        - api_key: []
        - oauth2:
            - 'users:read'
      parameters:
        - $ref: '#/components/parameters/TeamID'
        - $ref: '#/components/parameters/TeamsUsersExclude'
      responses:
        '200':
          $ref: '#/components/responses/TeamSuccess'
        '404':
          $ref: '#/components/responses/TeamNotFound'
    put:
      summary: Update a team
      description: Updates an existing team and returns the updated object
      tags:
        - Teams
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - $ref: '#/components/parameters/TeamID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateTeam'
      responses:
        '200':
          $ref: '#/components/responses/TeamSuccess'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/TeamNotFound'
  '/teams/{id}/users':
    get:
      summary: Get all users in a team
      description: Returns list of all user IDs within a team
      tags:
        - Teams
      security:
        - api_key: []
        - oauth2:
            - 'users:read'
      parameters:
        - $ref: '#/components/parameters/TeamID'
      responses:
        '200':
          $ref: '#/components/responses/TeamsUsersSuccess'
        '404':
          $ref: '#/components/responses/TeamNotFound'
    post:
      summary: Add users to a team
      description: Adds users to an existing team
      tags:
        - Teams
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - $ref: '#/components/parameters/TeamID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - users
              properties:
                users:
                  $ref: '#/components/schemas/BaseUserIDs'
      responses:
        '200':
          $ref: '#/components/responses/TeamsUsersSuccess'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/TeamNotFound'
    delete:
      summary: Delete users from a team
      description: Deletes users from an existing team
      tags:
        - Teams
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - $ref: '#/components/parameters/TeamID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - users
              properties:
                users:
                  $ref: '#/components/schemas/BaseUserIDs'
      responses:
        '200':
          $ref: '#/components/responses/TeamsUsersSuccess'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/TeamNotFound'
  '/teams/user/{id}':
    get:
      summary: Get all teams of a user
      description: Returns data about all teams which have specified user as a member
      tags:
        - Teams
      security:
        - api_key: []
        - oauth2:
            - 'users:read'
      parameters:
        - $ref: '#/components/parameters/UserID'
        - $ref: '#/components/parameters/TeamsSort'
        - $ref: '#/components/parameters/TeamsUsersExclude'
      responses:
        '200':
          $ref: '#/components/responses/TeamsSuccess'
  /users:
    get:
      summary: Get all users
      description: Returns data about all users within the company
      tags:
        - Users
      security:
        - api_key: []
        - oauth2:
            - 'users:read'
      responses:
        '200':
          $ref: '#/components/responses/UsersSuccess'
    post:
      summary: Add a new user
      description: 'Adds a new user to the company, returns the ID upon success.'
      tags:
        - Users
      security:
        - api_key: []
        - oauth2:
            - admin
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - name
                - email
                - active_flag
              properties:
                name:
                  type: string
                  description: Name of the user
                email:
                  type: string
                  description: Email of the user
                active_flag:
                  type: boolean
                  default: true
                  description: 'Whether the user is active or not. false = Not activated, true = Activated'
      responses:
        '200':
          $ref: '#/components/responses/UserSuccess'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/find:
    get:
      summary: Find users by name
      description: Finds users by their name.
      tags:
        - Users
      security:
        - api_key: []
        - oauth2:
            - 'users:read'
      parameters:
        - in: query
          name: term
          required: true
          schema:
            type: string
          description: Search term to look for
        - in: query
          name: search_by_email
          schema:
            $ref: '#/components/schemas/NumberBooleanDefault0'
          description: 'When enabled, term will only be matched against email addresses of users. Default: false'
      responses:
        '200':
          $ref: '#/components/responses/UsersSuccess'
  /users/me:
    get:
      summary: Get current user data
      description: 'Returns data about an authorized user within the company with bound company data: company ID, company name, and domain. Note that the ''locale'' property means ''Date and number format'' in the Pipedrive settings, not the chosen language.'
      tags:
        - Users
      security:
        - api_key: []
        - oauth2:
            - base
      responses:
        '200':
          $ref: '#/components/responses/UsersMeSuccess'
        '401':
          $ref: '#/components/responses/Unauthorized'
  '/users/{id}':
    get:
      summary: Get one user
      description: Returns data about a specific user within the company
      tags:
        - Users
      security:
        - api_key: []
        - oauth2:
            - 'users:read'
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        '200':
          $ref: '#/components/responses/UserSuccess'
        '404':
          $ref: '#/components/responses/UserNotFound'
    put:
      summary: Update user details
      description: 'Updates the properties of a user. Currently, only active_flag can be updated.'
      tags:
        - Users
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - $ref: '#/components/parameters/UserID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - active_flag
              properties:
                active_flag:
                  type: boolean
                  default: true
                  description: 'Whether the user is active or not. false = Not activated, true = Activated'
      responses:
        '200':
          $ref: '#/components/responses/UserSuccess'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/UserNotFound'
  '/users/{id}/blacklistedEmails':
    get:
      summary: List blacklisted email addresses of a user
      description: Lists blacklisted email addresses of a specific user. Blacklisted emails are such that will not get synced in to Pipedrive when using the built-in Mailbox.
      tags:
        - Users
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: Add blacklisted email address for a user
      description: Add blacklisted email address for a specific user.
      tags:
        - Users
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - $ref: '#/components/parameters/UserID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - address
              properties:
                address:
                  type: string
                  description: 'Email address to blacklist (can contain \\* for wildcards, e.g. \\*@example.com, or john\\*@ex\\*.com)'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/users/{id}/followers':
    get:
      summary: List followers of a user
      description: Lists followers of a specific user.
      tags:
        - Users
      security:
        - api_key: []
        - oauth2:
            - 'users:read'
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        '200':
          $ref: '#/components/responses/UsersFollowersGetSuccess'
        '403':
          $ref: '#/components/responses/Forbidden'
  '/users/{id}/permissions':
    get:
      summary: List user permissions
      description: List aggregated permissions over all assigned permission sets for a user
      tags:
        - Users
      security:
        - api_key: []
        - oauth2:
            - 'users:read'
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/users/{id}/roleAssignments':
    delete:
      summary: Delete a role assignment
      description: Delete a role assignment for a user
      tags:
        - Users
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/UserID'
        - in: query
          name: role_id
          required: true
          schema:
            type: integer
          description: ID of the role
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    get:
      summary: List role assignments
      description: List role assignments for a user
      tags:
        - Users
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/UserID'
        - $ref: '#/components/parameters/PaginationStart'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
    post:
      summary: Add role assignment
      description: Add role assignment for a user
      tags:
        - Users
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/UserID'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - role_id
              properties:
                role_id:
                  type: integer
                  description: ID of the role
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  '/users/{id}/roleSettings':
    get:
      summary: List user role settings
      description: List settings of user's assigned role
      tags:
        - Users
      security:
        - api_key: []
        - oauth2:
            - 'users:read'
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /userConnections:
    get:
      summary: Get all user connections
      description: Returns data about all connections for authorized user.
      tags:
        - UserConnections
      security:
        - api_key: []
        - oauth2:
            - base
      responses:
        '200':
          $ref: '#/components/responses/UserConnectionsGetSuccess'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /userSettings:
    get:
      summary: List settings of authorized user
      description: Lists settings of authorized user.
      tags:
        - UserSettings
      security:
        - api_key: []
        - oauth2:
            - base
      responses:
        '200':
          $ref: '#/components/responses/EmptySuccess'
  /webhooks:
    get:
      summary: Get all webhooks
      description: Returns data about all webhooks of a company.
      tags:
        - Webhooks
      security:
        - api_key: []
        - oauth2:
            - admin
      responses:
        '200':
          description: The list of webhooks objects from the logged in company and user
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1webhooks~1%7Bid%7D/delete/responses/200/content/application~1json/schema'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/paths/~1webhooks/post/responses/201/content/application~1json/schema/allOf/1/properties/data'
                        description: The array of Webhooks
              example:
                status: ok
                success: true
                data:
                  - id: 1
                    company_id: 1
                    owner_id: 1
                    user_id: 1
                    event_action: added
                    event_object: activityType
                    subscription_url: 'http://example.org'
                    is_active: 1
                    add_time: '2019-10-25T08:25:27.000Z'
                    remove_time: null
                    type: general
                    http_auth_user: test
                    http_auth_password: test
                    additional_data: {}
                    remove_reason: null
                    last_delivery_time: null
                    last_http_status: null
                    admin_id: 1
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      summary: Create a new webhook
      description: 'Creates a new webhook and returns its details. Note that specifying an event which triggers the webhook combines 2 parameters - ''event_action'' and ''event_object''. E.g., use ''\*.\*'' for getting notifications about all events, ''added.deal'' for any newly added deals, ''deleted.persons'' for any deleted persons, etc. See <a href="https://pipedrive.readme.io/docs/guide-for-webhooks?utm_source=api_reference">https://pipedrive.readme.io/docs/guide-for-webhooks</a> for more details.'
      tags:
        - Webhooks
      security:
        - api_key: []
        - oauth2:
            - admin
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - subscription_url
                - event_action
                - event_object
              properties:
                subscription_url:
                  type: string
                  description: 'A full, valid, publicly accessible URL. Determines where to send the notifications. Please note that you cannot use Pipedrive API endpoints as the subscription_url.'
                event_action:
                  type: string
                  enum:
                    - added
                    - updated
                    - merged
                    - deleted
                    - '*'
                  description: Type of action to receive notifications about. Wildcard will match all supported actions.
                event_object:
                  type: string
                  enum:
                    - activity
                    - activityType
                    - deal
                    - note
                    - organization
                    - person
                    - pipeline
                    - product
                    - stage
                    - user
                    - '*'
                  description: Type of object to receive notifications about. Wildcard will match all supported objects.
                user_id:
                  type: integer
                  description: 'The ID of the user this webhook will be authorized with. If not set, current authorized user will be used. Note that this does not filter only certain user''s events — rather, this specifies the user''s permissions under which each event is checked. Events about objects the selected user is not entitled to access are not sent. If you want to receive notifications for all events, a top-level admin user should be used.'
                http_auth_user:
                  type: string
                  description: HTTP basic auth username of the subscription URL endpoint (if required).
                http_auth_password:
                  type: string
                  description: HTTP basic auth password of the subscription URL endpoint (if required).
      responses:
        '201':
          description: The created webhook object
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1webhooks~1%7Bid%7D/delete/responses/200/content/application~1json/schema'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the Webhook
                          company_id:
                            type: integer
                            description: The ID of the Company related to the Webhook
                          owner_id:
                            type: integer
                            description: The ID of the User who owns the Webhook
                          user_id:
                            type: integer
                            description: The ID of the User related to the Webhook
                          event_action:
                            type: string
                            description: The Webhook action
                          event_object:
                            type: string
                            description: The Webhook object
                          subscription_url:
                            type: string
                            description: The subscription URL of the Webhook
                          is_active:
                            allOf:
                              - $ref: '#/components/schemas/NumberBooleanDefault1'
                            description: The Webhook's status
                          add_time:
                            type: string
                            format: date-time
                            description: The date when the Webhook was added
                          remove_time:
                            type: string
                            format: date-time
                            nullable: true
                            description: The date when the Webhook was removed (if removed)
                          type:
                            type: string
                            enum:
                              - general
                              - app
                            description: The type of the Webhook
                          http_auth_user:
                            type: string
                            nullable: true
                            description: The username of the subscription_url of the Webhook
                          http_auth_password:
                            type: string
                            nullable: true
                            description: The password of the subscription_url of the Webhook
                          additional_data:
                            type: object
                            description: Any additional data related to the Webhook
                          remove_reason:
                            type: string
                            nullable: true
                            description: The removal reason of the Webhook (if removed)
                          last_delivery_time:
                            type: string
                            format: date
                            nullable: true
                            description: The last delivery time of the Webhook
                          last_http_status:
                            type: integer
                            nullable: true
                            description: The last delivery HTTP status of the Webhook
                          admin_id:
                            type: integer
                            description: The ID of the admin of the Webhook
              example:
                status: ok
                success: true
                data:
                  id: 1
                  company_id: 1
                  owner_id: 1
                  user_id: 1
                  event_action: added
                  event_object: activityType
                  subscription_url: 'http://example.org'
                  is_active: 1
                  add_time: '2019-10-25T08:25:27.000Z'
                  remove_time: null
                  type: general
                  http_auth_user: test
                  http_auth_password: test
                  additional_data: {}
                  remove_reason: null
                  last_delivery_time: null
                  last_http_status: null
                  admin_id: 1
        '400':
          description: The bad response on webhook creation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1webhooks~1%7Bid%7D/delete/responses/200/content/application~1json/schema'
                  - type: object
                    properties:
                      errors:
                        type: object
                        description: List of errors
              example:
                status: error
                success: false
                errors:
                  subscription_url:
                    - invalid or non-reachable URL
        '401':
          $ref: '#/components/responses/Unauthorized'
  '/webhooks/{id}':
    delete:
      summary: Delete existing webhook
      description: Deletes the specified webhook.
      tags:
        - Webhooks
      security:
        - api_key: []
        - oauth2:
            - admin
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the webhook to delete
      responses:
        '200':
          description: The webhook deletion success response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseResponse'
                  - type: object
                    properties:
                      status:
                        type: string
                        description: The status of the response
              example:
                status: ok
                success: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: The webhook deletion forbidden response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BaseResponse'
                  - type: object
                    properties:
                      message:
                        type: string
                        description: The error message
              example:
                success: false
                message: Forbidden
        '404':
          description: The webhook deletion not found response
          content:
            application/json:
              schema:
              example:
                status: error
                success: false
                errors:
                  id:
                    - not found
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: api_token
      in: query
    oauth2:
      type: oauth2
      description: 'For more information, see https://pipedrive.readme.io/docs/marketplace-oauth-authorization'
      flows:
        authorizationCode:
          authorizationUrl: 'https://oauth.pipedrive.com/oauth/authorize'
          tokenUrl: 'https://oauth.pipedrive.com/oauth/token'
          refreshUrl: 'https://oauth.pipedrive.com/oauth/token'
          scopes:
            'deals:read': Read most data about deals and related entities.
            'deals:full': 'Create, read, update and delete deals, its participants and followers.'
            'activities:read': 'Read activities, its fields and types; all files and filters.'
            'activities:full': 'Create, read, update and delete activities and all files and filters.'
            'contacts:read': 'Read data about persons and organizations, their related fields and followers.'
            'contacts:full': 'Create, read, update and delete persons and organizations and their followers.'
            admin: Allows to do many things that an administrator can do in a Pipedrive company account.
            'recents:read': Read all recent changes occured in an account.
            'search:read': 'Search across the account for deals, persons, organizations, files and products and see details about the returned results.'
            'mail:read': Read mail threads and messages.
            'mail:full': 'Read, update and delete mail threads. Also grants read access to mail messages.'
            'products:read': 'Read products, its fields, files, followers and products connected to a deal.'
            'products:full': 'Create, read, update and delete products and its fields; add products to deals'
            'users:read': 'Read data about users (people with access to a Pipedrive account), their permissions, roles and followers, as well as about teams.'
            base: Read settings of the authorized user and currencies in an account.
  parameters:
    ActivityID:
      in: path
      name: id
      description: ID of the activity
      required: true
      schema:
        type: integer
    ActivityTypeID:
      in: path
      name: id
      description: ID of the activity type
      required: true
      schema:
        type: integer
    DealID:
      in: path
      name: id
      description: ID of the deal
      required: true
      schema:
        type: integer
    DealFieldID:
      in: path
      name: id
      description: ID of the field
      required: true
      schema:
        type: integer
    FileID:
      in: path
      name: id
      description: ID of the file
      required: true
      schema:
        type: integer
    FilterID:
      in: path
      name: id
      description: ID of the filter
      required: true
      schema:
        type: integer
    MailThreadID:
      in: path
      name: id
      description: ID of the mail thread
      required: true
      schema:
        type: integer
    NoteID:
      in: path
      name: id
      description: ID of the note
      required: true
      schema:
        type: integer
    OrganizationFieldID:
      in: path
      name: id
      description: ID of the field
      required: true
      schema:
        type: integer
    OrganizationID:
      in: path
      name: id
      description: ID of the organization
      required: true
      schema:
        type: integer
    OrganizationRelationshipID:
      in: path
      name: id
      description: ID of the organization relationship
      required: true
      schema:
        type: integer
    PermissionSetID:
      in: path
      name: id
      description: ID of the permission set
      required: true
      schema:
        type: integer
    PersonID:
      in: path
      name: id
      description: ID of a person
      required: true
      schema:
        type: integer
    PersonFieldID:
      in: path
      name: id
      description: ID of the field
      required: true
      schema:
        type: integer
    PipelineID:
      in: path
      name: id
      description: ID of the pipeline
      required: true
      schema:
        type: integer
    ProductID:
      in: path
      name: id
      description: ID of the product
      required: true
      schema:
        type: integer
    ProductFieldID:
      in: path
      name: id
      description: ID of the Product Field
      required: true
      schema:
        type: integer
    RoleID:
      in: path
      name: id
      description: ID of the role
      required: true
      schema:
        type: integer
    StageID:
      in: path
      name: id
      description: ID of the stage
      required: true
      schema:
        type: integer
    TeamID:
      in: path
      name: id
      description: ID of the team
      required: true
      schema:
        type: integer
    UserID:
      in: path
      name: id
      description: ID of the user
      required: true
      schema:
        type: integer
    PaginationStart:
      in: query
      name: start
      description: Pagination start
      schema:
        type: integer
        default: 0
    PaginationLimit:
      in: query
      name: limit
      description: Items shown per page
      schema:
        type: integer
    ActivityDone:
      in: query
      name: done
      schema:
        $ref: '#/components/schemas/NumberBoolean'
      description: 'Whether the activity is done or not. 0 = Not done, 1 = Done. If omitted returns both Done and Not done activities.'
    DealStatus:
      in: query
      name: status
      schema:
        type: string
        default: all_not_deleted
        enum:
          - open
          - won
          - lost
          - deleted
          - all_not_deleted
      description: 'Only fetch deals with specific status. If omitted, all not deleted deals are fetched.'
    DealSort:
      in: query
      name: sort
      schema:
        type: string
      description: 'Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys).'
    IncludeDeletedFiles:
      in: query
      name: include_deleted_files
      description: 'When enabled, the list of files will also include deleted files. Please note that trying to download these files will not work.'
      schema:
        $ref: '#/components/schemas/NumberBoolean'
    FilesSort:
      in: query
      name: sort
      schema:
        type: string
      description: 'Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys). Supported fields: id, user_id, deal_id, person_id, org_id, product_id, add_time, update_time, file_name, file_type, file_size, comment.'
    ActivityExclude:
      in: query
      name: exclude
      schema:
        type: string
      description: A comma-separated string of activity IDs to exclude from result
    TeamsSort:
      in: query
      name: order_by
      schema:
        type: string
        enum:
          - id
          - name
          - manager_id
          - active_flag
        default: id
      description: Field name to sort returned teams by
    TeamsUsersExclude:
      in: query
      name: skip_users
      schema:
        allOf:
          - $ref: '#/components/schemas/NumberBooleanDefault0'
      description: 'When enabled, the teams will not include IDs of member users'
  responses:
    EmptySuccess:
      description: success
    Unauthorized:
      description: Unauthorized response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Unauthorized'
          example:
            success: false
            error: unauthorized access
            errorCode: 401
    Forbidden:
      description: Forbidden response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FailResponse'
          example:
            success: false
            error: You do not have permissions to do this.
    GetRoles:
      description: Get all roles
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetRoles'
          example:
            success: true
            data:
              - id: 1
                parent_role_id: null
                name: (Unassigned users)
                active_flag: true
                assignment_count: '0'
                sub_role_count: '0'
                level: 1
              - id: 2
                parent_role_id: null
                name: Admins
                active_flag: true
                assignment_count: '1'
                sub_role_count: '1'
                level: 1
              - id: 3
                parent_role_id: 2
                name: Reviewers
                active_flag: true
                assignment_count: '1'
                sub_role_count: '0'
                level: 2
            additional_data:
              pagination:
                start: 0
                limit: 100
                more_items_in_collection: false
    PostRoles:
      description: Add a role
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostRoles'
          example:
            success: true
            data:
              id: 2
    DeleteRole:
      description: Delete a role
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteRole'
          example:
            success: true
            data:
              id: 2
    GetRole:
      description: Get one role
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetRole'
          example:
            success: true
            data:
              id: 2
              parent_role_id: null
              name: Admins
              active_flag: true
              assignment_count: '1'
              sub_role_count: '1'
            additional_data:
              settings:
                deal_default_visibility: 1
                org_default_visibility: 1
                person_default_visibility: 1
                product_default_visibility: 1
    PutRole:
      description: Update role details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PutRole'
          example:
            success: true
            data:
              id: 2
    DeleteRoleAssignment:
      description: Delete assignment from a role
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteRoleAssignment'
          example:
            success: true
            data:
              id: 2
    GetRoleAssignments:
      description: List assignments for a role
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetRoleAssignments'
          example:
            success: true
            data:
              - user_id: 1234567
                role_id: 2
                parent_role_id: null
                name: Admins
                active_flag: true
                type: '1'
            additional_data:
              pagination:
                start: 0
                limit: 100
                more_items_in_collection: false
    PostRoleAssignment:
      description: Add assignment for a role
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostRoleAssignment'
          example:
            success: true
            data:
              user_id: 1234567
              role_id: 2
    GetRoleSubroles:
      description: List role sub-roles
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetRoleSubroles'
          example:
            success: true
            data:
              - id: 3
                parent_role_id: 2
                name: Auditors
                active_flag: true
                assignment_count: '1'
                sub_role_count: '0'
            additional_data:
              pagination:
                start: 0
                limit: 100
                more_items_in_collection: false
    GetRoleSettings:
      description: List role settings
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetRoleSettings'
          example:
            success: true
            data:
              deal_default_visibility: 1
              org_default_visibility: 1
              person_default_visibility: 1
              product_default_visibility: 1
    PostRoleSettings:
      description: List role settings
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostRoleSettings'
          example:
            success: true
            data:
              id: 2
              deal_default_visibility: 1
    MailMessageGetSuccess:
      description: The mail messages that are being synced with Pipedrive
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MailMessage'
          example:
            success: true
            statusCode: 2000
            statusText: Success
            service: email-api
            data:
              id: 1
              from:
                - id: 1
                  email_address: mail@example.org
                  name: Test
                  linked_person_id: null
                  linked_person_name: null
                  mail_message_party_id: 1
              to:
                - id: 1
                  email_address: mail@example.org
                  name: Test
                  linked_person_id: null
                  linked_person_name: null
                  mail_message_party_id: 1
              cc:
                - id: 1
                  email_address: mail@example.org
                  name: Test
                  linked_person_id: null
                  linked_person_name: null
                  mail_message_party_id: 1
              bcc:
                - id: 1
                  email_address: mail@example.org
                  name: Test
                  linked_person_id: null
                  linked_person_name: null
                  mail_message_party_id: 1
              body_url: 'https://example.org'
              account_id: test
              user_id: 1
              mail_thread_id: 1
              subject: test subject
              snippet: test subject
              mail_tracking_status: null
              mail_link_tracking_enabled_flag: 0
              read_flag: 1
              draft: null
              draft_flag: 0
              synced_flag: 1
              deleted_flag: 0
              has_body_flag: 1
              sent_flag: 0
              sent_from_pipedrive_flag: 0
              smart_bcc_flag: 0
              message_time: '2019-11-14T06:02:06.000Z'
              add_time: '2019-11-14T06:02:06.000Z'
              update_time: '2019-11-14T07:15:49.000Z'
              has_attachments_flag: 1
              has_inline_attachments_flag: 0
              has_real_attachments_flag: 1
              write_flag: true
    DealAddSuccess:
      description: Add a Deal
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetAddedDeal'
          example:
            success: true
            data:
              id: 1
              creator_user_id:
                id: 9258618
                name: Creator
                email: creator@pipedrive.com
                has_pic: false
                pic_hash: null
                active_flag: true
                value: 9258618
              user_id:
                id: 9258618
                name: Creator
                email: creator@pipedrive.com
                has_pic: false
                pic_hash: null
                active_flag: true
                value: 9258618
              person_id:
                active_flag: true
                name: Person
                email:
                  - label: work
                    value: person@pipedrive.com
                    primary: true
                phone:
                  - label: work
                    value: '37244499911'
                    primary: true
                value: 1101
              org_id:
                name: Organization
                people_count: 2
                owner_id: 9258618
                address: null
                active_flag: true
                cc_email: org@pipedrivemail.com
                value: 5
              stage_id: 2
              title: Deal One
              value: 5000
              currency: EUR
              add_time: '2019-05-29 04:21:51'
              update_time: '2019-11-28 16:19:50'
              stage_change_time: '2019-11-28 15:41:22'
              active: true
              deleted: false
              status: open
              probability: null
              next_activity_date: '2019-11-29'
              next_activity_time: '11:30:00'
              next_activity_id: 128
              last_activity_id: null
              last_activity_date: null
              lost_reason: null
              visible_to: '1'
              close_time: null
              pipeline_id: 1
              won_time: '2019-11-27 11:40:36'
              first_won_time: '2019-11-27 11:40:36'
              lost_time: null
              products_count: 0
              files_count: 0
              notes_count: 2
              followers_count: 0
              email_messages_count: 4
              activities_count: 1
              done_activities_count: 0
              undone_activities_count: 1
              reference_activities_count: 0
              participants_count: 1
              expected_close_date: '2019-06-29'
              last_incoming_mail_time: '2019-05-29 18:21:42'
              last_outgoing_mail_time: '2019-05-30 03:45:35'
              label: null
              stage_order_nr: 2
              person_name: Person
              org_name: Organization
              next_activity_subject: Call
              next_activity_type: call
              next_activity_duration: '00:30:00'
              next_activity_note: Note content
              formatted_value: '€5,000'
              weighted_value: 5000
              formatted_weighted_value: '€5,000'
              weighted_value_currency: EUR
              rotten_time: null
              owner_name: Creator
              cc_email: company+deal1@pipedrivemail.com
              org_hidden: false
              person_hidden: false
            additional_data:
              matches_filters:
                - 1
            related_objects:
              user:
                '9258618':
                  id: 9258618
                  name: Creator
                  email: creator@pipedrive.com
                  has_pic: false
                  pic_hash: null
                  active_flag: true
              organization:
                '2':
                  id: 2
                  name: Organization
                  people_count: 2
                  owner_id: 9258618
                  address: 'Mustamäe tee 3a, 10615 Tallinn'
                  active_flag: true
                  cc_email: org@pipedrivemail.com
              person:
                '1101':
                  active_flag: true
                  id: 1101
                  name: Person
                  email:
                    - label: work
                      value: person@pipedrive.com
                      primary: true
                  phone:
                    - label: work
                      value: '3421787767'
                      primary: true
    DealDuplicatedSuccess:
      description: Duplicate a Deal
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetDuplicatedDeal'
          example:
            success: true
            data:
              id: 1
              creator_user_id: 123
              user_id: 456
              person_id: 1
              org_id: 2
              stage_id: 2
              title: Deal One
              value: 5000
              currency: EUR
              add_time: '2019-05-29 04:21:51'
              update_time: '2019-05-29 04:21:51'
              stage_change_time: '2019-11-28 15:41:22'
              active: true
              deleted: false
              status: open
              probability: null
              next_activity_date: '2019-11-29'
              next_activity_time: '11:30:00'
              next_activity_id: 128
              last_activity_id: null
              last_activity_date: null
              lost_reason: null
              visible_to: '1'
              close_time: null
              pipeline_id: 1
              won_time: '2019-11-27 11:40:36'
              first_won_time: '2019-11-27 11:40:36'
              lost_time: null
              products_count: 0
              files_count: 0
              notes_count: 2
              followers_count: 0
              email_messages_count: 4
              activities_count: 1
              done_activities_count: 0
              undone_activities_count: 1
              reference_activities_count: 0
              participants_count: 1
              expected_close_date: '2019-06-29'
              last_incoming_mail_time: '2019-05-29 18:21:42'
              last_outgoing_mail_time: '2019-05-30 03:45:35'
              label: null
              stage_order_nr: 2
              person_name: Person
              org_name: Organization
              next_activity_subject: Call
              next_activity_type: call
              next_activity_duration: '00:30:00'
              next_activity_note: Note content
              formatted_value: '€5,000'
              weighted_value: 5000
              formatted_weighted_value: '€5,000'
              weighted_value_currency: EUR
              rotten_time: null
              owner_name: Creator
              cc_email: company+deal1@pipedrivemail.com
              org_hidden: false
              person_hidden: false
    DealMergedSuccess:
      description: Merges a Deal with another Deal.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetMergedDeal'
          example:
            success: true
            data:
              id: 1
              creator_user_id: 123
              user_id: 456
              person_id: 1
              org_id: 2
              stage_id: 2
              title: Deal One
              value: 5000
              currency: EUR
              add_time: '2019-05-29 04:21:51'
              update_time: '2019-06-29 05:20:31'
              stage_change_time: '2019-11-28 15:41:22'
              active: true
              deleted: false
              status: open
              probability: null
              next_activity_date: '2019-11-29'
              next_activity_time: '11:30:00'
              next_activity_id: 128
              last_activity_id: null
              last_activity_date: null
              lost_reason: null
              visible_to: '1'
              close_time: null
              pipeline_id: 1
              won_time: '2019-11-27 11:40:36'
              first_won_time: '2019-11-27 11:40:36'
              lost_time: null
              products_count: 0
              files_count: 0
              notes_count: 2
              followers_count: 0
              email_messages_count: 4
              activities_count: 1
              done_activities_count: 0
              undone_activities_count: 1
              reference_activities_count: 0
              participants_count: 1
              expected_close_date: '2019-06-29'
              last_incoming_mail_time: '2019-05-29 18:21:42'
              last_outgoing_mail_time: '2019-05-30 03:45:35'
              label: null
              stage_order_nr: 2
              person_name: Person
              org_name: Organization
              next_activity_subject: Call
              next_activity_type: call
              next_activity_duration: '00:30:00'
              next_activity_note: Note content
              formatted_value: '€5,000'
              weighted_value: 5000
              formatted_weighted_value: '€5,000'
              weighted_value_currency: EUR
              rotten_time: null
              owner_name: Creator
              cc_email: company+deal1@pipedrivemail.com
              org_hidden: false
              person_hidden: false
              merge_what_id: 2
    DealAddFollowerSuccess:
      description: Add a Follower to a Deal
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddedDealFollower'
          example:
            success: true
            data:
              user_id: 1
              id: 2
              deal_id: 3
              add_time: '2018-04-11 12:54:43'
    TeamsSuccess:
      description: The list of team objects
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Teams'
          example:
            success: true
            data:
              - id: 1
                name: Closers
                description: Berlin office Sales Team
                manager_id: 4
                users:
                  - 2
                  - 3
                  - 4
                  - 5
                active_flag: 1
                deleted_flag: 0
                add_time: '2019-10-07 09:06:09'
                created_by_user_id: 2
              - id: 2
                name: Coffee
                description: London office Sales Team
                manager_id: 7
                users:
                  - 5
                  - 8
                active_flag: 0
                deleted_flag: 0
                add_time: '2018-04-11 12:54:43'
                created_by_user_id: 7
    TeamSuccess:
      description: The team data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Teams'
          example:
            success: true
            data:
              id: 1
              name: Closers
              description: Berlin office Sales Team
              manager_id: 4
              users:
                - 2
                - 3
                - 5
              active_flag: 1
              deleted_flag: 0
              add_time: '2019-10-07 09:06:09'
              created_by_user_id: 2
    TeamsUsersSuccess:
      description: A list of user IDs within a team
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserIDs'
          example:
            success: true
            data:
              - 2
              - 3
              - 4
              - 5
    TeamNotFound:
      description: Team with specified ID does not exist or is inaccessible
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FailResponse'
          example:
            success: false
            error: Team 1 does not exist
    ProductsSuccess:
      description: The list of Products
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'
          example:
            success: true
            data:
              - id: 1
                name: Mechanical Pencil
                code: MPENCIL
                description: null
                unit: null
                tax: 0
                category: null
                active_flag: true
                selectable: true
                first_char: m
                visible_to: '3'
                owner_id:
                  id: 10100010
                  name: Test User
                  email: example@test.com
                  has_pic: true
                  pic_hash: 5df5332929fab76702207f38b29a5d88
                  active_flag: true
                  value: 10100010
                files_count: null
                followers_count: 0
                add_time: '2019-12-19 11:36:49'
                update_time: '2019-12-19 11:36:49'
                prices:
                  - id: 1
                    product_id: 1
                    price: 5
                    currency: EUR
                    cost: 2
                    overhead_cost: null
            additional_data: {}
            related_objects: null
            user:
              '10100010':
                id: 10100010
                name: Test User
                email: example@test.com
                has_pic: true
                pic_hash: 5df5332929fab76702207f38b29a5d88
                active_flag: true
    ProductDealsSuccess:
      description: The data of deals that have a Product attached
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BasicDeal'
          example:
            success: true
            data:
              - id: 5
                creator_user_id:
                  id: 10100010
                  name: Example User
                  email: example@test.com
                  has_pic: true
                  pic_hash: 5df5332929fab76702207f38b29a5d22
                  active_flag: true
                  value: 10100010
                user_id:
                  id: 10100010
                  name: Example User
                  email: example@test.com
                  has_pic: true
                  pic_hash: 5df5332929fab76702207f38b29a5d22
                  active_flag: true
                  value: 10100010
                person_id:
                  active_flag: true
                  name: Client
                  email:
                    - value: client@test.com
                      primary: true
                  phone:
                    - value: '000000000'
                      primary: true
                  value: 2
                org_id: null
                stage_id: 1
                title: Example deal
                value: 5.7
                currency: EUR
                add_time: '2019-12-19 14:44:52'
                update_time: '2019-12-19 14:54:10'
                stage_change_time: null
                active: true
                deleted: false
                status: open
                probability: null
                next_activity_date: '2020-01-01'
                next_activity_time: '12:00:00'
                next_activity_id: 4
                last_activity_id: null
                last_activity_date: null
                lost_reason: null
                visible_to: '3'
                close_time: null
                pipeline_id: 1
                won_time: null
                first_won_time: null
                lost_time: null
                products_count: 1
                files_count: 0
                notes_count: 0
                followers_count: 1
                email_messages_count: 0
                activities_count: 1
                done_activities_count: 0
                undone_activities_count: 1
                reference_activities_count: 0
                participants_count: 1
                expected_close_date: null
                last_incoming_mail_time: null
                last_outgoing_mail_time: null
                label: null
                stage_order_nr: 1
                person_name: Example
                org_name: null
                next_activity_subject: Lunch
                next_activity_type: lunch
                next_activity_duration: '01:30:00'
                next_activity_note: null
                formatted_value: €5.70
                weighted_value: 5.7
                formatted_weighted_value: €5.70
                weighted_value_currency: EUR
                rotten_time: null
                owner_name: Client
                cc_email: example+deal5@pipedrivemail.com
                org_hidden: false
                person_hidden: false
    NewProductFollowerSuccess:
      description: Adds a follower to a Product
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewFollowerResponse'
          example:
            success: true
            data:
              user_id: 10100010
              id: 1
              product_id: 2
              add_time: '2019-12-24 12:02:04'
    DeleteProductFollowerSuccess:
      description: Deletes a follower from a Product
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteProductFollowerResponse'
          example:
            success: true
            data:
              id: 1
    ProductFollowersSuccess:
      description: Lists the followers of a Product
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserIDs'
          example:
            success: true
            data:
              - 10100010
            additional_data:
              pagination:
                start: 0
                limit: 100
                more_items_in_collection: false
    ProductPermittedUsersSuccess:
      description: Lists users permitted to access a Product
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserIDs'
          example:
            success: true
            data:
              - 10100010
            additional_data:
              pagination:
                start: 0
                limit: 100
                more_items_in_collection: false
    FindProductsByNameSuccess:
      description: Returns data about the Products that were found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FindProductsByNameResponse'
          example:
            success: true
            data:
              - id: 1
                variation_id: '0'
                name: Mechanical Pencil
                title: Mechanical Pencil
                variation_name: ''
                price: 5
                price_formatted: €5
            additional_data:
              pagination:
                start: 0
                limit: 100
                more_items_in_collection: false
    UpdateProductSuccess:
      description: Updates Product data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'
          example:
            success: true
            data:
              id: 1
              name: Regular Pencil
              code: MPENCIL
              description: null
              unit: null
              tax: 0
              category: null
              active_flag: true
              selectable: true
              first_char: r
              visible_to: '3'
              owner_id:
                id: 10100010
                name: Example User
                email: example@test.com
                has_pic: true
                pic_hash: 5df5332929fab76702207f38b29a5d82
                active_flag: true
                value: 10100010
              files_count: null
              followers_count: 0
              add_time: '2019-12-19 11:36:49'
              update_time: '2019-12-26 13:35:17'
              prices:
                EUR:
                  id: 1
                  product_id: 1
                  price: 5
                  currency: EUR
                  cost: 2
                  overhead_cost: 3
            related_objects:
              user:
                '10100010':
                  id: 10100010
                  name: Example User
                  email: example@test.com
                  has_pic: true
                  pic_hash: 5df5332929fab76702207f38b29a5d82
                  active_flag: true
    GetAllProductFieldsSuccess:
      description: Get data about all Product Fields
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetAllProductFieldsResponse'
          example:
            success: true
            data:
              - id: 20
                key: name
                name: Name
                order_nr: 1
                picklist_data: null
                field_type: varchar
                add_time: '2019-11-25 13:34:03'
                update_time: '2019-11-25 13:34:02'
                last_updated_by_user_id: null
                active_flag: true
                edit_flag: false
                index_visible_flag: true
                details_visible_flag: false
                add_visible_flag: true
                important_flag: false
                bulk_edit_allowed: true
                searchable_flag: false
                filtering_allowed: true
                sortable_flag: true
                use_field: id
                link: /product/details/
                mandatory_flag: true
              - id: 24
                key: visible_to
                name: Visible to
                order_nr: 5
                field_type: visible_to
                add_time: '2019-11-25 13:34:03'
                update_time: '2019-11-25 13:34:02'
                last_updated_by_user_id: null
                active_flag: true
                edit_flag: false
                index_visible_flag: true
                details_visible_flag: true
                add_visible_flag: false
                important_flag: false
                bulk_edit_allowed: true
                searchable_flag: false
                filtering_allowed: true
                sortable_flag: true
                options:
                  - id: 1
                    label: Owner & followers
                  - id: 3
                    label: Entire company
                mandatory_flag: true
            additional_data:
              pagination:
                start: 0
                limit: 100
                more_items_in_collection: false
    GetProductFieldSuccess:
      description: Get the data for a single Product Field
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetProductFieldResponse'
          example:
            success: true
            data:
              id: 32
              key: 397b0f545d134b479a5485041b33b0f0f3da2333
              name: Color
              order_nr: 13
              field_type: enum
              add_time: '2019-12-20 11:01:24'
              update_time: '2019-12-20 11:01:24'
              last_updated_by_user_id: 10999910
              active_flag: true
              edit_flag: true
              index_visible_flag: true
              details_visible_flag: true
              add_visible_flag: true
              important_flag: false
              bulk_edit_allowed: true
              searchable_flag: false
              filtering_allowed: true
              sortable_flag: true
              options:
                - id: 9
                  label: red
                - id: 10
                  label: blue
                - id: 11
                  label: lilac
              mandatory_flag: false
    DeleteMultipleProductFieldsSuccess:
      description: Mark multiple Product Fields as deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteMultipleProductFieldsResponse'
          example:
            success: true
            data:
              id:
                - 32
                - 35
    DeleteProductFieldSuccess:
      description: Delete a Product Field
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteProductFieldResponse'
          example:
            success: true
            data:
              id: 32
    ProductFieldNotFound:
      description: The Product Field with the specified ID does not exist or is inaccessible
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FailResponse'
          example:
            success: false
            error: The field is not found
    UserSuccess:
      description: The data of the User
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
          example:
            success: true
            data:
              id: 2
              name: Jane Doe
              default_currency: EUR
              locale: et_EE
              lang: 1
              email: jane@pipedrive.com
              phone: 0000-0002
              activated: true
              last_login: '2019-09-11 11:43:54'
              created: '2019-01-22 10:43:47'
              modified: '2019-11-21 09:49:50'
              signup_flow_variation: null
              has_created_company: false
              is_admin: 0
              active_flag: true
              timezone_name: Europe/Berlin
              timezone_offset: '+03:00'
              role_id: 1
              icon_url: null
              is_you: false
    UsersSuccess:
      description: The list of user objects
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Users'
          example:
            success: true
            data:
              - id: 1
                name: John Doe
                default_currency: EUR
                locale: et_EE
                lang: 1
                email: john@pipedrive.com
                phone: 0000-0001
                activated: true
                last_login: '2019-11-21 08:45:56'
                created: '2018-11-13 09:16:26'
                modified: '2019-11-21 08:45:56'
                signup_flow_variation: google
                has_created_company: true
                is_admin: 1
                active_flag: true
                timezone_name: Europe/Berlin
                timezone_offset: '+03:00'
                role_id: 1
                icon_url: 'https://upload.wikimedia.org/wikipedia/en/thumb/e/e0/WPVG_icon_2016.svg/1024px-WPVG_icon_2016.svg.png'
                is_you: true
              - id: 2
                name: Jane Doe
                default_currency: EUR
                locale: et_EE
                lang: 1
                email: jane@pipedrive.com
                phone: 0000-0002
                activated: true
                last_login: '2019-09-11 11:43:54'
                created: '2019-01-22 10:43:47'
                modified: '2019-11-21 09:49:50'
                signup_flow_variation: null
                has_created_company: false
                is_admin: 0
                active_flag: true
                timezone_name: Europe/Berlin
                timezone_offset: '+03:00'
                role_id: 1
                icon_url: null
                is_you: false
    UserNotFound:
      description: User with specified ID does not exist or is inaccessible
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FailResponse'
          example:
            success: false
            error: User not found or not accessible.
    UsersMeSuccess:
      description: The data of the logged in user
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserMe'
          example:
            success: true
            data:
              id: 1
              name: Me
              default_currency: EUR
              locale: et_EE
              lang: 1
              email: me@pipedrive.com
              phone: 0000-0000
              activated: true
              last_login: '2019-11-21 08:45:56'
              created: '2018-11-13 09:16:26'
              modified: '2019-11-21 08:45:56'
              signup_flow_variation: google
              has_created_company: true
              is_admin: 1
              active_flag: true
              timezone_name: Europe/Berlin
              timezone_offset: '+03:00'
              role_id: 1
              icon_url: 'https://upload.wikimedia.org/wikipedia/en/thumb/e/e0/WPVG_icon_2016.svg/1024px-WPVG_icon_2016.svg.png'
              is_you: true
              company_id: 54235233
              company_name: Pipedrive
              company_domain: pipedrive-12g53f
              company_country: EE
              company_industry: IT Services
              language:
                language_code: en
                country_code: US
    UsersFollowersGetSuccess:
      description: The list of user IDs
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserIDs'
          example:
            success: true
            data:
              - 2
              - 5
              - 8
    UserConnectionsGetSuccess:
      description: The data of user connections
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserConnections'
          example:
            success: true
            data:
              google: awesomeid-123-4567890
    CurrenciesGetSuccess:
      description: The list of supported currencies
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Currencies'
          example:
            success: true
            data:
              - id: 1
                code: EUR
                name: Euro
                decimal_points: 2
                symbol: €
                active_flag: true
                is_custom_flag: false
              - id: 2
                code: USD
                name: US Dollar
                decimal_points: 2
                symbol: $
                active_flag: true
                is_custom_flag: false
    PermissionSets:
      description: Get all permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PermissionSets'
          example:
            success: true
            data:
              - id: 1
                name: Admin user
                assignment_count: 1
              - id: 2
                name: Regular user
                assignment_count: 3
              - id: 3
                name: Manager
                assignment_count: 0
    PermissionSetID:
      description: The Permission Set of a specific User ID
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SinglePermissionSetsItem'
          example:
            success: true
            data:
              - id: 2
                name: Regular user
                assignment_count: 3
                contents:
                  - can_add_products
                  - can_bulk_edit_items
                  - can_change_visibility_of_items
                  - can_delete_activities
                  - can_edit_products
                  - can_edit_shared_filters
                  - can_export_data_from_lists
                  - can_see_deals_list_summary
                  - can_see_other_users
                  - can_share_filters
                  - can_use_api
                  - can_use_email_tracking
    Assignments:
      description: The Assignments of a specific User ID
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserAssignmentsToPermissionSet'
          example:
            data:
              - id: 3
                user_id: 10
                permission_set_id: 2
                name: Regular user
    NotFound:
      description: 'If the User ID has no assignments, then it will return NotFound'
    DealGetSuccess:
      description: Get a Deal by its ID
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetDeal'
          example:
            success: true
            data:
              id: 1
              creator_user_id:
                id: 9258618
                name: Creator
                email: creator@pipedrive.com
                has_pic: false
                pic_hash: null
                active_flag: true
                value: 9258618
              user_id:
                id: 9258618
                name: Creator
                email: creator@pipedrive.com
                has_pic: false
                pic_hash: null
                active_flag: true
                value: 9258618
              person_id:
                active_flag: true
                name: Person
                email:
                  - label: work
                    value: person@pipedrive.com
                    primary: true
                phone:
                  - label: work
                    value: '37244499911'
                    primary: true
                value: 1101
              org_id:
                name: Organization
                people_count: 2
                owner_id: 9258618
                address: null
                active_flag: true
                cc_email: org@pipedrivemail.com
                value: 5
              stage_id: 2
              title: Deal One
              value: 5000
              currency: EUR
              add_time: '2019-05-29 04:21:51'
              update_time: '2019-11-28 16:19:50'
              stage_change_time: '2019-11-28 15:41:22'
              active: true
              deleted: false
              status: open
              probability: null
              next_activity_date: '2019-11-29'
              next_activity_time: '11:30:00'
              next_activity_id: 128
              last_activity_id: null
              last_activity_date: null
              lost_reason: null
              visible_to: '1'
              close_time: null
              pipeline_id: 1
              won_time: '2019-11-27 11:40:36'
              first_won_time: '2019-11-27 11:40:36'
              lost_time: null
              products_count: 0
              files_count: 0
              notes_count: 2
              followers_count: 0
              email_messages_count: 4
              activities_count: 1
              done_activities_count: 0
              undone_activities_count: 1
              reference_activities_count: 0
              participants_count: 1
              expected_close_date: '2019-06-29'
              last_incoming_mail_time: '2019-05-29 18:21:42'
              last_outgoing_mail_time: '2019-05-30 03:45:35'
              label: null
              stage_order_nr: 2
              person_name: Person
              org_name: Organization
              next_activity_subject: Call
              next_activity_type: call
              next_activity_duration: '00:30:00'
              next_activity_note: Note content
              formatted_value: '€5,000'
              weighted_value: 5000
              formatted_weighted_value: '€5,000'
              weighted_value_currency: EUR
              rotten_time: null
              owner_name: Creator
              cc_email: company+deal1@pipedrivemail.com
              org_hidden: false
              person_hidden: false
              average_time_to_won:
                'y': 0
                m: 0
                d: 0
                h: 0
                i: 20
                s: 49
                total_seconds: 1249
              average_stage_progress: 4.99
              age:
                'y': 0
                m: 6
                d: 14
                h: 8
                i: 57
                s: 26
                total_seconds: 17139446
              stay_in_pipeline_stages:
                times_in_stages:
                  '1': 15721267
                  '2': 1288449
                  '3': 4368
                  '4': 3315
                  '5': 26460
                order_of_stages:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
              last_activity: null
              next_activity: null
            additional_data:
              dropbox_email: company+deal1@pipedrivemail.com
            related_objects:
              user:
                '9258618':
                  id: 9258618
                  name: Creator
                  email: creator@pipedrive.com
                  has_pic: false
                  pic_hash: null
                  active_flag: true
              organization:
                '2':
                  id: 2
                  name: Organization
                  people_count: 2
                  owner_id: 9258618
                  address: 'Mustamäe tee 3a, 10615 Tallinn'
                  active_flag: true
                  cc_email: org@pipedrivemail.com
              person:
                '1101':
                  active_flag: true
                  id: 1101
                  name: Person
                  email:
                    - label: work
                      value: person@pipedrive.com
                      primary: true
                  phone:
                    - label: work
                      value: '3421787767'
                      primary: true
    DealsGetSuccess:
      description: Get all Deals
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetDeals'
          example:
            success: true
            data:
              - id: 1
                creator_user_id:
                  id: 9258618
                  name: Creator
                  email: creator@pipedrive.com
                  has_pic: false
                  pic_hash: null
                  active_flag: true
                  value: 9258618
                user_id:
                  id: 9258618
                  name: Creator
                  email: creator@pipedrive.com
                  has_pic: false
                  pic_hash: null
                  active_flag: true
                  value: 9258618
                person_id:
                  active_flag: true
                  name: Person
                  email:
                    - label: work
                      value: person@pipedrive.com
                      primary: true
                  phone:
                    - label: work
                      value: '37244499911'
                      primary: true
                  value: 1101
                org_id:
                  name: Organization
                  people_count: 2
                  owner_id: 9258618
                  address: 'Mustamäe tee 3a, 10615 Tallinn'
                  active_flag: true
                  cc_email: org@pipedrivemail.com
                  value: 5
                stage_id: 2
                title: Deal One
                value: 5000
                currency: EUR
                add_time: '2019-05-29 04:21:51'
                update_time: '2019-11-28 16:19:50'
                stage_change_time: '2019-11-28 15:41:22'
                active: true
                deleted: false
                status: open
                probability: null
                next_activity_date: '2019-11-29'
                next_activity_time: '11:30:00'
                next_activity_id: 128
                last_activity_id: null
                last_activity_date: null
                lost_reason: null
                visible_to: '1'
                close_time: null
                pipeline_id: 1
                won_time: '2019-11-27 11:40:36'
                first_won_time: '2019-11-27 11:40:36'
                lost_time: null
                products_count: 0
                files_count: 0
                notes_count: 2
                followers_count: 0
                email_messages_count: 4
                activities_count: 1
                done_activities_count: 0
                undone_activities_count: 1
                reference_activities_count: 0
                participants_count: 1
                expected_close_date: '2019-06-29'
                last_incoming_mail_time: '2019-05-29 18:21:42'
                last_outgoing_mail_time: '2019-05-30 03:45:35'
                label: null
                stage_order_nr: 2
                person_name: Person
                org_name: Organization
                next_activity_subject: Call
                next_activity_type: call
                next_activity_duration: '00:30:00'
                next_activity_note: Note content
                formatted_value: '€5,000'
                weighted_value: 5000
                formatted_weighted_value: '€5,000'
                weighted_value_currency: EUR
                rotten_time: null
                owner_name: Creator
                cc_email: company+deal1@pipedrivemail.com
                org_hidden: false
                person_hidden: false
            related_objects:
              user:
                '9258618':
                  id: 9258618
                  name: Creator
                  email: creator@pipedrive.com
                  has_pic: false
                  pic_hash: null
                  active_flag: true
              organization:
                '5':
                  id: 5
                  name: Organization
                  people_count: 2
                  owner_id: 9258618
                  address: 'Mustamäe tee 3a, 10615 Tallinn'
                  active_flag: true
                  cc_email: org@pipedrivemail.com
              person:
                '1101':
                  active_flag: true
                  id: 1101
                  name: Person
                  email:
                    - label: work
                      value: person@pipedrive.com
                      primary: true
                  phone:
                    - label: work
                      value: '3421787767'
                      primary: true
            additional_data:
              pagination:
                start: 0
                limit: 100
                more_items_in_collection: false
                next_start: 1
    AddProductToDealSuccess:
      description: Add a Product to the Deal
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetAddProductAttachementDetails'
          example:
            success: true
            data:
              id: 1
              company_id: 123
              deal_id: 456
              order_nr: 1
              product_id: 789
              product_variation_id: 555
              item_price: 300
              discount_percentage: 5
              duration: 1
              duration_unit: null
              sum_no_discount: 0
              sum: 2850
              currency: USD
              enabled_flag: true
              add_time: '2019-11-27 11:40:36'
              last_edit: null
              comments: This is a product comment
              active_flag: true
              tax: 10
              name: Product name
              quantity: 5
              product_attachment_id: 12
    UpdateProductDetailsSuccess:
      description: Update Product attachment details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetProductAttachementDetails'
          example:
            success: true
            data:
              id: 1
              company_id: 123
              deal_id: 456
              order_nr: 1
              product_id: 789
              product_variation_id: 555
              item_price: 300
              discount_percentage: 5
              duration: 1
              duration_unit: null
              sum_no_discount: 0
              sum: 2850
              currency: USD
              enabled_flag: true
              add_time: '2019-11-27 11:40:36'
              last_edit: null
              comments: This is a product comment
              active_flag: true
              tax: 10
              name: Product name
              quantity: 5
    DeleteMultipleDealsSuccess:
      description: Delete multiple deals in bulk
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteMultipleDeals'
          example:
            success: true
            data:
              id:
                - 123
                - 456
    DeleteDealSuccess:
      description: Delete a Deal
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteDeal'
          example:
            success: true
            data:
              id: 123
    DeleteDealFollowerSuccess:
      description: Delete a Follower from a Deal
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteDealFollower'
          example:
            success: true
            data:
              id: 123
    DeleteDealParticipantSuccess:
      description: Delete a Participant from a Deal
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteDealParticipant'
          example:
            success: true
            data:
              id: 123
    DeleteDealProductSuccess:
      description: Delete an attached Product from a Deal
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteDealProduct'
          example:
            success: true
            data:
              id: 123
              product_attachment_id: 123
    DealsGetByNameSuccess:
      description: Get Deals by name
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetDealsByName'
          example:
            success: true
            data:
              - id: 1
                title: Deal One
                user_id: 9258618
                visible_to: '3'
                status: open
                value: 100
                currency: USD
                person_name: Person
                person_id: 10
                organization_name: Organization
                organization_id: 14
                formatted_value: US$100
                cc_email: company+deal38@pipedrivemail.com
            additional_data:
              pagination:
                start: 0
                limit: 100
                more_items_in_collection: false
    DealSummaryGetSuccess:
      description: Get the summary of the Deals
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetDealsSummary'
          example:
            success: true
            data:
              values_total:
                EUR:
                  value: 10
                  count: 2
                  value_converted: 11.1
                  value_formatted: €10
                  value_converted_formatted: US$11.10
                USD:
                  value: 30
                  count: 3
                  value_converted: 30
                  value_formatted: US$30
                  value_converted_formatted: US$3
              weighted_values_total:
                EUR:
                  value: 10
                  count: 2
                  value_formatted: €10
                USD:
                  value: 30
                  count: 3
                  value_formatted: US$30
              total_count: 5
              total_currency_converted_value: 41.1
              total_weighted_currency_converted_value: 41.1
              total_currency_converted_value_formatted: US$41.1
              total_weighted_currency_converted_value_formatted: US$41.1
    DealsTimelineGetSuccess:
      description: 'Get open and won Deals, grouped by the defined interval of time'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetDealsTimeline'
          example:
            success: true
            data:
              - period_start: '2019-12-01 00:00:00'
                period_end: '2019-12-31 23:59:59'
                deals:
                  - id: 1
                    creator_user_id: 9258618
                    user_id: 9258618
                    person_id: 1101
                    org_id: 5
                    stage_id: 2
                    title: Deal One
                    value: 5000
                    currency: EUR
                    add_time: '2019-05-29 04:21:51'
                    update_time: '2019-11-28 16:19:50'
                    stage_change_time: '2019-11-28 15:41:22'
                    active: true
                    deleted: false
                    status: open
                    probability: null
                    next_activity_date: '2019-11-29'
                    next_activity_time: '11:30:00'
                    next_activity_id: 128
                    last_activity_id: null
                    last_activity_date: null
                    lost_reason: null
                    visible_to: '1'
                    close_time: null
                    pipeline_id: 1
                    won_time: '2019-11-27 11:40:36'
                    first_won_time: '2019-11-27 11:40:36'
                    lost_time: null
                    products_count: 0
                    files_count: 0
                    notes_count: 2
                    followers_count: 0
                    email_messages_count: 4
                    activities_count: 1
                    done_activities_count: 0
                    undone_activities_count: 1
                    reference_activities_count: 0
                    participants_count: 1
                    expected_close_date: '2019-06-29'
                    last_incoming_mail_time: '2019-05-29 18:21:42'
                    last_outgoing_mail_time: '2019-05-30 03:45:35'
                    label: null
                    stage_order_nr: 2
                    person_name: Person
                    org_name: Organization
                    next_activity_subject: Call
                    next_activity_type: call
                    next_activity_duration: '00:30:00'
                    next_activity_note: Note content
                    formatted_value: '€5,000'
                    weighted_value: 5000
                    formatted_weighted_value: '€5,000'
                    weighted_value_currency: EUR
                    rotten_time: null
                    owner_name: Creator
                    cc_email: company+deal1@pipedrivemail.com
                    org_hidden: false
                    person_hidden: false
                totals:
                  count: 2
                  values:
                    EUR: 100
                    USD: 220
                  weighted_values:
                    EUR: 100
                    USD: 2200
                  open_count: 1
                  open_values:
                    EUR: 100
                  weighted_open_values:
                    EUR: 100
                  won_count: 1
                  won_values:
                    USD: 2200
    MailThreadGetSuccess:
      description: Get mail threads
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MailThread'
          example:
            success: true
            data:
              - id: 1
                parties:
                  to:
                    - id: 2
                      name: ''
                      latest_sent: false
                      email_address: example@test.com
                      message_time: 1574677850000
                      linked_person_id: 3
                      linked_person_name: Tester
                      linked_organization_id: null
                      mail_message_party_id: 5318
                  from:
                    - id: 3
                      name: ''
                      latest_sent: false
                      email_address: example@test.com
                      message_time: 1574677850000
                      linked_person_id: 2
                      linked_person_name: Tester
                      linked_organization_id: null
                      mail_message_party_id: 5318
                drafts_parties: []
                folders:
                  - inbox
                account_id: 123412jhfsaa221
                user_id: 232
                version: 9
                subject: Example
                snippet: Example Snippet
                snippet_draft: null
                snippet_sent: ''
                has_attachments_flag: 1
                has_inline_attachments_flag: 1
                has_real_attachments_flag: 0
                has_draft_flag: 0
                has_sent_flag: 0
                archived_flag: 0
                deleted_flag: 0
                shared_flag: 1
                synced_flag: 1
                external_deleted_flag: 0
                smart_bcc_flag: 0
                first_message_to_me_flag: 1
                mail_link_tracking_enabled_flag: 0
                last_message_timestamp: '2019-11-20T20:20:46.000Z'
                first_message_timestamp: '2019-11-20T17:40:46.000Z'
                last_message_sent_timestamp: null
                last_message_received_timestamp: '2019-11-20T20:20:46.000Z'
                add_time: '2019-11-20T17:40:59.000Z'
                update_time: '2019-11-20T20:21:22.000Z'
                deal_id: null
                deal_status: null
                write_flag: true
                all_messages_sent_flag: 0
    MailThreadGetOneSuccess:
      description: Get mail threads
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MailThreadOne'
          example:
            success: true
            data:
              id: 1
              parties:
                - to:
                    id: 2
                    name: ''
                    latest_sent: false
                    email_address: example@test.com
                    message_time: 1574677850000
                    linked_person_id: 3
                    linked_person_name: Tester
                    linked_organization_id: null
                    mail_message_party_id: 5318
                - from:
                    id: 3
                    name: ''
                    latest_sent: false
                    email_address: example@test.com
                    message_time: 1574677850000
                    linked_person_id: 2
                    linked_person_name: Tester
                    linked_organization_id: null
                    mail_message_party_id: 5318
              drafts_parties: []
              folders:
                - inbox
              account_id: 123412jhfsaa221
              user_id: 232
              version: 9
              subject: Example
              snippet: Example Snippet
              snippet_draft: null
              snippet_sent: ''
              has_attachments_flag: 1
              has_inline_attachments_flag: 1
              has_real_attachments_flag: 0
              has_draft_flag: 0
              has_sent_flag: 0
              archived_flag: 0
              deleted_flag: 0
              shared_flag: 1
              synced_flag: 1
              external_deleted_flag: 0
              smart_bcc_flag: 0
              first_message_to_me_flag: 1
              mail_link_tracking_enabled_flag: 0
              last_message_timestamp: '2019-11-20T20:20:46.000Z'
              first_message_timestamp: '2019-11-20T17:40:46.000Z'
              last_message_sent_timestamp: null
              last_message_received_timestamp: '2019-11-20T20:20:46.000Z'
              add_time: '2019-11-20T17:40:59.000Z'
              update_time: '2019-11-20T20:21:22.000Z'
              deal_id: null
              deal_status: null
              write_flag: true
              all_messages_sent_flag: 0
    MailThreadGetMailMessagesSuccess:
      description: Get mail messages from thread
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MailThreadMessages'
          example:
            success: true
            data:
              - id: 1
                from:
                  - id: 1
                    email_address: example@email.com
                    name: Example Message
                    linked_person_id: 4
                    linked_person_name: ''
                    mail_message_party_id: 3
                to:
                  - id: 4
                    email_address: example@email.com
                    name: Example Message
                    linked_person_id: 1
                    linked_person_name: ''
                    mail_message_party_id: 3
                cc: []
                bcc: []
                body_url: 'http://this_would_be_the_link.cloudfront.net/'
                account_id: iuaousdp77asdadah
                user_id: 777
                mail_thread_id: 2
                subject: The Subject
                snippet: Snippet from the email
                mail_tracking_status: null
                mail_link_tracking_enabled_flag: 0
                read_flag: 1
                draft: null
                draft_flag: 0
                synced_flag: 1
                deleted_flag: 0
                has_body_flag: 1
                sent_flag: 0
                sent_from_pipedrive_flag: 0
                smart_bcc_flag: 0
                message_time: '2019-08-07T21:15:08.000Z'
                add_time: '2019-08-07T21:34:35.000Z'
                update_time: '2019-08-07T21:34:35.000Z'
                has_attachments_flag: 0
                has_inline_attachments_flag: 0
                has_real_attachments_flag: 0
                write_flag: true
    MailThreadDeleteSuccess:
      description: Marks mail thread as deleted.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MailThreadDelete'
          example:
            data: null
            success: true
            statusCode: 2000
            statusText: Success
            service: email-api
    MailThreadPutSuccess:
      description: Updates the properties of a mail thread.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MailThreadPut'
          example:
            success: true
            data:
              - id: 1
                folders:
                  - inbox
                account_id: 12123qwaesda1
                user_id: 9
                version: 13
                subject: '[EXAMPLE] Subject'
                snippet: '[EXAMPLE] Snippet'
                snippet_draft: null
                snippet_sent: ''
                message_count: 7
                read_flag: 0
                mail_tracking_status: null
                has_attachments_flag: 1
                has_inline_attachments_flag: 1
                has_real_attachments_flag: 0
                has_draft_flag: 0
                has_sent_flag: 0
                archived_flag: 0
                deleted_flag: 0
                shared_flag: 1
                synced_flag: 1
                external_deleted_flag: 0
                smart_bcc_flag: 0
                first_message_to_me_flag: 1
                mail_link_tracking_enabled_flag: 0
                last_message_timestamp: '2019-11-25T10:30:50.000Z'
                first_message_timestamp: '2019-11-25T08:40:50.000Z'
                last_message_sent_timestamp: null
                last_message_received_timestamp: '2019-11-25T10:30:50.000Z'
                add_time: '2019-11-25T08:41:10.000Z'
                update_time: '2019-11-25T10:31:34.000Z'
                deal_id: null
                deal_status: null
                write_flag: true
                all_messages_sent_flag: 0
    NotesGetSuccess:
      description: Get all Notes
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetNotes'
          example:
            success: true
            data:
              - id: 1
                active_flag: true
                add_time: '2019-12-09 13:59:21'
                content: abc
                deal:
                  title: Deal title
                deal_id: 1
                last_update_user_id: 1
                org_id: 1
                organization:
                  name: Organization name
                person:
                  name: Person name
                person_id: 1
                pinned_to_deal_flag: true
                pinned_to_organization_flag: false
                pinned_to_person_flag: false
                update_time: '2019-12-09 14:26:11'
                user:
                  email: user@email.com
                  icon_url: 'https://iconurl.net/profile_120x120_123.jpg'
                  is_you: true
                  name: User Name
                user_id: 1
            additional_data:
              limit: 100
              more_items_in_collection: false
              start: 0
    NoteGetPostPutSuccess:
      description: 'Add, update or get a Note'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostNote'
          example:
            success: true
            data:
              id: 1
              active_flag: true
              add_time: '2019-12-09 13:59:21'
              content: abc
              deal:
                title: Deal title
              deal_id: 1
              last_update_user_id: 1
              org_id: 1
              organization:
                name: Organization name
              person:
                name: Person name
              person_id: 1
              pinned_to_deal_flag: true
              pinned_to_organization_flag: false
              pinned_to_person_flag: false
              update_time: '2019-12-09 14:26:11'
              user:
                email: user@email.com
                icon_url: 'https://iconurl.net/profile_120x120_123.jpg'
                is_you: true
                name: User Name
              user_id: 1
    NoteDeleteSuccess:
      description: Delete a Note
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteNote'
          example:
            success: true
            data: true
    GlobalMessagesGetSuccess:
      description: Get all Global Messages
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GlobalMessageGet'
          example:
            success: true
            data:
              - id: 7473816
                user_id: 10378031
                company_id: 735263
                type_info:
                  message_type: trial_expiration_due
                  dismissible_flag: 0
                  priority: 0
                user_data: {}
                html: '<span>Your company''s trial is about to expire. To continue using Pipedrive after 6 September 2019, please <a href="/settings/change_billing"> enter your billing details </a></span>'
            handle_time: 0.0016720294952392578
            _req_time_ctx_ms: {}
    GlobalMessageDeleteSuccess:
      description: Removes a Global Message by ID
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GlobalMessageDelete'
          example:
            success: true
            data:
              id: 7474312
              user_id: 10378031
              company_id: 735263
              type_info:
                message_type: failed_google_token
                dismissible_flag: 1
                priority: 6
              user_data: {}
              html: '<span>Your Google authorization has expired.</span> <a href="https://app.pipedrive.dev/settings/personal/google"><span>Please reconnect</span></a>'
            handle_time: 0.11787199974060059
            _req_time_ctx_ms: {}
  schemas:
    FilterType:
      type: string
      enum:
        - deals
        - org
        - people
        - products
        - activity
    IconKey:
      type: string
      description: Icon graphic to use for representing this activity type.
      enum:
        - task
        - email
        - meeting
        - deadline
        - call
        - lunch
        - calendar
        - downarrow
        - document
        - smartphone
        - camera
        - scissors
        - cogs
        - bubble
        - uparrow
        - checkbox
        - signpost
        - shuffle
        - addressbook
        - linegraph
        - picture
        - car
        - world
        - search
        - clip
        - sound
        - brush
        - key
        - padlock
        - pricetag
        - suitcase
        - finish
        - plane
        - loop
        - wifi
        - truck
        - cart
        - bulb
        - bell
        - presentation
    FieldType:
      type: object
      required:
        - field_type
      properties:
        field_type:
          type: string
          enum:
            - varchar
            - varchar_auto
            - text
            - double
            - monetary
            - date
            - set
            - enum
            - user
            - org
            - people
            - phone
            - time
            - timerange
            - daterange
          description: 'Type of the field.<dl class="fields-list"><dt>varchar</dt><dd>Text (up to 255 characters)</dd><dt>varchar_auto</dt><dd>Autocomplete text (up to 255 characters)</dd><dt>text</dt><dd>Long text (up to 65k characters)</dd><dt>double</dt><dd>Numeric value</dd><dt>monetary</dt><dd>Monetary field (has a numeric value and a currency value)</dd><dt>date</dt><dd>Date (format YYYY-MM-DD)</dd><dt>set</dt><dd>Options field with a possibility of having multiple chosen options</dd><dt>enum</dt><dd>Options field with a single possible chosen option</dd><dt>user</dt><dd>User field (contains a user ID of another Pipedrive user)</dd><dt>org</dt><dd>Organization field (contains an organization ID which is stored on the same account)</dd><dt>people</dt><dd>Person field (contains a person ID which is stored on the same account)</dd><dt>phone</dt><dd>Phone field (up to 255 numbers and/or characters)</dd><dt>time</dt><dd>Time field (format HH:MM:SS)</dd><dt>timerange</dt><dd>Time-range field (has a start time and end time value, both HH:MM:SS)</dd><dt>daterange</dt><dd>Date-range field (has a start date and end date value, both YYYY-MM-DD)</dd></dl>'
    IntegerId:
      type: integer
    NumberBoolean:
      type: number
      enum:
        - 0
        - 1
    NumberBooleanDefault0:
      allOf:
        - $ref: '#/components/schemas/NumberBoolean'
        - type: number
          default: 0
    NumberBooleanDefault1:
      allOf:
        - $ref: '#/components/schemas/NumberBoolean'
        - type: number
          default: 1
    RequestSuccessBoolean:
      type: boolean
      description: If the request was successful or not
    ResponseSuccessBoolean:
      type: boolean
      description: If the response is successful or not
    MailMessage:
      allOf:
        - $ref: '#/components/schemas/MailServiceBaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/MailMessageData'
    MailMessageData:
      type: object
      properties:
        id:
          description: ID of the mail message.
          type: integer
        from:
          type: array
          description: The array of mail message sender (object)
          items:
            $ref: '#/components/schemas/MailParticipant'
        to:
          type: array
          description: The array of mail message receiver (object)
          items:
            $ref: '#/components/schemas/MailParticipant'
        cc:
          type: array
          description: The array of mail message copies (object)
          items:
            $ref: '#/components/schemas/MailParticipant'
        bcc:
          type: array
          description: The array of mail message blind copies (object)
          items:
            $ref: '#/components/schemas/MailParticipant'
        body_url:
          type: string
          description: The mail message body URL
        account_id:
          type: string
          description: The connection account ID
        user_id:
          type: integer
          description: ID of the user whom mail message will be assigned to
        mail_thread_id:
          type: integer
          description: ID of the mail message thread
        subject:
          type: string
          description: The subject of mail message
        snippet:
          type: string
          description: The snippet of mail message. Snippet length is up to 225 characters.
        mail_tracking_status:
          type: string
          nullable: true
          description: The status of tracking mail message. Value is null if tracking is not enabled.
          enum:
            - opened
            - not opened
        mail_link_tracking_enabled_flag:
          description: Whether the link tracking in mail message body is enabled.
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
        read_flag:
          description: Whether the mail message is read or not by the user
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
        draft:
          type: string
          description: 'If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise null.'
        draft_flag:
          description: Whether the mail message is a draft or not
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
        synced_flag:
          description: Whether the mail message is synced with the provider or not
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
        deleted_flag:
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
          description: Whether the mail message is deleted or not
        has_body_flag:
          description: Whether the mail message has a body or not
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
        sent_flag:
          description: Whether the mail message has been sent or not
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
        sent_from_pipedrive_flag:
          description: Whether the mail message has been sent from Pipedrive app or not
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
        smart_bcc_flag:
          description: Whether the mail message has been created by Smart Email BCC feature or not
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
        message_time:
          type: string
          format: date
          description: Creation or receival time of the mail message
        add_time:
          type: string
          format: date
          description: The insertion into the database time of the mail message
        update_time:
          type: string
          format: date
          description: The updating time in the database of the mail message
        has_attachments_flag:
          description: Whether the mail message has an attachment or not
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
        has_inline_attachments_flag:
          description: Whether the mail message has an inline attachment or not
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
        has_real_attachments_flag:
          description: Whether the mail message has an attachment (which is not inline) or not
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
        write_flag:
          type: boolean
          description: We strongly advise you to avoid the use of this property. We will soon deprecate this property.
    MailParticipant:
      type: object
      properties:
        id:
          description: ID of the mail participant
          type: integer
        email_address:
          description: Mail address of the mail participant
          type: string
        name:
          description: Name of the mail participant
          type: string
        linked_person_id:
          description: ID of the linked person to the mail message
          type: integer
        linked_person_name:
          description: Name of the linked person to the mail message
          type: string
        mail_message_party_id:
          description: ID of the mail message participant
          type: integer
    MailServiceBaseResponse:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        statusCode:
          description: The email service specific status code and it is returned through the response body.
          type: integer
        statusText:
          description: The status text of the response.
          type: string
        service:
          description: The service name of the response.
    Activity:
      type: object
      required:
        - subject
        - type
      properties:
        subject:
          description: Subject of the activity
          type: string
        done:
          allOf:
            - $ref: '#/components/schemas/NumberBoolean'
            - description: 'Whether the activity is done or not. 0 = Not done, 1 = Done'
        type:
          description: Type of the activity. This is in correlation with the key_string parameter of ActivityTypes.
          type: string
        due_date:
          description: 'Due date of the activity. Format: YYYY-MM-DD'
          type: string
          format: date
        due_time:
          description: 'Due time of the activity in UTC. Format: HH:MM'
          type: string
        duration:
          description: 'Duration of the activity. Format: HH:MM'
          type: string
        user_id:
          description: 'ID of the user whom the activity will be assigned to. If omitted, the activity will be assigned to the authorized user.'
          type: integer
        deal_id:
          description: ID of the deal this activity will be associated with
          type: integer
        person_id:
          description: ID of the person this activity will be associated with
          type: integer
        participants:
          description: 'List of multiple persons (participants) this activity will be associated with. If omitted, single participant from person_id field is used. It requires a structure as follows: [{"person_id":1,"primary_flag":true}]'
          type: string
        org_id:
          description: ID of the organization this activity will be associated with
          type: integer
        note:
          description: Note of the activity (HTML format)
          type: string
    BasicDeal:
      type: object
      properties:
        title:
          type: string
          description: Deal title
        value:
          type: string
          description: 'Value of the deal. If omitted, value will be set to 0.'
        currency:
          type: string
          description: 'Currency of the deal. Accepts a 3-character currency code. If omitted, currency will be set to the default currency of the authorized user.'
        user_id:
          type: integer
          description: 'ID of the user who will be marked as the owner of this deal. If omitted, the authorized user ID will be used.'
        person_id:
          type: integer
          description: ID of the person this deal will be associated with
        org_id:
          type: integer
          description: ID of the organization this deal will be associated with
        stage_id:
          type: integer
          description: 'ID of the stage this deal will be placed in a pipeline (note that you can''t supply the ID of the pipeline as this will be assigned automatically based on stage_id). If omitted, the deal will be placed in the first stage of the default pipeline.'
        status:
          type: string
          enum:
            - open
            - won
            - lost
            - deleted
          description: 'open = Open, won = Won, lost = Lost, deleted = Deleted. If omitted, status will be set to open.'
        probability:
          type: number
          description: Deal success probability percentage. Used/shown only when deal_probability for the pipeline of the deal is enabled.
        lost_reason:
          type: string
          description: Optional message about why the deal was lost (to be used when status=lost)
        visible_to:
          allOf:
            - $ref: '#/components/schemas/VisibleTo'
          description: 'Visibility of the deal. If omitted, visibility will be set to the default visibility setting of this item type for the authorized user.<dl class="fields-list"><dt>1</dt><dd>Owner &amp; followers (private)</dd><dt>3</dt><dd>Entire company (shared)</dd></dl>'
    VisibleTo:
      type: string
      enum:
        - '1'
        - '3'
    NewDeal:
      allOf:
        - $ref: '#/components/schemas/BasicDeal'
        - type: object
          required:
            - title
          properties:
            add_time:
              type: string
              description: 'Optional creation date & time of the deal in UTC. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS'
    DeleteMultipleDeals:
      allOf:
        - type: object
          properties:
            success:
              $ref: '#/components/schemas/RequestSuccessBoolean'
            data:
              type: object
              properties:
                id:
                  type: array
                  items:
                    type: integer
                  description: The list of deleted Deals IDs
    GetAddedDeal:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        data:
          description: The Deal object
          allOf:
            - $ref: '#/components/schemas/DealNonStrictModeFields'
            - $ref: '#/components/schemas/BaseDeal'
        additional_data:
          type: object
          properties:
            matches_filters:
              description: The array of filter ID's with what this added Deal matches
              type: array
              items:
                type: integer
        related_objects:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/DealUserData'
            organization:
              $ref: '#/components/schemas/DealOrganizationData'
            person:
              $ref: '#/components/schemas/DealPersonData'
    GetDuplicatedDeal:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        data:
          description: The Deal object
          allOf:
            - $ref: '#/components/schemas/DealStrictModeFields'
            - $ref: '#/components/schemas/BaseDeal'
    GetMergedDeal:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        data:
          allOf:
            - $ref: '#/components/schemas/DealStrictModeFields'
            - $ref: '#/components/schemas/BaseDeal'
            - type: object
              properties:
                merge_what_id:
                  type: integer
                  description: The Deal ID of the Deal which the original Deal was merged with
    AddedDealFollower:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        data:
          type: object
          properties:
            user_id:
              type: integer
              description: The User ID who added the Follower
            id:
              type: integer
              description: The Follower ID
            deal_id:
              type: integer
              description: The ID of the Deal which the Follower was added to
            add_time:
              type: string
              description: The date and time when the Deal Follower was added
    DeleteDeal:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/RequestSuccessBoolean'
        data:
          type: object
          properties:
            id:
              allOf:
                - $ref: '#/components/schemas/IntegerId'
              description: The ID of the Deal that was deleted
    DeleteDealFollower:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/RequestSuccessBoolean'
        data:
          type: object
          properties:
            id:
              allOf:
                - $ref: '#/components/schemas/IntegerId'
              description: The ID of the Deal Follower that was deleted
    DeleteDealParticipant:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/RequestSuccessBoolean'
        data:
          type: object
          properties:
            id:
              allOf:
                - $ref: '#/components/schemas/IntegerId'
              description: The ID of the Deal Participant that was deleted
    DeleteDealProduct:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/RequestSuccessBoolean'
        data:
          type: object
          properties:
            id:
              allOf:
                - $ref: '#/components/schemas/IntegerId'
              description: The ID of an attached Product that was deleted from the Deal
            product_attachment_id:
              type: integer
              description: The ID of an attached Product that was deleted from the Deal
    BasicDealProduct:
      type: object
      properties:
        item_price:
          type: number
          description: Price at which this product will be added to the deal
        quantity:
          type: integer
          description: Quantity – e.g. how many items of this product will be added to the deal
        discount_percentage:
          type: number
          default: 0
          description: 'Discount %. If omitted, will be set to 0'
        duration:
          type: number
          default: 1
          description: 'Duration of the product (when product durations are not enabled for the company or if omitted, defaults to 1)'
        product_variation_id:
          type: integer
          description: 'ID of the product variation to use. When omitted, no variation will be used.'
        comments:
          type: string
          description: Any textual comment associated with this product-deal attachment. Visible and editable in the application UI.
        enabled_flag:
          allOf:
            - $ref: '#/components/schemas/NumberBoolean'
          description: 'Whether the product is enabled on the deal or not. This makes it possible to add products to a deal with specific price and discount criteria - but keep them disabled, which refrains them from being included in deal price calculation. When omitted, the product will be marked as enabled by default.'
    NewDealProduct:
      allOf:
        - $ref: '#/components/schemas/BasicDealProduct'
        - type: object
          required:
            - product_id
            - item_price
            - quantity
          properties:
            product_id:
              type: integer
              description: ID of the product that will be attached
    BaseCurrency:
      type: object
      properties:
        id:
          type: integer
          description: ID of the Currency
        code:
          type: string
          description: Code of the Currency
        name:
          type: string
          description: Name of the Currency
        decimal_points:
          type: integer
          description: The amount of decimal points of the Currency
        symbol:
          type: string
          description: Symbol of the Currency
        active_flag:
          type: boolean
          description: Whether the Currency is active or not
        is_custom_flag:
          type: boolean
          description: Whether the Currency is a custom one or not
    Currencies:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        data:
          type: array
          description: The array of Currencies
          items:
            $ref: '#/components/schemas/BaseCurrency'
    Note:
      type: object
      required:
        - content
      properties:
        content:
          type: string
          description: Content of the note in HTML format. Subject to sanitization on the back-end.
        user_id:
          type: integer
          description: ID of the user who will be marked as the author of this note. Only an admin can change the author.
        deal_id:
          type: integer
          description: ID of the deal the note will be attached to.
        person_id:
          type: integer
          description: ID of the person this note will be attached to.
        org_id:
          type: integer
          description: ID of the organization this note will be attached to.
        add_time:
          type: string
          description: 'Optional creation date & time of the Note in UTC. Can be set in the past or in the future. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS'
        pinned_to_deal_flag:
          allOf:
            - $ref: '#/components/schemas/NumberBoolean'
          description: 'If set, then results are filtered by note to deal pinning state (deal_id is also required).'
        pinned_to_organization_flag:
          allOf:
            - $ref: '#/components/schemas/NumberBoolean'
          description: 'If set, then results are filtered by note to organization pinning state (org_id is also required).'
        pinned_to_person_flag:
          allOf:
            - $ref: '#/components/schemas/NumberBoolean'
          description: 'If set, then results are filtered by note to person pinning state (person_id is also required).'
    GetNotes:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/RequestSuccessBoolean'
        data:
          type: array
          description: The array of Notes
          items:
            $ref: '#/components/schemas/BaseNote'
        additional_data:
          $ref: '#/components/schemas/AdditionalData'
    PostNote:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/RequestSuccessBoolean'
        data:
          $ref: '#/components/schemas/BaseNote'
    DeleteNote:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/RequestSuccessBoolean'
        data:
          $ref: '#/components/schemas/RequestSuccessBoolean'
    BaseNoteDealTitle:
      type: object
      description: The Deal this Note is attached to
      properties:
        title:
          type: string
          description: The title of the Deal this Note is attached to
    BaseNote:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the Note
        active_flag:
          type: boolean
          description: If Note is active or deleted
        add_time:
          type: string
          description: The creation date and time of the Note
        content:
          type: string
          description: Content of the Note in HTML format. Subject to sanitization on the back-end.
        deal:
          $ref: '#/components/schemas/BaseNoteDealTitle'
        deal_id:
          type: integer
          description: The ID of the Deal the Note is attached to
        last_update_user_id:
          type: integer
          description: The ID of the User who updated the Note last
        org_id:
          type: integer
          description: The ID of the Organization this Note is attached to
        organization:
          type: object
          description: The Organization this Note is attached to
          properties:
            name:
              type: string
              description: The name of the Organization this Note is attached to
        person:
          type: object
          description: The Person this Note is attached to
          properties:
            name:
              type: string
              description: The name of the Person this Note is attached to
        person_id:
          type: integer
          description: The ID of the Person this Note is attached to
        pinned_to_deal_flag:
          type: boolean
          description: 'If true, then the results are filtered by Note to Deal pinning state.'
        pinned_to_organization_flag:
          type: boolean
          description: 'If true, then the results are filtered by Note to Organization pinning state.'
        pinned_to_person_flag:
          type: boolean
          description: 'If true, then the results are filtered by Note to Person pinning state.'
        update_time:
          type: string
          description: The last updated date and time of the Note
        user:
          $ref: '#/components/schemas/NoteCreatorUser'
        user_id:
          type: integer
          description: The ID of the Note creator
    NoteCreatorUser:
      type: object
      description: The User who created the Note
      properties:
        email:
          type: string
          description: The Email of the Note creator
        icon_url:
          type: string
          description: The URL of the Note creator avatar picture
        is_you:
          type: boolean
          description: If the Note is created by you or not
        name:
          type: string
          description: The name of the Note creator
    AdditionalData:
      description: The additional data of the list
      type: object
      properties:
        start:
          type: integer
          description: The pagination start
        limit:
          type: integer
          description: Items shown per page
        more_items_in_collection:
          type: boolean
          description: If there are more list items in the collection than displayed or not
    AdditionalDataWithPaginationDetails:
      type: object
      properties:
        pagination:
          description: Pagination details of the list
          type: object
          allOf:
            - $ref: '#/components/schemas/AdditionalData'
            - type: object
              properties:
                next_start:
                  type: integer
                  description: Next pagination start
    BasicGoal:
      type: object
      properties:
        title:
          type: string
          description: Title of the goal.
        assignee:
          type: object
          description: 'Who is this goal assigned to. It requires the following JSON structure: { "id": "1", "type": "person" }. `type` can be either `person`, `company` or `team`. ID of the assignee person, company or team.'
        type:
          type: object
          description: 'Type of the goal. It requires the following JSON structure: { "name": "deals_started", "params": { "pipeline_id": 1 } }. Type can be one of: `deals_won`,`deals_progressed`,`activities_completed`,`activities_added` or `deals_started`. `params` can include `pipeline_id`, `stage_id` or `activity_type_id`. `stage_id` is related to only `deals_progressed` type of goals and `activity_type_id` to `activities_completed` or `activities_added` types of goals. To track goal in all pipelines set `pipeline_id` as `null`.'
        expected_outcome:
          type: object
          description: 'Expected outcome of the goal. Expected outcome can be tracked either by `quantity` or by `sum`. It requires the following JSON structure: { "target": "50", "tracking_metric": "quantity" } or { "target": "50", "tracking_metric": "sum", "currency_id": 1 }. `currency_id` should only be added to `sum` type of goals.'
        duration:
          type: object
          description: 'Date when the goal starts and ends. It requires the following JSON structure: { "start": "2019-01-01", "end": "2022-12-31" }. Date in format of YYYY-MM-DD.'
        interval:
          type: string
          enum:
            - weekly
            - monthly
            - quarterly
            - yearly
          description: 'Date when the goal starts and ends. It requires the following JSON structure: { "start": "2019-01-01", "end": "2022-12-31" }. Date in format of YYYY-MM-DD.'
    NewGoal:
      allOf:
        - $ref: '#/components/schemas/BasicGoal'
        - type: object
          required:
            - type
            - assignee
            - expected_outcome
            - duration
            - interval
    BasicOrganizationField:
      $ref: '#/components/schemas/BasicPersonField'
    NewOrganizationField:
      allOf:
        - $ref: '#/components/schemas/BasicPersonField'
        - $ref: '#/components/schemas/FieldType'
    BasicOrganization:
      type: object
      properties:
        name:
          type: string
          description: Organization name
        owner_id:
          type: integer
          description: 'ID of the user who will be marked as the owner of this organization. When omitted, the authorized user ID will be used.'
        visible_to:
          allOf:
            - $ref: '#/components/schemas/VisibleTo'
          description: 'Visibility of the organization. If omitted, visibility will be set to the default visibility setting of this item type for the authorized user.<dl class=\"fields-list\"><dt>1</dt><dd>Owner &amp; followers (private)</dd><dt>3</dt><dd>Entire company (shared)</dd></dl>'
    NewOrganization:
      allOf:
        - $ref: '#/components/schemas/BasicOrganization'
        - type: object
          required:
            - name
          properties:
            add_time:
              type: string
              description: 'Optional creation date & time of the organization in UTC. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS'
    OrganizationRelationship:
      type: object
      properties:
        org_id:
          type: integer
          description: ID of the base organization for the returned calculated values
        type:
          type: string
          enum:
            - parent
            - related
          description: The type of organization relationship.
        rel_owner_org_id:
          type: integer
          description: 'The owner of this relationship. If type is ''parent'', then the owner is the parent and the linked organization is the daughter.'
        rel_linked_org_id:
          type: integer
          description: 'The linked organization in this relationship. If type is ''parent'', then the linked organization is the daughter.'
    BasicPerson:
      type: object
      properties:
        name:
          type: string
          description: Person name
        owner_id:
          type: integer
          description: 'ID of the user who will be marked as the owner of this person. When omitted, the authorized user ID will be used.'
        org_id:
          type: integer
          description: ID of the organization this person will belong to.
        email:
          type: array
          items:
            type: string
          description: 'Email addresses (one or more) associated with the person, presented in the same manner as received by GET request of a person.'
        phone:
          type: array
          items:
            type: string
          description: 'Phone numbers (one or more) associated with the person, presented in the same manner as received by GET request of a person.'
        visible_to:
          allOf:
            - $ref: '#/components/schemas/VisibleTo'
          description: 'Visibility of the person. If omitted, visibility will be set to the default visibility setting of this item type for the authorized user.<dl class="fields-list"><dt>1</dt><dd>Owner &amp; followers (private)</dd><dt>3</dt><dd>Entire company (shared)</dd></dl>'
    NewPerson:
      allOf:
        - $ref: '#/components/schemas/BasicPerson'
        - type: object
          required:
            - name
          properties:
            add_time:
              type: string
              description: 'Optional creation date & time of the person in UTC. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS'
    BasicPersonField:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the field
        options:
          type: string
          description: 'When field_type is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. All active items must be supplied and already existing items must have their ID supplied. New items only require a label. Example: [{"id":123,"label":"Existing Item"},{"label":"New Item"}]'
    NewPersonField:
      allOf:
        - $ref: '#/components/schemas/BasicPersonField'
        - $ref: '#/components/schemas/FieldType'
    Pipeline:
      type: object
      properties:
        name:
          type: string
          description: Name of the pipeline
        deal_probability:
          allOf:
            - $ref: '#/components/schemas/NumberBoolean'
            - description: Whether deal probability is disabled or enabled for this pipeline.
        order_nr:
          type: integer
          description: Defines pipelines order. First order(order_nr=0) is the default pipeline.
        active:
          allOf:
            - $ref: '#/components/schemas/NumberBoolean'
            - description: Whether this pipeline will be made inactive (hidden) or active
    Product:
      type: object
      properties:
        name:
          type: string
          description: Name of the product.
        code:
          type: string
          description: Product code.
        unit:
          type: string
          description: Unit in which this product is sold
        tax:
          type: number
          description: Tax percentage
          default: 0
        active_flag:
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault1'
          description: Whether this product will be made active or not.
        visible_to:
          allOf:
            - $ref: '#/components/schemas/VisibleTo'
          description: 'Visibility of the product. If omitted, visibility will be set to the default visibility setting of this item type for the authorized user.<dl class="fields-list"><dt>1</dt><dd>Owner &amp; followers (private)</dd><dt>3</dt><dd>Entire company (shared)</dd></dl>'
        owner_id:
          type: integer
          description: 'ID of the user who will be marked as the owner of this product. When omitted, the authorized user ID will be used.'
        prices:
          type: string
          description: 'Array of objects, each containing: currency (string), price (number), cost (number, optional), overhead_cost (number, optional). Note that there can only be one price per product per currency. When ''prices'' is omitted altogether, no prices will be set up for the product.'
    NewFollowerResponse:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        data:
          type: object
          properties:
            user_id:
              type: integer
              description: The ID of the user that was added as Follower
            id:
              type: integer
              description: The ID of the Follower
            product_id:
              type: integer
              description: The ID of the Product
            add_time:
              type: string
              description: 'The Follower creation time. Format: YYYY-MM-DD HH:MM:SS'
    DeleteProductFollowerResponse:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        data:
          type: object
          properties:
            id:
              allOf:
                - $ref: '#/components/schemas/IntegerId'
              description: The ID of removed Follower
    FindProductsByNameResponse:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        data:
          type: object
          properties:
            id:
              type: integer
              description: The ID of the Product
            variation_id:
              type: string
              description: The ID of the price variation of the Product
            name:
              type: string
              description: The name of the Product
            title:
              type: string
              description: The title of the Product
            variation_name:
              type: string
              description: The name of the price variation of the Product
            price:
              type: number
              description: The value corresponding to the Product price
            price_formatted:
              type: string
              description: The Product price with the currency format
        additional_data:
          type: object
          description: Any additional data related to the Products
    BasicProductField:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the field
        options:
          type: string
          description: 'When field_type is either set or enum, possible options must be supplied as a JSON-encoded sequential array, for example: ["red","blue","lilac"]'
    NewProductField:
      allOf:
        - $ref: '#/components/schemas/BasicProductField'
        - type: object
          required:
            - field_type
          properties:
            field_type:
              type: string
              enum:
                - varchar
                - varchar_auto
                - text
                - double
                - monetary
                - date
                - set
                - enum
                - user
                - org
                - people
                - phone
                - time
                - timerange
                - daterange
              description: 'Type of the field.<dl class="fields-list"><dt>varchar</dt><dd>Text (up to 255 characters)</dd><dt>varchar_auto</dt><dd>Autocomplete text (up to 255 characters)</dd><dt>text</dt><dd>Long text (up to 65k characters)</dd><dt>double</dt><dd>Numeric value</dd><dt>monetary</dt><dd>Monetary field (has a numeric value and a currency value)</dd><dt>date</dt><dd>Date (format YYYY-MM-DD)</dd><dt>set</dt><dd>Options field with a possibility of having multiple chosen options</dd><dt>enum</dt><dd>Options field with a single possible chosen option</dd><dt>user</dt><dd>User field (contains a user ID of another Pipedrive user)</dd><dt>org</dt><dd>Organization field (contains an organization ID which is stored on the same account)</dd><dt>people</dt><dd>Person field (contains a product ID which is stored on the same account)</dd><dt>phone</dt><dd>Phone field (up to 255 numbers and/or characters)</dd><dt>time</dt><dd>Time field (format HH:MM:SS)</dd><dt>timerange</dt><dd>Time-range field (has a start time and end time value, both HH:MM:SS)</dd><dt>daterange</dt><dd>Date-range field (has a start date and end date value, both YYYY-MM-DD)</dd></dl>'
    ProductField:
      allOf:
        - $ref: '#/components/schemas/NewProductField'
        - type: object
          properties:
            id:
              type: integer
              description: The ID of the Product Field
            key:
              type: string
              description: The key of the Product Field
            order_nr:
              type: integer
              description: Position (index) of the Product Field in the detail view
            add_time:
              type: string
              description: 'The Product Field creation time. Format: YYYY-MM-DD HH:MM:SS'
            update_time:
              type: string
              description: 'The Product Field last update time. Format: YYYY-MM-DD HH:MM:SS'
            last_updated_by_user_id:
              type: integer
              description: The ID of the last user to update the Product Field
            active_flag:
              type: boolean
              description: Whether or not the Product Field is currently active
            edit_flag:
              type: boolean
              description: Whether or not the Product Field Name and metadata is editable
            add_visible_flag:
              type: boolean
              description: Whether or not the Product Field is visible in the Add Product Modal
            important_flag:
              type: boolean
              description: Whether or not the Product Field is marked as important
            bulk_edit_allowed:
              type: boolean
              description: Whether or not the Product Field data can be edited
            searchable_flag:
              type: boolean
              description: Whether or not the Product Field is searchable
            filtering_allowed:
              type: boolean
              description: Whether or not the Product Field value can be used when filtering searches
            sortable_flag:
              type: boolean
              description: Whether or not the Product Field is sortable
            mandatory_flag:
              type: boolean
              description: Whether or not the Product Field is mandatory when creating products
    GetAllProductFieldsResponse:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        data:
          type: array
          description: Array containing data for all Product Fields
          items:
            $ref: '#/components/schemas/ProductField'
        additional_data:
          type: object
          description: 'Additional data for the Product Field, such as pagination'
    GetProductFieldResponse:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        data:
          allOf:
            - $ref: '#/components/schemas/ProductField'
            - type: object
              description: All data for the Product Field
    DeleteMultipleProductFieldsResponse:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        data:
          type: object
          properties:
            id:
              type: array
              description: Array of all the IDs of the deleted Product Fields
              items:
                type: integer
    DeleteProductFieldResponse:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        data:
          type: object
          properties:
            id:
              allOf:
                - $ref: '#/components/schemas/IntegerId'
              description: The ID of the deleted Product Field
    BaseRole:
      description: Details of the role
      type: object
      properties:
        parent_role_id:
          type: integer
          description: The ID of the parent Role
        name:
          type: string
          description: The name of the Role
    RoleAssignment:
      description: The assignment data of the Role
      allOf:
        - $ref: '#/components/schemas/BaseRole'
        - type: object
          properties:
            user_id:
              type: integer
              description: The User ID
            role_id:
              type: integer
              description: The Role ID
            active_flag:
              type: boolean
              description: Whether the Role is active or not
            type:
              type: string
              description: The assignment type
    SubRole:
      description: The details of the sub-role
      allOf:
        - $ref: '#/components/schemas/BaseRole'
        - type: object
          properties:
            id:
              type: integer
              description: The ID of the Role
            active_flag:
              type: boolean
              description: If the Role is active or not
            assignment_count:
              type: string
              description: The number of Users assigned to this Role
            sub_role_count:
              type: string
              description: The number of sub-roles
    FullRole:
      allOf:
        - $ref: '#/components/schemas/SubRole'
        - type: object
          properties:
            level:
              type: integer
              description: The level of Role in the role hierarchy
    GetRoles:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/FullRole'
              description: The array of Roles
            additional_data:
              $ref: '#/components/schemas/RolesAdditionalData'
    RoleSettings:
      description: The settings for the Role
      type: object
      properties:
        deal_default_visibility:
          type: number
          description: The default visibility level of the Deals for the Role
        org_default_visibility:
          type: number
          description: The default visibility level of the Organizations for the Role
        person_default_visibility:
          type: number
          description: The default visibility level of the People for the Role
        product_default_visibility:
          type: number
          description: The default visibility level of the Products for the Role
        deal_access_level:
          type: number
          description: The access level of the Deals for the Role (only for default Role)
        org_access_level:
          type: number
          description: The access level of the Organizations for the Role (only for default Role)
        person_access_level:
          type: number
          description: The access level of the People for the Role (only for default Role)
        product_access_level:
          type: number
          description: The access level of the Products for the Role (only for default Role)
    RolesAdditionalData:
      description: The additional data in the Role list
      type: object
      properties:
        pagination:
          description: The pagination details in the Role list
          type: object
          properties:
            start:
              type: integer
              description: Pagination start
            limit:
              type: integer
              description: Items shown per page
            more_items_in_collection:
              type: boolean
              description: Whether there are more list items in the collection than displayed
    PostRoles:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                id:
                  allOf:
                    - $ref: '#/components/schemas/IntegerId'
                  description: The ID of the created Role
              description: The response data
    DeleteRole:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                id:
                  allOf:
                    - $ref: '#/components/schemas/IntegerId'
                  description: The ID of the deleted Role
              description: The response data
    GetRole:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/SubRole'
            additional_data:
              type: object
              description: The additional data in the Role
              properties:
                settings:
                  $ref: '#/components/schemas/RoleSettings'
    PutRole:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                id:
                  allOf:
                    - $ref: '#/components/schemas/IntegerId'
                  description: The ID of the updated role
              description: The response data
    DeleteRoleAssignment:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              description: The response data
              properties:
                id:
                  allOf:
                    - $ref: '#/components/schemas/IntegerId'
                  description: The ID of the Role the User was removed from
    GetRoleAssignments:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/RoleAssignment'
              description: The Role assignments
            additional_data:
              $ref: '#/components/schemas/RolesAdditionalData'
    PostRoleAssignment:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                user_id:
                  type: integer
                  description: The ID of the User that was added to the Role
                role_id:
                  type: integer
                  description: The ID of the Role the User was added to
              description: THe response data
    GetRoleSubroles:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/SubRole'
              description: The array of sub-roles
            additional_data:
              $ref: '#/components/schemas/RolesAdditionalData'
    GetRoleSettings:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/RoleSettings'
    PostRoleSettings:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                id:
                  type: integer
                  description: The ID of the Role
                deal_default_visibility:
                  type: number
                  enum:
                    - deal_default_visibility
                    - org_default_visibility
                    - person_default_visibility
                    - product_default_visibility
                  description: The setting
              description: The response data
    Stage:
      type: object
      properties:
        name:
          type: string
          description: Name of the stage
        pipeline_id:
          type: integer
          description: ID of the pipeline to add stage to.
        deal_probability:
          type: integer
          description: Deal success probability percentage. Used/shown when deal weighted values are used
        rotten_flag:
          type: integer
          enum:
            - 0
            - 1
          description: Whether deals in this stage can become rotten.
        rotten_days:
          type: integer
          description: Number of days the deals not updated in this stage would become rotten. Applies only if rotten_flag is set.
    PermissionSets:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/PermissionSetsItem'
              description: The array of Permission Set
    PermissionSetsItem:
      type: object
      properties:
        id:
          type: integer
          description: The ID of User Permission Set
        name:
          type: string
          description: The name of Permission Set
        assignment_count:
          type: integer
          description: The number of Users assigned to this Permission Set
    SinglePermissionSetsItem:
      allOf:
        - $ref: '#/components/schemas/PermissionSetsItem'
        - type: object
          properties:
            contents:
              type: array
              description: A permission assigned to this Permission Set
              items:
                type: string
    UserAssignmentsToPermissionSet:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/UserAssignmentToPermissionSet'
              description: An array of the assignments of the User
    UserAssignmentToPermissionSet:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the assignment of the Permission Set
        user_id:
          type: integer
          description: The ID of the User in the Permission Set
        permission_set_id:
          type: integer
          description: The ID of the Permission Set
        name:
          type: string
          description: The name of the Permission Set
    CreateTeam:
      type: object
      required:
        - name
        - manager_id
      properties:
        name:
          type: string
          description: The Team name
        description:
          type: string
          description: The Team description
        manager_id:
          type: integer
          description: The Team manager ID
        users:
          allOf:
            - $ref: '#/components/schemas/BaseUserIDs'
          description: IDs of the Users that belong to the Team
    UpdateTeam:
      allOf:
        - $ref: '#/components/schemas/CreateTeam'
        - type: object
          properties:
            active_flag:
              allOf:
                - $ref: '#/components/schemas/NumberBoolean'
              description: Flag that indicates if the Team is activated
            deleted_flag:
              allOf:
                - $ref: '#/components/schemas/NumberBoolean'
              description: Flag that indicates if the Team is deleted
    BaseTeam:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: The Team ID
        - $ref: '#/components/schemas/UpdateTeam'
        - type: object
          properties:
            add_time:
              type: string
              description: 'The Team creation time. Format: YYYY-MM-DD HH:MM:SS'
            created_by_user_id:
              type: integer
              description: ID of the User who created the Team
    Teams:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/BaseTeam'
    BaseUserIDs:
      type: array
      items:
        type: integer
      description: List of User IDs
    UserIDs:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/BaseUserIDs'
    BaseUser:
      type: object
      properties:
        id:
          type: integer
          description: The User ID
        name:
          type: string
          description: The User name
        default_currency:
          type: string
          description: The User default currency
        locale:
          type: string
          description: The User locale
        lang:
          type: integer
          description: The User language ID
        email:
          type: string
          description: The User email
        phone:
          type: string
          description: The User phone
        activated:
          type: boolean
          description: Boolean that indicates if the User is activated
        last_login:
          type: string
          description: 'The User last login date and time. Format: YYYY-MM-DD HH:MM:SS'
        created:
          type: string
          description: 'The User creation date and time. Format: YYYY-MM-DD HH:MM:SS'
        modified:
          type: string
          description: 'The User last modification date and time. Format: YYYY-MM-DD HH:MM:SS'
        signup_flow_variation:
          type: string
          nullable: true
          description: The variation of signup flow (if exists). E.g. google
        has_created_company:
          type: boolean
          description: Boolean that indicates if the User has created a Company
        is_admin:
          allOf:
            - $ref: '#/components/schemas/NumberBoolean'
          description: 'Indication if the User is admin (1 = true, 0 = false)'
        active_flag:
          type: boolean
          description: Boolean that indicates if the User is activated
        timezone_name:
          type: string
          description: The User timezone name
        timezone_offset:
          type: string
          description: The User timezone offset
        role_id:
          type: integer
          description: The ID of the User role
        icon_url:
          type: string
          nullable: true
          description: The User icon URL
        is_you:
          type: boolean
          description: 'Boolean that indicates if the requested User is the same which is logged in (in this case, always true)'
    User:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/BaseUser'
    Users:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/BaseUser'
    BaseUserMe:
      allOf:
        - $ref: '#/components/schemas/BaseUser'
        - type: object
          properties:
            company_id:
              type: integer
              description: The User company ID
            company_name:
              type: string
              description: The User company name
            company_domain:
              type: string
              description: The User company domain
            company_country:
              type: string
              description: The User company country
            company_industry:
              type: string
              description: The User company industry
            language:
              type: object
              description: The User language details
              properties:
                language_code:
                  type: string
                  description: The language code. E.g. en
                country_code:
                  type: string
                  description: The country code. E.g. US
    UserMe:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/BaseUserMe'
    UserConnections:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              description: The object of UserConnections
              properties:
                google:
                  type: string
                  description: The third party ID or false in case the ID is not found
    GetDeal:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        data:
          allOf:
            - $ref: '#/components/schemas/DealNonStrictModeFields'
            - $ref: '#/components/schemas/BaseDeal'
            - type: object
              properties:
                average_time_to_won:
                  type: object
                  description: The average time to win the Deal
                  properties:
                    'y':
                      type: integer
                      description: Years
                    m:
                      type: integer
                      description: Months
                    d:
                      type: integer
                      description: Days
                    h:
                      type: integer
                      description: Hours
                    i:
                      type: integer
                      description: Minutes
                    s:
                      type: integer
                      description: Seconds
                    total_seconds:
                      type: integer
                      description: The total time in seconds
                average_stage_progress:
                  type: number
                  description: The average of the Deal stage progression
                age:
                  type: object
                  description: The lifetime of the Deal
                  properties:
                    'y':
                      type: integer
                      description: Years
                    m:
                      type: integer
                      description: Months
                    d:
                      type: integer
                      description: Days
                    h:
                      type: integer
                      description: Hours
                    i:
                      type: integer
                      description: Minutes
                    s:
                      type: integer
                      description: Seconds
                    total_seconds:
                      type: integer
                      description: The total time in seconds
                stay_in_pipeline_stages:
                  type: object
                  description: The details of the duration of the Deal being in each stage of the pipeline
                  properties:
                    times_in_stages:
                      type: object
                      description: The number of seconds a Deal has been in each stage of the pipeline
                    order_of_stages:
                      type: array
                      description: The order of the Deal progression through the pipeline stages
                      items:
                        type: integer
                last_activity:
                  type: object
                  description: The details of the last activity associated with the Deal
                next_activity:
                  type: object
                  description: The details of the next activity associated with the Deal
        additional_data:
          type: object
          properties:
            dropbox_email:
              type: string
              description: The Cc email of the Deal
        related_objects:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/DealUserData'
            organization:
              $ref: '#/components/schemas/DealOrganizationData'
            person:
              $ref: '#/components/schemas/DealPersonData'
    GetDeals:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        data:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/DealNonStrictModeFields'
              - $ref: '#/components/schemas/BaseDeal'
          description: The array of Deals
        additional_data:
          $ref: '#/components/schemas/AdditionalDataWithPaginationDetails'
        related_objects:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/DealUserData'
            organization:
              $ref: '#/components/schemas/DealOrganizationData'
            person:
              $ref: '#/components/schemas/DealPersonData'
    GetDealsByName:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        data:
          type: array
          items:
            type: object
            description: The array of Deals filtered by name
            properties:
              id:
                type: integer
                description: The ID of the Deal
              title:
                type: string
                description: The title of the Deal
              user_id:
                type: integer
                description: The ID of the User who is associated with the Deal
              visible_to:
                type: string
                description: The visibility of the Deal
              status:
                type: string
                description: The status of the Deal
              value:
                type: number
                description: The value of the Deal
              currency:
                type: string
                description: The currency associated with the Deal
              person_name:
                type: string
                description: The name of the Person associated with the Deal
              person_id:
                type: integer
                description: The ID of the Person associated with the Deal
              organization_name:
                type: string
                description: The name of the Organization associated with the Deal
              organization_id:
                type: integer
                description: The ID of the Person associated with the Deal
              formatted_value:
                type: string
                description: The Deal value formatted with selected currency. E.g. US$500
              cc_email:
                type: string
                description: The Cc email of the Deal
        additional_data:
          type: object
          properties:
            pagination:
              $ref: '#/components/schemas/AdditionalData'
    GetDealsSummary:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        data:
          type: object
          description: The summary of Deals
          properties:
            values_total:
              type: object
              description: The total values of the Deals grouped by Deal currency
              properties:
                value:
                  type: number
                  description: The total value of Deals in the Deal currency group
                count:
                  type: integer
                  description: The number of Deals in the Deal currency group
                value_converted:
                  type: number
                  description: The total value of Deals converted into the company default currency
                value_formatted:
                  type: string
                  description: The total value of Deals formatted with Deal currency. E.g. €50
                value_converted_formatted:
                  type: string
                  description: The value_converted formatted with Deal currency. E.g. US$50.10
            weighted_values_total:
              type: object
              description: The total weighted values of the Deals grouped by Deal currency. The weighted value is calculated as probability times Deal value.
              properties:
                value:
                  type: number
                  description: The total weighted value of the Deals in the Deal currency group
                count:
                  type: integer
                  description: The number of Deals in the Deal currency group
                value_formatted:
                  type: string
                  description: The total weighted value of the Deals formatted with Deal currency. E.g. €50
            total_count:
              type: integer
              description: The total number of Deals
            total_currency_converted_value:
              type: number
              description: The total value of Deals converted into the company default currency
            total_weighted_currency_converted_value:
              type: number
              description: The total weighted value of Deals converted into the company default currency
            total_currency_converted_value_formatted:
              type: string
              description: 'The total converted value of Deals formatted with the company default currency. E.g. US$5,100.96'
            total_weighted_currency_converted_value_formatted:
              type: string
              description: 'The total weighted value of Deals formatted with the company default currency. E.g. US$5,100.96'
    GetDealsTimeline:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        data:
          type: object
          description: 'Open and won Deals grouped into periods by defined interval, amount and date-type dealField (field_key)'
          properties:
            period_start:
              type: string
              description: The start date and time of the period
            period_end:
              type: string
              description: The end date and time of the period
            deals:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/DealStrictModeFields'
                  - $ref: '#/components/schemas/BaseDeal'
            totals:
              type: object
              description: The total values of Deals for the given period
              properties:
                count:
                  type: integer
                  description: The number of Deals for the given period
                values:
                  type: object
                  description: The total values of Deals grouped by Deal currency
                weighted_values:
                  type: object
                  description: The total weighted values of Deals for the given period grouped by Deal currency. The weighted value of a Deal is calculated as probability times Deal value.
                open_count:
                  type: integer
                  description: The number of open Deals for the given period
                open_values:
                  type: object
                  description: The total values of open Deals for the given period grouped by Deal currency
                weighted_open_values:
                  type: object
                  description: The total weighted values of open Deals for the given period grouped by Deal currency. The weighted value of a Deal is calculated as probability times Deal value.
                won_count:
                  type: integer
                  description: The number of won Deals for the given period
                won_values:
                  type: object
                  description: The total values of won Deals for the given period grouped by Deal currency
    DealUserData:
      description: The User who is associated with the Deal
      type: object
      properties:
        id:
          type: integer
          description: The ID of the User
        name:
          type: string
          description: The Name of the User
        email:
          type: string
          description: The email of the User
        has_pic:
          type: boolean
          description: If the User has a picture or not
        pic_hash:
          type: string
          nullable: true
          description: The User picture hash
        active_flag:
          type: boolean
          description: If the User is activated or not
    DealPersonData:
      type: object
      description: The Person who is associated with the Deal
      properties:
        active_flag:
          type: boolean
          description: If the associated Person is activated or not
        name:
          type: string
          description: The name of the Person associated with the Deal
        email:
          type: array
          description: The emails of the Person associated with the Deal
          items:
            type: object
            properties:
              label:
                type: string
                description: The type of the email
              value:
                type: string
                description: The email of the associated Person
              primary:
                type: boolean
                description: If this is the primary email or not
        phone:
          type: array
          description: The phone numbers of the Person associated with the Deal
          items:
            type: object
            properties:
              label:
                type: string
                description: The type of the phone number
              value:
                type: string
                description: The phone number of the Person associated with the Deal
              primary:
                type: boolean
                description: If this is the primary phone number or not
    DealOrganizationData:
      type: object
      description: The Organization which is associated with the Deal
      properties:
        name:
          type: string
          description: The name of the Organization associated with the Deal
        people_count:
          type: integer
          description: The number of people connected with the Organization that is associated with the Deal
        owner_id:
          type: integer
          description: The ID of the owner of the Organization that is associated with the Deal
        address:
          type: string
          description: The address of the Organization that is associated with the Deal
        active_flag:
          type: boolean
          description: If the associated Organization is activated or not
        cc_email:
          type: string
          description: The Cc email of the Organization associated with the Deal
    GetProductAttachementDetails:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        data:
          description: The updated Product object attached to the Deal
          allOf:
            - $ref: '#/components/schemas/BasicDealProduct'
            - $ref: '#/components/schemas/ProductAttachementFields'
    GetAddProductAttachementDetails:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        data:
          description: The added Product object attached to the Deal
          allOf:
            - $ref: '#/components/schemas/BasicDealProduct'
            - $ref: '#/components/schemas/ProductAttachementFields'
            - type: object
              properties:
                product_attachment_id:
                  type: integer
                  description: The ID of the deal-product (the ID of the Product attached to the Deal)
    ProductAttachementFields:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the deal-product (the ID of the Product attached to the Deal)
        company_id:
          type: integer
          description: The ID of the Company
        deal_id:
          type: integer
          description: The ID of the Deal
        product_id:
          type: integer
          description: The ID of the Product
        duration_unit:
          type: string
          description: 'The type of the duration. (For example hourly, daily, etc.)'
        sum_no_discount:
          type: number
          description: The Product sum without the discount
        sum:
          type: number
          description: The sum of all the Products attached to the Deal
        currency:
          type: string
          description: The currency associated with the Deal Product
        add_time:
          type: string
          description: The date and time when the Product was added to the Deal
        last_edit:
          type: string
          description: The date and time when the Deal Product was last edited
        active_flag:
          type: boolean
          description: Boolean indicates if the Product is activated or not
        tax:
          type: number
          description: The Product tax
        name:
          type: string
          description: The Product name
    DealNonStrictModeFields:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the Deal
        creator_user_id:
          type: object
          description: The creator of the Deal
          properties:
            id:
              type: integer
              description: The ID of the Deal creator
            name:
              type: string
              description: The name of the Deal creator
            email:
              type: string
              description: The email of the Deal creator
            has_pic:
              type: boolean
              description: If the creator has a picture or not
            pic_hash:
              type: string
              nullable: true
              description: The creator picture hash
            active_flag:
              type: boolean
              description: If the creator is activated or not
            value:
              type: integer
              description: The ID of the Deal creator
        user_id:
          allOf:
            - $ref: '#/components/schemas/DealUserData'
            - type: object
              properties:
                value:
                  type: integer
                  description: The ID of the User
        person_id:
          allOf:
            - $ref: '#/components/schemas/DealPersonData'
            - type: object
              properties:
                value:
                  type: integer
                  description: The ID of the Person associated with the Deal
        org_id:
          allOf:
            - $ref: '#/components/schemas/DealOrganizationData'
            - type: object
              properties:
                value:
                  type: integer
                  description: The ID of the Organization associated with the Deal
    DealStrictModeFields:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the Deal
        creator_user_id:
          type: integer
          description: The ID of the Deal creator
        user_id:
          type: integer
          description: The ID of the User
        person_id:
          type: integer
          description: The ID of the Person associated with the Deal
        org_id:
          type: integer
          description: The ID of the Organization associated with the Deal
    BaseDeal:
      type: object
      properties:
        stage_id:
          type: integer
          description: The ID of the Deal stage
        title:
          type: string
          description: The title of the Deal
        value:
          type: number
          description: The value of the Deal
        currency:
          type: string
          description: The currency associated with the Deal
        add_time:
          type: string
          description: The creation date and time of the Deal
        update_time:
          type: string
          description: The last updated date and time of the Deal
        stage_change_time:
          type: string
          description: The last updated date and time of the Deal stage
        active:
          type: boolean
          description: If the Deal is activated or not
        deleted:
          type: boolean
          description: If the Deal is deleted or not
        status:
          type: string
          description: The status of the Deal
        probability:
          type: number
          nullable: true
          description: The success probability percentage of the Deal
        next_activity_date:
          type: string
          description: The date of the next activity associated with the Deal
        next_activity_time:
          type: string
          description: The time of the next activity associated with the Deal
        next_activity_id:
          type: integer
          nullable: true
          description: The ID of the next activity associated with the Deal
        last_activity_id:
          type: integer
          nullable: true
          description: The ID of the last activity associated with the Deal
        last_activity_date:
          type: string
          nullable: true
          description: The date of the last activity associated with the Deal
        lost_reason:
          type: string
          nullable: true
          description: The reason for losing the Deal
        visible_to:
          type: string
          description: The visibility of the Deal
        close_time:
          type: string
          nullable: true
          description: The date and time of closing the Deal
        pipeline_id:
          type: integer
          description: The ID of pipeline associated with the Deal
        won_time:
          type: string
          description: The date and time of changing the Deal status as won
        first_won_time:
          type: string
          description: The date and time of the first time changing the Deal status as won
        lost_time:
          type: string
          description: The date and time of changing the Deal status as lost
        products_count:
          type: integer
          description: The number of Products associated with the Deal
        files_count:
          type: integer
          description: The number of Files associated with the Deal
        notes_count:
          type: integer
          description: The number of Notes associated with the Deal
        followers_count:
          type: integer
          description: The number of Followers associated with the Deal
        email_messages_count:
          type: integer
          description: The number of emails associated with the Deal
        activities_count:
          type: integer
          description: The number of Activities associated with the Deal
        done_activities_count:
          type: integer
          description: The number of completed Activities associated with the Deal
        undone_activities_count:
          type: integer
          description: The number of incomplete Activities associated with the Deal
        reference_activities_count:
          type: integer
          description: The number of referenced Activities associated with the Deal
        participants_count:
          type: integer
          description: The number of Participants associated with the Deal
        expected_close_date:
          type: string
          description: The expected close date and time of the Deal
        last_incoming_mail_time:
          type: string
          description: The date and time of the last incoming email associated with the Deal
        last_outgoing_mail_time:
          type: string
          description: The date and time of the last outgoing email associated with the Deal
        label:
          type: string
          description: The label assigned to the Deal
        stage_order_nr:
          type: integer
          description: The order number of the Deal stage associated with the Deal
        person_name:
          type: string
          description: The name of the Person associated with the Deal
        org_name:
          type: string
          description: The name of the Organization associated with the Deal
        next_activity_subject:
          type: string
          description: The subject of the next activity associated with the Deal
        next_activity_type:
          type: string
          description: The type of the next activity associated with the Deal
        next_activity_duration:
          type: string
          description: The duration of the next activity associated with the Deal
        next_activity_note:
          type: string
          description: The note of the next activity associated with the Deal
        formatted_value:
          type: string
          description: The Deal value formatted with selected currency. E.g. US$500
        weighted_value:
          type: number
          description: 'Probability times Deal value. Probability can either be Deal probability or if not set, then stage probability.'
        formatted_weighted_value:
          type: string
          description: The weighted_value formatted with selected currency. E.g. US$500
        weighted_value_currency:
          type: string
          description: The currency associated with the Deal
        rotten_time:
          type: string
          nullable: true
          description: The date and time of changing the Deal status as rotten
        owner_name:
          type: string
          description: The name of the Deal owner
        cc_email:
          type: string
          description: The Cc email of the Deal
        org_hidden:
          type: boolean
          description: If the Organization that is associated with the Deal is hidden or not
        person_hidden:
          type: boolean
          description: If the Person that is associated with the Deal is hidden or not
    BaseResponse:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
    FailResponse:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        error:
          type: string
          description: The error message
    Unauthorized:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/ResponseSuccessBoolean'
        error:
          type: string
          description: The error message
        errorCode:
          type: integer
          description: The response error code
    CommonMailThread:
      type: object
      properties:
        id:
          type: integer
          description: ID of the mail thread
        account_id:
          type: string
          description: The connection account ID
        user_id:
          type: integer
          description: ID of the user whom mail message will be assigned to
        subject:
          type: string
          description: The subject
        snippet:
          type: string
          description: A snippet
        read_flag:
          description: Whether the mail thread is read
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
        mail_tracking_status:
          type: string
          nullable: true
          description: Mail tracking status
        has_attachments_flag:
          description: Whether the mail thread has an attachment
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
        has_inline_attachments_flag:
          description: Whether the mail thread has inline attachments
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
        has_real_attachments_flag:
          description: Whether the mail thread has real attachments (which are not inline)
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
        deleted_flag:
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
          description: Whether the mail thread is deleted
        synced_flag:
          description: Whether the mail thread is synced
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
        smart_bcc_flag:
          description: Whether one of the parties of the mail thread is Bcc
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
        mail_link_tracking_enabled_flag:
          description: Whether the link tracking of the mail thread is enabled
          allOf:
            - $ref: '#/components/schemas/NumberBooleanDefault0'
        write_flag:
          type: boolean
          description: We strongly advise you to avoid the use of this property. We will soon deprecate this property
    BaseMailThread:
      allOf:
        - $ref: '#/components/schemas/CommonMailThread'
        - type: object
          properties:
            parties:
              type: object
              description: Parties of the mail thread
              properties:
                to:
                  type: array
                  description: Recipients of the mail thread
                  items:
                    $ref: '#/components/schemas/MailThreadParticipant'
                from:
                  type: array
                  description: Senders of the mail thread
                  items:
                    $ref: '#/components/schemas/MailThreadParticipant'
            drafts_parties:
              type: array
              description: Parties of the drafted mail thread
              items:
                type: object
            folders:
              type: array
              description: Folders in which messages from thread are being stored
              items:
                type: string
            version:
              type: number
              description: Version
            snippet_draft:
              type: string
              nullable: true
              description: A snippet from a draft
            snippet_sent:
              type: string
              description: A snippet from a message sent
            message_count:
              type: integer
              description: An amount of messages
            has_draft_flag:
              type: number
              description: Whether the mail thread has any drafts
              allOf:
                - $ref: '#/components/schemas/NumberBooleanDefault0'
            has_sent_flag:
              type: number
              description: Whether the mail thread has messages sent
              allOf:
                - $ref: '#/components/schemas/NumberBooleanDefault0'
            archived_flag:
              allOf:
                - $ref: '#/components/schemas/NumberBoolean'
                - description: Whether the mail thread is archived
                - default: 0
                  type: number
            shared_flag:
              type: number
              description: Whether the mail thread is shared
              allOf:
                - $ref: '#/components/schemas/NumberBooleanDefault0'
            external_deleted_flag:
              type: number
              description: Whether the mail thread has been deleted externally
              allOf:
                - $ref: '#/components/schemas/NumberBooleanDefault0'
            first_message_to_me_flag:
              type: number
              description: Whether the mail thread was initialized by others
              allOf:
                - $ref: '#/components/schemas/NumberBooleanDefault0'
            last_message_timestamp:
              type: string
              format: date-time
              description: Last message timestamp
            first_message_timestamp:
              type: string
              format: date-time
              description: The time when the mail thread has had the first message received or created
            last_message_sent_timestamp:
              type: string
              format: date-time
              nullable: true
              description: The last time when the mail thread has had a message sent
            last_message_received_timestamp:
              type: string
              format: date-time
              description: The last time when the mail thread has had a message received
            add_time:
              type: string
              format: date-time
              description: The time when the mail thread was inserted to database
            update_time:
              type: string
              format: date-time
              description: The time when the mail thread was updated in database received
            deal_id:
              type: integer
              nullable: true
              description: ID of the deal
            deal_status:
              type: string
              nullable: true
              description: Status of the deal
            all_messages_sent_flag:
              type: number
              description: Whether all the mail thread messages have been sent
              allOf:
                - $ref: '#/components/schemas/NumberBooleanDefault0'
    MailThread:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              description: The array of mail threads
              items:
                $ref: '#/components/schemas/BaseMailThread'
    MailThreadOne:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              description: The array of mail threads
              allOf:
                - $ref: '#/components/schemas/BaseMailThread'
    MailThreadParticipant:
      type: object
      description: Member of a thread
      properties:
        id:
          type: integer
          description: ID of the mail thread participant
        name:
          type: string
          description: Name of the mail thread participant
        latest_sent:
          type: boolean
          description: Whether the mail thread participant was last to send an email
        email_address:
          type: string
          description: Email address of the mail thread participant
        message_time:
          type: number
          description: Message time
        linked_person_id:
          type: integer
          description: ID of the linked person
        linked_person_name:
          type: string
          description: Email of the linked person
        mail_message_party_id:
          type: integer
          description: ID of the mail message party
        linked_organization_id:
          type: integer
          nullable: true
          description: Linked Organization ID
    BaseMailThreadMessages:
      allOf:
        - $ref: '#/components/schemas/CommonMailThread'
        - type: object
          properties:
            from:
              type: array
              description: Senders of the mail thread
              items:
                $ref: '#/components/schemas/MailThreadParticipant'
            to:
              type: array
              description: Recipients of the mail thread
              items:
                $ref: '#/components/schemas/MailThreadParticipant'
            cc:
              type: array
              description: Participants of the Cc
              items:
                $ref: '#/components/schemas/MailThreadParticipant'
            bcc:
              type: array
              description: Participants of the Bcc
              items:
                $ref: '#/components/schemas/MailThreadParticipant'
            body_url:
              type: string
              description: A link to the mail thread message
            mail_thread_id:
              type: integer
              description: ID of the mail thread
            draft:
              type: string
              nullable: true
              description: 'If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise null.'
            has_body_flag:
              type: number
              description: Whether the mail thread message has a body
              allOf:
                - $ref: '#/components/schemas/NumberBooleanDefault0'
            sent_flag:
              type: number
              description: Whether the mail thread message is sent
              allOf:
                - $ref: '#/components/schemas/NumberBooleanDefault0'
            sent_from_pipedrive_flag:
              type: number
              description: Whether the mail thread message is sent from Pipedrive
              allOf:
                - $ref: '#/components/schemas/NumberBooleanDefault0'
            message_time:
              type: string
              format: date-time
              description: The time when the mail message was received or created
            add_time:
              type: string
              format: date-time
              description: The time when the mail message was inserted to database
            update_time:
              type: string
              format: date-time
              description: The time when the mail message was updated in database received
    MailThreadMessages:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/BaseMailThreadMessages'
              description: The array of the mail messages of the mail thread
    MailThreadDelete:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/BaseMailThread'
              description: An array of mail threads
    MailThreadPut:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/BaseMailThread'
              description: An array of mail threads
    GlobalMessageGet:
      allOf:
        - $ref: '#/components/schemas/GlobalMessageBaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/GlobalMessageData'
              description: The array of Global Messages
            handle_time:
              type: number
              description: The total time of the controller processing
            _req_time_ctx_ms:
              type: object
              description: 'The list of timers formatted by name and elapsed time in ms (such as app, app_xss_clean, app_sanitizer_xss)'
    GlobalMessageBaseResponse:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/RequestSuccessBoolean'
    GlobalMessageData:
      type: object
      description: The Global Message data
      properties:
        id:
          type: integer
          description: The ID of the Global Message
        user_id:
          type: integer
          description: The ID of the User related to the Global Message
        company_id:
          type: integer
          description: The ID of the Company related to the Global Message
        type_info:
          $ref: '#/components/schemas/GlobalMessageUserData'
        user_data:
          type: object
          description: 'The User data for the Global Message (such as user_id, name, email, phone)'
        html:
          type: string
          description: HTML for each returned Global Message to render views
    GlobalMessageUserData:
      type: object
      description: The Global Message type info
      properties:
        message_type:
          type: string
          description: The Global Message type for validation checks
        dismissible_flag:
          type: boolean
          description: Whether a User can dismiss the Global Message or not
        priority:
          type: integer
          description: Sorts messages by priority DESC (from 0 to 10)
    GlobalMessageDelete:
      allOf:
        - $ref: '#/components/schemas/GlobalMessageBaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/GlobalMessageData'
            handle_time:
              type: number
              description: The total time of the controller processing
            _req_time_ctx_ms:
              type: object
              description: 'The list of timers formatted by name and elapsed time in ms (such as app, app_xss_clean, db_connect)'
