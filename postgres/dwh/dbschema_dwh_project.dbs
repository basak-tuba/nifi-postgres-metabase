<?xml version="1.0" encoding="UTF-8" ?>
<project name="OpenBI-dwh" id="Project_20fdb38" template="Default" database="PostgreSQL" >
	<schema name="core" catalogname="dwh" schemaname="core" >
		<table name="activity_i" >
			<column name="activity_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="activity_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_employee_id_created_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_organization_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_contact_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_deal_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_due_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="due_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="marked_as_done" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="fk_date_id_marked_as_done" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="marked_as_done_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="subject" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_employee_id_assigned_to" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="note" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<index name="pk_activity_i_activity_id" unique="PRIMARY_KEY" >
				<column name="activity_id" />
			</index>
			<index name="ux_activity_i_activity_key" unique="UNIQUE" >
				<column name="activity_key" />
			</index>
			<index name="ix_activity_i_fk_contact_id" unique="NORMAL" >
				<column name="fk_contact_id" />
			</index>
			<index name="ix_activity_i_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_activity_i_fk_date_id_due_date" unique="NORMAL" >
				<column name="fk_date_id_due_date" />
			</index>
			<index name="ix_activity_i_fk_date_id_marked_as_done" unique="NORMAL" >
				<column name="fk_date_id_marked_as_done" />
			</index>
			<index name="ix_activity_i_fk_deal_id" unique="NORMAL" >
				<column name="fk_deal_id" />
			</index>
			<index name="ix_activity_i_fk_employee_id_assigned_to" unique="NORMAL" >
				<column name="fk_employee_id_assigned_to" />
			</index>
			<index name="ix_activity_i_fk_employee_id_created_by" unique="NORMAL" >
				<column name="fk_employee_id_created_by" />
			</index>
			<index name="ix_activity_i_fk_organization_id" unique="NORMAL" >
				<column name="fk_organization_id" />
			</index>
			<fk name="fk_activity_i_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_activity_i_fk_date_id_due_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_due_date" pk="date_id" />
			</fk>
			<fk name="fk_activity_i_fk_date_id_marked_as_done" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_marked_as_done" pk="date_id" />
			</fk>
			<fk name="fk_activity_i_fk_contact_id" to_schema="core" to_table="contact_i" >
				<fk_column name="fk_contact_id" pk="contact_id" />
			</fk>
			<fk name="fk_activity_i_fk_deal_id" to_schema="core" to_table="deal_i" >
				<fk_column name="fk_deal_id" pk="deal_id" />
			</fk>
			<fk name="fk_activity_i_fk_employee_id" to_schema="core" to_table="employee_i" >
				<fk_column name="fk_employee_id_created_by" pk="employee_id" />
			</fk>
			<fk name="fk_activity_i_fk_employee_id_assigned_to" to_schema="core" to_table="employee_i" >
				<fk_column name="fk_employee_id_assigned_to" pk="employee_id" />
			</fk>
			<fk name="fk_activity_i_fk_organization_id" to_schema="core" to_table="organization_i" >
				<fk_column name="fk_organization_id" pk="organization_id" />
			</fk>
		</table>
		<table name="activity_t" >
			<column name="activity_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="activity_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_employee_id_created_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_organization_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_contact_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_deal_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_due_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="due_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="marked_as_done" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="fk_date_id_marked_as_done" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="marked_as_done_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="subject" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_employee_id_assigned_to" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="note" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_activity_t_activity_id" unique="PRIMARY_KEY" >
				<column name="activity_id" />
			</index>
			<index name="ux_activity_t_activity_key" unique="UNIQUE" >
				<column name="activity_key" />
			</index>
			<index name="ix_activity_t_fk_contact_id" unique="NORMAL" >
				<column name="fk_contact_id" />
			</index>
			<index name="ix_activity_t_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_activity_t_fk_date_id_due_date" unique="NORMAL" >
				<column name="fk_date_id_due_date" />
			</index>
			<index name="ix_activity_t_fk_date_id_marked_as_done" unique="NORMAL" >
				<column name="fk_date_id_marked_as_done" />
			</index>
			<index name="ix_activity_t_fk_deal_id" unique="NORMAL" >
				<column name="fk_deal_id" />
			</index>
			<index name="ix_activity_t_fk_employee_id_assigned_to" unique="NORMAL" >
				<column name="fk_employee_id_assigned_to" />
			</index>
			<index name="ix_activity_t_fk_employee_id_created_by" unique="NORMAL" >
				<column name="fk_employee_id_created_by" />
			</index>
			<index name="ix_activity_t_fk_organization_id" unique="NORMAL" >
				<column name="fk_organization_id" />
			</index>
			<fk name="fk_activity_t_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_activity_t_fk_date_id_due_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_due_date" pk="date_id" />
			</fk>
			<fk name="fk_activity_t_fk_date_id_marked_as_done" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_marked_as_done" pk="date_id" />
			</fk>
			<fk name="fk_activity_t_fk_contact_id" to_schema="core" to_table="contact_t" >
				<fk_column name="fk_contact_id" pk="contact_id" />
			</fk>
			<fk name="fk_activity_t_fk_deal_id" to_schema="core" to_table="deal_t" >
				<fk_column name="fk_deal_id" pk="deal_id" />
			</fk>
			<fk name="fk_activity_t_fk_employee_id" to_schema="core" to_table="employee_t" >
				<fk_column name="fk_employee_id_created_by" pk="employee_id" />
			</fk>
			<fk name="fk_activity_t_fk_employee_id_assigned_to" to_schema="core" to_table="employee_t" >
				<fk_column name="fk_employee_id_assigned_to" pk="employee_id" />
			</fk>
			<fk name="fk_activity_t_fk_organization_id" to_schema="core" to_table="organization_t" >
				<fk_column name="fk_organization_id" pk="organization_id" />
			</fk>
		</table>
		<table name="c_contry_name_map_g" >
			<column name="contry_name_map_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="google_country_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="iso_3166_country_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_c_contry_name_map_g_contry_name_map_id" unique="PRIMARY_KEY" >
				<column name="contry_name_map_id" />
			</index>
			<index name="ux_c_contry_name_map_g_google_name_iso_name" unique="UNIQUE" >
				<column name="google_country_name" />
				<column name="iso_3166_country_name" />
			</index>
		</table>
		<table name="c_currency_g" >
			<column name="currency_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="currency_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="alphabetical_code" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="numerical_code" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_c_currency_g_currency_id" unique="PRIMARY_KEY" >
				<column name="currency_id" />
			</index>
			<index name="ix_c_currency_g_alphabetical_code" unique="NORMAL" >
				<column name="alphabetical_code" />
			</index>
			<index name="ix_c_currency_g_numerical_code" unique="NORMAL" >
				<column name="numerical_code" />
			</index>
		</table>
		<table name="c_date_g" >
			<column name="date_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="date_actual" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="epoch" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<comment><![CDATA[epoch\nFor timestamp with time zone values, the number of seconds since 1970-01-01 00:00:00 UTC (can be negative); for date and timestamp values, the number of seconds since 1970-01-01 00:00:00 local time; for interval values, the total number of seconds in the interval]]></comment>
			</column>
			<column name="day_suffix" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="day_name" type="varchar" length="9" decimal="0" jt="12" mandatory="y" />
			<column name="day_of_week" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="day_of_month" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="day_of_quarter" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="day_of_year" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="week_of_month" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="week_of_year" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="week_of_year_iso" type="char" length="10" decimal="0" jt="1" mandatory="y" />
			<column name="month_actual" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="month_name" type="varchar" length="9" decimal="0" jt="12" mandatory="y" />
			<column name="month_name_abbreviated" type="char" length="3" decimal="0" jt="1" mandatory="y" />
			<column name="quarter_actual" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="quarter_name" type="varchar" length="9" decimal="0" jt="12" mandatory="y" />
			<column name="year_actual" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="first_day_of_week" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="last_day_of_week" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="first_day_of_month" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="last_day_of_month" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="first_day_of_quarter" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="last_day_of_quarter" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="first_day_of_year" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="last_day_of_year" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="mmyyyy" type="char" length="6" decimal="0" jt="1" mandatory="y" />
			<column name="mmddyyyy" type="char" length="10" decimal="0" jt="1" mandatory="y" />
			<column name="weekend_indr" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_c_date_g" unique="PRIMARY_KEY" >
				<column name="date_id" />
			</index>
		</table>
		<table name="c_exchange_rate_g" >
			<column name="exchange_rate_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_currency_id_counter_currency" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_currency_id_base_currency" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="exchange_rate" type="float8" length="17" decimal="17" jt="6" mandatory="y" />
			<column name="fk_date_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_exchange_rate_g_exchange_rate_id" unique="PRIMARY_KEY" >
				<column name="exchange_rate_id" />
			</index>
			<index name="ux_exchange_rate_g_counter_currency_base_currency_date" unique="UNIQUE" >
				<column name="fk_currency_id_counter_currency" />
				<column name="fk_currency_id_base_currency" />
				<column name="fk_date_id" />
			</index>
			<fk name="fk_c_exchange_rate_g_fk_currency_id_base_currency" to_schema="core" to_table="c_currency_g" >
				<fk_column name="fk_currency_id_base_currency" pk="currency_id" />
			</fk>
			<fk name="fk_c_exchange_rate_g_fk_currency_id_counter_currency" to_schema="core" to_table="c_currency_g" >
				<fk_column name="fk_currency_id_counter_currency" pk="currency_id" />
			</fk>
			<fk name="fk_c_exchange_rate_g_fk_date_id" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id" pk="date_id" />
			</fk>
		</table>
		<table name="c_null_replacement_g" >
			<column name="text_null" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="date_never" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="date_infinity" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="timestamp_never" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="timestamp_infinity" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="interval_never" type="interval" length="49" decimal="6" jt="1111" mandatory="y" />
			<column name="interval_infinity" type="interval" length="49" decimal="6" jt="1111" mandatory="y" />
			<column name="text_array_null" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="timestamp_array_null" type="_timestamptz" length="35" decimal="6" jt="2003" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
		</table>
		<table name="c_partner_list_i" >
			<column name="partner_list_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="partner_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="is_tracked" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<index name="pk_c_partner_list_i_partner_list_id" unique="PRIMARY_KEY" >
				<column name="partner_list_id" />
			</index>
			<index name="ux_partner_list_i_partner_name" unique="UNIQUE" >
				<column name="partner_name" />
			</index>
		</table>
		<table name="c_partner_list_t" >
			<column name="partner_list_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="partner_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="is_tracked" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_c_partner_list_t_partner_list_id" unique="PRIMARY_KEY" >
				<column name="partner_list_id" />
			</index>
			<index name="ux_partner_list_t_partner_name" unique="UNIQUE" >
				<column name="partner_name" />
			</index>
		</table>
		<table name="c_revenue_type_i" >
			<column name="revenue_type_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="revenue_type_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<index name="pk_c_revenue_type_i_revenue_type_id" unique="PRIMARY_KEY" >
				<column name="revenue_type_id" />
			</index>
			<index name="ux_revenue_type_i_revenue_type_name" unique="UNIQUE" >
				<column name="revenue_type_name" />
			</index>
		</table>
		<table name="c_revenue_type_t" >
			<column name="revenue_type_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="revenue_type_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_c_revenue_type_t_revenue_type_id" unique="PRIMARY_KEY" >
				<column name="revenue_type_id" />
			</index>
			<index name="ux_revenue_type_t_revenue_type_name" unique="UNIQUE" >
				<column name="revenue_type_name" />
			</index>
		</table>
		<table name="contact_i" >
			<column name="contact_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="contact_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="phone_number" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="location_full" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="location_city" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="location_country" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="pipedrive_label" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_organization_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="fk_party_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="fk_employee_id_owner" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="last_updated_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="pipedrive_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_updated_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="location_region" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_contact_i_contact_id" unique="PRIMARY_KEY" >
				<column name="contact_id" />
			</index>
			<index name="ux_contact_i_contact_key" unique="UNIQUE" >
				<column name="contact_key" />
			</index>
			<index name="ix_contact_i_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_contact_i_fk_date_id_last_updated_date" unique="NORMAL" >
				<column name="fk_date_id_last_updated_date" />
			</index>
			<index name="ix_contact_i_fk_employee_id_owner" unique="NORMAL" >
				<column name="fk_employee_id_owner" />
			</index>
			<index name="ix_contact_i_fk_organization_id" unique="NORMAL" >
				<column name="fk_organization_id" />
			</index>
			<index name="ix_contact_i_fk_party_id" unique="NORMAL" >
				<column name="fk_party_id" />
			</index>
			<fk name="fk_contact_i_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_contact_i_fk_date_id_last_updated_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_updated_date" pk="date_id" />
			</fk>
			<fk name="fk_contact_i_fk_employee_id_owner" to_schema="core" to_table="employee_i" >
				<fk_column name="fk_employee_id_owner" pk="employee_id" />
			</fk>
			<fk name="fk_contact_i_fk_organization_id" to_schema="core" to_table="organization_i" >
				<fk_column name="fk_organization_id" pk="organization_id" />
			</fk>
			<fk name="fk_contact_i_fk_party_id" to_schema="core" to_table="party_i" >
				<fk_column name="fk_party_id" pk="party_id" />
			</fk>
		</table>
		<table name="contact_ih" >
			<column name="contact_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="contact_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_organization_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="fk_party_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="phone_number" type="text" decimal="0" jt="12" />
			<column name="email_address" type="text" decimal="0" jt="12" />
			<column name="location_full" type="text" decimal="0" jt="12" />
			<column name="location_street_number" type="text" decimal="0" jt="12" />
			<column name="location_street" type="text" decimal="0" jt="12" />
			<column name="location_city" type="text" decimal="0" jt="12" />
			<column name="location_country" type="text" decimal="0" jt="12" />
			<column name="location_postal_code" type="text" decimal="0" jt="12" />
			<column name="pipedrive_label" type="text" decimal="0" jt="12" />
			<column name="fk_employee_id_owner" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="last_updated_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="pipedrive_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_begin_effective_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_end_effective_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_is_current" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<index name="pk_contact_ih_contact_id" unique="PRIMARY_KEY" >
				<column name="contact_id" />
			</index>
			<index name="ux_contact_ih_contact_key" unique="UNIQUE" >
				<column name="contact_key" />
			</index>
			<index name="ix_contact_ih_fk_employee_id_owner" unique="NORMAL" >
				<column name="fk_employee_id_owner" />
			</index>
			<index name="ix_contact_ih_fk_organization_id" unique="NORMAL" >
				<column name="fk_organization_id" />
			</index>
			<index name="ix_contact_ih_fk_party_id" unique="NORMAL" >
				<column name="fk_party_id" />
			</index>
			<fk name="fk_contact_ih_fk_employee_id_owner" to_schema="core" to_table="employee_ih" >
				<fk_column name="fk_employee_id_owner" pk="employee_id" />
			</fk>
			<fk name="fk_contact_ih_fk_organization_id" to_schema="core" to_table="organization_ih" >
				<fk_column name="fk_organization_id" pk="organization_id" />
			</fk>
			<fk name="fk_contact_ih_fk_party_id" to_schema="core" to_table="party_ih" >
				<fk_column name="fk_party_id" pk="party_id" />
			</fk>
		</table>
		<table name="contact_t" >
			<column name="contact_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="contact_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="phone_number" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="location_full" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="location_city" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="location_country" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="pipedrive_label" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_organization_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="fk_party_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="fk_employee_id_owner" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="last_updated_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="pipedrive_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_updated_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="location_region" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_contact_t_contact_id" unique="PRIMARY_KEY" >
				<column name="contact_id" />
			</index>
			<index name="ux_contact_t_contact_key" unique="UNIQUE" >
				<column name="contact_key" />
			</index>
			<index name="ix_contact_t_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_contact_t_fk_date_id_last_updated_date" unique="NORMAL" >
				<column name="fk_date_id_last_updated_date" />
			</index>
			<index name="ix_contact_t_fk_employee_id_owner" unique="NORMAL" >
				<column name="fk_employee_id_owner" />
			</index>
			<index name="ix_contact_t_fk_organization_id" unique="NORMAL" >
				<column name="fk_organization_id" />
			</index>
			<index name="ix_contact_t_fk_party_id" unique="NORMAL" >
				<column name="fk_party_id" />
			</index>
			<fk name="fk_contact_t_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_contact_t_fk_date_id_last_updated_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_updated_date" pk="date_id" />
			</fk>
			<fk name="fk_contact_t_fk_employee_id_owner" to_schema="core" to_table="employee_t" >
				<fk_column name="fk_employee_id_owner" pk="employee_id" />
			</fk>
			<fk name="fk_contact_t_fk_organization_id" to_schema="core" to_table="organization_t" >
				<fk_column name="fk_organization_id" pk="organization_id" />
			</fk>
			<fk name="fk_contact_t_fk_party_id" to_schema="core" to_table="party_t" >
				<fk_column name="fk_party_id" pk="party_id" />
			</fk>
		</table>
		<table name="deal_change_log_i" >
			<column name="deal_change_log_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="deal_change_log_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="field" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="old_value" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="new_value" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_deal_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_employee_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="log_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="fk_date_id_log_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_deal_change_log_i_deal_change_log_id" unique="PRIMARY_KEY" >
				<column name="deal_change_log_id" />
			</index>
			<index name="ux_deal_change_log_i_deal_change_log_key" unique="UNIQUE" >
				<column name="deal_change_log_key" />
			</index>
			<index name="ix_deal_change_log_i_fk_date_id_log_date" unique="NORMAL" >
				<column name="fk_date_id_log_date" />
			</index>
			<index name="ix_deal_change_log_i_fk_deal_id" unique="NORMAL" >
				<column name="fk_deal_id" />
			</index>
			<index name="ix_deal_change_log_i_fk_employee_id" unique="NORMAL" >
				<column name="fk_employee_id" />
			</index>
			<fk name="fk_deal_change_log_i_fk_date_id_log_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_log_date" pk="date_id" />
			</fk>
			<fk name="fk_deal_change_log_i_fk_deal_id" to_schema="core" to_table="deal_i" >
				<fk_column name="fk_deal_id" pk="deal_id" />
			</fk>
			<fk name="fk_deal_change_log_i_fk_employee_id" to_schema="core" to_table="employee_i" >
				<fk_column name="fk_employee_id" pk="employee_id" />
			</fk>
		</table>
		<table name="deal_change_log_t" >
			<column name="deal_change_log_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="deal_change_log_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="field" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="old_value" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="new_value" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_deal_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_employee_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="log_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_date_id_log_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_deal_change_log_t_deal_change_log_id" unique="PRIMARY_KEY" >
				<column name="deal_change_log_id" />
			</index>
			<index name="ux_deal_change_log_t_deal_change_log_key" unique="UNIQUE" >
				<column name="deal_change_log_key" />
			</index>
			<index name="ix_deal_change_log_t_fk_date_id_log_date" unique="NORMAL" >
				<column name="fk_date_id_log_date" />
			</index>
			<index name="ix_deal_change_log_t_fk_deal_id" unique="NORMAL" >
				<column name="fk_deal_id" />
			</index>
			<index name="ix_deal_change_log_t_fk_employee_id" unique="NORMAL" >
				<column name="fk_employee_id" />
			</index>
			<fk name="fk_deal_change_log_t_fk_date_id_log_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_log_date" pk="date_id" />
			</fk>
			<fk name="fk_deal_change_log_t_fk_deal_id" to_schema="core" to_table="deal_t" >
				<fk_column name="fk_deal_id" pk="deal_id" />
			</fk>
			<fk name="fk_deal_change_log_t_fk_employee_id" to_schema="core" to_table="employee_t" >
				<fk_column name="fk_employee_id" pk="employee_id" />
			</fk>
		</table>
		<table name="deal_contact_map_i" >
			<column name="deal_contact_map_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="deal_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="contact_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_deal_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_contact_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<index name="pk_deal_contact_map_i_deal_contact_map_id" unique="PRIMARY_KEY" >
				<column name="deal_contact_map_id" />
			</index>
			<index name="ux_deal_contact_map_i_deal_key" unique="UNIQUE" >
				<column name="deal_key" />
				<column name="contact_key" />
			</index>
			<index name="ix_deal_contact_map_i_fk_contact_id" unique="NORMAL" >
				<column name="fk_contact_id" />
			</index>
			<index name="ix_deal_contact_map_i_fk_deal_id" unique="NORMAL" >
				<column name="fk_deal_id" />
			</index>
			<fk name="fk_deal_contact_map_i_fk_contact_id" to_schema="core" to_table="contact_i" >
				<fk_column name="fk_contact_id" pk="contact_id" />
			</fk>
			<fk name="fk_deal_contact_map_i_fk_deal_id" to_schema="core" to_table="deal_i" >
				<fk_column name="fk_deal_id" pk="deal_id" />
			</fk>
		</table>
		<table name="deal_contact_map_t" >
			<column name="deal_contact_map_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="deal_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="contact_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_deal_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_contact_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_deal_contact_map_t_deal_contact_map_id" unique="PRIMARY_KEY" >
				<column name="deal_contact_map_id" />
			</index>
			<index name="ux_deal_contact_map_t_deal_key" unique="UNIQUE" >
				<column name="deal_key" />
				<column name="contact_key" />
			</index>
			<index name="ix_deal_contact_map_t_fk_contact_id" unique="NORMAL" >
				<column name="fk_contact_id" />
			</index>
			<index name="ix_deal_contact_map_t_fk_deal_id" unique="NORMAL" >
				<column name="fk_deal_id" />
			</index>
			<fk name="fk_deal_contact_map_t_fk_contact_id" to_schema="core" to_table="contact_t" >
				<fk_column name="fk_contact_id" pk="contact_id" />
			</fk>
			<fk name="fk_deal_contact_map_t_fk_deal_id" to_schema="core" to_table="deal_t" >
				<fk_column name="fk_deal_id" pk="deal_id" />
			</fk>
		</table>
		<table name="deal_i" >
			<column name="deal_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="deal_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="title" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="stage" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_issue_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_contact_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_organization_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_employee_id_owner" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="usd_value" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_currency_id_deal_currency" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="local_currency_value" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="last_updated_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="closed_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="pipedrive_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="status" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="pipeline" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="won_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="lost_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="fk_date_id_expected_close_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="industry" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[pipedrive field id - 0b8f4c916653fca572a26ee0d8a65b73a9a3d6c2]]></comment>
			</column>
			<column name="deal_source" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[64896c7962fd27b8b0c719c3bbc3c9d77a2060cb]]></comment>
			</column>
			<column name="deal_source_detail" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[5f987ab7b72ef1083f09ed8f3011951419a6f450]]></comment>
			</column>
			<column name="region" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[e3a01ee1cb7171c2984c563024d6de5db252d945]]></comment>
			</column>
			<column name="reason_lost" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[cab2c98910b32f44caa20f84bec2db658ad2669e]]></comment>
			</column>
			<column name="resulting_state" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[f6ab0c86f427fcb5d4119fc98b39805b76aea254]]></comment>
			</column>
			<column name="category" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="country" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[pipedrive field id - 23a057766a74fd80cee4fbee8fd88312b4f12173]]></comment>
			</column>
			<column name="vtiger_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="partner_identified_by" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="partner_qualified_by" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="partner_poc_done_by" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="partner_closed_by" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="partner_resold_by" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="partner_supported_by" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="partner_owned_by" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="expected_close_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_updated_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_closed_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_won_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_lost_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_deal_i_deal_id" unique="PRIMARY_KEY" >
				<column name="deal_id" />
			</index>
			<index name="ux_deal_i_deal_key" unique="UNIQUE" >
				<column name="deal_key" />
			</index>
			<index name="ix_deal_i_fk_contact_id" unique="NORMAL" >
				<column name="fk_contact_id" />
			</index>
			<index name="ix_deal_i_fk_currency_id_deal_currency" unique="NORMAL" >
				<column name="fk_currency_id_deal_currency" />
			</index>
			<index name="ix_deal_i_fk_date_id_closed_date" unique="NORMAL" >
				<column name="fk_date_id_closed_date" />
			</index>
			<index name="ix_deal_i_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_deal_i_fk_date_id_expected_close_date" unique="NORMAL" >
				<column name="fk_date_id_expected_close_date" />
			</index>
			<index name="ix_deal_i_fk_date_id_last_updated_date" unique="NORMAL" >
				<column name="fk_date_id_last_updated_date" />
			</index>
			<index name="ix_deal_i_fk_date_id_lost_date" unique="NORMAL" >
				<column name="fk_date_id_lost_date" />
			</index>
			<index name="ix_deal_i_fk_date_id_won_date" unique="NORMAL" >
				<column name="fk_date_id_won_date" />
			</index>
			<index name="ix_deal_i_fk_employee_id_owner" unique="NORMAL" >
				<column name="fk_employee_id_owner" />
			</index>
			<index name="ix_deal_i_fk_issue_id" unique="NORMAL" >
				<column name="fk_issue_id" />
			</index>
			<index name="ix_deal_i_fk_organization_id" unique="NORMAL" >
				<column name="fk_organization_id" />
			</index>
			<fk name="fk_deal_i_fk_currency_id" to_schema="core" to_table="c_currency_g" >
				<fk_column name="fk_currency_id_deal_currency" pk="currency_id" />
			</fk>
			<fk name="fk_deal_i_fk_date_id_closed_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_closed_date" pk="date_id" />
			</fk>
			<fk name="fk_deal_i_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_deal_i_fk_date_id_expected_close_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_expected_close_date" pk="date_id" />
			</fk>
			<fk name="fk_deal_i_fk_date_id_last_updated_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_updated_date" pk="date_id" />
			</fk>
			<fk name="fk_deal_i_fk_date_id_lost_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_lost_date" pk="date_id" />
			</fk>
			<fk name="fk_deal_i_fk_date_id_won_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_won_date" pk="date_id" />
			</fk>
			<fk name="fk_deal_i_fk_contact_id" to_schema="core" to_table="contact_i" >
				<fk_column name="fk_contact_id" pk="contact_id" />
			</fk>
			<fk name="fk_deal_i_fk_employee_id_owner" to_schema="core" to_table="employee_i" >
				<fk_column name="fk_employee_id_owner" pk="employee_id" />
			</fk>
			<fk name="fk_deal_i_fk_issue_id" to_schema="core" to_table="issue_i" >
				<fk_column name="fk_issue_id" pk="issue_id" />
			</fk>
			<fk name="fk_deal_i_fk_organization_id" to_schema="core" to_table="organization_i" >
				<fk_column name="fk_organization_id" pk="organization_id" />
			</fk>
		</table>
		<table name="deal_ih" >
			<column name="deal_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="deal_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="title" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="stage" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_issue_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_contact_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_organization_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_employee_id_owner" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="usd_value" type="integer" length="10" decimal="0" jt="4" />
			<column name="fk_currency_id_deal_currency" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="local_currency_value" type="integer" length="10" decimal="0" jt="4" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="last_updated_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="closed_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="pipedrive_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="status" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="pipeline" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="won_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="lost_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="fk_date_id_expected_close_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="industry" type="text" decimal="0" jt="12" />
			<column name="deal_source" type="text" decimal="0" jt="12" />
			<column name="deal_source_detail" type="text" decimal="0" jt="12" />
			<column name="region" type="text" decimal="0" jt="12" />
			<column name="reason_lost" type="text" decimal="0" jt="12" />
			<column name="resulting_state" type="text" decimal="0" jt="12" />
			<column name="category" type="text" decimal="0" jt="12" />
			<column name="country" type="text" decimal="0" jt="12" />
			<column name="vtiger_key" type="text" decimal="0" jt="12" />
			<column name="partner_identified_by" type="text" decimal="0" jt="12" />
			<column name="partner_qualified_by" type="text" decimal="0" jt="12" />
			<column name="partner_poc_done_by" type="text" decimal="0" jt="12" />
			<column name="partner_closed_by" type="text" decimal="0" jt="12" />
			<column name="partner_resold_by" type="text" decimal="0" jt="12" />
			<column name="partner_supported_by" type="text" decimal="0" jt="12" />
			<column name="partner_owned_by" type="text" decimal="0" jt="12" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_begin_effective_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_end_effective_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_is_current" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="previous_stage" type="text" decimal="0" jt="12" />
			<index name="pk_deal_ih_deal_id" unique="PRIMARY_KEY" >
				<column name="deal_id" />
			</index>
			<index name="ux_deal_ih_deal_key" unique="UNIQUE" >
				<column name="deal_key" />
			</index>
			<index name="ix_deal_ih_fk_contact_id" unique="NORMAL" >
				<column name="fk_contact_id" />
			</index>
			<index name="ix_deal_ih_fk_currency_id_deal_currency" unique="NORMAL" >
				<column name="fk_currency_id_deal_currency" />
			</index>
			<index name="ix_deal_ih_fk_date_id_expected_close_date" unique="NORMAL" >
				<column name="fk_date_id_expected_close_date" />
			</index>
			<index name="ix_deal_ih_fk_employee_id_owner" unique="NORMAL" >
				<column name="fk_employee_id_owner" />
			</index>
			<index name="ix_deal_ih_fk_issue_id" unique="NORMAL" >
				<column name="fk_issue_id" />
			</index>
			<index name="ix_deal_ih_fk_organization_id" unique="NORMAL" >
				<column name="fk_organization_id" />
			</index>
			<fk name="fk_deal_ih_fk_currency_id" to_schema="core" to_table="c_currency_g" >
				<fk_column name="fk_currency_id_deal_currency" pk="currency_id" />
			</fk>
			<fk name="fk_deal_ih_fk_date_id_expected_close_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_expected_close_date" pk="date_id" />
			</fk>
			<fk name="fk_deal_ih_fk_employee_id_owner" to_schema="core" to_table="employee_ih" >
				<fk_column name="fk_employee_id_owner" pk="employee_id" />
			</fk>
			<fk name="fk_deal_ih_fk_issue_id" to_schema="core" to_table="issue_ih" >
				<fk_column name="fk_issue_id" pk="issue_id" />
			</fk>
		</table>
		<table name="deal_t" >
			<column name="deal_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="deal_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="title" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="stage" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_issue_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_contact_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_organization_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_employee_id_owner" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="usd_value" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_currency_id_deal_currency" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="local_currency_value" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="last_updated_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="closed_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="pipedrive_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="status" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="pipeline" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="won_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="lost_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="fk_date_id_expected_close_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="industry" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[pipedrive field id - 0b8f4c916653fca572a26ee0d8a65b73a9a3d6c2]]></comment>
			</column>
			<column name="deal_source" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[64896c7962fd27b8b0c719c3bbc3c9d77a2060cb]]></comment>
			</column>
			<column name="deal_source_detail" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[5f987ab7b72ef1083f09ed8f3011951419a6f450]]></comment>
			</column>
			<column name="region" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[e3a01ee1cb7171c2984c563024d6de5db252d945]]></comment>
			</column>
			<column name="reason_lost" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[cab2c98910b32f44caa20f84bec2db658ad2669e]]></comment>
			</column>
			<column name="resulting_state" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[f6ab0c86f427fcb5d4119fc98b39805b76aea254]]></comment>
			</column>
			<column name="category" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="country" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[pipedrive field id - 23a057766a74fd80cee4fbee8fd88312b4f12173]]></comment>
			</column>
			<column name="vtiger_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="partner_identified_by" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="partner_qualified_by" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="partner_poc_done_by" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="partner_closed_by" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="partner_resold_by" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="partner_supported_by" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="partner_owned_by" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="expected_close_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_updated_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_closed_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_won_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_lost_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_deal_t_deal_id" unique="PRIMARY_KEY" >
				<column name="deal_id" />
			</index>
			<index name="ux_deal_t_deal_key" unique="UNIQUE" >
				<column name="deal_key" />
			</index>
			<index name="ix_deal_t_fk_contact_id" unique="NORMAL" >
				<column name="fk_contact_id" />
			</index>
			<index name="ix_deal_t_fk_currency_id_deal_currency" unique="NORMAL" >
				<column name="fk_currency_id_deal_currency" />
			</index>
			<index name="ix_deal_t_fk_date_id_closed_date" unique="NORMAL" >
				<column name="fk_date_id_closed_date" />
			</index>
			<index name="ix_deal_t_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_deal_t_fk_date_id_expected_close_date" unique="NORMAL" >
				<column name="fk_date_id_expected_close_date" />
			</index>
			<index name="ix_deal_t_fk_date_id_last_updated_date" unique="NORMAL" >
				<column name="fk_date_id_last_updated_date" />
			</index>
			<index name="ix_deal_t_fk_date_id_lost_date" unique="NORMAL" >
				<column name="fk_date_id_lost_date" />
			</index>
			<index name="ix_deal_t_fk_date_id_won_date" unique="NORMAL" >
				<column name="fk_date_id_won_date" />
			</index>
			<index name="ix_deal_t_fk_employee_id_owner" unique="NORMAL" >
				<column name="fk_employee_id_owner" />
			</index>
			<index name="ix_deal_t_fk_issue_id" unique="NORMAL" >
				<column name="fk_issue_id" />
			</index>
			<index name="ix_deal_t_fk_organization_id" unique="NORMAL" >
				<column name="fk_organization_id" />
			</index>
			<fk name="fk_deal_t_fk_currency_id" to_schema="core" to_table="c_currency_g" >
				<fk_column name="fk_currency_id_deal_currency" pk="currency_id" />
			</fk>
			<fk name="fk_deal_t_fk_date_id_closed_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_closed_date" pk="date_id" />
			</fk>
			<fk name="fk_deal_t_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_deal_t_fk_date_id_expected_close_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_expected_close_date" pk="date_id" />
			</fk>
			<fk name="fk_deal_t_fk_date_id_last_updated_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_updated_date" pk="date_id" />
			</fk>
			<fk name="fk_deal_t_fk_date_id_lost_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_lost_date" pk="date_id" />
			</fk>
			<fk name="fk_deal_t_fk_date_id_won_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_won_date" pk="date_id" />
			</fk>
			<fk name="fk_deal_t_fk_contact_id" to_schema="core" to_table="contact_t" >
				<fk_column name="fk_contact_id" pk="contact_id" />
			</fk>
			<fk name="fk_deal_t_fk_employee_id_owner" to_schema="core" to_table="employee_t" >
				<fk_column name="fk_employee_id_owner" pk="employee_id" />
			</fk>
			<fk name="fk_deal_t_fk_issue_id" to_schema="core" to_table="issue_t" >
				<fk_column name="fk_issue_id" pk="issue_id" />
			</fk>
			<fk name="fk_deal_t_fk_organization_id" to_schema="core" to_table="organization_t" >
				<fk_column name="fk_organization_id" pk="organization_id" />
			</fk>
		</table>
		<table name="email_campaign_bounced_email_i" >
			<column name="email_campaign_bounced_email_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="email_campaign_bounced_email_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_email_campaign_report_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="bounce_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<index name="pk_email_campaign_bounced_email_i" unique="PRIMARY_KEY" >
				<column name="email_campaign_bounced_email_id" />
			</index>
			<index name="ux_email_campaign_bounced_email_i_key" unique="UNIQUE" >
				<column name="email_campaign_bounced_email_key" />
			</index>
			<index name="ix_email_campaign_bounced_email_i_fk_email_campaign_report_id" unique="NORMAL" >
				<column name="fk_email_campaign_report_id" />
			</index>
			<fk name="fk_email_campaign_bounced_email_i_fk_email_campaign_report_id" to_schema="core" to_table="email_campaign_report_i" >
				<fk_column name="fk_email_campaign_report_id" pk="email_campaign_report_id" />
			</fk>
		</table>
		<table name="email_campaign_bounced_email_t" >
			<column name="email_campaign_bounced_email_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="email_campaign_bounced_email_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_email_campaign_report_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="bounce_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_email_campaign_bounced_email_t" unique="PRIMARY_KEY" >
				<column name="email_campaign_bounced_email_id" />
			</index>
			<index name="ux_email_campaign_bounced_email_t_key" unique="UNIQUE" >
				<column name="email_campaign_bounced_email_key" />
			</index>
			<index name="ix_email_campaign_bounced_email_t_fk_email_campaign_report_id" unique="NORMAL" >
				<column name="fk_email_campaign_report_id" />
			</index>
			<fk name="fk_email_campaign_bounced_email_t_fk_email_campaign_report_id" to_schema="core" to_table="email_campaign_report_t" >
				<fk_column name="fk_email_campaign_report_id" pk="email_campaign_report_id" />
			</fk>
		</table>
		<table name="email_campaign_clicked_url_i" >
			<column name="email_campaign_clicked_url_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="email_campaign_clicked_url_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_email_campaign_report_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="url" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="clicks" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="unique_clicks" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="percentage_ot_total_clicks" type="real" length="8" decimal="8" jt="7" mandatory="y" />
			<column name="percentage_ot_unique_clicks" type="real" length="8" decimal="8" jt="7" mandatory="y" />
			<column name="last_click_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<index name="pk_email_campaign_clicked_url_i" unique="PRIMARY_KEY" >
				<column name="email_campaign_clicked_url_id" />
			</index>
			<index name="ux_email_campaign_clicked_url_i_key" unique="UNIQUE" >
				<column name="email_campaign_clicked_url_key" />
			</index>
			<index name="ix_email_campaign_clicked_url_i_fk_email_campaign_report_id" unique="NORMAL" >
				<column name="fk_email_campaign_report_id" />
			</index>
			<fk name="fk_email_campaign_clicked_url_i_fk_email_campaign_report_id" to_schema="core" to_table="email_campaign_report_i" >
				<fk_column name="fk_email_campaign_report_id" pk="email_campaign_report_id" />
			</fk>
		</table>
		<table name="email_campaign_clicked_url_t" >
			<column name="email_campaign_clicked_url_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="email_campaign_clicked_url_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_email_campaign_report_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="url" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="clicks" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="unique_clicks" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="percentage_ot_total_clicks" type="real" length="8" decimal="8" jt="7" mandatory="y" />
			<column name="percentage_ot_unique_clicks" type="real" length="8" decimal="8" jt="7" mandatory="y" />
			<column name="last_click_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_email_campaign_clicked_url_t" unique="PRIMARY_KEY" >
				<column name="email_campaign_clicked_url_id" />
			</index>
			<index name="ux_email_campaign_clicked_url_t_key" unique="UNIQUE" >
				<column name="email_campaign_clicked_url_key" />
			</index>
			<index name="ix_email_campaign_clicked_url_t_fk_email_campaign_report_id" unique="NORMAL" >
				<column name="fk_email_campaign_report_id" />
			</index>
			<fk name="fk_email_campaign_clicked_url_t_fk_email_campaign_report_id" to_schema="core" to_table="email_campaign_report_t" >
				<fk_column name="fk_email_campaign_report_id" pk="email_campaign_report_id" />
			</fk>
		</table>
		<table name="email_campaign_opened_by_i" >
			<column name="email_campaign_opened_by_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="email_campaign_opened_by_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_email_campaign_report_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="opens_count" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="open_timestamps" type="_timestamptz" length="35" decimal="6" jt="2003" mandatory="y" />
			<column name="first_name" type="text" decimal="0" jt="12" />
			<column name="last_name" type="text" decimal="0" jt="12" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<index name="pk_email_campaign_opened_by_i" unique="PRIMARY_KEY" >
				<column name="email_campaign_opened_by_id" />
			</index>
			<index name="ux_email_campaign_opened_by_i_key" unique="UNIQUE" >
				<column name="email_campaign_opened_by_key" />
			</index>
			<index name="ix_email_campaign_opened_by_i_fk_email_campaign_report_id" unique="NORMAL" >
				<column name="fk_email_campaign_report_id" />
			</index>
			<fk name="fk_email_campaign_opened_by_i_fk_email_campaign_report_id" to_schema="core" to_table="email_campaign_report_i" >
				<fk_column name="fk_email_campaign_report_id" pk="email_campaign_report_id" />
			</fk>
		</table>
		<table name="email_campaign_opened_by_t" >
			<column name="email_campaign_opened_by_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="email_campaign_opened_by_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_email_campaign_report_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="opens_count" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="open_timestamps" type="_timestamptz" length="35" decimal="6" jt="2003" mandatory="y" />
			<column name="first_name" type="text" decimal="0" jt="12" />
			<column name="last_name" type="text" decimal="0" jt="12" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_email_campaign_opened_by_t" unique="PRIMARY_KEY" >
				<column name="email_campaign_opened_by_id" />
			</index>
			<index name="ux_email_campaign_opened_by_t_key" unique="UNIQUE" >
				<column name="email_campaign_opened_by_key" />
			</index>
			<index name="ix_email_campaign_opened_by_t_fk_email_campaign_report_id" unique="NORMAL" >
				<column name="fk_email_campaign_report_id" />
			</index>
			<fk name="fk_email_campaign_opened_by_t_fk_email_campaign_report_id" to_schema="core" to_table="email_campaign_report_t" >
				<fk_column name="fk_email_campaign_report_id" pk="email_campaign_report_id" />
			</fk>
		</table>
		<table name="email_campaign_recipient_i" >
			<column name="email_campaign_recipient_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="email_campaign_recipient_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_email_campaign_report_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="first_name" type="text" decimal="0" jt="12" />
			<column name="last_name" type="text" decimal="0" jt="12" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<index name="pk_email_campaign_recipient_i" unique="PRIMARY_KEY" >
				<column name="email_campaign_recipient_id" />
			</index>
			<index name="ux_email_campaign_recipient_i_key" unique="UNIQUE" >
				<column name="email_campaign_recipient_key" />
			</index>
			<index name="ix_email_campaign_recipient_i_email_address" unique="NORMAL" >
				<column name="email_address" />
			</index>
			<index name="ix_email_campaign_recipient_i_fk_email_campaign_report_id" unique="NORMAL" >
				<column name="fk_email_campaign_report_id" />
			</index>
			<fk name="fk_email_campaign_recipient_i_fk_email_campaign_report_id" to_schema="core" to_table="email_campaign_report_i" >
				<fk_column name="fk_email_campaign_report_id" pk="email_campaign_report_id" />
			</fk>
		</table>
		<table name="email_campaign_recipient_t" >
			<column name="email_campaign_recipient_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="email_campaign_recipient_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_email_campaign_report_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="first_name" type="text" decimal="0" jt="12" />
			<column name="last_name" type="text" decimal="0" jt="12" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_email_campaign_recipient_t" unique="PRIMARY_KEY" >
				<column name="email_campaign_recipient_id" />
			</index>
			<index name="ux_email_campaign_recipient_t_key" unique="UNIQUE" >
				<column name="email_campaign_recipient_key" />
			</index>
			<index name="ix_email_campaign_recipient_t_email_address" unique="NORMAL" >
				<column name="email_address" />
			</index>
			<index name="ix_email_campaign_recipient_t_fk_email_campaign_report_id" unique="NORMAL" >
				<column name="fk_email_campaign_report_id" />
			</index>
			<fk name="fk_email_campaign_recipient_t_fk_email_campaign_report_id" to_schema="core" to_table="email_campaign_report_t" >
				<fk_column name="fk_email_campaign_report_id" pk="email_campaign_report_id" />
			</fk>
		</table>
		<table name="email_campaign_report_i" >
			<column name="email_campaign_report_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="email_campaign_report_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="mailchimp_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="mailchimp_web_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="emails_sent_total" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="send_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="sent_to_mailing_list" type="text" decimal="0" jt="12" />
			<column name="sent_to_mailing_list_segment_filter" type="text" decimal="0" jt="12" />
			<column name="campaign_title" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="campaign_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="abuse_reports_total" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="unsubscribed_total" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="hard_bounces_total" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="soft_bounces_total" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="syntax_error_bounce_total" type="integer" length="10" decimal="0" jt="4" />
			<column name="forwards_total" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="forwards_opens_total" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="opens_total" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="unique_opens_total" type="integer" length="10" decimal="0" jt="4" />
			<column name="total_open_to_unique_open_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="last_open_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="clicks_total" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="unique_clicks_total" type="integer" length="10" decimal="0" jt="4" />
			<column name="total_clicks_to_unique_clicks_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="unique_subscriiber_clicks_total" type="integer" length="10" decimal="0" jt="4" />
			<column name="last_click_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="industry_type" type="text" decimal="0" jt="12" />
			<column name="industry_open_to_unique_open_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_click_to_unique_click_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_bounce_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_unopen_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_unsub_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_abuse_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="was_timewarp_used" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_send_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_open_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_click_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_email_campaign_report_i" unique="PRIMARY_KEY" >
				<column name="email_campaign_report_id" />
			</index>
			<index name="ux_email_campaign_report_i_key" unique="UNIQUE" >
				<column name="email_campaign_report_key" />
			</index>
			<index name="ix_email_campaign_report_i_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_email_campaign_report_i_fk_date_id_last_click_date" unique="NORMAL" >
				<column name="fk_date_id_last_click_date" />
			</index>
			<index name="ix_email_campaign_report_i_fk_date_id_last_open_date" unique="NORMAL" >
				<column name="fk_date_id_last_open_date" />
			</index>
			<index name="ix_email_campaign_report_i_fk_date_id_send_date" unique="NORMAL" >
				<column name="fk_date_id_send_date" />
			</index>
			<fk name="fk_email_campaign_report_i_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_email_campaign_report_i_fk_date_id_last_click_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_click_date" pk="date_id" />
			</fk>
			<fk name="fk_email_campaign_report_i_fk_date_id_last_open_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_open_date" pk="date_id" />
			</fk>
			<fk name="fk_email_campaign_report_i_fk_date_id_send_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_send_date" pk="date_id" />
			</fk>
		</table>
		<table name="email_campaign_report_t" >
			<column name="email_campaign_report_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="email_campaign_report_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="mailchimp_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="mailchimp_web_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="emails_sent_total" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="send_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="sent_to_mailing_list" type="text" decimal="0" jt="12" />
			<column name="sent_to_mailing_list_segment_filter" type="text" decimal="0" jt="12" />
			<column name="campaign_title" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="campaign_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="abuse_reports_total" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="unsubscribed_total" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="hard_bounces_total" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="soft_bounces_total" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="syntax_error_bounce_total" type="integer" length="10" decimal="0" jt="4" />
			<column name="forwards_total" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="forwards_opens_total" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="opens_total" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="unique_opens_total" type="integer" length="10" decimal="0" jt="4" />
			<column name="total_open_to_unique_open_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="last_open_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="clicks_total" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="unique_clicks_total" type="integer" length="10" decimal="0" jt="4" />
			<column name="total_clicks_to_unique_clicks_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="unique_subscriiber_clicks_total" type="integer" length="10" decimal="0" jt="4" />
			<column name="last_click_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="industry_type" type="text" decimal="0" jt="12" />
			<column name="industry_open_to_unique_open_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_click_to_unique_click_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_bounce_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_unopen_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_unsub_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_abuse_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="was_timewarp_used" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_send_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_open_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_click_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_email_campaign_report_t" unique="PRIMARY_KEY" >
				<column name="email_campaign_report_id" />
			</index>
			<index name="ux_email_campaign_report_t_key" unique="UNIQUE" >
				<column name="email_campaign_report_key" />
			</index>
			<index name="ix_email_campaign_report_t_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_email_campaign_report_t_fk_date_id_last_click_date" unique="NORMAL" >
				<column name="fk_date_id_last_click_date" />
			</index>
			<index name="ix_email_campaign_report_t_fk_date_id_last_open_date" unique="NORMAL" >
				<column name="fk_date_id_last_open_date" />
			</index>
			<index name="ix_email_campaign_report_t_fk_date_id_send_date" unique="NORMAL" >
				<column name="fk_date_id_send_date" />
			</index>
			<fk name="fk_email_campaign_report_t_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_email_campaign_report_t_fk_date_id_last_click_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_click_date" pk="date_id" />
			</fk>
			<fk name="fk_email_campaign_report_t_fk_date_id_last_open_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_open_date" pk="date_id" />
			</fk>
			<fk name="fk_email_campaign_report_t_fk_date_id_send_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_send_date" pk="date_id" />
			</fk>
		</table>
		<table name="employee_i" >
			<column name="employee_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="employee_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="full_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="secondary_email" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="phone" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="mobile_phone" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_employee_i" unique="PRIMARY_KEY" >
				<column name="employee_id" />
			</index>
			<index name="ux_employee_i_employee_key" unique="UNIQUE" >
				<column name="employee_key" />
			</index>
			<index name="ix_employee_i_email" unique="NORMAL" >
				<column name="email" />
			</index>
			<index name="ix_employee_i_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<fk name="fk_employee_i_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
		</table>
		<table name="employee_ih" >
			<column name="employee_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="employee_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="full_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="secondary_email" type="text" decimal="0" jt="12" />
			<column name="phone" type="text" decimal="0" jt="12" />
			<column name="mobile_phone" type="text" decimal="0" jt="12" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_begin_effective_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_end_effective_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_is_current" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<index name="pk_employee_ih" unique="PRIMARY_KEY" >
				<column name="employee_id" />
			</index>
			<index name="ux_employee_ih_employee_key" unique="UNIQUE" >
				<column name="employee_key" />
			</index>
			<index name="ix_employee_ih_email" unique="NORMAL" >
				<column name="email" />
			</index>
		</table>
		<table name="employee_t" >
			<column name="employee_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="employee_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="full_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="secondary_email" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="phone" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="mobile_phone" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_employee_t" unique="PRIMARY_KEY" >
				<column name="employee_id" />
			</index>
			<index name="ux_employee_t_employee_key" unique="UNIQUE" >
				<column name="employee_key" />
			</index>
			<index name="ix_employee_t_email" unique="NORMAL" >
				<column name="email" />
			</index>
			<index name="ix_employee_t_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<fk name="fk_employee_t_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
		</table>
		<table name="iso_3166_country_list_i" >
			<column name="iso_3166_country_list_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="iso_3166_country_list_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="country_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="alpha2code" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="alpha3code" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="capital" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="region" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="subregion" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="numericcode" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<index name="pk_iso_3166_country_list_i_iso_3166_country_list_id" unique="PRIMARY_KEY" >
				<column name="iso_3166_country_list_id" />
			</index>
			<index name="ux_iso_3166_country_list_i_iso_3166_country_list_key" unique="UNIQUE" >
				<column name="iso_3166_country_list_key" />
			</index>
		</table>
		<table name="iso_3166_country_list_t" >
			<column name="iso_3166_country_list_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="iso_3166_country_list_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="country_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="alpha2code" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="alpha3code" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="capital" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="region" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="subregion" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="numericcode" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_iso_3166_country_list_t_iso_3166_country_list_id" unique="PRIMARY_KEY" >
				<column name="iso_3166_country_list_id" />
			</index>
			<index name="ux_iso_3166_country_list_t_iso_3166_country_list_key" unique="UNIQUE" >
				<column name="iso_3166_country_list_key" />
			</index>
		</table>
		<table name="issue_comment_i" >
			<column name="issue_comment_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="issue_comment_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="last_updated_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="body" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_employee_id_created_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_employee_id_updated_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="is_public" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="fk_issue_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_updated_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_issue_comment_i_issue_comment_id" unique="PRIMARY_KEY" >
				<column name="issue_comment_id" />
			</index>
			<index name="ux_issue_comment_i_issue_comment_key" unique="UNIQUE" >
				<column name="issue_comment_key" />
			</index>
			<index name="ix_issue_comment_i_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_issue_comment_i_fk_date_id_last_updated_date" unique="NORMAL" >
				<column name="fk_date_id_last_updated_date" />
			</index>
			<index name="ix_issue_comment_i_fk_employee_id_created_by" unique="NORMAL" >
				<column name="fk_employee_id_created_by" />
			</index>
			<index name="ix_issue_comment_i_fk_employee_id_updated_by" unique="NORMAL" >
				<column name="fk_employee_id_updated_by" />
			</index>
			<index name="ix_issue_comment_i_fk_issue_id" unique="NORMAL" >
				<column name="fk_issue_id" />
			</index>
			<fk name="fk_issue_comment_i_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_comment_i_fk_date_id_last_updated_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_updated_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_comment_i_fk_employee_id_created_by" to_schema="core" to_table="employee_i" >
				<fk_column name="fk_employee_id_created_by" pk="employee_id" />
			</fk>
			<fk name="fk_issue_comment_i_fk_employee_id_updated_by" to_schema="core" to_table="employee_i" >
				<fk_column name="fk_employee_id_updated_by" pk="employee_id" />
			</fk>
			<fk name="fk_issue_comment_i_fk_issue_id" to_schema="core" to_table="issue_i" >
				<fk_column name="fk_issue_id" pk="issue_id" />
			</fk>
		</table>
		<table name="issue_comment_t" >
			<column name="issue_comment_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="issue_comment_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="last_updated_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="body" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_employee_id_created_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_employee_id_updated_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="is_public" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_issue_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_updated_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_issue_comment_t_issue_comment_id" unique="PRIMARY_KEY" >
				<column name="issue_comment_id" />
			</index>
			<index name="ux_issue_comment_t_issue_comment_key" unique="UNIQUE" >
				<column name="issue_comment_key" />
			</index>
			<index name="ix_issue_comment_t_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_issue_comment_t_fk_date_id_last_updated_date" unique="NORMAL" >
				<column name="fk_date_id_last_updated_date" />
			</index>
			<index name="ix_issue_comment_t_fk_employee_id_created_by" unique="NORMAL" >
				<column name="fk_employee_id_created_by" />
			</index>
			<index name="ix_issue_comment_t_fk_employee_id_updated_by" unique="NORMAL" >
				<column name="fk_employee_id_updated_by" />
			</index>
			<index name="ix_issue_comment_t_fk_issue_id" unique="NORMAL" >
				<column name="fk_issue_id" />
			</index>
			<fk name="fk_issue_comment_t_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_comment_t_fk_date_id_last_updated_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_updated_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_comment_t_fk_employee_id_created_by" to_schema="core" to_table="employee_t" >
				<fk_column name="fk_employee_id_created_by" pk="employee_id" />
			</fk>
			<fk name="fk_issue_comment_t_fk_employee_id_updated_by" to_schema="core" to_table="employee_t" >
				<fk_column name="fk_employee_id_updated_by" pk="employee_id" />
			</fk>
			<fk name="fk_issue_comment_t_fk_issue_id" to_schema="core" to_table="issue_t" >
				<fk_column name="fk_issue_id" pk="issue_id" />
			</fk>
		</table>
		<table name="issue_i" >
			<comment><![CDATA[BI-88]]></comment>
			<column name="issue_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="jira_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="jira_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="issue_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="account" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="status" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="summary" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="priority" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="sla_priority" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="description" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="issue_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="resolution" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="deployment" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="epic_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="epic_jira_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="original_estimate" type="interval" length="49" decimal="6" jt="1111" mandatory="y" />
			<column name="remaining_estimate" type="interval" length="49" decimal="6" jt="1111" mandatory="y" />
			<column name="aggregate_original_estimate" type="interval" length="49" decimal="6" jt="1111" mandatory="y" />
			<column name="aggregate_remaining_estimate" type="interval" length="49" decimal="6" jt="1111" mandatory="y" />
			<column name="labels" type="_text" decimal="0" jt="2003" mandatory="y" />
			<column name="components" type="_text" decimal="0" jt="2003" mandatory="y" />
			<column name="fix_versions" type="_text" decimal="0" jt="2003" mandatory="y" />
			<column name="affected_versions" type="_text" decimal="0" jt="2003" mandatory="y" />
			<column name="first_response_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="resolution_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="fk_date_id_pilot_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_sales_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[it is should be the same as core.lopp_i "close date". Both represent thesame thing but both are written manualy into separate system. So its possbile for them to be different. \nThe Correct is which one is ealier]]></comment>
			</column>
			<column name="fk_project_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_party_id_created_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_party_id_reported_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_employee_id_assigned_to" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_inception_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="fk_date_id_deployment_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="customer" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="activation_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="fk_date_id_activation_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="inception_to_first_response_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="inception_to_pilot_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="inception_to_sales_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="inception_to_deployment_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="inception_to_now_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="activation_to_pilot_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="activation_to_sales_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="activation_to_deployment_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="activation_to_now_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pilot_to_sales_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pilot_to_deployment_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pilot_to_now_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="sales_to_deployment_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="sales_to_now_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="deployment_to_now_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="inception_to_resolution_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="first_response_to_resolution_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pilot_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="sales_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="inception_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="deployment_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="fk_date_id_first_response_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_resolution_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="hours_logged_total" type="numeric" length="10" decimal="5" jt="2" mandatory="y" />
			<column name="days_logged_total" type="numeric" length="10" decimal="5" jt="2" mandatory="y" />
			<column name="pilot_finished_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="fk_date_id_pilot_finished_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pilot_to_pilot_finished_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pilot_finished_to_sales_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pilot_finished_to_now_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_issue_i" unique="PRIMARY_KEY" >
				<column name="issue_id" />
			</index>
			<index name="ux_issue_i_issue_key" unique="UNIQUE" >
				<column name="issue_key" />
			</index>
			<index name="ux_issue_i_jira_id" unique="UNIQUE" >
				<column name="jira_id" />
			</index>
			<index name="ux_issue_i_jira_key" unique="UNIQUE" >
				<column name="jira_key" />
			</index>
			<index name="ix_issue_i_account" unique="NORMAL" >
				<column name="account" />
			</index>
			<index name="ix_issue_i_deployment" unique="NORMAL" >
				<column name="deployment" />
			</index>
			<index name="ix_issue_i_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_issue_i_fk_date_id_deployment_date" unique="NORMAL" >
				<column name="fk_date_id_deployment_date" />
			</index>
			<index name="ix_issue_i_fk_date_id_first_response_date" unique="NORMAL" >
				<column name="fk_date_id_first_response_date" />
			</index>
			<index name="ix_issue_i_fk_date_id_inception_date" unique="NORMAL" >
				<column name="fk_date_id_inception_date" />
			</index>
			<index name="ix_issue_i_fk_date_id_pilot_date" unique="NORMAL" >
				<column name="fk_date_id_pilot_date" />
			</index>
			<index name="ix_issue_i_fk_date_id_pilot_finished_date" unique="NORMAL" >
				<column name="fk_date_id_pilot_finished_date" />
			</index>
			<index name="ix_issue_i_fk_date_id_resolution_date" unique="NORMAL" >
				<column name="fk_date_id_resolution_date" />
			</index>
			<index name="ix_issue_i_fk_date_id_sales_date" unique="NORMAL" >
				<column name="fk_date_id_sales_date" />
			</index>
			<index name="ix_issue_i_fk_employee_id_assigned_to" unique="NORMAL" >
				<column name="fk_employee_id_assigned_to" />
			</index>
			<index name="ix_issue_i_fk_party_id_created_by" unique="NORMAL" >
				<column name="fk_party_id_created_by" />
			</index>
			<index name="ix_issue_i_fk_party_id_reported_by" unique="NORMAL" >
				<column name="fk_party_id_reported_by" />
			</index>
			<index name="ix_issue_i_fk_project_id" unique="NORMAL" >
				<column name="fk_project_id" />
			</index>
			<index name="ix_issue_i_status" unique="NORMAL" >
				<column name="status" />
			</index>
			<fk name="fk_issue_i_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_i_fk_date_id_deployment_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_deployment_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_i_fk_date_id_first_response_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_first_response_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_i_fk_date_id_inception_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_inception_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_i_fk_date_id_pilot_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_pilot_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_i_fk_date_id_pilot_finished_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_pilot_finished_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_i_fk_date_id_resolution_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_resolution_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_i_fk_date_id_sales_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_sales_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_i_fk_employee_id_assigned_to" to_schema="core" to_table="employee_i" >
				<fk_column name="fk_employee_id_assigned_to" pk="employee_id" />
			</fk>
			<fk name="fk_issue_i_fk_party_id_created_by" to_schema="core" to_table="party_i" >
				<fk_column name="fk_party_id_created_by" pk="party_id" />
			</fk>
			<fk name="fk_issue_i_fk_party_id_reported_by" to_schema="core" to_table="party_i" >
				<fk_column name="fk_party_id_reported_by" pk="party_id" />
			</fk>
			<fk name="fk_issue_i_fk_project_id" to_schema="core" to_table="project_i" >
				<fk_column name="fk_project_id" pk="project_id" />
			</fk>
		</table>
		<table name="issue_ih" >
			<column name="issue_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="jira_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="jira_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="issue_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="account" type="text" decimal="0" jt="12" />
			<column name="status" type="text" decimal="0" jt="12" />
			<column name="summary" type="text" decimal="0" jt="12" />
			<column name="priority" type="text" decimal="0" jt="12" />
			<column name="sla_priority" type="text" decimal="0" jt="12" />
			<column name="description" type="text" decimal="0" jt="12" />
			<column name="issue_type" type="text" decimal="0" jt="12" />
			<column name="resolution" type="text" decimal="0" jt="12" />
			<column name="deployment" type="text" decimal="0" jt="12" />
			<column name="epic_name" type="text" decimal="0" jt="12" />
			<column name="epic_jira_key" type="text" decimal="0" jt="12" />
			<column name="original_estimate" type="interval" length="49" decimal="6" jt="1111" />
			<column name="remaining_estimate" type="interval" length="49" decimal="6" jt="1111" />
			<column name="aggregate_original_estimate" type="interval" length="49" decimal="6" jt="1111" />
			<column name="aggregate_remaining_estimate" type="interval" length="49" decimal="6" jt="1111" />
			<column name="labels" type="_text" decimal="0" jt="2003" />
			<column name="components" type="_text" decimal="0" jt="2003" />
			<column name="fix_versions" type="_text" decimal="0" jt="2003" />
			<column name="affected_versions" type="_text" decimal="0" jt="2003" />
			<column name="first_response_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="resolution_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="fk_date_id_pilot_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_sales_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_project_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_party_id_created_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_party_id_reported_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_employee_id_assigned_to" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_inception_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_begin_effective_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_end_effective_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_is_current" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_date_id_deployment_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="customer" type="text" decimal="0" jt="12" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<index name="pk_issue_ih" unique="PRIMARY_KEY" >
				<column name="issue_id" />
			</index>
			<index name="ux_issue_ih_issue_key" unique="UNIQUE" >
				<column name="issue_key" />
			</index>
			<index name="ix_issue_ih_account" unique="NORMAL" >
				<column name="account" />
			</index>
			<index name="ix_issue_ih_deployment" unique="NORMAL" >
				<column name="deployment" />
			</index>
			<index name="ix_issue_ih_fk_date_id_deployment_date" unique="NORMAL" >
				<column name="fk_date_id_deployment_date" />
			</index>
			<index name="ix_issue_ih_fk_date_id_inception_date" unique="NORMAL" >
				<column name="fk_date_id_inception_date" />
			</index>
			<index name="ix_issue_ih_fk_date_id_pilot_date" unique="NORMAL" >
				<column name="fk_date_id_pilot_date" />
			</index>
			<index name="ix_issue_ih_fk_date_id_sales_date" unique="NORMAL" >
				<column name="fk_date_id_sales_date" />
			</index>
			<index name="ix_issue_ih_fk_employee_id_assigned_to" unique="NORMAL" >
				<column name="fk_employee_id_assigned_to" />
			</index>
			<index name="ix_issue_ih_fk_party_id_created_by" unique="NORMAL" >
				<column name="fk_party_id_created_by" />
			</index>
			<index name="ix_issue_ih_fk_party_id_reported_by" unique="NORMAL" >
				<column name="fk_party_id_reported_by" />
			</index>
			<index name="ix_issue_ih_fk_project_id" unique="NORMAL" >
				<column name="fk_project_id" />
			</index>
			<index name="ix_issue_ih_status" unique="NORMAL" >
				<column name="status" />
			</index>
			<fk name="fk_issue_ih_fk_date_id_deployment_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_deployment_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_ih_fk_date_id_inception_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_inception_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_ih_fk_date_id_pilot_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_pilot_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_ih_fk_date_id_sales_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_sales_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_ih_fk_employee_id_assigned_to" to_schema="core" to_table="employee_ih" >
				<fk_column name="fk_employee_id_assigned_to" pk="employee_id" />
			</fk>
			<fk name="fk_issue_ih_fk_party_id_created_by" to_schema="core" to_table="party_ih" >
				<fk_column name="fk_party_id_created_by" pk="party_id" />
			</fk>
			<fk name="fk_issue_ih_fk_party_id_reported_by" to_schema="core" to_table="party_ih" >
				<fk_column name="fk_party_id_reported_by" pk="party_id" />
			</fk>
			<fk name="fk_issue_ih_fk_project_id" to_schema="core" to_table="project_ih" >
				<fk_column name="fk_project_id" pk="project_id" />
			</fk>
		</table>
		<table name="issue_relation_map_i" >
			<column name="issue_relation_map_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="issue_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="issue_key_related_issue" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_issue_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_issue_id_related_issue" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="relation" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="relation_direction" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<index name="pk_issue_relation_map_i" unique="PRIMARY_KEY" >
				<column name="issue_relation_map_id" />
			</index>
			<index name="ux_issue_relation_map_i" unique="UNIQUE" >
				<column name="issue_key" />
				<column name="issue_key_related_issue" />
				<column name="relation" />
				<column name="relation_direction" />
			</index>
			<index name="ux_issue_relation_map_i_id" unique="UNIQUE" >
				<column name="fk_issue_id" />
				<column name="fk_issue_id_related_issue" />
				<column name="relation" />
				<column name="relation_direction" />
			</index>
			<index name="ix_issue_relation_map_i_fk_issue_id" unique="NORMAL" >
				<column name="fk_issue_id" />
			</index>
			<index name="ix_issue_relation_map_i_fk_issue_id_related_issue" unique="NORMAL" >
				<column name="fk_issue_id_related_issue" />
			</index>
			<index name="ix_issue_relation_map_i_relation" unique="NORMAL" >
				<column name="relation" />
			</index>
			<index name="ix_issue_relation_map_i_relation_direction" unique="NORMAL" >
				<column name="relation_direction" />
			</index>
			<fk name="fk_issue_relation_map_i_fk_issue_id" to_schema="core" to_table="issue_i" >
				<fk_column name="fk_issue_id" pk="issue_id" />
			</fk>
			<fk name="fk_issue_relation_map_i_fk_issue_id_related_issue" to_schema="core" to_table="issue_i" >
				<fk_column name="fk_issue_id_related_issue" pk="issue_id" />
			</fk>
		</table>
		<table name="issue_relation_map_t" >
			<column name="issue_relation_map_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="issue_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="issue_key_related_issue" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_issue_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_issue_id_related_issue" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="relation" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="relation_direction" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_issue_relation_map_t" unique="PRIMARY_KEY" >
				<column name="issue_relation_map_id" />
			</index>
			<index name="ux_issue_relation_map_t" unique="UNIQUE" >
				<column name="issue_key" />
				<column name="issue_key_related_issue" />
				<column name="relation" />
				<column name="relation_direction" />
			</index>
			<index name="ux_issue_relation_map_t_id" unique="UNIQUE" >
				<column name="fk_issue_id" />
				<column name="fk_issue_id_related_issue" />
				<column name="relation" />
				<column name="relation_direction" />
			</index>
			<index name="ix_issue_relation_map_t_fk_issue_id" unique="NORMAL" >
				<column name="fk_issue_id" />
			</index>
			<index name="ix_issue_relation_map_t_fk_issue_id_related_issue" unique="NORMAL" >
				<column name="fk_issue_id_related_issue" />
			</index>
			<index name="ix_issue_relation_map_t_relation" unique="NORMAL" >
				<column name="relation" />
			</index>
			<index name="ix_issue_relation_map_t_relation_direction" unique="NORMAL" >
				<column name="relation_direction" />
			</index>
			<fk name="fk_issue_relation_map_t_fk_issue_id" to_schema="core" to_table="issue_t" >
				<fk_column name="fk_issue_id" pk="issue_id" />
			</fk>
			<fk name="fk_issue_relation_map_t_fk_issue_id_related_issue" to_schema="core" to_table="issue_t" >
				<fk_column name="fk_issue_id_related_issue" pk="issue_id" />
			</fk>
		</table>
		<table name="issue_t" >
			<comment><![CDATA[BI-88]]></comment>
			<column name="issue_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="jira_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="jira_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="issue_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="account" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="status" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="summary" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="priority" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="sla_priority" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="description" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="issue_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="resolution" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="deployment" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="epic_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="epic_jira_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="original_estimate" type="interval" length="49" decimal="6" jt="1111" mandatory="y" />
			<column name="remaining_estimate" type="interval" length="49" decimal="6" jt="1111" mandatory="y" />
			<column name="aggregate_original_estimate" type="interval" length="49" decimal="6" jt="1111" mandatory="y" />
			<column name="aggregate_remaining_estimate" type="interval" length="49" decimal="6" jt="1111" mandatory="y" />
			<column name="labels" type="_text" decimal="0" jt="2003" mandatory="y" />
			<column name="components" type="_text" decimal="0" jt="2003" mandatory="y" />
			<column name="fix_versions" type="_text" decimal="0" jt="2003" mandatory="y" />
			<column name="affected_versions" type="_text" decimal="0" jt="2003" mandatory="y" />
			<column name="first_response_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="resolution_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="fk_date_id_pilot_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_sales_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[it is should be the same as core.lopp_t "close date". Both represent thesame thing but both are written manualy into separate system. So its possbile for them to be different. \nThe Correct is which one is ealier]]></comment>
			</column>
			<column name="fk_project_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_party_id_created_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_party_id_reported_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_employee_id_assigned_to" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_inception_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_date_id_deployment_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="customer" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="activation_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="fk_date_id_activation_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="inception_to_first_response_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="inception_to_pilot_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="inception_to_sales_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="inception_to_deployment_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="inception_to_now_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="activation_to_pilot_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="activation_to_sales_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="activation_to_deployment_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="activation_to_now_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pilot_to_sales_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pilot_to_deployment_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pilot_to_now_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="sales_to_deployment_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="sales_to_now_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="deployment_to_now_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="inception_to_resolution_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="first_response_to_resolution_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pilot_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="sales_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="inception_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="deployment_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="fk_date_id_first_response_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_resolution_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="hours_logged_total" type="numeric" length="10" decimal="5" jt="2" mandatory="y" />
			<column name="days_logged_total" type="numeric" length="10" decimal="5" jt="2" mandatory="y" />
			<column name="pilot_finished_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="fk_date_id_pilot_finished_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pilot_to_pilot_finished_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pilot_finished_to_sales_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pilot_finished_to_now_days" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_issue_t" unique="PRIMARY_KEY" >
				<column name="issue_id" />
			</index>
			<index name="ux_issue_t_issue_key" unique="UNIQUE" >
				<column name="issue_key" />
			</index>
			<index name="ux_issue_t_jira_id" unique="UNIQUE" >
				<column name="jira_id" />
			</index>
			<index name="ux_issue_t_jira_key" unique="UNIQUE" >
				<column name="jira_key" />
			</index>
			<index name="ix_issue_t_account" unique="NORMAL" >
				<column name="account" />
			</index>
			<index name="ix_issue_t_deployment" unique="NORMAL" >
				<column name="deployment" />
			</index>
			<index name="ix_issue_t_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_issue_t_fk_date_id_deployment_date" unique="NORMAL" >
				<column name="fk_date_id_deployment_date" />
			</index>
			<index name="ix_issue_t_fk_date_id_first_response_date" unique="NORMAL" >
				<column name="fk_date_id_first_response_date" />
			</index>
			<index name="ix_issue_t_fk_date_id_inception_date" unique="NORMAL" >
				<column name="fk_date_id_inception_date" />
			</index>
			<index name="ix_issue_t_fk_date_id_pilot_date" unique="NORMAL" >
				<column name="fk_date_id_pilot_date" />
			</index>
			<index name="ix_issue_t_fk_date_id_pilot_finished_date" unique="NORMAL" >
				<column name="fk_date_id_pilot_finished_date" />
			</index>
			<index name="ix_issue_t_fk_date_id_resolution_date" unique="NORMAL" >
				<column name="fk_date_id_resolution_date" />
			</index>
			<index name="ix_issue_t_fk_date_id_sales_date" unique="NORMAL" >
				<column name="fk_date_id_sales_date" />
			</index>
			<index name="ix_issue_t_fk_employee_id_assigned_to" unique="NORMAL" >
				<column name="fk_employee_id_assigned_to" />
			</index>
			<index name="ix_issue_t_fk_party_id_created_by" unique="NORMAL" >
				<column name="fk_party_id_created_by" />
			</index>
			<index name="ix_issue_t_fk_party_id_reported_by" unique="NORMAL" >
				<column name="fk_party_id_reported_by" />
			</index>
			<index name="ix_issue_t_fk_project_id" unique="NORMAL" >
				<column name="fk_project_id" />
			</index>
			<index name="ix_issue_t_status" unique="NORMAL" >
				<column name="status" />
			</index>
			<fk name="fk_issue_t_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_t_fk_date_id_deployment_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_deployment_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_t_fk_date_id_first_response_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_first_response_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_t_fk_date_id_inception_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_inception_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_t_fk_date_id_pilot_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_pilot_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_t_fk_date_id_pilot_finished_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_pilot_finished_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_t_fk_date_id_resolution_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_resolution_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_t_fk_date_id_sales_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_sales_date" pk="date_id" />
			</fk>
			<fk name="fk_issue_t_fk_employee_id_assigned_to" to_schema="core" to_table="employee_t" >
				<fk_column name="fk_employee_id_assigned_to" pk="employee_id" />
			</fk>
			<fk name="fk_issue_t_fk_party_id_created_by" to_schema="core" to_table="party_t" >
				<fk_column name="fk_party_id_created_by" pk="party_id" />
			</fk>
			<fk name="fk_issue_t_fk_party_id_reported_by" to_schema="core" to_table="party_t" >
				<fk_column name="fk_party_id_reported_by" pk="party_id" />
			</fk>
			<fk name="fk_issue_t_fk_project_id" to_schema="core" to_table="project_t" >
				<fk_column name="fk_project_id" pk="project_id" />
			</fk>
		</table>
		<table name="list_segment_list_member_map_i" >
			<column name="list_segment_list_member_map_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="list_segment_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="list_member_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_mailing_list_segment_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_mailing_list_member_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<index name="pk_list_segment_list_member_map_i" unique="PRIMARY_KEY" >
				<column name="list_segment_list_member_map_id" />
			</index>
			<index name="ux_list_segment_list_member_map_i_key" unique="UNIQUE" >
				<column name="list_segment_key" />
				<column name="list_member_key" />
			</index>
			<index name="ix_list_segment_list_member_map_i_fk_mailing_list_member_id" unique="NORMAL" >
				<column name="fk_mailing_list_member_id" />
			</index>
			<index name="ix_list_segment_list_member_map_i_fk_mailing_list_segment_id" unique="NORMAL" >
				<column name="fk_mailing_list_segment_id" />
			</index>
			<fk name="fk_list_segment_list_member_map_i_fk_mailing_list_member_id" to_schema="core" to_table="mailing_list_member_i" >
				<fk_column name="fk_mailing_list_member_id" pk="mailing_list_member_id" />
			</fk>
			<fk name="fk_list_segment_list_member_map_i_fk_mailing_list_segment_id" to_schema="core" to_table="mailing_list_segment_i" >
				<fk_column name="fk_mailing_list_segment_id" pk="mailing_list_segment_id" />
			</fk>
		</table>
		<table name="list_segment_list_member_map_t" >
			<column name="list_segment_list_member_map_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="list_segment_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="list_member_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_mailing_list_segment_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_mailing_list_member_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_list_segment_list_member_map_t" unique="PRIMARY_KEY" >
				<column name="list_segment_list_member_map_id" />
			</index>
			<index name="ux_list_segment_list_member_map_t_key" unique="UNIQUE" >
				<column name="list_segment_key" />
				<column name="list_member_key" />
			</index>
			<index name="ix_list_segment_list_member_map_t_fk_mailing_list_member_id" unique="NORMAL" >
				<column name="fk_mailing_list_member_id" />
			</index>
			<index name="ix_list_segment_list_member_map_t_fk_mailing_list_segment_id" unique="NORMAL" >
				<column name="fk_mailing_list_segment_id" />
			</index>
			<fk name="fk_list_segment_list_member_map_t_fk_mailing_list_member_id" to_schema="core" to_table="mailing_list_member_t" >
				<fk_column name="fk_mailing_list_member_id" pk="mailing_list_member_id" />
			</fk>
			<fk name="fk_list_segment_list_member_map_t_fk_mailing_list_segment_id" to_schema="core" to_table="mailing_list_segment_t" >
				<fk_column name="fk_mailing_list_segment_id" pk="mailing_list_segment_id" />
			</fk>
		</table>
		<table name="mail_message_i" >
			<column name="mail_message_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_deal_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="mail_message_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="sent_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="from_email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_contact_id_from" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="to_email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_contact_id_to" type="integer" length="10" decimal="0" jt="4" />
			<column name="cc_email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_contact_id_cc" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="bcc_email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_contact_id_bcc" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="body_url" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_employee_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="subject" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="body_snippet" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="read_flag" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="pipedrive_mail_message_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pipedrive_mail_thread_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_sent_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_mail_message_i_mail_message_id" unique="PRIMARY_KEY" >
				<column name="mail_message_id" />
			</index>
			<index name="ix_mail_message_i_fk_contact_id_bcc" unique="NORMAL" >
				<column name="fk_contact_id_bcc" />
			</index>
			<index name="ix_mail_message_i_fk_contact_id_cc" unique="NORMAL" >
				<column name="fk_contact_id_cc" />
			</index>
			<index name="ix_mail_message_i_fk_contact_id_from" unique="NORMAL" >
				<column name="fk_contact_id_from" />
			</index>
			<index name="ix_mail_message_i_fk_contact_id_to" unique="NORMAL" >
				<column name="fk_contact_id_to" />
			</index>
			<index name="ix_mail_message_i_fk_date_id_sent_date" unique="NORMAL" >
				<column name="fk_date_id_sent_date" />
			</index>
			<index name="ix_mail_message_i_fk_deal_id" unique="NORMAL" >
				<column name="fk_deal_id" />
			</index>
			<index name="ix_mail_message_i_fk_employee_id" unique="NORMAL" >
				<column name="fk_employee_id" />
			</index>
			<fk name="fk_mail_message_i_fk_date_id_sent_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_sent_date" pk="date_id" />
			</fk>
			<fk name="fk_mail_message_i_fk_contact_id_bcc" to_schema="core" to_table="contact_i" >
				<fk_column name="fk_contact_id_bcc" pk="contact_id" />
			</fk>
			<fk name="fk_mail_message_i_fk_contact_id_cc" to_schema="core" to_table="contact_i" >
				<fk_column name="fk_contact_id_cc" pk="contact_id" />
			</fk>
			<fk name="fk_mail_message_i_fk_contact_id_from" to_schema="core" to_table="contact_i" >
				<fk_column name="fk_contact_id_from" pk="contact_id" />
			</fk>
			<fk name="fk_mail_message_i_fk_contact_id_to" to_schema="core" to_table="contact_i" >
				<fk_column name="fk_contact_id_to" pk="contact_id" />
			</fk>
			<fk name="fk_mail_message_i_fk_deal_id" to_schema="core" to_table="deal_i" >
				<fk_column name="fk_deal_id" pk="deal_id" />
			</fk>
			<fk name="fk_mail_message_i_fk_employee_id" to_schema="core" to_table="employee_i" >
				<fk_column name="fk_employee_id" pk="employee_id" />
			</fk>
		</table>
		<table name="mail_message_t" >
			<column name="mail_message_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_deal_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="mail_message_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="sent_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="from_email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_contact_id_from" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="to_email_address" type="text" decimal="0" jt="12" />
			<column name="fk_contact_id_to" type="integer" length="10" decimal="0" jt="4" />
			<column name="cc_email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_contact_id_cc" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="bcc_email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_contact_id_bcc" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="body_url" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_employee_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="subject" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="body_snippet" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="read_flag" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="pipedrive_mail_message_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pipedrive_mail_thread_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_sent_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_mail_message_t_mail_message_id" unique="PRIMARY_KEY" >
				<column name="mail_message_id" />
			</index>
			<index name="ix_mail_message_t_fk_contact_id_bcc" unique="NORMAL" >
				<column name="fk_contact_id_bcc" />
			</index>
			<index name="ix_mail_message_t_fk_contact_id_cc" unique="NORMAL" >
				<column name="fk_contact_id_cc" />
			</index>
			<index name="ix_mail_message_t_fk_contact_id_from" unique="NORMAL" >
				<column name="fk_contact_id_from" />
			</index>
			<index name="ix_mail_message_t_fk_contact_id_to" unique="NORMAL" >
				<column name="fk_contact_id_to" />
			</index>
			<index name="ix_mail_message_t_fk_date_id_sent_date" unique="NORMAL" >
				<column name="fk_date_id_sent_date" />
			</index>
			<index name="ix_mail_message_t_fk_deal_id" unique="NORMAL" >
				<column name="fk_deal_id" />
			</index>
			<index name="ix_mail_message_t_fk_employee_id" unique="NORMAL" >
				<column name="fk_employee_id" />
			</index>
			<fk name="fk_mail_message_t_fk_date_id_sent_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_sent_date" pk="date_id" />
			</fk>
			<fk name="fk_mail_message_t_fk_contact_id_bcc" to_schema="core" to_table="contact_t" >
				<fk_column name="fk_contact_id_bcc" pk="contact_id" />
			</fk>
			<fk name="fk_mail_message_t_fk_contact_id_cc" to_schema="core" to_table="contact_t" >
				<fk_column name="fk_contact_id_cc" pk="contact_id" />
			</fk>
			<fk name="fk_mail_message_t_fk_contact_id_from" to_schema="core" to_table="contact_t" >
				<fk_column name="fk_contact_id_from" pk="contact_id" />
			</fk>
			<fk name="fk_mail_message_t_fk_contact_id_to" to_schema="core" to_table="contact_t" >
				<fk_column name="fk_contact_id_to" pk="contact_id" />
			</fk>
			<fk name="fk_mail_message_t_fk_deal_id" to_schema="core" to_table="deal_t" >
				<fk_column name="fk_deal_id" pk="deal_id" />
			</fk>
			<fk name="fk_mail_message_t_fk_employee_id" to_schema="core" to_table="employee_t" >
				<fk_column name="fk_employee_id" pk="employee_id" />
			</fk>
		</table>
		<table name="mailing_list_i" >
			<comment><![CDATA[Column description is copied from mailchimp ducomentation\nhttp://developer.mailchimp.com/documentation/mailchimp/reference/lists\nsome column names were renamed to be more descriptive]]></comment>
			<column name="mailing_list_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="mailing_list_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="mailchimp_id" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[original column name - id\nA string that uniquely identifies this list.]]></comment>
			</column>
			<column name="mailchimp_id_web_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[original column name -\nThe ID used in the MailChimp web application. View this list in your MailChimp account at https://{dc}.admin.mailchimp.com/lists/members/?id={web_id}.]]></comment>
			</column>
			<column name="mailing_list_name" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[original column name -\nThe name of the list.]]></comment>
			</column>
			<column name="notify_on_subscribe_email" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The email address to send subscribe notifications to.]]></comment>
			</column>
			<column name="notify_on_unsubscribe_email" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The email address to send unsubscribe notifications to.]]></comment>
			</column>
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" >
				<comment><![CDATA[The date and time that this list was created.]]></comment>
			</column>
			<column name="subscribe_url_short" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Our EepURL shortened version of this listÄ‚ËĂ˘â€šÂ¬Ă˘â€žËs subscribe form.]]></comment>
			</column>
			<column name="subscribe_url_long" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The full version of this listÄ‚ËĂ˘â€šÂ¬Ă˘â€žËs subscribe form (host will vary).]]></comment>
			</column>
			<column name="visibility" type="text" decimal="0" jt="12" >
				<comment><![CDATA[Whether this list is public or private.\nPossible Values:\npub, prv]]></comment>
			</column>
			<column name="double_optin" type="bool" length="1" decimal="0" jt="-7" />
			<column name="marketing_permissions" type="bool" length="1" decimal="0" jt="-7" />
			<column name="member_count" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[The number of active members in the list.]]></comment>
			</column>
			<column name="unsubscribe_count" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[The number of members who have unsubscribed from the list.]]></comment>
			</column>
			<column name="cleaned_count" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[The number of members cleaned from the list.]]></comment>
			</column>
			<column name="member_count_since_last_campaign" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[The number of active members in the list since the last campaign was sent.]]></comment>
			</column>
			<column name="unsubscribe_count_last_campaign" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[The number of members who have unsubscribed since the last campaign was sent.]]></comment>
			</column>
			<column name="cleaned_count_last_campaign" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[The number of members cleaned from the list since the last campaign was sent.]]></comment>
			</column>
			<column name="campaign_count" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[The number of campaigns in any status that use this list.]]></comment>
			</column>
			<column name="campaign_last_sent_timestamp" type="timestamptz" length="35" decimal="6" jt="93" >
				<comment><![CDATA[The date and time the last campaign was sent to this list. This is updated when a campaign is sent to 10 or more recipients.]]></comment>
			</column>
			<column name="merge_field_count" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[The number of merge vars for this list (not EMAIL, which is required).]]></comment>
			</column>
			<column name="avg_sub_rate" type="real" length="8" decimal="8" jt="7" mandatory="y" >
				<comment><![CDATA[The average number of subscriptions per month for the list (not returned if we havenÄ‚ËĂ˘â€šÂ¬Ă˘â€žËt calculated it yet).]]></comment>
			</column>
			<column name="avg_unsub_rate" type="real" length="8" decimal="8" jt="7" mandatory="y" >
				<comment><![CDATA[The average number of unsubscriptions per month for the list (not returned if we havenÄ‚ËĂ˘â€šÂ¬Ă˘â€žËt calculated it yet).]]></comment>
			</column>
			<column name="target_sub_rate" type="real" length="8" decimal="8" jt="7" >
				<comment><![CDATA[The target number of subscriptions per month for the list to keep it growing (not returned if we havenÄ‚ËĂ˘â€šÂ¬Ă˘â€žËt calculated it yet).]]></comment>
			</column>
			<column name="open_rate" type="real" length="8" decimal="8" jt="7" mandatory="y" >
				<comment><![CDATA[The average open rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we havenÄ‚ËĂ˘â€šÂ¬Ă˘â€žËt calculated it yet).]]></comment>
			</column>
			<column name="click_rate" type="real" length="8" decimal="8" jt="7" mandatory="y" >
				<comment><![CDATA[The average click rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we havenÄ‚ËĂ˘â€šÂ¬Ă˘â€žËt calculated it yet).]]></comment>
			</column>
			<column name="last_sub_timestamp" type="timestamptz" length="35" decimal="6" jt="93" >
				<comment><![CDATA[The date and time of the last time someone subscribed to this list.]]></comment>
			</column>
			<column name="last_unsub_timestamp" type="timestamptz" length="35" decimal="6" jt="93" >
				<comment><![CDATA[The date and time of the last time someone unsubscribed from this list.]]></comment>
			</column>
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_sent_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_sub_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_unsub_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_mailing_list_i" unique="PRIMARY_KEY" >
				<column name="mailing_list_id" />
			</index>
			<index name="ux_mailing_list_i_key" unique="UNIQUE" >
				<column name="mailing_list_key" />
			</index>
			<index name="ix_mailing_list_i_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_mailing_list_i_fk_date_id_last_sent_date" unique="NORMAL" >
				<column name="fk_date_id_last_sent_date" />
			</index>
			<index name="ix_mailing_list_i_fk_date_id_last_sub_date" unique="NORMAL" >
				<column name="fk_date_id_last_sub_date" />
			</index>
			<index name="ix_mailing_list_i_fk_date_id_last_unsub_date" unique="NORMAL" >
				<column name="fk_date_id_last_unsub_date" />
			</index>
			<fk name="fk_mailing_list_i_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_mailing_list_i_fk_date_id_last_sent_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_sent_date" pk="date_id" />
			</fk>
			<fk name="fk_mailing_list_i_fk_date_id_last_sub_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_sub_date" pk="date_id" />
			</fk>
			<fk name="fk_mailing_list_i_fk_date_id_last_unsub_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_unsub_date" pk="date_id" />
			</fk>
		</table>
		<table name="mailing_list_member_i" >
			<column name="mailing_list_member_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="mailing_list_member_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="mailchimp_id" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The MD5 hash of the lowercase version of the list memberÄ‚ËĂ˘â€šÂ¬Ă˘â€žËs email address.]]></comment>
			</column>
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Email address for a subscriber.]]></comment>
			</column>
			<column name="mailchimp_unique_email_id" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[An identifier for the address across all of MailChimp.]]></comment>
			</column>
			<column name="status" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[SubscriberÄ‚ËĂ˘â€šÂ¬Ă˘â€žËs current status.\nPossible Values:\nsubscribed, unsubscribed, cleaned, pending, transactional]]></comment>
			</column>
			<column name="fk_party_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="avg_open_rate" type="real" length="8" decimal="8" jt="7" mandatory="y" >
				<comment><![CDATA[A subscriberÄ‚ËĂ˘â€šÂ¬Ă˘â€žËs average open rate.]]></comment>
			</column>
			<column name="avg_click_rate" type="real" length="8" decimal="8" jt="7" mandatory="y" >
				<comment><![CDATA[A subscriberÄ‚ËĂ˘â€šÂ¬Ă˘â€žËs average clickthrough rate.]]></comment>
			</column>
			<column name="ip_address_signup" type="text" decimal="0" jt="12" >
				<comment><![CDATA[IP address the subscriber signed up from.]]></comment>
			</column>
			<column name="timestamp_signup" type="timestamptz" length="35" decimal="6" jt="93" >
				<comment><![CDATA[The date and time the subscriber signed up for the list.]]></comment>
			</column>
			<column name="ip_address_opt_in" type="text" decimal="0" jt="12" >
				<comment><![CDATA[The IP address the subscriber used to confirm their opt-in status.]]></comment>
			</column>
			<column name="timestamp_opt_in" type="timestamptz" length="35" decimal="6" jt="93" >
				<comment><![CDATA[The date and time the subscribe confirmed their opt-in status.]]></comment>
			</column>
			<column name="last_changed_timestamp" type="timestamptz" length="35" decimal="6" jt="93" >
				<comment><![CDATA[The date and time the memberÄ‚ËĂ˘â€šÂ¬Ă˘â€žËs info was last changed.]]></comment>
			</column>
			<column name="email_client" type="text" decimal="0" jt="12" >
				<comment><![CDATA[The list memberÄ‚ËĂ˘â€šÂ¬Ă˘â€žËs email client.]]></comment>
			</column>
			<column name="location_latitude" type="real" length="8" decimal="8" jt="7" />
			<column name="location_longitude" type="real" length="8" decimal="8" jt="7" />
			<column name="location_country_code" type="text" decimal="0" jt="12" >
				<comment><![CDATA[The unique code for the location country.]]></comment>
			</column>
			<column name="fk_mailing_list_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="fk_date_id_signup_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_opt_in_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_changed_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_mailing_list_member_i" unique="PRIMARY_KEY" >
				<column name="mailing_list_member_id" />
			</index>
			<index name="ux_mailing_list_member_i_key" unique="UNIQUE" >
				<column name="mailing_list_member_key" />
			</index>
			<index name="ix_mailing_list_member_i_email_address" unique="NORMAL" >
				<column name="email_address" />
			</index>
			<index name="ix_mailing_list_member_i_fk_date_id_last_changed_date" unique="NORMAL" >
				<column name="fk_date_id_last_changed_date" />
			</index>
			<index name="ix_mailing_list_member_i_fk_date_id_opt_in_date" unique="NORMAL" >
				<column name="fk_date_id_opt_in_date" />
			</index>
			<index name="ix_mailing_list_member_i_fk_date_id_signup_date" unique="NORMAL" >
				<column name="fk_date_id_signup_date" />
			</index>
			<index name="ix_mailing_list_member_i_fk_mailing_list_id" unique="NORMAL" >
				<column name="fk_mailing_list_id" />
			</index>
			<index name="ix_mailing_list_member_i_fk_party_id" unique="NORMAL" >
				<column name="fk_party_id" />
			</index>
			<fk name="fk_mailing_list_member_i_fk_date_id_last_changed_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_changed_date" pk="date_id" />
			</fk>
			<fk name="fk_mailing_list_member_i_fk_date_id_opt_in_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_opt_in_date" pk="date_id" />
			</fk>
			<fk name="fk_mailing_list_member_i_fk_date_id_signup_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_signup_date" pk="date_id" />
			</fk>
			<fk name="fk_mailing_list_member_i_fk_mailing_list_id" to_schema="core" to_table="mailing_list_i" >
				<fk_column name="fk_mailing_list_id" pk="mailing_list_id" />
			</fk>
			<fk name="fk_mailing_list_member_i_fk_party_id" to_schema="core" to_table="party_i" >
				<fk_column name="fk_party_id" pk="party_id" />
			</fk>
		</table>
		<table name="mailing_list_member_t" >
			<column name="mailing_list_member_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="mailing_list_member_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="mailchimp_id" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The MD5 hash of the lowercase version of the list memberĂ„â€šĂ‹ÂÄ‚ËĂ˘â‚¬ĹˇĂ‚Â¬Ä‚ËĂ˘â‚¬ĹľĂ‹Âs email address.]]></comment>
			</column>
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Email address for a subscriber.]]></comment>
			</column>
			<column name="mailchimp_unique_email_id" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[An identifier for the address across all of MailChimp.]]></comment>
			</column>
			<column name="status" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[SubscriberĂ„â€šĂ‹ÂÄ‚ËĂ˘â‚¬ĹˇĂ‚Â¬Ä‚ËĂ˘â‚¬ĹľĂ‹Âs current status.\nPossible Values:\nsubscribed, unsubscribed, cleaned, pending, transactional]]></comment>
			</column>
			<column name="fk_party_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="avg_open_rate" type="real" length="8" decimal="8" jt="7" mandatory="y" >
				<comment><![CDATA[A subscriberĂ„â€šĂ‹ÂÄ‚ËĂ˘â‚¬ĹˇĂ‚Â¬Ä‚ËĂ˘â‚¬ĹľĂ‹Âs average open rate.]]></comment>
			</column>
			<column name="avg_click_rate" type="real" length="8" decimal="8" jt="7" mandatory="y" >
				<comment><![CDATA[A subscriberĂ„â€šĂ‹ÂÄ‚ËĂ˘â‚¬ĹˇĂ‚Â¬Ä‚ËĂ˘â‚¬ĹľĂ‹Âs average clickthrough rate.]]></comment>
			</column>
			<column name="ip_address_signup" type="text" decimal="0" jt="12" >
				<comment><![CDATA[IP address the subscriber signed up from.]]></comment>
			</column>
			<column name="timestamp_signup" type="timestamptz" length="35" decimal="6" jt="93" >
				<comment><![CDATA[The date and time the subscriber signed up for the list.]]></comment>
			</column>
			<column name="ip_address_opt_in" type="text" decimal="0" jt="12" >
				<comment><![CDATA[The IP address the subscriber used to confirm their opt-in status.]]></comment>
			</column>
			<column name="timestamp_opt_in" type="timestamptz" length="35" decimal="6" jt="93" >
				<comment><![CDATA[The date and time the subscribe confirmed their opt-in status.]]></comment>
			</column>
			<column name="last_changed_timestamp" type="timestamptz" length="35" decimal="6" jt="93" >
				<comment><![CDATA[The date and time the memberĂ„â€šĂ‹ÂÄ‚ËĂ˘â‚¬ĹˇĂ‚Â¬Ä‚ËĂ˘â‚¬ĹľĂ‹Âs info was last changed.]]></comment>
			</column>
			<column name="email_client" type="text" decimal="0" jt="12" >
				<comment><![CDATA[The list memberĂ„â€šĂ‹ÂÄ‚ËĂ˘â‚¬ĹˇĂ‚Â¬Ä‚ËĂ˘â‚¬ĹľĂ‹Âs email client.]]></comment>
			</column>
			<column name="location_latitude" type="real" length="8" decimal="8" jt="7" />
			<column name="location_longitude" type="real" length="8" decimal="8" jt="7" />
			<column name="location_country_code" type="text" decimal="0" jt="12" >
				<comment><![CDATA[The unique code for the location country.]]></comment>
			</column>
			<column name="fk_mailing_list_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_date_id_signup_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_opt_in_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_changed_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_mailing_list_member_t" unique="PRIMARY_KEY" >
				<column name="mailing_list_member_id" />
			</index>
			<index name="ux_mailing_list_member_t_key" unique="UNIQUE" >
				<column name="mailing_list_member_key" />
			</index>
			<index name="ix_mailing_list_member_t_email_address" unique="NORMAL" >
				<column name="email_address" />
			</index>
			<index name="ix_mailing_list_member_t_fk_date_id_last_changed_date" unique="NORMAL" >
				<column name="fk_date_id_last_changed_date" />
			</index>
			<index name="ix_mailing_list_member_t_fk_date_id_opt_in_date" unique="NORMAL" >
				<column name="fk_date_id_opt_in_date" />
			</index>
			<index name="ix_mailing_list_member_t_fk_date_id_signup_date" unique="NORMAL" >
				<column name="fk_date_id_signup_date" />
			</index>
			<index name="ix_mailing_list_member_t_fk_mailing_list_id" unique="NORMAL" >
				<column name="fk_mailing_list_id" />
			</index>
			<index name="ix_mailing_list_member_t_fk_party_id" unique="NORMAL" >
				<column name="fk_party_id" />
			</index>
			<fk name="fk_mailing_list_member_t_fk_date_id_last_changed_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_changed_date" pk="date_id" />
			</fk>
			<fk name="fk_mailing_list_member_t_fk_date_id_opt_in_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_opt_in_date" pk="date_id" />
			</fk>
			<fk name="fk_mailing_list_member_t_fk_date_id_signup_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_signup_date" pk="date_id" />
			</fk>
			<fk name="fk_mailing_list_member_t_fk_mailing_list_id" to_schema="core" to_table="mailing_list_t" >
				<fk_column name="fk_mailing_list_id" pk="mailing_list_id" />
			</fk>
			<fk name="fk_mailing_list_member_t_fk_party_id" to_schema="core" to_table="party_t" >
				<fk_column name="fk_party_id" pk="party_id" />
			</fk>
		</table>
		<table name="mailing_list_segment_i" >
			<column name="mailing_list_segment_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="mailing_list_segment_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="segment_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="mailchimp_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="segment_type" type="text" decimal="0" jt="12" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="last_updated_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="segment_filter_options" type="jsonb" decimal="0" jt="1111" />
			<column name="fk_mailing_list_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_updated_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_mailing_list_segment_i" unique="PRIMARY_KEY" >
				<column name="mailing_list_segment_id" />
			</index>
			<index name="ux_mailing_list_segment_i_key" unique="UNIQUE" >
				<column name="mailing_list_segment_key" />
			</index>
			<index name="ix_mailing_list_segment_i_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_mailing_list_segment_i_fk_date_id_last_updated_date" unique="NORMAL" >
				<column name="fk_date_id_last_updated_date" />
			</index>
			<index name="ix_mailing_list_segment_i_fk_mailing_list_id" unique="NORMAL" >
				<column name="fk_mailing_list_id" />
			</index>
			<fk name="fk_mailing_list_segment_i_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_mailing_list_segment_i_fk_date_id_last_updated_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_updated_date" pk="date_id" />
			</fk>
			<fk name="fk_mailing_list_segment_i_fk_mailing_list_id" to_schema="core" to_table="mailing_list_i" >
				<fk_column name="fk_mailing_list_id" pk="mailing_list_id" />
			</fk>
		</table>
		<table name="mailing_list_segment_t" >
			<column name="mailing_list_segment_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="mailing_list_segment_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="segment_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="mailchimp_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="segment_type" type="text" decimal="0" jt="12" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="last_updated_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="segment_filter_options" type="jsonb" decimal="0" jt="1111" />
			<column name="fk_mailing_list_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_updated_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_mailing_list_segment_t" unique="PRIMARY_KEY" >
				<column name="mailing_list_segment_id" />
			</index>
			<index name="ux_mailing_list_segment_t_key" unique="UNIQUE" >
				<column name="mailing_list_segment_key" />
			</index>
			<index name="ix_mailing_list_segment_t_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_mailing_list_segment_t_fk_date_id_last_updated_date" unique="NORMAL" >
				<column name="fk_date_id_last_updated_date" />
			</index>
			<index name="ix_mailing_list_segment_t_fk_mailing_list_id" unique="NORMAL" >
				<column name="fk_mailing_list_id" />
			</index>
			<fk name="fk_mailing_list_segment_t_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_mailing_list_segment_t_fk_date_id_last_updated_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_updated_date" pk="date_id" />
			</fk>
			<fk name="fk_mailing_list_segment_t_fk_mailing_list_id" to_schema="core" to_table="mailing_list_t" >
				<fk_column name="fk_mailing_list_id" pk="mailing_list_id" />
			</fk>
		</table>
		<table name="mailing_list_t" >
			<comment><![CDATA[Column description is copied from mailchimp ducomentation\nhttp://developer.mailchimp.com/documentation/mailchimp/reference/lists\nsome column names were renamed to be more descriptive]]></comment>
			<column name="mailing_list_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="mailing_list_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="mailchimp_id" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[original column name - id\nA string that uniquely identifies this list.]]></comment>
			</column>
			<column name="mailchimp_id_web_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[original column name -\nThe ID used in the MailChimp web application. View this list in your MailChimp account at https://{dc}.admin.mailchimp.com/lists/members/?id={web_id}.]]></comment>
			</column>
			<column name="mailing_list_name" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[original column name -\nThe name of the list.]]></comment>
			</column>
			<column name="notify_on_subscribe_email" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The email address to send subscribe notifications to.]]></comment>
			</column>
			<column name="notify_on_unsubscribe_email" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The email address to send unsubscribe notifications to.]]></comment>
			</column>
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" >
				<comment><![CDATA[The date and time that this list was created.]]></comment>
			</column>
			<column name="subscribe_url_short" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[Our EepURL shortened version of this listĂ„â€šĂ‹ÂÄ‚ËĂ˘â‚¬ĹˇĂ‚Â¬Ä‚ËĂ˘â‚¬ĹľĂ‹Âs subscribe form.]]></comment>
			</column>
			<column name="subscribe_url_long" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[The full version of this listĂ„â€šĂ‹ÂÄ‚ËĂ˘â‚¬ĹˇĂ‚Â¬Ä‚ËĂ˘â‚¬ĹľĂ‹Âs subscribe form (host will vary).]]></comment>
			</column>
			<column name="visibility" type="text" decimal="0" jt="12" >
				<comment><![CDATA[Whether this list is public or private.\nPossible Values:\npub, prv]]></comment>
			</column>
			<column name="double_optin" type="bool" length="1" decimal="0" jt="-7" />
			<column name="marketing_permissions" type="bool" length="1" decimal="0" jt="-7" />
			<column name="member_count" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[The number of active members in the list.]]></comment>
			</column>
			<column name="unsubscribe_count" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<comment><![CDATA[The number of members who have unsubscribed from the list.]]></comment>
			</column>
			<column name="cleaned_count" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[The number of members cleaned from the list.]]></comment>
			</column>
			<column name="member_count_since_last_campaign" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[The number of active members in the list since the last campaign was sent.]]></comment>
			</column>
			<column name="unsubscribe_count_last_campaign" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[The number of members who have unsubscribed since the last campaign was sent.]]></comment>
			</column>
			<column name="cleaned_count_last_campaign" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[The number of members cleaned from the list since the last campaign was sent.]]></comment>
			</column>
			<column name="campaign_count" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[The number of campaigns in any status that use this list.]]></comment>
			</column>
			<column name="campaign_last_sent_timestamp" type="timestamptz" length="35" decimal="6" jt="93" >
				<comment><![CDATA[The date and time the last campaign was sent to this list. This is updated when a campaign is sent to 10 or more recipients.]]></comment>
			</column>
			<column name="merge_field_count" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[The number of merge vars for this list (not EMAIL, which is required).]]></comment>
			</column>
			<column name="avg_sub_rate" type="real" length="8" decimal="8" jt="7" mandatory="y" >
				<comment><![CDATA[The average number of subscriptions per month for the list (not returned if we havenĂ„â€šĂ‹ÂÄ‚ËĂ˘â‚¬ĹˇĂ‚Â¬Ä‚ËĂ˘â‚¬ĹľĂ‹Ât calculated it yet).]]></comment>
			</column>
			<column name="avg_unsub_rate" type="real" length="8" decimal="8" jt="7" mandatory="y" >
				<comment><![CDATA[The average number of unsubscriptions per month for the list (not returned if we havenĂ„â€šĂ‹ÂÄ‚ËĂ˘â‚¬ĹˇĂ‚Â¬Ä‚ËĂ˘â‚¬ĹľĂ‹Ât calculated it yet).]]></comment>
			</column>
			<column name="target_sub_rate" type="real" length="8" decimal="8" jt="7" >
				<comment><![CDATA[The target number of subscriptions per month for the list to keep it growing (not returned if we havenĂ„â€šĂ‹ÂÄ‚ËĂ˘â‚¬ĹˇĂ‚Â¬Ä‚ËĂ˘â‚¬ĹľĂ‹Ât calculated it yet).]]></comment>
			</column>
			<column name="open_rate" type="real" length="8" decimal="8" jt="7" mandatory="y" >
				<comment><![CDATA[The average open rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we havenĂ„â€šĂ‹ÂÄ‚ËĂ˘â‚¬ĹˇĂ‚Â¬Ä‚ËĂ˘â‚¬ĹľĂ‹Ât calculated it yet).]]></comment>
			</column>
			<column name="click_rate" type="real" length="8" decimal="8" jt="7" mandatory="y" >
				<comment><![CDATA[The average click rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we havenĂ„â€šĂ‹ÂÄ‚ËĂ˘â‚¬ĹˇĂ‚Â¬Ä‚ËĂ˘â‚¬ĹľĂ‹Ât calculated it yet).]]></comment>
			</column>
			<column name="last_sub_timestamp" type="timestamptz" length="35" decimal="6" jt="93" >
				<comment><![CDATA[The date and time of the last time someone subscribed to this list.]]></comment>
			</column>
			<column name="last_unsub_timestamp" type="timestamptz" length="35" decimal="6" jt="93" >
				<comment><![CDATA[The date and time of the last time someone unsubscribed from this list.]]></comment>
			</column>
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_sent_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_sub_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_unsub_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_mailing_list_t" unique="PRIMARY_KEY" >
				<column name="mailing_list_id" />
			</index>
			<index name="ux_mailing_list_t_key" unique="UNIQUE" >
				<column name="mailing_list_key" />
			</index>
			<index name="ix_mailing_list_t_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_mailing_list_t_fk_date_id_last_sent_date" unique="NORMAL" >
				<column name="fk_date_id_last_sent_date" />
			</index>
			<index name="ix_mailing_list_t_fk_date_id_last_sub_date" unique="NORMAL" >
				<column name="fk_date_id_last_sub_date" />
			</index>
			<index name="ix_mailing_list_t_fk_date_id_last_unsub_date" unique="NORMAL" >
				<column name="fk_date_id_last_unsub_date" />
			</index>
			<fk name="fk_mailing_list_i_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_mailing_list_t_fk_date_id_last_sent_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_sent_date" pk="date_id" />
			</fk>
			<fk name="fk_mailing_list_t_fk_date_id_last_sub_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_sub_date" pk="date_id" />
			</fk>
			<fk name="fk_mailing_list_t_fk_date_id_last_unsub_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_unsub_date" pk="date_id" />
			</fk>
		</table>
		<table name="note_i" >
			<column name="note_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="note_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_deal_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_contact_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_organization_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="last_modified_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="pinned_to_deal_flag" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="pinned_to_person_flag" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="pinned_to_organization_flag" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="content" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_employee_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_modified_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_note_i_note_id" unique="PRIMARY_KEY" >
				<column name="note_id" />
			</index>
			<index name="ux_note_i_note_key" unique="UNIQUE" >
				<column name="note_key" />
			</index>
			<index name="ix_note_i_fk_contact_id" unique="NORMAL" >
				<column name="fk_contact_id" />
			</index>
			<index name="ix_note_i_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_note_i_fk_date_id_last_modified_date" unique="NORMAL" >
				<column name="fk_date_id_last_modified_date" />
			</index>
			<index name="ix_note_i_fk_deal_id" unique="NORMAL" >
				<column name="fk_deal_id" />
			</index>
			<index name="ix_note_i_fk_employee_id" unique="NORMAL" >
				<column name="fk_employee_id" />
			</index>
			<index name="ix_note_i_fk_organization_id" unique="NORMAL" >
				<column name="fk_organization_id" />
			</index>
			<fk name="fk_note_i_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_note_i_fk_date_id_last_modified_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_modified_date" pk="date_id" />
			</fk>
			<fk name="fk_note_i_fk_contact_id" to_schema="core" to_table="contact_i" >
				<fk_column name="fk_contact_id" pk="contact_id" />
			</fk>
			<fk name="fk_note_i_fk_deal_id" to_schema="core" to_table="deal_i" >
				<fk_column name="fk_deal_id" pk="deal_id" />
			</fk>
			<fk name="fk_note_i_fk_employee_id" to_schema="core" to_table="employee_i" >
				<fk_column name="fk_employee_id" pk="employee_id" />
			</fk>
			<fk name="fk_note_i_fk_organization_id" to_schema="core" to_table="organization_i" >
				<fk_column name="fk_organization_id" pk="organization_id" />
			</fk>
		</table>
		<table name="note_t" >
			<column name="note_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="note_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_deal_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_contact_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_organization_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="last_modified_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="pinned_to_deal_flag" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="pinned_to_person_flag" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="pinned_to_organization_flag" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="content" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_employee_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_modified_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_note_t_note_id" unique="PRIMARY_KEY" >
				<column name="note_id" />
			</index>
			<index name="ux_note_t_note_key" unique="UNIQUE" >
				<column name="note_key" />
			</index>
			<index name="ix_note_t_fk_contact_id" unique="NORMAL" >
				<column name="fk_contact_id" />
			</index>
			<index name="ix_note_t_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_note_t_fk_date_id_last_modified_date" unique="NORMAL" >
				<column name="fk_date_id_last_modified_date" />
			</index>
			<index name="ix_note_t_fk_deal_id" unique="NORMAL" >
				<column name="fk_deal_id" />
			</index>
			<index name="ix_note_t_fk_employee_id" unique="NORMAL" >
				<column name="fk_employee_id" />
			</index>
			<index name="ix_note_t_fk_organization_id" unique="NORMAL" >
				<column name="fk_organization_id" />
			</index>
			<fk name="fk_note_t_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_note_t_fk_date_id_last_modified_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_modified_date" pk="date_id" />
			</fk>
			<fk name="fk_note_t_fk_contact_id" to_schema="core" to_table="contact_t" >
				<fk_column name="fk_contact_id" pk="contact_id" />
			</fk>
			<fk name="fk_note_t_fk_deal_id" to_schema="core" to_table="deal_t" >
				<fk_column name="fk_deal_id" pk="deal_id" />
			</fk>
			<fk name="fk_note_t_fk_employee_id" to_schema="core" to_table="employee_t" >
				<fk_column name="fk_employee_id" pk="employee_id" />
			</fk>
			<fk name="fk_note_t_fk_organization_id" to_schema="core" to_table="organization_t" >
				<fk_column name="fk_organization_id" pk="organization_id" />
			</fk>
		</table>
		<table name="organization_i" >
			<column name="organization_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="organization_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="address_full" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="address_city" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="address_country" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="pipedrive_label" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_party_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_employee_id_owner" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="last_updated_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="pipedrive_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_updated_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="address_region" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_organization_i_organization_id" unique="PRIMARY_KEY" >
				<column name="organization_id" />
			</index>
			<index name="ux_organization_i_organization_key" unique="UNIQUE" >
				<column name="organization_key" />
			</index>
			<index name="ix_organization_i_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_organization_i_fk_date_id_last_updated_date" unique="NORMAL" >
				<column name="fk_date_id_last_updated_date" />
			</index>
			<index name="ix_organization_i_fk_employee_id_owner" unique="NORMAL" >
				<column name="fk_employee_id_owner" />
			</index>
			<index name="ix_organization_i_fk_party_id" unique="NORMAL" >
				<column name="fk_party_id" />
			</index>
			<fk name="fk_organization_i_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_organization_i_fk_date_id_last_updated_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_updated_date" pk="date_id" />
			</fk>
			<fk name="fk_organization_i_fk_employee_id_owner" to_schema="core" to_table="employee_i" >
				<fk_column name="fk_employee_id_owner" pk="employee_id" />
			</fk>
			<fk name="fk_organization_i_fk_party_id" to_schema="core" to_table="party_i" >
				<fk_column name="fk_party_id" pk="party_id" />
			</fk>
		</table>
		<table name="organization_ih" >
			<column name="organization_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="organization_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_party_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="address_full" type="text" decimal="0" jt="12" />
			<column name="address_street_number" type="text" decimal="0" jt="12" />
			<column name="address_street" type="text" decimal="0" jt="12" />
			<column name="address_city" type="text" decimal="0" jt="12" />
			<column name="address_country" type="text" decimal="0" jt="12" />
			<column name="address_postal_code" type="text" decimal="0" jt="12" />
			<column name="pipedrive_label" type="text" decimal="0" jt="12" />
			<column name="fk_employee_id_owner" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="last_updated_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="pipedrive_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_begin_effective_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_end_effective_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_is_current" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<index name="pk_organization_ih_organization_id" unique="PRIMARY_KEY" >
				<column name="organization_id" />
			</index>
			<index name="ux_organization_ih_organization_key" unique="UNIQUE" >
				<column name="organization_key" />
			</index>
			<index name="ix_organization_ih_fk_employee_id_owner" unique="NORMAL" >
				<column name="fk_employee_id_owner" />
			</index>
			<index name="ix_organization_ih_fk_party_id" unique="NORMAL" >
				<column name="fk_party_id" />
			</index>
			<fk name="fk_organization_ih_fk_employee_id_owner" to_schema="core" to_table="employee_ih" >
				<fk_column name="fk_employee_id_owner" pk="employee_id" />
			</fk>
			<fk name="fk_organization_ih_fk_party_id" to_schema="core" to_table="party_ih" >
				<fk_column name="fk_party_id" pk="party_id" />
			</fk>
		</table>
		<table name="organization_relation_i" >
			<column name="organization_relation_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="organization_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="organization_key_related_organization" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_organization_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_organization_id_related_organization" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="related_organization_is" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<index name="pk_organization_relation_i_organization_relation_id" unique="PRIMARY_KEY" >
				<column name="organization_relation_id" />
			</index>
			<index name="ux_organization_relation_i_key" unique="UNIQUE" >
				<column name="organization_key" />
				<column name="organization_key_related_organization" />
				<column name="related_organization_is" />
			</index>
			<index name="ix_organization_relation_i_fk_organization_id" unique="NORMAL" >
				<column name="fk_organization_id" />
			</index>
			<index name="ix_organization_relation_i_fk_organization_id_relate" unique="NORMAL" >
				<column name="fk_organization_id_related_organization" />
			</index>
			<fk name="fk_organization_relation_i_fk_organization_id" to_schema="core" to_table="organization_i" >
				<fk_column name="fk_organization_id" pk="organization_id" />
			</fk>
			<fk name="fk_organization_relation_i_fk_organization_id_related_org" to_schema="core" to_table="organization_i" >
				<fk_column name="fk_organization_id_related_organization" pk="organization_id" />
			</fk>
		</table>
		<table name="organization_relation_t" >
			<column name="organization_relation_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="organization_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="organization_key_related_organization" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_organization_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_organization_id_related_organization" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="related_organization_is" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_organization_relation_t_organization_relation_id" unique="PRIMARY_KEY" >
				<column name="organization_relation_id" />
			</index>
			<index name="ux_organization_relation_t_key" unique="UNIQUE" >
				<column name="organization_key" />
				<column name="organization_key_related_organization" />
				<column name="related_organization_is" />
			</index>
			<index name="ix_organization_relation_t_fk_organization_id" unique="NORMAL" >
				<column name="fk_organization_id" />
			</index>
			<index name="ix_organization_relation_t_fk_organization_id_relate" unique="NORMAL" >
				<column name="fk_organization_id_related_organization" />
			</index>
			<fk name="fk_organization_relation_t_fk_organization_id" to_schema="core" to_table="organization_t" >
				<fk_column name="fk_organization_id" pk="organization_id" />
			</fk>
			<fk name="fk_organization_relation_t_fk_organization_id_related_org" to_schema="core" to_table="organization_t" >
				<fk_column name="fk_organization_id_related_organization" pk="organization_id" />
			</fk>
		</table>
		<table name="organization_t" >
			<column name="organization_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="organization_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="address_full" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="address_city" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="address_country" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="pipedrive_label" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_party_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_employee_id_owner" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="last_updated_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="pipedrive_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_updated_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="address_region" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_organization_t_organization_id" unique="PRIMARY_KEY" >
				<column name="organization_id" />
			</index>
			<index name="ux_organization_t_organization_key" unique="UNIQUE" >
				<column name="organization_key" />
			</index>
			<index name="ix_organization_t_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_organization_t_fk_date_id_last_updated_date" unique="NORMAL" >
				<column name="fk_date_id_last_updated_date" />
			</index>
			<index name="ix_organization_t_fk_employee_id_owner" unique="NORMAL" >
				<column name="fk_employee_id_owner" />
			</index>
			<index name="ix_organization_t_fk_party_id" unique="NORMAL" >
				<column name="fk_party_id" />
			</index>
			<fk name="fk_organization_t_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_organization_t_fk_date_id_last_updated_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_updated_date" pk="date_id" />
			</fk>
			<fk name="fk_organization_t_fk_employee_id_owner" to_schema="core" to_table="employee_t" >
				<fk_column name="fk_employee_id_owner" pk="employee_id" />
			</fk>
			<fk name="fk_organization_t_fk_party_id" to_schema="core" to_table="party_t" >
				<fk_column name="fk_party_id" pk="party_id" />
			</fk>
		</table>
		<table name="party_i" >
			<column name="party_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="party_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="full_name" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[lead - vtiger_crm_entity.label ( or leaddetail.first_name + leaddetail.last_name) | 
organization - vtiger_account.accountname]]></comment>
			</column>
			<column name="short_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_employee_id_last_modified_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_employee_id_created_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" >
				<comment><![CDATA[CRM users - vtiger_users.date_entered | 
CRM entity - vtiger_crmentity.createdtime]]></comment>
			</column>
			<column name="last_modified_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_modified_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_party_i" unique="PRIMARY_KEY" >
				<column name="party_id" />
			</index>
			<index name="ux_party_i_party_key" unique="UNIQUE" >
				<column name="party_key" />
			</index>
			<index name="ix_party_i_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_party_i_fk_date_id_last_modified_date" unique="NORMAL" >
				<column name="fk_date_id_last_modified_date" />
			</index>
			<index name="ix_party_i_fk_employee_id_created_by" unique="NORMAL" >
				<column name="fk_employee_id_created_by" />
			</index>
			<index name="ix_party_i_fk_employee_id_last_modified_by" unique="NORMAL" >
				<column name="fk_employee_id_last_modified_by" />
			</index>
			<index name="ix_party_i_full_name" unique="NORMAL" >
				<column name="full_name" />
			</index>
			<index name="ix_party_i_short_name" unique="NORMAL" >
				<column name="short_name" />
			</index>
			<fk name="fk_party_i_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_party_i_fk_date_id_last_modified_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_modified_date" pk="date_id" />
			</fk>
			<fk name="fk_party_i_fk_employee_id_created_by" to_schema="core" to_table="employee_i" >
				<fk_column name="fk_employee_id_created_by" pk="employee_id" />
			</fk>
			<fk name="fk_party_i_fk_employee_id_last_modified_by" to_schema="core" to_table="employee_i" >
				<fk_column name="fk_employee_id_last_modified_by" pk="employee_id" />
			</fk>
		</table>
		<table name="party_ih" >
			<column name="party_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="party_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="full_name" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[lead - vtiger_crm_entity.label ( or leaddetail.first_name + leaddetail.last_name) | 
organization - vtiger_account.accountname]]></comment>
			</column>
			<column name="short_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_employee_id_last_modified_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_employee_id_created_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" >
				<comment><![CDATA[CRM users - vtiger_users.date_entered | 
CRM entity - vtiger_crmentity.createdtime]]></comment>
			</column>
			<column name="last_modified_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_begin_effective_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_end_effective_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_is_current" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<index name="pk_party_ih" unique="PRIMARY_KEY" >
				<column name="party_id" />
			</index>
			<index name="ux_party_ih_party_key" unique="UNIQUE" >
				<column name="party_key" />
			</index>
			<index name="ix_party_ih_fk_employee_id_created_by" unique="NORMAL" >
				<column name="fk_employee_id_created_by" />
			</index>
			<index name="ix_party_ih_fk_employee_id_last_modified_by" unique="NORMAL" >
				<column name="fk_employee_id_last_modified_by" />
			</index>
			<index name="ix_party_ih_full_name" unique="NORMAL" >
				<column name="full_name" />
			</index>
			<index name="ix_party_ih_short_name" unique="NORMAL" >
				<column name="short_name" />
			</index>
			<fk name="fk_party_ih_fk_employee_id_created_by" to_schema="core" to_table="employee_ih" >
				<fk_column name="fk_employee_id_created_by" pk="employee_id" />
			</fk>
			<fk name="fk_party_ih_fk_employee_id_last_modified_by" to_schema="core" to_table="employee_ih" >
				<fk_column name="fk_employee_id_last_modified_by" pk="employee_id" />
			</fk>
		</table>
		<table name="party_t" >
			<column name="party_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="party_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="full_name" type="text" decimal="0" jt="12" mandatory="y" >
				<comment><![CDATA[lead - vtiger_crm_entity.label ( or leaddetail.first_name + leaddetail.last_name) | 
organization - vtiger_account.accountname]]></comment>
			</column>
			<column name="short_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_employee_id_last_modified_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_employee_id_created_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" >
				<comment><![CDATA[CRM users - vtiger_users.date_entered | 
CRM entity - vtiger_crmentity.createdtime]]></comment>
			</column>
			<column name="last_modified_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_date_id_created_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_last_modified_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_party_t" unique="PRIMARY_KEY" >
				<column name="party_id" />
			</index>
			<index name="ux_party_t_party_key" unique="UNIQUE" >
				<column name="party_key" />
			</index>
			<index name="ix_party_t_fk_date_id_created_date" unique="NORMAL" >
				<column name="fk_date_id_created_date" />
			</index>
			<index name="ix_party_t_fk_date_id_last_modified_date" unique="NORMAL" >
				<column name="fk_date_id_last_modified_date" />
			</index>
			<index name="ix_party_t_fk_employee_id_created_by" unique="NORMAL" >
				<column name="fk_employee_id_created_by" />
			</index>
			<index name="ix_party_t_fk_employee_id_last_modified_by" unique="NORMAL" >
				<column name="fk_employee_id_last_modified_by" />
			</index>
			<index name="ix_party_t_full_name" unique="NORMAL" >
				<column name="full_name" />
			</index>
			<index name="ix_party_t_short_name" unique="NORMAL" >
				<column name="short_name" />
			</index>
			<fk name="fk_party_t_fk_date_id_created_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_created_date" pk="date_id" />
			</fk>
			<fk name="fk_party_t_fk_date_id_last_modified_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_last_modified_date" pk="date_id" />
			</fk>
			<fk name="fk_party_t_fk_employee_id_created_by" to_schema="core" to_table="employee_t" >
				<fk_column name="fk_employee_id_created_by" pk="employee_id" />
			</fk>
			<fk name="fk_party_t_fk_employee_id_last_modified_by" to_schema="core" to_table="employee_t" >
				<fk_column name="fk_employee_id_last_modified_by" pk="employee_id" />
			</fk>
		</table>
		<table name="project_i" >
			<column name="project_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="project_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="jira_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="jira_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="project_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<index name="pk_project_i" unique="PRIMARY_KEY" >
				<column name="project_id" />
			</index>
			<index name="ux_project_i_jira_id" unique="UNIQUE" >
				<column name="jira_id" />
			</index>
			<index name="ux_project_i_jira_key" unique="UNIQUE" >
				<column name="jira_key" />
			</index>
			<index name="ux_project_i_project_key" unique="UNIQUE" >
				<column name="project_key" />
			</index>
			<index name="ix_project_i_project_name" unique="NORMAL" >
				<column name="project_name" />
			</index>
		</table>
		<table name="project_ih" >
			<column name="project_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="project_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="jira_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="jira_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="project_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_begin_effective_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_end_effective_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_is_current" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<index name="pk_project_ih" unique="PRIMARY_KEY" >
				<column name="project_id" />
			</index>
			<index name="ux_project_ih_project_key" unique="UNIQUE" >
				<column name="project_key" />
			</index>
			<index name="ix_project_ih_project_name" unique="NORMAL" >
				<column name="project_name" />
			</index>
		</table>
		<table name="project_t" >
			<column name="project_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="project_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="jira_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="jira_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="project_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_project_t" unique="PRIMARY_KEY" >
				<column name="project_id" />
			</index>
			<index name="ux_project_t_jira_id" unique="UNIQUE" >
				<column name="jira_id" />
			</index>
			<index name="ux_project_t_jira_key" unique="UNIQUE" >
				<column name="jira_key" />
			</index>
			<index name="ux_project_t_project_key" unique="UNIQUE" >
				<column name="project_key" />
			</index>
			<index name="ix_project_t_project_name" unique="NORMAL" >
				<column name="project_name" />
			</index>
		</table>
		<table name="release_i" >
			<column name="release_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="release_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="jira_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_release_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="release_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_date_id_start_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_project_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="description" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="release_number" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="release_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="start_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<index name="pk_release_i" unique="PRIMARY_KEY" >
				<column name="release_id" />
			</index>
			<index name="ux_release_i_jira_id" unique="UNIQUE" >
				<column name="jira_id" />
			</index>
			<index name="ux_release_i_release_key" unique="UNIQUE" >
				<column name="release_key" />
			</index>
			<index name="ux_release_i_release_name" unique="UNIQUE" >
				<column name="release_name" />
			</index>
			<index name="ix_release_i_fk_date_id_release_date" unique="NORMAL" >
				<column name="fk_date_id_release_date" />
			</index>
			<index name="ix_release_i_fk_date_id_start_date" unique="NORMAL" >
				<column name="fk_date_id_start_date" />
			</index>
			<index name="ix_release_i_fk_project_id" unique="NORMAL" >
				<column name="fk_project_id" />
			</index>
			<fk name="fk_release_i_fk_date_id_release_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_release_date" pk="date_id" />
			</fk>
			<fk name="fk_release_i_fk_date_id_start_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_start_date" pk="date_id" />
			</fk>
			<fk name="fk_release_i_fk_project_id" to_schema="core" to_table="project_i" >
				<fk_column name="fk_project_id" pk="project_id" />
			</fk>
		</table>
		<table name="release_t" >
			<column name="release_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="release_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="jira_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_release_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="release_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_date_id_start_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_project_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="description" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="release_number" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="release_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="start_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<index name="pk_release_t" unique="PRIMARY_KEY" >
				<column name="release_id" />
			</index>
			<index name="ux_release_t_jira_id" unique="UNIQUE" >
				<column name="jira_id" />
			</index>
			<index name="ux_release_t_release_key" unique="UNIQUE" >
				<column name="release_key" />
			</index>
			<index name="ux_release_t_release_name" unique="UNIQUE" >
				<column name="release_name" />
			</index>
			<index name="ix_release_t_fk_date_id_release_date" unique="NORMAL" >
				<column name="fk_date_id_release_date" />
			</index>
			<index name="ix_release_t_fk_date_id_start_date" unique="NORMAL" >
				<column name="fk_date_id_start_date" />
			</index>
			<index name="ix_release_t_fk_project_id" unique="NORMAL" >
				<column name="fk_project_id" />
			</index>
			<fk name="fk_release_t_fk_date_id_release_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_release_date" pk="date_id" />
			</fk>
			<fk name="fk_release_t_fk_date_id_start_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_start_date" pk="date_id" />
			</fk>
			<fk name="fk_release_t_fk_project_id" to_schema="core" to_table="project_t" >
				<fk_column name="fk_project_id" pk="project_id" />
			</fk>
		</table>
		<table name="sale_i" >
			<column name="sale_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="sale_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_organization_id_customer" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_organization_id_reseller" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_booking_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_revenue_type_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="usd_amount" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="local_currency_amount" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="fk_currency_id_local_currency" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="sale_comment" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_organization_id_seller" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="invoice" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_date_id_revenue_start" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_revenue_end" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="payment_received" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="fk_party_id_sales_representative" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="revenue_start_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="revenue_end_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="booking_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="czk_amount" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="eur_amount" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<index name="pk_sale_i" unique="PRIMARY_KEY" >
				<column name="sale_id" />
			</index>
			<index name="ux_sale_i_sale_key" unique="UNIQUE" >
				<column name="sale_key" />
			</index>
			<index name="ix_fk_sale_i_fk_party_id_sales_representative" unique="NORMAL" >
				<column name="fk_party_id_sales_representative" />
			</index>
			<index name="ix_sale_i_fk_currency_id_local_currency" unique="NORMAL" >
				<column name="fk_currency_id_local_currency" />
			</index>
			<index name="ix_sale_i_fk_date_id_booking_date" unique="NORMAL" >
				<column name="fk_date_id_booking_date" />
			</index>
			<index name="ix_sale_i_fk_date_id_revenue_end" unique="NORMAL" >
				<column name="fk_date_id_revenue_end" />
			</index>
			<index name="ix_sale_i_fk_date_id_revenue_start" unique="NORMAL" >
				<column name="fk_date_id_revenue_start" />
			</index>
			<index name="ix_sale_i_fk_organization_id_customer" unique="NORMAL" >
				<column name="fk_organization_id_customer" />
			</index>
			<index name="ix_sale_i_fk_organization_id_reseller" unique="NORMAL" >
				<column name="fk_organization_id_reseller" />
			</index>
			<index name="ix_sale_i_fk_organization_id_seller" unique="NORMAL" >
				<column name="fk_organization_id_seller" />
			</index>
			<index name="ix_sale_i_fk_revenue_type_id" unique="NORMAL" >
				<column name="fk_revenue_type_id" />
			</index>
			<fk name="fk_sale_i_fk_currency_id" to_schema="core" to_table="c_currency_g" >
				<fk_column name="fk_currency_id_local_currency" pk="currency_id" />
			</fk>
			<fk name="fk_sale_i_fk_date_id_booking_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_booking_date" pk="date_id" />
			</fk>
			<fk name="fk_sale_i_fk_date_id_revenue_end" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_revenue_end" pk="date_id" />
			</fk>
			<fk name="fk_sale_i_fk_date_id_revenue_start" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_revenue_start" pk="date_id" />
			</fk>
			<fk name="fk_sale_i_c_revenue_type_i" to_schema="core" to_table="c_revenue_type_i" >
				<fk_column name="fk_revenue_type_id" pk="revenue_type_id" />
			</fk>
			<fk name="fk_sale_i_fk_organization_id_customer" to_schema="core" to_table="organization_i" >
				<fk_column name="fk_organization_id_customer" pk="organization_id" />
			</fk>
			<fk name="fk_sale_i_fk_organization_id_reseller" to_schema="core" to_table="organization_i" >
				<fk_column name="fk_organization_id_reseller" pk="organization_id" />
			</fk>
			<fk name="fk_sale_i_fk_organization_id_seller" to_schema="core" to_table="organization_i" >
				<fk_column name="fk_organization_id_seller" pk="organization_id" />
			</fk>
			<fk name="fk_sale_i_fk_party_id_sales_representative" to_schema="core" to_table="party_i" >
				<fk_column name="fk_party_id_sales_representative" pk="party_id" />
			</fk>
		</table>
		<table name="sale_t" >
			<column name="sale_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="sale_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_organization_id_customer" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_organization_id_reseller" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_booking_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_revenue_type_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="usd_amount" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="local_currency_amount" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="fk_currency_id_local_currency" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="sale_comment" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_organization_id_seller" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="invoice" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_date_id_revenue_start" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_date_id_revenue_end" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="payment_received" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="fk_party_id_sales_representative" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="revenue_start_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="revenue_end_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="booking_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="czk_amount" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="eur_amount" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<index name="pk_sale_t" unique="PRIMARY_KEY" >
				<column name="sale_id" />
			</index>
			<index name="ux_sale_t_sale_key" unique="UNIQUE" >
				<column name="sale_key" />
			</index>
			<index name="ix_fk_sale_t_fk_party_id_sales_representative" unique="NORMAL" >
				<column name="fk_party_id_sales_representative" />
			</index>
			<index name="ix_sale_t_fk_currency_id_local_currency" unique="NORMAL" >
				<column name="fk_currency_id_local_currency" />
			</index>
			<index name="ix_sale_t_fk_date_id_booking_date" unique="NORMAL" >
				<column name="fk_date_id_booking_date" />
			</index>
			<index name="ix_sale_t_fk_date_id_revenue_end" unique="NORMAL" >
				<column name="fk_date_id_revenue_end" />
			</index>
			<index name="ix_sale_t_fk_date_id_revenue_start" unique="NORMAL" >
				<column name="fk_date_id_revenue_start" />
			</index>
			<index name="ix_sale_t_fk_organization_id_customer" unique="NORMAL" >
				<column name="fk_organization_id_customer" />
			</index>
			<index name="ix_sale_t_fk_organization_id_reseller" unique="NORMAL" >
				<column name="fk_organization_id_reseller" />
			</index>
			<index name="ix_sale_t_fk_organization_id_seller" unique="NORMAL" >
				<column name="fk_organization_id_seller" />
			</index>
			<index name="ix_sale_t_fk_revenue_type_id" unique="NORMAL" >
				<column name="fk_revenue_type_id" />
			</index>
			<fk name="fk_sale_t_fk_currency_id" to_schema="core" to_table="c_currency_g" >
				<fk_column name="fk_currency_id_local_currency" pk="currency_id" />
			</fk>
			<fk name="fk_sale_t_fk_date_id_booking_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_booking_date" pk="date_id" />
			</fk>
			<fk name="fk_sale_t_fk_date_id_revenue_end" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_revenue_end" pk="date_id" />
			</fk>
			<fk name="fk_sale_t_fk_date_id_revenue_start" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_revenue_start" pk="date_id" />
			</fk>
			<fk name="fk_sale_t_c_revenue_type_t" to_schema="core" to_table="c_revenue_type_t" >
				<fk_column name="fk_revenue_type_id" pk="revenue_type_id" />
			</fk>
			<fk name="fk_sale_t_fk_organization_id_customer" to_schema="core" to_table="organization_t" >
				<fk_column name="fk_organization_id_customer" pk="organization_id" />
			</fk>
			<fk name="fk_sale_t_fk_organization_id_reseller" to_schema="core" to_table="organization_t" >
				<fk_column name="fk_organization_id_reseller" pk="organization_id" />
			</fk>
			<fk name="fk_sale_t_fk_organization_id_seller" to_schema="core" to_table="organization_t" >
				<fk_column name="fk_organization_id_seller" pk="organization_id" />
			</fk>
			<fk name="fk_sale_t_fk_party_id_sales_representative" to_schema="core" to_table="party_t" >
				<fk_column name="fk_party_id_sales_representative" pk="party_id" />
			</fk>
		</table>
		<table name="worklog_i" >
			<column name="worklog_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="worklog_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_issue_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_employee_id_created_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="time_logged" type="interval" length="49" decimal="6" jt="1111" mandatory="y" />
			<column name="worklog_comment" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="work_started_at_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="tempo_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_deleted_in_source_system" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="fk_date_id_work_started_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="hours_logged" type="numeric" length="10" decimal="5" jt="2" mandatory="y" />
			<column name="days_logged" type="numeric" length="10" decimal="5" jt="2" mandatory="y" />
			<index name="pk_worklog_i" unique="PRIMARY_KEY" >
				<column name="worklog_id" />
			</index>
			<index name="ux_worklog_i_fk_tempo_id" unique="UNIQUE" >
				<column name="tempo_id" />
			</index>
			<index name="ux_worklog_i_worklog_key" unique="UNIQUE" >
				<column name="worklog_key" />
			</index>
			<index name="ix_worklog_i_fk_date_id_work_started_date" unique="NORMAL" >
				<column name="fk_date_id_work_started_date" />
			</index>
			<index name="ix_worklog_i_fk_employee_id_created_by" unique="NORMAL" >
				<column name="fk_employee_id_created_by" />
			</index>
			<index name="ix_worklog_i_fk_issue_id" unique="NORMAL" >
				<column name="fk_issue_id" />
			</index>
			<index name="ix_worklog_i_fk_work_started_at_timestamp" unique="NORMAL" >
				<column name="work_started_at_timestamp" />
			</index>
			<fk name="fk_worklog_i_fk_date_id_work_started_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_work_started_date" pk="date_id" />
			</fk>
			<fk name="fk_worklog_i_fk_employee_id_created_by" to_schema="core" to_table="employee_i" >
				<fk_column name="fk_employee_id_created_by" pk="employee_id" />
			</fk>
			<fk name="fk_worklog_i_fk_issue_id" to_schema="core" to_table="issue_i" >
				<fk_column name="fk_issue_id" pk="issue_id" />
			</fk>
		</table>
		<table name="worklog_t" >
			<column name="worklog_id" type="serial" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="worklog_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_issue_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fk_employee_id_created_by" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="time_logged" type="interval" length="49" decimal="6" jt="1111" mandatory="y" />
			<column name="worklog_comment" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="work_started_at_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="tempo_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_insert_function" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_insert_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_row_hash" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fk_date_id_work_started_date" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="hours_logged" type="numeric" length="10" decimal="5" jt="2" mandatory="y" />
			<column name="days_logged" type="numeric" length="10" decimal="5" jt="2" mandatory="y" />
			<index name="pk_worklog_t" unique="PRIMARY_KEY" >
				<column name="worklog_id" />
			</index>
			<index name="ux_worklog_t_fk_tempo_id" unique="UNIQUE" >
				<column name="tempo_id" />
			</index>
			<index name="ux_worklog_t_worklog_key" unique="UNIQUE" >
				<column name="worklog_key" />
			</index>
			<index name="ix_worklog_t_fk_date_id_work_started_date" unique="NORMAL" >
				<column name="fk_date_id_work_started_date" />
			</index>
			<index name="ix_worklog_t_fk_employee_id_created_by" unique="NORMAL" >
				<column name="fk_employee_id_created_by" />
			</index>
			<index name="ix_worklog_t_fk_issue_id" unique="NORMAL" >
				<column name="fk_issue_id" />
			</index>
			<index name="ix_worklog_t_fk_work_started_at_timestamp" unique="NORMAL" >
				<column name="work_started_at_timestamp" />
			</index>
			<fk name="fk_worklog_t_fk_date_id_work_started_date" to_schema="core" to_table="c_date_g" >
				<fk_column name="fk_date_id_work_started_date" pk="date_id" />
			</fk>
			<fk name="fk_worklog_t_fk_employee_id_created_by" to_schema="core" to_table="employee_t" >
				<fk_column name="fk_employee_id_created_by" pk="employee_id" />
			</fk>
			<fk name="fk_worklog_t_fk_issue_id" to_schema="core" to_table="issue_t" >
				<fk_column name="fk_issue_id" pk="issue_id" />
			</fk>
		</table>
		<sequence name="seq_activity_i_activity_id" start="1" />
		<sequence name="seq_activity_t_activity_id" start="1" />
		<sequence name="seq_c_contry_name_map_g_contry_name_map_id" start="1" />
		<sequence name="seq_c_currency_g_currency_id" start="1" />
		<sequence name="seq_c_exchange_rate_g_exchange_rate_id" start="1" />
		<sequence name="seq_c_partner_list_i_partner_list_id" start="1" />
		<sequence name="seq_c_partner_list_t_partner_list_id" start="1" />
		<sequence name="seq_c_revenue_type_i_revenue_type_id" start="1" />
		<sequence name="seq_c_revenue_type_t_revenue_type_id" start="1" />
		<sequence name="seq_contact_i_contact_id" start="1" />
		<sequence name="seq_contact_ih_contact_id" start="1" />
		<sequence name="seq_contact_t_contact_id" start="1" />
		<sequence name="seq_deal_change_log_i_deal_change_log_id" start="1" />
		<sequence name="seq_deal_change_log_t_deal_change_log_id" start="1" />
		<sequence name="seq_deal_contact_map_i_deal_contact_map_id" start="1" />
		<sequence name="seq_deal_contact_map_t_deal_contact_map_id" start="1" />
		<sequence name="seq_deal_i_deal_id" start="1" />
		<sequence name="seq_deal_ih_deal_id" start="1" />
		<sequence name="seq_deal_t_deal_id" start="1" />
		<sequence name="seq_email_campaign_bounced_email_i" start="1" />
		<sequence name="seq_email_campaign_bounced_email_t" start="1" />
		<sequence name="seq_email_campaign_clicked_url_i" start="1" />
		<sequence name="seq_email_campaign_clicked_url_t" start="1" />
		<sequence name="seq_email_campaign_opened_by_i" start="1" />
		<sequence name="seq_email_campaign_opened_by_t" start="1" />
		<sequence name="seq_email_campaign_recipient_i" start="1" />
		<sequence name="seq_email_campaign_recipient_t" start="1" />
		<sequence name="seq_email_campaign_report_i" start="1" />
		<sequence name="seq_email_campaign_report_t" start="1" />
		<sequence name="seq_employee_i_employee_id" start="1" />
		<sequence name="seq_employee_ih_employee_id" start="1" />
		<sequence name="seq_employee_t_employee_id" start="1" />
		<sequence name="seq_iso_3166_country_list_i_iso_3166_country_list_id" start="1" />
		<sequence name="seq_iso_3166_country_list_t_iso_3166_country_list_id" start="1" />
		<sequence name="seq_issue_comment_i_issue_comment_id" start="1" />
		<sequence name="seq_issue_comment_t_issue_comment_id" start="1" />
		<sequence name="seq_issue_i_issue_id" start="1" />
		<sequence name="seq_issue_ih_issue_id" start="1" />
		<sequence name="seq_issue_relation_map_i_issue_relation_map_id" start="1" />
		<sequence name="seq_issue_relation_map_t_issue_relation_map_id" start="1" />
		<sequence name="seq_issue_t_issue_id" start="1" />
		<sequence name="seq_list_segment_list_member_map_i" start="1" />
		<sequence name="seq_list_segment_list_member_map_t" start="1" />
		<sequence name="seq_mail_message_i_mail_message_id" start="1" />
		<sequence name="seq_mail_message_t_mail_message_id" start="1" />
		<sequence name="seq_mailing_list_i" start="1" />
		<sequence name="seq_mailing_list_member_i" start="1" />
		<sequence name="seq_mailing_list_member_t" start="1" />
		<sequence name="seq_mailing_list_segment_i" start="1" />
		<sequence name="seq_mailing_list_segment_t" start="1" />
		<sequence name="seq_mailing_list_t" start="1" />
		<sequence name="seq_note_i_note_id" start="1" />
		<sequence name="seq_note_t_note_id" start="1" />
		<sequence name="seq_organization_i_organization_id" start="1" />
		<sequence name="seq_organization_ih_organization_id" start="1" />
		<sequence name="seq_organization_relation_i_organization_relation_id" start="1" />
		<sequence name="seq_organization_relation_t_organization_relation_id" start="1" />
		<sequence name="seq_organization_t_organization_id" start="1" />
		<sequence name="seq_party_i_party_id" start="1" />
		<sequence name="seq_party_ih_party_id" start="1" />
		<sequence name="seq_party_t_party_id" start="1" />
		<sequence name="seq_project_i_project_id" start="1" />
		<sequence name="seq_project_ih_project_id" start="1" />
		<sequence name="seq_project_t_project_id" start="1" />
		<sequence name="seq_release_i_release_id" start="1" />
		<sequence name="seq_release_t_release_id" start="1" />
		<sequence name="seq_sale_i_fk_revenue_type_id" start="1" />
		<sequence name="seq_sale_i_sale_id" start="1" />
		<sequence name="seq_sale_t_fk_revenue_type_id" start="1" />
		<sequence name="seq_sale_t_sale_id" start="1" />
		<sequence name="seq_worklog_i_worklog_id" start="1" />
		<sequence name="seq_worklog_t_worklog_id" start="1" />
		<procedure name="tf_g_c_contry_name_map_g" id="Procedure_2b29528" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_g_c_contry_name_map_g()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Populates Table that maps country name retrieved from google api to country name from ISO 3166
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:	        2018-12-07 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    --------------------
    -- POPULATE TABLE --
    --------------------
    INSERT INTO core.c_contry_name_map_g (
        google_country_name
        ,iso_3166_country_name
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    VALUES
        ('Czechia','Czech Republic', FUNCTION_NAME, -1, -1, 'N/A'),
        ('Palestine','Palestine, State of', FUNCTION_NAME, -1, -1, 'N/A'),
        ('Russia','Russian Federation', FUNCTION_NAME, -1, -1, 'N/A'),
        ('United Kingdom','United Kingdom of Great Britain and Northern Ireland', FUNCTION_NAME, -1, -1, 'N/A'),
        ('United States','United States of America', FUNCTION_NAME, -1, -1, 'N/A'),
        ('Venezuela','Venezuela (Bolivarian Republic of)', FUNCTION_NAME, -1, -1, 'N/A'),
        ('Vietnam','Viet Nam', FUNCTION_NAME, -1, -1, 'N/A')
        ON CONFLICT DO NOTHING;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_g_c_currency_g" id="Procedure_29db730" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_g_c_currency_g()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Populates currency table from with currancies from ISO 4217
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:	        2018-05-26 (YYYY-MM-DD)
    NOTE:               https://www.xe.com/iso4217.php
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.c_currency_g (
        currency_id
        ,currency_name
        ,alphabetical_code
        ,numerical_code
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    VALUES (
        -1 -- currency_id
        ,'NULL_CURRENCY' -- currency_name
        ,'' -- alphabetical_code
        ,'' -- numerical_code
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,-1 -- tech_data_load_utc_timestamp
        ,'Manualy Generated Data' -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    -----------------------------
    -- POPULATE CURRENCY TABLE --
    -----------------------------
    INSERT INTO core.c_currency_g (
        currency_name
        ,alphabetical_code
        ,numerical_code
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    VALUES
        ('UAE Dirham','AED','784', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Afghani','AFN','971', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Lek','ALL','008', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Armenian Dram','AMD','051', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Netherlands Antillean Guilder','ANG','532', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Kwanza','AOA','973', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Argentine Peso','ARS','032', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Australian Dollar','AUD','036', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Aruban Florin','AWG','533', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Azerbaijan Manat','AZN','944', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Convertible Mark','BAM','977', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Barbados Dollar','BBD','052', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Taka','BDT','050', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Bulgarian Lev','BGN','975', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Bahraini Dinar','BHD','048', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Burundi Franc','BIF','108', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Bermudian Dollar','BMD','060', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Brunei Dollar','BND','096', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Boliviano','BOB','068', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Mvdol','BOV','984', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Brazilian Real','BRL','986', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Bahamian Dollar','BSD','044', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Ngultrum','BTN','064', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Pula','BWP','072', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Belarusian Ruble','BYN','933', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Belize Dollar','BZD','084', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Canadian Dollar','CAD','124', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Congolese Franc','CDF','976', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Unidad de Fomento','CLF','990', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Chilean Peso','CLP','152', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Yuan Renminbi','CNY','156', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Colombian Peso','COP','170', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Unidad de Valor Real','COU','970', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Costa Rican Colon','CRC','188', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Peso Convertible','CUC','931', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Cuban Peso','CUP','192', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Cabo Verde Escudo','CVE','132', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Czech Koruna','CZK','203', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Djibouti Franc','DJF','262', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Danish Krone','DKK','208', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Dominican Peso','DOP','214', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Algerian Dinar','DZD','012', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Egyptian Pound','EGP','818', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Nakfa','ERN','232', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Ethiopian Birr','ETB','230', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Euro','EUR','978', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Fiji Dollar','FJD','242', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Falkland Islands Pound','FKP','238', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Pound Sterling','GBP','826', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Lari','GEL','981', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Ghana Cedi','GHS','936', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Gibraltar Pound','GIP','292', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Dalasi','GMD','270', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Guinean Franc','GNF','324', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Quetzal','GTQ','320', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Guyana Dollar','GYD','328', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Hong Kong Dollar','HKD','344', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Lempira','HNL','340', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Kuna','HRK','191', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Gourde','HTG','332', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Forint','HUF','348', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('WIR Euro','CHE','947', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Swiss Franc','CHF','756', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('WIR Franc','CHW','948', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Rupiah','IDR','360', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('New Israeli Sheqel','ILS','376', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Indian Rupee','INR','356', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Iraqi Dinar','IQD','368', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Iranian Rial','IRR','364', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Iceland Krona','ISK','352', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Jamaican Dollar','JMD','388', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Jordanian Dinar','JOD','400', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Yen','JPY','392', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Kenyan Shilling','KES','404', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Som','KGS','417', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Riel','KHR','116', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Comorian Franc ','KMF','174', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('North Korean Won','KPW','408', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Won','KRW','410', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Kuwaiti Dinar','KWD','414', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Cayman Islands Dollar','KYD','136', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Tenge','KZT','398', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Lao Kip','LAK','418', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Lebanese Pound','LBP','422', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Sri Lanka Rupee','LKR','144', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Liberian Dollar','LRD','430', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Loti','LSL','426', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Libyan Dinar','LYD','434', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Moroccan Dirham','MAD','504', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Moldovan Leu','MDL','498', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Malagasy Ariary','MGA','969', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Denar','MKD','807', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Kyat','MMK','104', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Tugrik','MNT','496', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Pataca','MOP','446', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Ouguiya','MRU','929', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Mauritius Rupee','MUR','480', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Rufiyaa','MVR','462', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Malawi Kwacha','MWK','454', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Mexican Peso','MXN','484', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Mexican Unidad de Inversion (UDI)','MXV','979', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Malaysian Ringgit','MYR','458', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Mozambique Metical','MZN','943', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Namibia Dollar','NAD','516', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Naira','NGN','566', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Cordoba Oro','NIO','558', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Norwegian Krone','NOK','578', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Nepalese Rupee','NPR','524', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('New Zealand Dollar','NZD','554', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Rial Omani','OMR','512', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Balboa','PAB','590', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Sol','PEN','604', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Kina','PGK','598', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Philippine Piso','PHP','608', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Pakistan Rupee','PKR','586', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Zloty','PLN','985', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Guarani','PYG','600', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Qatari Rial','QAR','634', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Romanian Leu','RON','946', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Serbian Dinar','RSD','941', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Russian Ruble','RUB','643', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Rwanda Franc','RWF','646', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Saudi Riyal','SAR','682', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Solomon Islands Dollar','SBD','090', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Seychelles Rupee','SCR','690', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Sudanese Pound','SDG','938', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Swedish Krona','SEK','752', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Singapore Dollar','SGD','702', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Saint Helena Pound','SHP','654', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Leone','SLL','694', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Somali Shilling','SOS','706', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Surinam Dollar','SRD','968', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('South Sudanese Pound','SSP','728', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Dobra','STN','930', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('El Salvador Colon','SVC','222', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Syrian Pound','SYP','760', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Lilangeni','SZL','748', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Baht','THB','764', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Somoni','TJS','972', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Turkmenistan New Manat','TMT','934', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Tunisian Dinar','TND','788', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Pa’anga','TOP','776', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Turkish Lira','TRY','949', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Trinidad and Tobago Dollar','TTD','780', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('New Taiwan Dollar','TWD','901', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Tanzanian Shilling','TZS','834', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Hryvnia','UAH','980', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Uganda Shilling','UGX','800', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('US Dollar','USD','840', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('US Dollar (Next day)','USN','997', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Uruguay Peso en Unidades Indexadas (URUIURUI)','UYI','940', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Peso Uruguayo','UYU','858', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Uzbekistan Sum','UZS','860', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Bolívar','VEF','937', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Dong','VND','704', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Vatu','VUV','548', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Tala','WST','882', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('CFA Franc BEAC','XAF','950', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Silver','XAG','961', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Gold','XAU','959', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Bond Markets Unit European Composite Unit (EURCO)','XBA','955', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Bond Markets Unit European Monetary Unit (E.M.U.-6)','XBB','956', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Bond Markets Unit European Unit of Account 9 (E.U.A.-9)','XBC','957', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Bond Markets Unit European Unit of Account 17 (E.U.A.-17)','XBD','958', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('East Caribbean Dollar','XCD','951', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('SDR (Special Drawing Right)','XDR','960', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('CFA Franc BCEAO','XOF','952', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Palladium','XPD','964', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('CFP Franc','XPF','953', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Platinum','XPT','962', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Sucre','XSU','994', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Codes specifically reserved for testing purposes','XTS','963', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('ADB Unit of Account','XUA','965', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('The codes assigned for transactions where no currency is involved','XXX','999', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Yemeni Rial','YER','886', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Rand','ZAR','710', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Zambian Kwacha','ZMW','967', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data'),
        ('Zimbabwe Dollar','ZWL','932', FUNCTION_NAME, CURRENT_UTC_TIMESTAMP_AS_BIGINT, -1, 'Manualy Generated Data');
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_g_c_date_g" id="Procedure_522cae0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_g_c_date_g()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Populates date table from 1970-01-01 until 3000-01-01
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:               MIN (NEVER) DATE '1970-01-01'
                        MAX (TO INFINITY) DATE '3000-01-01'
                        NO (NULL) DATE '-1'
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -------------------------
    -- POPULATE DATE TABLE --
    -------------------------
    INSERT INTO core.c_date_g (
        date_id
        ,date_actual
        ,epoch
        ,day_suffix
        ,day_name
        ,day_of_week
        ,day_of_month
        ,day_of_quarter
        ,day_of_year
        ,week_of_month
        ,week_of_year
        ,week_of_year_iso
        ,month_actual
        ,month_name
        ,month_name_abbreviated
        ,quarter_actual
        ,quarter_name
        ,year_actual
        ,first_day_of_week
        ,last_day_of_week
        ,first_day_of_month
        ,last_day_of_month
        ,first_day_of_quarter
        ,last_day_of_quarter
        ,first_day_of_year
        ,last_day_of_year
        ,mmyyyy
        ,mmddyyyy
        ,weekend_indr
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        TO_CHAR(datum, 'yyyymmdd')::INT AS date_id
        ,datum AS date_actual
        ,EXTRACT(epoch FROM datum) AS epoch
        ,TO_CHAR(datum, 'Dth') AS day_suffix
        ,TO_CHAR(datum, 'Day') AS day_name
        ,EXTRACT(isodow FROM datum) AS day_of_week
        ,EXTRACT(DAY FROM datum) AS day_of_month
        ,datum - DATE_TRUNC('quarter', datum)::DATE + 1 AS day_of_quarter
        ,EXTRACT(doy FROM datum) AS day_of_year
        ,TO_CHAR(datum, 'W')::INT AS week_of_month
        ,EXTRACT(week FROM datum) AS week_of_year
        ,TO_CHAR(datum, 'YYYY"-W"IW-D') AS week_of_year_iso
        ,EXTRACT(MONTH FROM datum) AS month_actual
        ,TO_CHAR(datum, 'Month') AS month_name
        ,TO_CHAR(datum, 'Mon') AS month_name_abbreviated
        ,EXTRACT(quarter FROM datum) AS quarter_actual
        ,CASE WHEN EXTRACT(quarter FROM datum) = 1 THEN 'First' WHEN EXTRACT(quarter FROM datum) = 2 THEN 'Second' WHEN EXTRACT(quarter FROM datum) = 3 THEN 'Third' WHEN EXTRACT(quarter FROM datum) = 4 THEN 'Fourth' END AS quarter_name
        ,EXTRACT(isoyear FROM datum) AS year_actual
        ,datum + (1 - EXTRACT(isodow FROM datum))::INT AS first_day_of_week
        ,datum + (7 - EXTRACT(isodow FROM datum))::INT AS last_day_of_week
        ,datum + (1 - EXTRACT(DAY FROM datum))::INT AS first_day_of_month
        ,(DATE_TRUNC('MONTH', datum) + INTERVAL '1 MONTH - 1 day')::DATE AS last_day_of_month
        ,DATE_TRUNC('quarter', datum)::DATE AS first_day_of_quarter
        ,(DATE_TRUNC('quarter', datum) + INTERVAL '3 MONTH - 1 day')::DATE AS last_day_of_quarter
        ,TO_DATE(EXTRACT(isoyear FROM datum) || '-01-01', 'YYYY-MM-DD') AS first_day_of_year
        ,TO_DATE(EXTRACT(isoyear FROM datum) || '-12-31', 'YYYY-MM-DD') AS last_day_of_year
        ,TO_CHAR(datum, 'mmyyyy') AS mmyyyy
        ,TO_CHAR(datum, 'mmddyyyy') AS mmddyyyy
        ,CASE WHEN EXTRACT(isodow FROM datum) IN (
                    6
                    ,7
                    ) THEN TRUE ELSE FALSE END AS weekend_indr
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,-1 AS tech_data_load_utc_timestamp
        ,'Manualy Generated Data' AS tech_data_load_uuid
    FROM (
        SELECT '1970-01-01'::DATE + SEQUENCE.DAY AS datum
        FROM GENERATE_SERIES(0, 29219) AS SEQUENCE(DAY)
        GROUP BY SEQUENCE.DAY
        UNION
        SELECT '3000-01-01'::DATE + SEQUENCE.DAY AS datum
        FROM GENERATE_SERIES(0, 0) AS SEQUENCE(DAY)
        GROUP BY SEQUENCE.DAY
        ) DQ
    ORDER BY 1;
    -----------------------
    -- INSERT NULL DATE --
    -----------------------
    INSERT INTO core.c_date_g (
        date_id
        ,date_actual
        ,epoch
        ,day_suffix
        ,day_name
        ,day_of_week
        ,day_of_month
        ,day_of_quarter
        ,day_of_year
        ,week_of_month
        ,week_of_year
        ,week_of_year_iso
        ,month_actual
        ,month_name
        ,month_name_abbreviated
        ,quarter_actual
        ,quarter_name
        ,year_actual
        ,first_day_of_week
        ,last_day_of_week
        ,first_day_of_month
        ,last_day_of_month
        ,first_day_of_quarter
        ,last_day_of_quarter
        ,first_day_of_year
        ,last_day_of_year
        ,mmyyyy
        ,mmddyyyy
        ,weekend_indr
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    VALUES (
        -1
        ,to_date('1970-01-01','YYYY-MM-DD')
        ,0
        ,'0'
        ,'0'
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,'0'
        ,0
        ,'0'
        ,'0'
        ,0
        ,'0'
        ,0
        ,to_timestamp(0)::date
        ,to_timestamp(0)::date
        ,to_timestamp(0)::date
        ,to_timestamp(0)::date
        ,to_timestamp(0)::date
        ,to_timestamp(0)::date
        ,to_timestamp(0)::date
        ,to_timestamp(0)::date
        ,'0'
        ,'0'
        ,false
        ,FUNCTION_NAME
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT
        ,-1
        ,'Manualy Generated Data'
        );
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_g_c_null_replacement_g" id="Procedure_5c393c2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_g_c_null_replacement_g()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Populates table with replacement values for different null values
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-12-13 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ------------------------------
    -- POPULATE CODE LIST TABLE --
    ------------------------------
    INSERT INTO core.c_null_replacement_g (
        text_null
        ,date_never
        ,date_infinity
        ,timestamp_never
        ,timestamp_infinity
        ,interval_never
        ,interval_infinity
        ,text_array_null
        ,timestamp_array_null
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    VALUES (
        'N/A' -- text_null
        ,'1970-01-01'::DATE -- date_never
        ,'3000-01-01'::DATE -- date_infinity
        ,'1970-01-01+00'::TIMESTAMP WITH TIME ZONE -- timestamp_never
        ,'3000-01-01+00'::TIMESTAMP WITH TIME ZONE -- timestamp_infinity
        ,'-178000000 years'::INTERVAL -- interval_never
        ,'178000000 years'::INTERVAL -- interval_infinity
        ,'{N/A}'::TEXT[] -- text_array_null
        ,'{1970-01-01+00}'::TIMESTAMP WITH TIME ZONE[] -- timestamp_array_null
        ,FUNCTION_NAME -- tech_insert_function
        ,-1 -- tech_insert_utc_timestamp
        ,-1 -- tech_data_load_utc_timestamp
        ,'N/A' -- tech_data_load_uuid
        );
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_h_contact_ih" id="Procedure_2253218" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_h_contact_ih()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        SCD2 historization of table contact_i.
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-29 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
INFINITY_TIMESTAMP bigint := 300001010000;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -------------------------------------------
    -------------------------------------------
    --                                       --
    --              NEW RECORDS              --
    --                                       --
    -------------------------------------------
    -------------------------------------------
    ------------------------
    -- INSERT NEW RECORDS --
    ------------------------
    INSERT INTO core.contact_ih (
        contact_key
        ,fk_organization_id
        ,fk_party_id
        ,created_timestamp
        ,phone_number
        ,email_address
        ,location_full
        ,location_city
        ,location_country
        ,pipedrive_label
        ,fk_employee_id_owner
        ,last_updated_timestamp
        ,pipedrive_id
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
	SELECT
		input_contact.contact_key
        ,hist_organization.organization_id AS fk_organization_id
        ,hist_party.party_id AS fk_party_id
        ,input_contact.created_timestamp
        ,input_contact.phone_number
        ,input_contact.email_address
        ,input_contact.location_full
        ,input_contact.location_city
        ,input_contact.location_country
        ,input_contact.pipedrive_label
        ,hist_employee_owner.employee_id AS fk_employee_id_owner
        ,input_contact.last_updated_timestamp
        ,input_contact.pipedrive_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,input_contact.tech_deleted_in_source_system
        ,input_contact.tech_row_hash
        ,input_contact.tech_data_load_utc_timestamp
        ,input_contact.tech_data_load_uuid
    FROM core.contact_i AS input_contact
    JOIN core.party_i AS input_party ON input_contact.fk_party_id = input_party.party_id
    JOIN core.employee_i AS input_employee_owner ON input_contact.fk_employee_id_owner = input_employee_owner.employee_id
    JOIN core.organization_i AS input_organization ON input_contact.fk_organization_id = input_organization.organization_id
    JOIN core.party_ih AS hist_party ON hist_party.party_key = input_party.party_key
        AND hist_party.tech_is_current = TRUE
    JOIN core.organization_ih AS hist_organization ON hist_organization.organization_key = input_organization.organization_key
        AND hist_organization.tech_is_current = TRUE
    JOIN core.employee_ih AS hist_employee_owner ON hist_employee_owner.employee_key = input_employee_owner.employee_key
        AND hist_employee_owner.tech_is_current = TRUE
    LEFT JOIN core.contact_ih AS hist_contact ON hist_contact.contact_key = input_contact.contact_key
    WHERE hist_contact.contact_key IS NULL;
    -----------------------------------------------
    -----------------------------------------------
    --                                           --
    --              UPDATED RECORDS              --
    --                                           --
    -----------------------------------------------
    -----------------------------------------------
    ------------------------------------------------
    -- GET KEYS OF RECORDS THAT HAVE BEEN UPDATED --
    ------------------------------------------------
    DROP TABLE IF EXISTS updated_contact;
    
    CREATE TEMPORARY TABLE updated_contact (
        contact_key TEXT NOT NULL
    );
    
    INSERT INTO updated_contact (
        contact_key
    )
    SELECT
        input_contact.contact_key
    FROM core.contact_i AS input_contact
    JOIN core.contact_ih AS hist_contact ON hist_contact.contact_key = input_contact.contact_key
        AND hist_contact.tech_is_current = TRUE
    WHERE input_contact.tech_row_hash != hist_contact.tech_row_hash
        -- This "OR" is maybe unnecessary but let's keep it just to be sure.
        OR (
            input_contact.tech_row_hash = hist_contact.tech_row_hash
            AND hist_contact.tech_deleted_in_source_system = TRUE
            AND input_contact.tech_deleted_in_source_system = FALSE
            );
    ----------------------------------------------------------
    -- SET tech_is_current FLAG ON UPDATED RECORDS TO FALSE --
    -- AND                                                  --
    -- SET tech_end_effective_utc_timestamp To CURRENT TIMESTAMP     --
    ----------------------------------------------------------
    UPDATE core.contact_ih AS hist_contact
    SET tech_is_current = FALSE
        ,tech_end_effective_utc_timestamp = CURRENT_UTC_TIMESTAMP_AS_BIGINT - 1
    FROM updated_contact
    WHERE updated_contact.contact_key = hist_contact.contact_key
        AND hist_contact.tech_is_current = TRUE;
    ----------------------------
    -- INSERT UPDATED RECORDS --
    ----------------------------
    INSERT INTO core.contact_ih (
        contact_key
        ,fk_organization_id
        ,fk_party_id
        ,created_timestamp
        ,phone_number
        ,email_address
        ,location_full
        ,location_city
        ,location_country
        ,pipedrive_label
        ,fk_employee_id_owner
        ,last_updated_timestamp
        ,pipedrive_id
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_contact.contact_key
        ,hist_organization.organization_id AS fk_organization_id
        ,hist_party.party_id AS fk_party_id
        ,input_contact.created_timestamp
        ,input_contact.phone_number
        ,input_contact.email_address
        ,input_contact.location_full
        ,input_contact.location_city
        ,input_contact.location_country
        ,input_contact.pipedrive_label
        ,hist_employee_owner.employee_id AS fk_employee_id_owner
        ,input_contact.last_updated_timestamp
        ,input_contact.pipedrive_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,input_contact.tech_deleted_in_source_system
        ,input_contact.tech_row_hash
        ,input_contact.tech_data_load_utc_timestamp
        ,input_contact.tech_data_load_uuid
    FROM core.contact_i AS input_contact
    JOIN core.party_i AS input_party ON input_contact.fk_party_id = input_party.party_id
    JOIN core.employee_i AS input_employee_owner ON input_contact.fk_employee_id_owner = input_employee_owner.employee_id
    JOIN core.organization_i AS input_organization ON input_contact.fk_organization_id = input_organization.organization_id
    JOIN core.party_ih AS hist_party ON hist_party.party_key = input_party.party_key
        AND hist_party.tech_is_current = TRUE
    JOIN core.organization_ih AS hist_organization ON hist_organization.organization_key = input_organization.organization_key
        AND hist_organization.tech_is_current = TRUE
    JOIN core.employee_ih AS hist_employee_owner ON hist_employee_owner.employee_key = input_employee_owner.employee_key
        AND hist_employee_owner.tech_is_current = TRUE
    WHERE input_contact.contact_key IN (SELECT contact_key FROM updated_contact);
    -----------------------------------------------
    -----------------------------------------------
    --                                           --
    --              DELETED RECORDS              --
    --                                           --
    -----------------------------------------------
    -----------------------------------------------
    ------------------------------------------------
    -- GET KEYS OF RECORDS THAT HAVE BEEN DELETED --
    ------------------------------------------------
    DROP TABLE IF EXISTS deleted_contact;
    CREATE TEMPORARY TABLE deleted_contact (
        contact_id INTEGER NOT NULL
    );
    
    INSERT INTO deleted_contact (
        contact_id
    )
    SELECT
        hist_contact.contact_id
    FROM core.contact_ih AS hist_contact
    LEFT JOIN core.contact_i AS input_contact ON input_contact.contact_key = hist_contact.contact_key
    WHERE input_contact.contact_key IS NULL 
        AND hist_contact.tech_is_current = TRUE
        AND hist_contact.tech_deleted_in_source_system = FALSE;
    ---------------------------------------------------------------
    -- SET tech_is_current FLAG ON DELETED RECORDS TO FALSE      --
    -- AND                                                       --
    -- SET tech_end_effective_utc_timestamp To CURRENT TIMESTAMP --
    ---------------------------------------------------------------
    UPDATE core.contact_ih AS hist_contact
    SET tech_is_current = FALSE
        ,tech_end_effective_utc_timestamp = CURRENT_UTC_TIMESTAMP_AS_BIGINT - 1
    FROM deleted_contact
    WHERE deleted_contact.contact_id = hist_contact.contact_id
        AND hist_contact.tech_is_current = TRUE;
    ----------------------------
    -- INSERT DELETED RECORDS --
    ----------------------------
    INSERT INTO core.contact_ih (
        contact_key
        ,fk_organization_id
        ,fk_party_id
        ,created_timestamp
        ,phone_number
        ,email_address
        ,location_full
        ,location_city
        ,location_country
        ,pipedrive_label
        ,fk_employee_id_owner
        ,last_updated_timestamp
        ,pipedrive_id
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        hist_contact.contact_key
        ,hist_contact.fk_organization_id
        ,hist_contact.fk_party_id
        ,hist_contact.created_timestamp
        ,hist_contact.phone_number
        ,hist_contact.email_address
        ,hist_contact.location_full
        ,hist_contact.location_city
        ,hist_contact.location_country
        ,hist_contact.pipedrive_label
        ,hist_contact.fk_employee_id_owner
        ,hist_contact.last_updated_timestamp
        ,hist_contact.pipedrive_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,TRUE AS tech_deleted_in_source_system
        ,hist_contact.tech_row_hash
        ,hist_contact.tech_data_load_utc_timestamp
        ,hist_contact.tech_data_load_uuid
    FROM core.contact_ih AS hist_contact
    WHERE hist_contact.contact_id IN (SELECT contact_id FROM deleted_contact);
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_h_deal_ih" id="Procedure_5422b9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_h_deal_ih()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        SCD2 historization of table deal_i.
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-29 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
INFINITY_TIMESTAMP bigint := 300001010000;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -------------------------------------------
    -------------------------------------------
    --                                       --
    --              NEW RECORDS              --
    --                                       --
    -------------------------------------------
    -------------------------------------------
    ------------------------
    -- INSERT NEW RECORDS --
    ------------------------
    INSERT INTO core.deal_ih (
        deal_key
        ,title
        ,previous_stage
        ,stage
        ,fk_issue_id
        ,fk_contact_id
        ,fk_organization_id
        ,fk_employee_id_owner
        ,usd_value
        ,fk_currency_id_deal_currency
        ,local_currency_value
        ,created_timestamp
        ,last_updated_timestamp
        ,closed_timestamp
        ,pipedrive_id
        ,status
        ,pipeline
        ,won_timestamp
        ,lost_timestamp
        ,fk_date_id_expected_close_date
        ,industry
        ,deal_source
        ,deal_source_detail
        ,region
        ,reason_lost
        ,resulting_state
        ,category
        ,country
        ,vtiger_key
        ,partner_identified_by
        ,partner_qualified_by
        ,partner_poc_done_by
        ,partner_closed_by
        ,partner_resold_by
        ,partner_supported_by
        ,partner_owned_by
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_deal.deal_key
        ,input_deal.title
        ,NULL::TEXT AS previous_stage
        ,input_deal.stage
        ,hist_issue.issue_id AS fk_issue_id
        ,hist_contact.contact_id AS fk_contact_id
        ,hist_organization.organization_id AS fk_organization_id
        ,hist_employee_owner.employee_id AS fk_employee_id_owner
        ,input_deal.usd_value
        ,input_deal.fk_currency_id_deal_currency
        ,input_deal.local_currency_value
        ,input_deal.created_timestamp
        ,input_deal.last_updated_timestamp
        ,input_deal.closed_timestamp
        ,input_deal.pipedrive_id
        ,input_deal.status
        ,input_deal.pipeline
        ,input_deal.won_timestamp
        ,input_deal.lost_timestamp
        ,input_deal.fk_date_id_expected_close_date
        ,input_deal.industry
        ,input_deal.deal_source
        ,input_deal.deal_source_detail
        ,input_deal.region
        ,input_deal.reason_lost
        ,input_deal.resulting_state
        ,input_deal.category
        ,input_deal.country
        ,input_deal.vtiger_key
        ,input_deal.partner_identified_by
        ,input_deal.partner_qualified_by
        ,input_deal.partner_poc_done_by
        ,input_deal.partner_closed_by
        ,input_deal.partner_resold_by
        ,input_deal.partner_supported_by
        ,input_deal.partner_owned_by
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,input_deal.tech_deleted_in_source_system
        ,input_deal.tech_row_hash
        ,input_deal.tech_data_load_utc_timestamp
        ,input_deal.tech_data_load_uuid
    FROM core.deal_i AS input_deal
    JOIN core.employee_i AS input_employee_owner ON input_deal.fk_employee_id_owner = input_employee_owner.employee_id
    JOIN core.organization_i AS input_organization ON input_deal.fk_organization_id = input_organization.organization_id    
    JOIN core.issue_i AS input_issue ON input_deal.fk_issue_id = input_issue.issue_id    
    JOIN core.contact_i AS input_contact ON input_deal.fk_contact_id = input_contact.contact_id    
    JOIN core.organization_ih AS hist_organization ON hist_organization.organization_key = input_organization.organization_key
        AND hist_organization.tech_is_current = TRUE
    JOIN core.employee_ih AS hist_employee_owner ON hist_employee_owner.employee_key = input_employee_owner.employee_key
        AND hist_employee_owner.tech_is_current = TRUE
    JOIN core.issue_ih AS hist_issue ON hist_issue.issue_key = input_issue.issue_key
        AND hist_issue.tech_is_current = TRUE
    JOIN core.contact_ih AS hist_contact ON hist_contact.contact_key = input_contact.contact_key
        AND hist_contact.tech_is_current = TRUE
    LEFT JOIN core.deal_ih AS hist_deal ON hist_deal.deal_key = input_deal.deal_key
    WHERE hist_deal.deal_key IS NULL;
    -----------------------------------------------
    -----------------------------------------------
    --                                           --
    --              UPDATED RECORDS              --
    --                                           --
    -----------------------------------------------
    -----------------------------------------------
    ------------------------------------------------
    -- GET KEYS OF RECORDS THAT HAVE BEEN UPDATED --
    ------------------------------------------------
    DROP TABLE IF EXISTS updated_deal;
    
    CREATE TEMPORARY TABLE updated_deal (
        deal_key TEXT NOT NULL
        ,deal_id INTEGER NOT NULL
    );
    
    INSERT INTO updated_deal (
        deal_key
        ,deal_id
    )
    SELECT
        hist_deal.deal_key
        ,hist_deal.deal_id
    FROM core.deal_i AS input_deal
    JOIN core.deal_ih AS hist_deal ON hist_deal.deal_key = input_deal.deal_key
        AND hist_deal.tech_is_current = TRUE
    WHERE input_deal.tech_row_hash != hist_deal.tech_row_hash
        -- This "OR" is maybe unnecessary but let's keep it just to be sure.
        OR (
            input_deal.tech_row_hash = hist_deal.tech_row_hash
            AND hist_deal.tech_deleted_in_source_system = TRUE
            AND input_deal.tech_deleted_in_source_system = FALSE
            );
    ----------------------------------------------------------
    -- SET tech_is_current FLAG ON UPDATED RECORDS TO FALSE --
    -- AND                                                  --
    -- SET tech_end_effective_utc_timestamp To CURRENT TIMESTAMP     --
    ----------------------------------------------------------
    UPDATE core.deal_ih AS hist_deal
    SET tech_is_current = FALSE
        ,tech_end_effective_utc_timestamp = CURRENT_UTC_TIMESTAMP_AS_BIGINT - 1
    FROM updated_deal
    WHERE updated_deal.deal_key = hist_deal.deal_key
        AND hist_deal.tech_is_current = TRUE;
    ----------------------------
    -- INSERT UPDATED RECORDS --
    ----------------------------
    INSERT INTO core.deal_ih (
        deal_key
        ,title
        ,previous_stage
        ,stage
        ,fk_issue_id
        ,fk_contact_id
        ,fk_organization_id
        ,fk_employee_id_owner
        ,usd_value
        ,fk_currency_id_deal_currency
        ,local_currency_value
        ,created_timestamp
        ,last_updated_timestamp
        ,closed_timestamp
        ,pipedrive_id
        ,status
        ,pipeline
        ,won_timestamp
        ,lost_timestamp
        ,fk_date_id_expected_close_date
        ,industry
        ,deal_source
        ,deal_source_detail
        ,region
        ,reason_lost
        ,resulting_state
        ,category
        ,country
        ,vtiger_key
        ,partner_identified_by
        ,partner_qualified_by
        ,partner_poc_done_by
        ,partner_closed_by
        ,partner_resold_by
        ,partner_supported_by
        ,partner_owned_by
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
       input_deal.deal_key
        ,input_deal.title
        ,hist_deal.stage AS previous_stage
        ,input_deal.stage
        ,hist_issue.issue_id AS fk_issue_id
        ,hist_contact.contact_id AS fk_contact_id
        ,hist_organization.organization_id AS fk_organization_id
        ,hist_employee_owner.employee_id AS fk_employee_id_owner
        ,input_deal.usd_value
        ,input_deal.fk_currency_id_deal_currency
        ,input_deal.local_currency_value
        ,input_deal.created_timestamp
        ,input_deal.last_updated_timestamp
        ,input_deal.closed_timestamp
        ,input_deal.pipedrive_id
        ,input_deal.status
        ,input_deal.pipeline
        ,input_deal.won_timestamp
        ,input_deal.lost_timestamp
        ,input_deal.fk_date_id_expected_close_date
        ,input_deal.industry
        ,input_deal.deal_source
        ,input_deal.deal_source_detail
        ,input_deal.region
        ,input_deal.reason_lost
        ,input_deal.resulting_state
        ,input_deal.category
        ,input_deal.country
        ,input_deal.vtiger_key
        ,input_deal.partner_identified_by
        ,input_deal.partner_qualified_by
        ,input_deal.partner_poc_done_by
        ,input_deal.partner_closed_by
        ,input_deal.partner_resold_by
        ,input_deal.partner_supported_by
        ,input_deal.partner_owned_by
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,input_deal.tech_deleted_in_source_system
        ,input_deal.tech_row_hash
        ,input_deal.tech_data_load_utc_timestamp
        ,input_deal.tech_data_load_uuid
    FROM core.deal_i AS input_deal
    JOIN core.deal_ih AS hist_deal ON hist_deal.deal_key = input_deal.deal_key AND hist_deal.deal_id IN (SELECT deal_id FROM updated_deal)
    JOIN core.employee_i AS input_employee_owner ON input_deal.fk_employee_id_owner = input_employee_owner.employee_id
    JOIN core.organization_i AS input_organization ON input_deal.fk_organization_id = input_organization.organization_id    
    JOIN core.issue_i AS input_issue ON input_deal.fk_issue_id = input_issue.issue_id    
    JOIN core.contact_i AS input_contact ON input_deal.fk_contact_id = input_contact.contact_id    
    JOIN core.organization_ih AS hist_organization ON hist_organization.organization_key = input_organization.organization_key
        AND hist_organization.tech_is_current = TRUE
    JOIN core.employee_ih AS hist_employee_owner ON hist_employee_owner.employee_key = input_employee_owner.employee_key
        AND hist_employee_owner.tech_is_current = TRUE
    JOIN core.issue_ih AS hist_issue ON hist_issue.issue_key = input_issue.issue_key
        AND hist_issue.tech_is_current = TRUE
    JOIN core.contact_ih AS hist_contact ON hist_contact.contact_key = input_contact.contact_key
        AND hist_contact.tech_is_current = TRUE
    WHERE input_deal.deal_key IN (SELECT deal_key FROM updated_deal);
    -----------------------------------------------
    -----------------------------------------------
    --                                           --
    --              DELETED RECORDS              --
    --                                           --
    -----------------------------------------------
    -----------------------------------------------
    ------------------------------------------------
    -- GET KEYS OF RECORDS THAT HAVE BEEN DELETED --
    ------------------------------------------------
    DROP TABLE IF EXISTS deleted_deal;
    CREATE TEMPORARY TABLE deleted_deal (
        deal_id INTEGER NOT NULL
    );
    
    INSERT INTO deleted_deal (
        deal_id
    )
    SELECT
        hist_deal.deal_id
    FROM core.deal_ih AS hist_deal
    LEFT JOIN core.deal_i AS input_deal ON input_deal.deal_key = hist_deal.deal_key
    WHERE input_deal.deal_key IS NULL 
        AND hist_deal.tech_is_current = TRUE
        AND hist_deal.tech_deleted_in_source_system = FALSE;
    ---------------------------------------------------------------
    -- SET tech_is_current FLAG ON DELETED RECORDS TO FALSE      --
    -- AND                                                       --
    -- SET tech_end_effective_utc_timestamp To CURRENT TIMESTAMP --
    ---------------------------------------------------------------
    UPDATE core.deal_ih AS hist_deal
    SET tech_is_current = FALSE
        ,tech_end_effective_utc_timestamp = CURRENT_UTC_TIMESTAMP_AS_BIGINT - 1
    FROM deleted_deal
    WHERE deleted_deal.deal_id = hist_deal.deal_id
        AND hist_deal.tech_is_current = TRUE;
    ----------------------------
    -- INSERT DELETED RECORDS --
    ----------------------------
    INSERT INTO core.deal_ih (
        deal_key
        ,title
        ,previous_stage
        ,stage
        ,fk_issue_id
        ,fk_contact_id
        ,fk_organization_id
        ,fk_employee_id_owner
        ,usd_value
        ,fk_currency_id_deal_currency
        ,local_currency_value
        ,created_timestamp
        ,last_updated_timestamp
        ,closed_timestamp
        ,pipedrive_id
        ,status
        ,pipeline
        ,won_timestamp
        ,lost_timestamp
        ,fk_date_id_expected_close_date
        ,industry
        ,deal_source
        ,deal_source_detail
        ,region
        ,reason_lost
        ,resulting_state
        ,category
        ,country
        ,vtiger_key
        ,partner_identified_by
        ,partner_qualified_by
        ,partner_poc_done_by
        ,partner_closed_by
        ,partner_resold_by
        ,partner_supported_by
        ,partner_owned_by
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        hist_deal.deal_key
        ,hist_deal.title
        ,hist_deal.stage AS previous_stage
        ,hist_deal.stage
        ,hist_deal.fk_issue_id
        ,hist_deal.fk_contact_id
        ,hist_deal.fk_organization_id
        ,hist_deal.fk_employee_id_owner
        ,hist_deal.usd_value
        ,hist_deal.fk_currency_id_deal_currency
        ,hist_deal.local_currency_value
        ,hist_deal.created_timestamp
        ,hist_deal.last_updated_timestamp
        ,hist_deal.closed_timestamp
        ,hist_deal.pipedrive_id
        ,hist_deal.status
        ,hist_deal.pipeline
        ,hist_deal.won_timestamp
        ,hist_deal.lost_timestamp
        ,hist_deal.fk_date_id_expected_close_date
        ,hist_deal.industry
        ,hist_deal.deal_source
        ,hist_deal.deal_source_detail
        ,hist_deal.region
        ,hist_deal.reason_lost
        ,hist_deal.resulting_state
        ,hist_deal.category
        ,hist_deal.country
        ,hist_deal.vtiger_key
        ,hist_deal.partner_identified_by
        ,hist_deal.partner_qualified_by
        ,hist_deal.partner_poc_done_by
        ,hist_deal.partner_closed_by
        ,hist_deal.partner_resold_by
        ,hist_deal.partner_supported_by
        ,hist_deal.partner_owned_by
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,TRUE AS tech_deleted_in_source_system
        ,hist_deal.tech_row_hash
        ,hist_deal.tech_data_load_utc_timestamp
        ,hist_deal.tech_data_load_uuid
    FROM core.deal_ih AS hist_deal
    WHERE hist_deal.deal_id IN (SELECT deal_id FROM deleted_deal);
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_h_employee_ih" id="Procedure_4cf9995" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_h_employee_ih()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        SCD2 historization of table employee_i.
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-21 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
INFINITY_TIMESTAMP bigint := 300001010000;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    
    -------------------------------------------
    -------------------------------------------
    --                                       --
    --              NEW RECORDS              --
    --                                       --
    -------------------------------------------
    -------------------------------------------
    ------------------------
    -- INSERT NEW RECORDS --
    ------------------------
    INSERT INTO core.employee_ih (
        employee_key
        ,full_name
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,created_timestamp
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )	
    SELECT 
        input_employee.employee_key
        ,input_employee.full_name
        ,input_employee.email
        ,input_employee.secondary_email
        ,input_employee.phone
        ,input_employee.mobile_phone
        ,input_employee.created_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,input_employee.tech_deleted_in_source_system
        ,input_employee.tech_row_hash
        ,input_employee.tech_data_load_utc_timestamp
        ,input_employee.tech_data_load_uuid
    FROM core.employee_i AS input_employee
    LEFT JOIN core.employee_ih AS hist_employee ON hist_employee.employee_key = input_employee.employee_key
        AND hist_employee.tech_is_current = TRUE
    WHERE hist_employee.employee_key IS NULL;
    -----------------------------------------------
    -----------------------------------------------
    --                                           --
    --              UPDATED RECORDS              --
    --                                           --
    -----------------------------------------------
    -----------------------------------------------
    ------------------------------------------------
    -- GET KEYS OF RECORDS THAT HAVE BEEN UPDATED --
    ------------------------------------------------
    DROP TABLE IF EXISTS updated_employee;
    
    CREATE TEMPORARY TABLE updated_employee (
        employee_key TEXT NOT NULL
    );
    
    INSERT INTO updated_employee (
        employee_key
    )
    SELECT
        input_employee.employee_key
    FROM core.employee_i AS input_employee
    JOIN core.employee_ih AS hist_employee ON hist_employee.employee_key = input_employee.employee_key
        AND hist_employee.tech_is_current = TRUE
    WHERE input_employee.tech_row_hash != hist_employee.tech_row_hash
        -- This "OR" is maybe unnecessary but let's keep it just to be sure.
        OR (
            input_employee.tech_row_hash = hist_employee.tech_row_hash
            AND hist_employee.tech_deleted_in_source_system = TRUE
            AND input_employee.tech_deleted_in_source_system = FALSE
            );
    ----------------------------------------------------------
    -- SET tech_is_current FLAG ON UPDATED RECORDS TO FALSE --
    -- AND                                                  --
    -- SET tech_end_effective_utc_timestamp To CURRENT TIMESTAMP     --
    ----------------------------------------------------------
    UPDATE core.employee_ih AS hist_employee
    SET tech_is_current = FALSE
        ,tech_end_effective_utc_timestamp = CURRENT_UTC_TIMESTAMP_AS_BIGINT - 1
    FROM updated_employee
    WHERE updated_employee.employee_key = hist_employee.employee_key
        AND hist_employee.tech_is_current = TRUE;
    ----------------------------
    -- INSERT UPDATED RECORDS --
    ----------------------------
    INSERT INTO core.employee_ih (
        employee_key
        ,full_name
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,created_timestamp
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT 
        input_employee.employee_key
        ,input_employee.full_name
        ,input_employee.email
        ,input_employee.secondary_email
        ,input_employee.phone
        ,input_employee.mobile_phone
        ,input_employee.created_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,input_employee.tech_deleted_in_source_system
        ,input_employee.tech_row_hash
        ,input_employee.tech_data_load_utc_timestamp
        ,input_employee.tech_data_load_uuid
    FROM core.employee_i AS input_employee
    WHERE input_employee.employee_key IN (SELECT employee_key FROM updated_employee);
    -----------------------------------------------
    -----------------------------------------------
    --                                           --
    --              DELETED RECORDS              --
    --                                           --
    -----------------------------------------------
    -----------------------------------------------
    ------------------------------------------------
    -- GET KEYS OF RECORDS THAT HAVE BEEN DELETED --
    ------------------------------------------------
    DROP TABLE IF EXISTS deleted_employee;
    CREATE TEMPORARY TABLE deleted_employee (
        employee_id INTEGER NOT NULL
    );
    
    INSERT INTO deleted_employee (
        employee_id
    )
    SELECT
        hist_employee.employee_id
    FROM core.employee_ih AS hist_employee
    LEFT JOIN core.employee_i AS input_employee ON input_employee.employee_key = hist_employee.employee_key
    WHERE input_employee.employee_key IS NULL 
        AND hist_employee.tech_is_current = TRUE
        AND hist_employee.tech_deleted_in_source_system = FALSE;
    ---------------------------------------------------------------
    -- SET tech_is_current FLAG ON DELETED RECORDS TO FALSE      --
    -- AND                                                       --
    -- SET tech_end_effective_utc_timestamp To CURRENT TIMESTAMP --
    ---------------------------------------------------------------
    UPDATE core.employee_ih AS hist_employee
    SET tech_is_current = FALSE
        ,tech_end_effective_utc_timestamp = CURRENT_UTC_TIMESTAMP_AS_BIGINT - 1
    FROM deleted_employee
    WHERE deleted_employee.employee_id = hist_employee.employee_id
        AND hist_employee.tech_is_current = TRUE;
    ----------------------------
    -- INSERT DELETED RECORDS --
    ----------------------------
    INSERT INTO core.employee_ih (
        employee_key
        ,full_name
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,created_timestamp
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT 
        hist_employee.employee_key
        ,hist_employee.full_name
        ,hist_employee.email
        ,hist_employee.secondary_email
        ,hist_employee.phone
        ,hist_employee.mobile_phone
        ,hist_employee.created_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,TRUE AS tech_deleted_in_source_system
        ,hist_employee.tech_row_hash
        ,hist_employee.tech_data_load_utc_timestamp
        ,hist_employee.tech_data_load_uuid
    FROM core.employee_ih AS hist_employee
    WHERE hist_employee.employee_id IN (SELECT employee_id FROM deleted_employee);
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_h_issue_ih" id="Procedure_2467066" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_h_issue_ih()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        SCD2 historization of table issue_i.
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-11-27 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
INFINITY_TIMESTAMP bigint := 300001010000;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -------------------------------------------
    -------------------------------------------
    --                                       --
    --              NEW RECORDS              --
    --                                       --
    -------------------------------------------
    -------------------------------------------
    ------------------------
    -- INSERT NEW RECORDS --
    ------------------------
    INSERT INTO core.issue_ih (
        jira_key
        ,jira_id
        ,issue_key
        ,account
        ,customer
        ,status
        ,summary
        ,priority
        ,sla_priority
        ,description
        ,issue_type
        ,resolution
        ,deployment
        ,epic_name
        ,epic_jira_key
        ,original_estimate
        ,remaining_estimate
        ,aggregate_original_estimate
        ,aggregate_remaining_estimate
        ,labels
        ,components
        ,fix_versions
        ,affected_versions
        ,first_response_timestamp
        ,resolution_timestamp
        ,created_timestamp
        ,fk_date_id_pilot_date
        ,fk_date_id_sales_date
        ,fk_date_id_deployment_date
        ,fk_project_id
        ,fk_party_id_created_by
        ,fk_party_id_reported_by
        ,fk_employee_id_assigned_to
        ,fk_date_id_inception_date
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_issue.jira_key
        ,input_issue.jira_id
        ,input_issue.issue_key
        ,input_issue.account
        ,input_issue.customer
        ,input_issue.status
        ,input_issue.summary
        ,input_issue.priority
        ,input_issue.sla_priority
        ,input_issue.description
        ,input_issue.issue_type
        ,input_issue.resolution
        ,input_issue.deployment
        ,input_issue.epic_name
        ,input_issue.epic_jira_key
        ,input_issue.original_estimate
        ,input_issue.remaining_estimate
        ,input_issue.aggregate_original_estimate
        ,input_issue.aggregate_remaining_estimate
        ,input_issue.labels
        ,input_issue.components
        ,input_issue.fix_versions
        ,input_issue.affected_versions
        ,input_issue.first_response_timestamp
        ,input_issue.resolution_timestamp
        ,input_issue.created_timestamp
        ,input_issue.fk_date_id_pilot_date
        ,input_issue.fk_date_id_sales_date
        ,input_issue.fk_date_id_deployment_date
        ,hist_project.project_id AS fk_project_id
        ,hist_party_created.party_id AS fk_party_id_created_by
        ,hist_party_reported.party_id AS fk_party_id_reported_by
        ,hist_employee_assigned.employee_id AS fk_employee_id_assigned_to
        ,input_issue.fk_date_id_inception_date
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,input_issue.tech_deleted_in_source_system
        ,input_issue.tech_row_hash
        ,input_issue.tech_data_load_utc_timestamp
        ,input_issue.tech_data_load_uuid
    FROM core.issue_i AS input_issue    
    JOIN core.employee_i AS input_employee_assigned ON input_issue.fk_employee_id_assigned_to = input_employee_assigned.employee_id    
    JOIN core.employee_ih AS hist_employee_assigned ON hist_employee_assigned.employee_key = input_employee_assigned.employee_key
        AND hist_employee_assigned.tech_is_current = TRUE
    JOIN core.party_i AS input_party_reported ON input_issue.fk_party_id_reported_by = input_party_reported.party_id    
    JOIN core.party_ih AS hist_party_reported ON hist_party_reported.party_key = input_party_reported.party_key
        AND hist_party_reported.tech_is_current = TRUE
    JOIN core.party_i AS input_party_created ON input_issue.fk_party_id_created_by = input_party_created.party_id    
    JOIN core.party_ih AS hist_party_created ON hist_party_created.party_key = input_party_created.party_key
        AND hist_party_created.tech_is_current = TRUE
    JOIN core.project_i AS input_project ON input_issue.fk_project_id = input_project.project_id    
    JOIN core.project_ih AS hist_project ON hist_project.project_key = input_project.project_key
        AND hist_project.tech_is_current = TRUE
    LEFT JOIN core.issue_ih AS hist_issue ON hist_issue.issue_key = input_issue.issue_key
    WHERE hist_issue.issue_key IS NULL;
    -----------------------------------------------
    -----------------------------------------------
    --                                           --
    --              UPDATED RECORDS              --
    --                                           --
    -----------------------------------------------
    -----------------------------------------------
    ------------------------------------------------
    -- GET KEYS OF RECORDS THAT HAVE BEEN UPDATED --
    ------------------------------------------------
    DROP TABLE IF EXISTS updated_issue;
    CREATE TEMPORARY TABLE updated_issue (
        issue_key TEXT NOT NULL
    );
    
    INSERT INTO updated_issue (
        issue_key
    )
    SELECT
        input_issue.issue_key
    FROM core.issue_i AS input_issue
    JOIN core.issue_ih AS hist_issue ON hist_issue.issue_key = input_issue.issue_key
        AND hist_issue.tech_is_current = TRUE
    WHERE input_issue.tech_row_hash != hist_issue.tech_row_hash
        -- This "OR" is maybe unnecessary but let's keep it just to be sure.
        OR (
            input_issue.tech_row_hash = hist_issue.tech_row_hash
            AND hist_issue.tech_deleted_in_source_system = TRUE
            AND input_issue.tech_deleted_in_source_system = FALSE
            );
    ----------------------------------------------------------
    -- SET tech_is_current FLAG ON UPDATED RECORDS TO FALSE --
    -- AND                                                  --
    -- SET tech_end_effective_utc_timestamp To CURRENT TIMESTAMP     --
    ----------------------------------------------------------
    UPDATE core.issue_ih AS hist_issue
    SET tech_is_current = FALSE
        ,tech_end_effective_utc_timestamp = CURRENT_UTC_TIMESTAMP_AS_BIGINT - 1
    FROM updated_issue
    WHERE updated_issue.issue_key = hist_issue.issue_key
        AND hist_issue.tech_is_current = TRUE;
    ----------------------------
    -- INSERT UPDATED RECORDS --
    ----------------------------
    INSERT INTO core.issue_ih (
        jira_key
        ,jira_id
        ,issue_key
        ,account
        ,customer
        ,status
        ,summary
        ,priority
        ,sla_priority
        ,description
        ,issue_type
        ,resolution
        ,deployment
        ,epic_name
        ,epic_jira_key
        ,original_estimate
        ,remaining_estimate
        ,aggregate_original_estimate
        ,aggregate_remaining_estimate
        ,labels
        ,components
        ,fix_versions
        ,affected_versions
        ,first_response_timestamp
        ,resolution_timestamp
        ,created_timestamp
        ,fk_date_id_pilot_date
        ,fk_date_id_sales_date
        ,fk_date_id_deployment_date
        ,fk_project_id
        ,fk_party_id_created_by
        ,fk_party_id_reported_by
        ,fk_employee_id_assigned_to
        ,fk_date_id_inception_date
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_issue.jira_key
        ,input_issue.jira_id
        ,input_issue.issue_key
        ,input_issue.account
        ,input_issue.customer
        ,input_issue.status
        ,input_issue.summary
        ,input_issue.priority
        ,input_issue.sla_priority
        ,input_issue.description
        ,input_issue.issue_type
        ,input_issue.resolution
        ,input_issue.deployment
        ,input_issue.epic_name
        ,input_issue.epic_jira_key
        ,input_issue.original_estimate
        ,input_issue.remaining_estimate
        ,input_issue.aggregate_original_estimate
        ,input_issue.aggregate_remaining_estimate
        ,input_issue.labels
        ,input_issue.components
        ,input_issue.fix_versions
        ,input_issue.affected_versions
        ,input_issue.first_response_timestamp
        ,input_issue.resolution_timestamp
        ,input_issue.created_timestamp
        ,input_issue.fk_date_id_pilot_date
        ,input_issue.fk_date_id_sales_date
        ,input_issue.fk_date_id_deployment_date
        ,hist_project.project_id AS fk_project_id
        ,hist_party_created.party_id AS fk_party_id_created_by
        ,hist_party_reported.party_id AS fk_party_id_reported_by
        ,hist_employee_assigned.employee_id AS fk_employee_id_assigned_to
        ,input_issue.fk_date_id_inception_date
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,input_issue.tech_deleted_in_source_system
        ,input_issue.tech_row_hash
        ,input_issue.tech_data_load_utc_timestamp
        ,input_issue.tech_data_load_uuid
    FROM core.issue_i AS input_issue
    JOIN core.employee_i AS input_employee_assigned ON input_issue.fk_employee_id_assigned_to = input_employee_assigned.employee_id    
    JOIN core.employee_ih AS hist_employee_assigned ON hist_employee_assigned.employee_key = input_employee_assigned.employee_key
        AND hist_employee_assigned.tech_is_current = TRUE
    JOIN core.party_i AS input_party_reported ON input_issue.fk_party_id_reported_by = input_party_reported.party_id    
    JOIN core.party_ih AS hist_party_reported ON hist_party_reported.party_key = input_party_reported.party_key
        AND hist_party_reported.tech_is_current = TRUE
    JOIN core.party_i AS input_party_created ON input_issue.fk_party_id_created_by = input_party_created.party_id    
    JOIN core.party_ih AS hist_party_created ON hist_party_created.party_key = input_party_created.party_key
        AND hist_party_created.tech_is_current = TRUE
    JOIN core.project_i AS input_project ON input_issue.fk_project_id = input_project.project_id    
    JOIN core.project_ih AS hist_project ON hist_project.project_key = input_project.project_key
        AND hist_project.tech_is_current = TRUE
    WHERE input_issue.issue_key IN (SELECT issue_key FROM updated_issue);
    -----------------------------------------------
    -----------------------------------------------
    --                                           --
    --              DELETED RECORDS              --
    --                                           --
    -----------------------------------------------
    -----------------------------------------------
    ------------------------------------------------
    -- GET KEYS OF RECORDS THAT HAVE BEEN DELETED --
    ------------------------------------------------
    DROP TABLE IF EXISTS deleted_issue;
    CREATE TEMPORARY TABLE deleted_issue (
        issue_id INTEGER NOT NULL
    );
    
    INSERT INTO deleted_issue (
        issue_id
    )
    SELECT
        hist_issue.issue_id
    FROM core.issue_ih AS hist_issue
    LEFT JOIN core.issue_i AS input_issue ON input_issue.issue_key = hist_issue.issue_key
    WHERE input_issue.issue_key IS NULL 
        AND hist_issue.tech_is_current = TRUE
        AND hist_issue.tech_deleted_in_source_system = FALSE;
    ---------------------------------------------------------------
    -- SET tech_is_current FLAG ON DELETED RECORDS TO FALSE      --
    -- AND                                                       --
    -- SET tech_end_effective_utc_timestamp To CURRENT TIMESTAMP --
    ---------------------------------------------------------------
    UPDATE core.issue_ih AS hist_issue
    SET tech_is_current = FALSE
        ,tech_end_effective_utc_timestamp = CURRENT_UTC_TIMESTAMP_AS_BIGINT - 1
    FROM deleted_issue
    WHERE deleted_issue.issue_id = hist_issue.issue_id
        AND hist_issue.tech_is_current = TRUE;
    ----------------------------
    -- INSERT DELETED RECORDS --
    ----------------------------
    INSERT INTO core.issue_ih (
        jira_key
        ,jira_id
        ,issue_key
        ,account
        ,customer
        ,status
        ,summary
        ,priority
        ,sla_priority
        ,description
        ,issue_type
        ,resolution
        ,deployment
        ,epic_name
        ,epic_jira_key
        ,original_estimate
        ,remaining_estimate
        ,aggregate_original_estimate
        ,aggregate_remaining_estimate
        ,labels
        ,components
        ,fix_versions
        ,affected_versions
        ,first_response_timestamp
        ,resolution_timestamp
        ,created_timestamp
        ,fk_date_id_pilot_date
        ,fk_date_id_sales_date
        ,fk_date_id_deployment_date
        ,fk_project_id
        ,fk_party_id_created_by
        ,fk_party_id_reported_by
        ,fk_employee_id_assigned_to
        ,fk_date_id_inception_date
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT 
        hist_issue.jira_key
        ,hist_issue.jira_id
        ,hist_issue.issue_key
        ,hist_issue.account
        ,hist_issue.customer
        ,hist_issue.status
        ,hist_issue.summary
        ,hist_issue.priority
        ,hist_issue.sla_priority
        ,hist_issue.description
        ,hist_issue.issue_type
        ,hist_issue.resolution
        ,hist_issue.deployment
        ,hist_issue.epic_name
        ,hist_issue.epic_jira_key
        ,hist_issue.original_estimate
        ,hist_issue.remaining_estimate
        ,hist_issue.aggregate_original_estimate
        ,hist_issue.aggregate_remaining_estimate
        ,hist_issue.labels
        ,hist_issue.components
        ,hist_issue.fix_versions
        ,hist_issue.affected_versions
        ,hist_issue.first_response_timestamp
        ,hist_issue.resolution_timestamp
        ,hist_issue.created_timestamp
        ,hist_issue.fk_date_id_pilot_date
        ,hist_issue.fk_date_id_sales_date
        ,hist_issue.fk_date_id_deployment_date
        ,hist_issue.fk_project_id
        ,hist_issue.fk_party_id_created_by
        ,hist_issue.fk_party_id_reported_by
        ,hist_issue.fk_employee_id_assigned_to
        ,hist_issue.fk_date_id_inception_date
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,TRUE AS tech_deleted_in_source_system
        ,hist_issue.tech_row_hash
        ,hist_issue.tech_data_load_utc_timestamp
        ,hist_issue.tech_data_load_uuid
    FROM core.issue_ih AS hist_issue
    WHERE hist_issue.issue_id IN (SELECT issue_id FROM deleted_issue);
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_h_organization_ih" id="Procedure_be2f05" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_h_organization_ih()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        SCD2 historization of table organization_i.
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-29 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
INFINITY_TIMESTAMP bigint := 300001010000;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -------------------------------------------
    -------------------------------------------
    --                                       --
    --              NEW RECORDS              --
    --                                       --
    -------------------------------------------
    -------------------------------------------
    ------------------------
    -- INSERT NEW RECORDS --
    ------------------------
    INSERT INTO core.organization_ih (
        organization_key
        ,fk_party_id
        ,created_timestamp
        ,address_full
        ,address_city
        ,address_country
        ,pipedrive_label
        ,fk_employee_id_owner
        ,last_updated_timestamp
        ,pipedrive_id
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_organization.organization_key
        ,hist_party.party_id AS fk_party_id
        ,input_organization.created_timestamp
        ,input_organization.address_full
        ,input_organization.address_city
        ,input_organization.address_country
        ,input_organization.pipedrive_label
        ,hist_employee_owner.employee_id AS fk_employee_id_owner
        ,input_organization.last_updated_timestamp
        ,input_organization.pipedrive_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,input_organization.tech_deleted_in_source_system
        ,input_organization.tech_row_hash
        ,input_organization.tech_data_load_utc_timestamp
        ,input_organization.tech_data_load_uuid
    FROM core.organization_i AS input_organization
    JOIN core.employee_i AS input_employee_owner ON input_organization.fk_employee_id_owner = input_employee_owner.employee_id    
    JOIN core.employee_ih AS hist_employee_owner ON hist_employee_owner.employee_key = input_employee_owner.employee_key
        AND hist_employee_owner.tech_is_current = TRUE
    JOIN core.party_i AS input_party ON input_organization.fk_party_id = input_party.party_id    
    JOIN core.party_ih AS hist_party ON hist_party.party_key = input_party.party_key
        AND hist_party.tech_is_current = TRUE
    LEFT JOIN core.organization_ih AS hist_organization ON hist_organization.organization_key = input_organization.organization_key
    WHERE hist_organization.organization_key IS NULL;
    -----------------------------------------------
    -----------------------------------------------
    --                                           --
    --              UPDATED RECORDS              --
    --                                           --
    -----------------------------------------------
    -----------------------------------------------
    ------------------------------------------------
    -- GET KEYS OF RECORDS THAT HAVE BEEN UPDATED --
    ------------------------------------------------
    DROP TABLE IF EXISTS updated_organization;
    CREATE TEMPORARY TABLE updated_organization (
        organization_key TEXT NOT NULL
    );
    
    INSERT INTO updated_organization (
        organization_key
    )
    SELECT
        input_organization.organization_key
    FROM core.organization_i AS input_organization
    JOIN core.organization_ih AS hist_organization ON hist_organization.organization_key = input_organization.organization_key
        AND hist_organization.tech_is_current = TRUE
    WHERE input_organization.tech_row_hash != hist_organization.tech_row_hash
        -- This "OR" is maybe unnecessary but let's keep it just to be sure.
        OR (
            input_organization.tech_row_hash = hist_organization.tech_row_hash
            AND hist_organization.tech_deleted_in_source_system = TRUE
            AND input_organization.tech_deleted_in_source_system = FALSE
    );
    ----------------------------------------------------------
    -- SET tech_is_current FLAG ON UPDATED RECORDS TO FALSE --
    -- AND                                                  --
    -- SET tech_end_effective_utc_timestamp To CURRENT TIMESTAMP     --
    ----------------------------------------------------------
    UPDATE core.organization_ih AS hist_organization
    SET tech_is_current = FALSE
        ,tech_end_effective_utc_timestamp = CURRENT_UTC_TIMESTAMP_AS_BIGINT - 1
    FROM updated_organization
    WHERE updated_organization.organization_key = hist_organization.organization_key
        AND hist_organization.tech_is_current = TRUE;
    ----------------------------
    -- INSERT UPDATED RECORDS --
    ----------------------------
    INSERT INTO core.organization_ih (
        organization_key
        ,fk_party_id
        ,created_timestamp
        ,address_full
        ,address_city
        ,address_country
        ,pipedrive_label
        ,fk_employee_id_owner
        ,last_updated_timestamp
        ,pipedrive_id
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_organization.organization_key
        ,hist_party.party_id AS fk_party_id
        ,input_organization.created_timestamp
        ,input_organization.address_full
        ,input_organization.address_city
        ,input_organization.address_country
        ,input_organization.pipedrive_label
        ,hist_employee_owner.employee_id AS fk_employee_id_owner
        ,input_organization.last_updated_timestamp
        ,input_organization.pipedrive_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,input_organization.tech_deleted_in_source_system
        ,input_organization.tech_row_hash
        ,input_organization.tech_data_load_utc_timestamp
        ,input_organization.tech_data_load_uuid
    FROM core.organization_i AS input_organization
    JOIN core.employee_i AS input_employee_owner ON input_organization.fk_employee_id_owner = input_employee_owner.employee_id    
    JOIN core.employee_ih AS hist_employee_owner ON hist_employee_owner.employee_key = input_employee_owner.employee_key
        AND hist_employee_owner.tech_is_current = TRUE
    JOIN core.party_i AS input_party ON input_organization.fk_party_id = input_party.party_id    
    JOIN core.party_ih AS hist_party ON hist_party.party_key = input_party.party_key
        AND hist_party.tech_is_current = TRUE
    WHERE input_organization.organization_key IN (SELECT organization_key FROM updated_organization);
    -----------------------------------------------
    -----------------------------------------------
    --                                           --
    --              DELETED RECORDS              --
    --                                           --
    -----------------------------------------------
    -----------------------------------------------
    ------------------------------------------------
    -- GET KEYS OF RECORDS THAT HAVE BEEN DELETED --
    ------------------------------------------------
    DROP TABLE IF EXISTS deleted_organization;
    CREATE TEMPORARY TABLE deleted_organization (
        organization_id INTEGER NOT NULL
    );
    
    INSERT INTO deleted_organization (
        organization_id
    )
    SELECT
        hist_organization.organization_id
    FROM core.organization_ih AS hist_organization
    LEFT JOIN core.organization_i AS input_organization ON input_organization.organization_key = hist_organization.organization_key
    WHERE input_organization.organization_key IS NULL 
        AND hist_organization.tech_is_current = TRUE
        AND hist_organization.tech_deleted_in_source_system = FALSE;
    ---------------------------------------------------------------
    -- SET tech_is_current FLAG ON DELETED RECORDS TO FALSE      --
    -- AND                                                       --
    -- SET tech_end_effective_utc_timestamp To CURRENT TIMESTAMP --
    ---------------------------------------------------------------
    UPDATE core.organization_ih AS hist_organization
    SET tech_is_current = FALSE
        ,tech_end_effective_utc_timestamp = CURRENT_UTC_TIMESTAMP_AS_BIGINT - 1
    FROM deleted_organization
    WHERE deleted_organization.organization_id = hist_organization.organization_id
        AND hist_organization.tech_is_current = TRUE;
    ----------------------------
    -- INSERT DELETED RECORDS --
    ----------------------------
    INSERT INTO core.organization_ih (
        organization_key
        ,fk_party_id
        ,created_timestamp
        ,address_full
        ,address_city
        ,address_country
        ,pipedrive_label
        ,fk_employee_id_owner
        ,last_updated_timestamp
        ,pipedrive_id
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT 
        hist_organization.organization_key
        ,hist_organization.fk_party_id
        ,hist_organization.created_timestamp
        ,hist_organization.address_full
        ,hist_organization.address_city
        ,hist_organization.address_country
        ,hist_organization.pipedrive_label
        ,hist_organization.fk_employee_id_owner
        ,hist_organization.last_updated_timestamp
        ,hist_organization.pipedrive_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,TRUE AS tech_deleted_in_source_system
        ,hist_organization.tech_row_hash
        ,hist_organization.tech_data_load_utc_timestamp
        ,hist_organization.tech_data_load_uuid
    FROM core.organization_ih AS hist_organization
    WHERE hist_organization.organization_id IN (SELECT organization_id FROM deleted_organization);
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_h_party_ih" id="Procedure_ae2054" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_h_party_ih()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        SCD2 historization of table party_i.
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-29 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
INFINITY_TIMESTAMP bigint := 300001010000;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -------------------------------------------
    -------------------------------------------
    --                                       --
    --              NEW RECORDS              --
    --                                       --
    -------------------------------------------
    -------------------------------------------
    ------------------------
    -- INSERT NEW RECORDS --
    ------------------------
    INSERT INTO core.party_ih (
        party_key
        ,full_name
        ,short_name
        ,fk_employee_id_last_modified_by
        ,fk_employee_id_created_by
        ,created_timestamp
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_party.party_key
        ,input_party.full_name
        ,input_party.short_name
        ,hist_employee_modified.employee_id AS fk_employee_id_last_modified_by
        ,hist_employee_created.employee_id AS fk_employee_id_created_by
        ,input_party.created_timestamp
        ,input_party.last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,input_party.tech_deleted_in_source_system
        ,input_party.tech_row_hash
        ,input_party.tech_data_load_utc_timestamp
        ,input_party.tech_data_load_uuid
    FROM core.party_i AS input_party
    JOIN core.employee_i AS input_employee_created ON input_party.fk_employee_id_created_by = input_employee_created.employee_id
    JOIN core.employee_i AS input_employee_last_modified ON input_party.fk_employee_id_last_modified_by = input_employee_last_modified.employee_id
    JOIN core.employee_ih AS hist_employee_modified ON hist_employee_modified.employee_key = input_employee_last_modified.employee_key
        AND hist_employee_modified.tech_is_current = TRUE
    JOIN core.employee_ih AS hist_employee_created ON hist_employee_created.employee_key = input_employee_created.employee_key
        AND hist_employee_created.tech_is_current = TRUE
    LEFT JOIN core.party_ih AS hist_party ON hist_party.party_key = input_party.party_key
    WHERE hist_party.party_key IS NULL;
    -----------------------------------------------
    -----------------------------------------------
    --                                           --
    --              UPDATED RECORDS              --
    --                                           --
    -----------------------------------------------
    -----------------------------------------------
    ------------------------------------------------
    -- GET KEYS OF RECORDS THAT HAVE BEEN UPDATED --
    ------------------------------------------------
    DROP TABLE IF EXISTS updated_party;
    CREATE TEMPORARY TABLE updated_party (
        party_key TEXT NOT NULL
    );
    
    INSERT INTO updated_party (
        party_key
    )
    SELECT
        input_party.party_key
    FROM core.party_i AS input_party
    JOIN core.party_ih AS hist_party ON hist_party.party_key = input_party.party_key
        AND hist_party.tech_is_current = TRUE
    WHERE input_party.tech_row_hash != hist_party.tech_row_hash
        -- This "OR" is maybe unnecessary but let's keep it just to be sure.
        OR (
            input_party.tech_row_hash = hist_party.tech_row_hash
            AND hist_party.tech_deleted_in_source_system = TRUE
            AND input_party.tech_deleted_in_source_system = FALSE
            );
    ----------------------------------------------------------
    -- SET tech_is_current FLAG ON UPDATED RECORDS TO FALSE --
    -- AND                                                  --
    -- SET tech_end_effective_utc_timestamp To CURRENT TIMESTAMP     --
    ----------------------------------------------------------
    UPDATE core.party_ih AS hist_party
    SET tech_is_current = FALSE
        ,tech_end_effective_utc_timestamp = CURRENT_UTC_TIMESTAMP_AS_BIGINT - 1
    FROM updated_party
    WHERE updated_party.party_key = hist_party.party_key
        AND hist_party.tech_is_current = TRUE;
    ----------------------------
    -- INSERT UPDATED RECORDS --
    ----------------------------
    INSERT INTO core.party_ih (
        party_key
        ,full_name
        ,short_name
        ,fk_employee_id_last_modified_by
        ,fk_employee_id_created_by
        ,created_timestamp
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_party.party_key
        ,input_party.full_name
        ,input_party.short_name
        ,hist_employee_modified.employee_id AS fk_employee_id_last_modified_by
        ,hist_employee_created.employee_id AS fk_employee_id_created_by
        ,input_party.created_timestamp
        ,input_party.last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,input_party.tech_deleted_in_source_system
        ,input_party.tech_row_hash
        ,input_party.tech_data_load_utc_timestamp
        ,input_party.tech_data_load_uuid
    FROM core.party_i AS input_party
    JOIN core.employee_i AS input_employee_created ON input_party.fk_employee_id_created_by = input_employee_created.employee_id
    JOIN core.employee_i AS input_employee_last_modified ON input_party.fk_employee_id_last_modified_by = input_employee_last_modified.employee_id
    JOIN core.employee_ih AS hist_employee_modified ON hist_employee_modified.employee_key = input_employee_last_modified.employee_key
        AND hist_employee_modified.tech_is_current = TRUE
    JOIN core.employee_ih AS hist_employee_created ON hist_employee_created.employee_key = input_employee_created.employee_key
        AND hist_employee_created.tech_is_current = TRUE
    WHERE input_party.party_key IN (SELECT party_key FROM updated_party);
    -----------------------------------------------
    -----------------------------------------------
    --                                           --
    --              DELETED RECORDS              --
    --                                           --
    -----------------------------------------------
    -----------------------------------------------
    ------------------------------------------------
    -- GET KEYS OF RECORDS THAT HAVE BEEN DELETED --
    ------------------------------------------------
    DROP TABLE IF EXISTS deleted_party;
    
    CREATE TEMPORARY TABLE deleted_party (
        party_id INTEGER NOT NULL
    );
    
    INSERT INTO deleted_party (
        party_id
    )
    SELECT
        hist_party.party_id
    FROM core.party_ih AS hist_party
    LEFT JOIN core.party_i AS input_party ON input_party.party_key = hist_party.party_key
    WHERE input_party.party_key IS NULL 
        AND hist_party.tech_is_current = TRUE
        AND hist_party.tech_deleted_in_source_system = FALSE;
    ---------------------------------------------------------------
    -- SET tech_is_current FLAG ON DELETED RECORDS TO FALSE      --
    -- AND                                                       --
    -- SET tech_end_effective_utc_timestamp To CURRENT TIMESTAMP --
    ---------------------------------------------------------------
    UPDATE core.party_ih AS hist_party
    SET tech_is_current = FALSE
        ,tech_end_effective_utc_timestamp = CURRENT_UTC_TIMESTAMP_AS_BIGINT - 1
    FROM deleted_party
    WHERE deleted_party.party_id = hist_party.party_id
        AND hist_party.tech_is_current = TRUE;
    ----------------------------
    -- INSERT DELETED RECORDS --
    ----------------------------
    INSERT INTO core.party_ih (
        party_key
        ,full_name
        ,short_name
        ,fk_employee_id_last_modified_by
        ,fk_employee_id_created_by
        ,created_timestamp
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT 
        hist_party.party_key
        ,hist_party.full_name
        ,hist_party.short_name
        ,hist_party.fk_employee_id_last_modified_by
        ,hist_party.fk_employee_id_created_by
        ,hist_party.created_timestamp
        ,hist_party.last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,TRUE AS tech_deleted_in_source_system
        ,hist_party.tech_row_hash
        ,hist_party.tech_data_load_utc_timestamp
        ,hist_party.tech_data_load_uuid
    FROM core.party_ih AS hist_party
    WHERE hist_party.party_id IN (SELECT party_id FROM deleted_party);
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_h_project_ih" id="Procedure_172666f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_h_project_ih()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:    SCD2 historization of table project_i.
    AUTHOR:         Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:     2018-11-27 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
INFINITY_TIMESTAMP bigint := 300001010000;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -------------------------------------------
    -------------------------------------------
    --                                       --
    --              NEW RECORDS              --
    --                                       --
    -------------------------------------------
    -------------------------------------------
    ------------------------
    -- INSERT NEW RECORDS --
    ------------------------
    INSERT INTO core.project_ih (
        project_key
        ,jira_id
        ,jira_key
        ,project_name
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_project.project_key
        ,input_project.jira_id
        ,input_project.jira_key
        ,input_project.project_name
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,input_project.tech_deleted_in_source_system
        ,input_project.tech_row_hash
        ,input_project.tech_data_load_utc_timestamp
        ,input_project.tech_data_load_uuid
    FROM core.project_i AS input_project
    LEFT JOIN core.project_ih AS hist_project ON hist_project.project_key = input_project.project_key
    WHERE hist_project.project_key IS NULL;
    -----------------------------------------------
    -----------------------------------------------
    --                                           --
    --              UPDATED RECORDS              --
    --                                           --
    -----------------------------------------------
    -----------------------------------------------
    ------------------------------------------------
    -- GET KEYS OF RECORDS THAT HAVE BEEN UPDATED --
    ------------------------------------------------
    DROP TABLE IF EXISTS updated_project;
    
    CREATE TEMPORARY TABLE updated_project (
        project_key TEXT NOT NULL
    );
    INSERT INTO updated_project (
        project_key
    )
    SELECT
        input_project.project_key
    FROM core.project_i AS input_project
    JOIN core.project_ih AS hist_project ON hist_project.project_key = input_project.project_key
        AND hist_project.tech_is_current = TRUE
    WHERE input_project.tech_row_hash != hist_project.tech_row_hash
        -- This "OR" is maybe unnecessary but let's keep it just to be sure.
        OR (
            input_project.tech_row_hash = hist_project.tech_row_hash
            AND hist_project.tech_deleted_in_source_system = TRUE
            AND input_project.tech_deleted_in_source_system = FALSE
            );
    ----------------------------------------------------------
    -- SET tech_is_current FLAG ON UPDATED RECORDS TO FALSE --
    -- AND                                                  --
    -- SET tech_end_effective_utc_timestamp To CURRENT TIMESTAMP     --
    ----------------------------------------------------------
    UPDATE core.project_ih AS hist_project
    SET tech_is_current = FALSE
        ,tech_end_effective_utc_timestamp = CURRENT_UTC_TIMESTAMP_AS_BIGINT - 1
    FROM updated_project
    WHERE updated_project.project_key = hist_project.project_key
        AND hist_project.tech_is_current = TRUE;
    ----------------------------
    -- INSERT UPDATED RECORDS --
    ----------------------------
    INSERT INTO core.project_ih (
        project_key
        ,jira_id
        ,jira_key
        ,project_name
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_project.project_key
        ,input_project.jira_id
        ,input_project.jira_key
        ,input_project.project_name
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,input_project.tech_deleted_in_source_system
        ,input_project.tech_row_hash
        ,input_project.tech_data_load_utc_timestamp
        ,input_project.tech_data_load_uuid
    FROM core.project_i AS input_project
    WHERE input_project.project_key IN (SELECT project_key FROM updated_project);
    -----------------------------------------------
    -----------------------------------------------
    --                                           --
    --              DELETED RECORDS              --
    --                                           --
    -----------------------------------------------
    -----------------------------------------------
    ------------------------------------------------
    -- GET KEYS OF RECORDS THAT HAVE BEEN DELETED --
    ------------------------------------------------
    DROP TABLE IF EXISTS deleted_project;
    CREATE TEMPORARY TABLE deleted_project (
        project_id INTEGER NOT NULL
    );
    
    INSERT INTO deleted_project (
        project_id
    )
    SELECT
        hist_project.project_id
    FROM core.project_ih AS hist_project
    LEFT JOIN core.project_i AS input_project ON input_project.project_key = hist_project.project_key
    WHERE input_project.project_key IS NULL 
        AND hist_project.tech_is_current = TRUE
        AND hist_project.tech_deleted_in_source_system = FALSE;
    ---------------------------------------------------------------
    -- SET tech_is_current FLAG ON DELETED RECORDS TO FALSE      --
    -- AND                                                       --
    -- SET tech_end_effective_utc_timestamp To CURRENT TIMESTAMP --
    ---------------------------------------------------------------
    UPDATE core.project_ih AS hist_project
    SET tech_is_current = FALSE
        ,tech_end_effective_utc_timestamp = CURRENT_UTC_TIMESTAMP_AS_BIGINT - 1
    FROM deleted_project
    WHERE deleted_project.project_id = hist_project.project_id
        AND hist_project.tech_is_current = TRUE;
    ----------------------------
    -- INSERT DELETED RECORDS --
    ----------------------------
    INSERT INTO core.project_ih (
        project_key
        ,jira_id
        ,jira_key
        ,project_name
        ,tech_insert_function
        ,tech_begin_effective_utc_timestamp
        ,tech_end_effective_utc_timestamp
        ,tech_is_current
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        hist_project.project_key
        ,hist_project.jira_id
        ,hist_project.jira_key
        ,hist_project.project_name
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_begin_effective_utc_timestamp
        ,INFINITY_TIMESTAMP AS tech_end_effective_utc_timestamp
        ,TRUE AS tech_is_current
        ,TRUE AS tech_deleted_in_source_system
        ,hist_project.tech_row_hash
        ,hist_project.tech_data_load_utc_timestamp
        ,hist_project.tech_data_load_uuid
    FROM core.project_ih AS hist_project
    WHERE hist_project.project_id IN (SELECT project_id FROM deleted_project);
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_h_uber_core_i_tables" id="Procedure_3988bc0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_h_uber_core_i_tables()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
BEGIN
    PERFORM core.tf_h_employee_ih();
    PERFORM core.tf_h_party_ih();
    PERFORM core.tf_h_organization_ih();
    PERFORM core.tf_h_contact_ih();
    PERFORM core.tf_h_project_ih();
    PERFORM core.tf_h_issue_ih();
    PERFORM core.tf_h_deal_ih();
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_cnb_trg_c_exchange_rate_g" id="Procedure_3880f9a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_cnb_trg_c_exchange_rate_g()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Insert data from stage 'cnb_*' tables into core code list table c_exchange_rate_g
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:               Data from CNB (Czech National Bank) has no values for weekends and hodildays.
                        This transformation adds those values, *!* it copies the last non null value *!* .
                        Example:
                        Input *After* LEFT JOIN with 'date' table:
                        Counter_currency    Base_currency   Exchange_rate   Date
                        CZK                 USD             NULL            20 100 105
                        CZK                 USD             18,35           20 100 106
                        CZK                 USD             18,44           20 100 107
                        CZK                 USD             NULL            20 100 108
                        CZK                 USD             NULL            20 100 109
                        CZK                 USD             NULL            20 100 110
                        CZK                 USD             18,03           20 100 111
                        Input *After* Transformation:
                        Counter_currency    Base_currency   Exchange_rate   Date
                        CZK                 USD             NULL            20 100 105
                        CZK                 USD             18,35           20 100 106
                        CZK                 USD             18,44           20 100 107
                        CZK                 USD             18,44           20 100 108
                        CZK                 USD             18,44           20 100 109
                        CZK                 USD             18,44           20 100 110
                        CZK                 USD             18,03           20 100 111
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
first_exchange_rate_date integer := 20100101; --date as integer in format YYYYMMDD
stack text;
FUNCTION_NAME text;

BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_c_exchange_rate_g;
    CREATE TEMPORARY TABLE tmp_c_exchange_rate_g (
        fk_currency_id_counter_currency     INTEGER NOT NULL
        ,fk_currency_id_base_currency       INTEGER NOT NULL
        ,exchange_rate                      DOUBLE PRECISION NOT NULL
        ,fk_date_id                         INTEGER NOT NULL
        ,tech_insert_function               TEXT NOT NULL
        ,tech_insert_utc_timestamp          BIGINT NOT NULL
        ,tech_data_load_utc_timestamp       BIGINT NOT NULL
        ,tech_data_load_uuid                TEXT NOT NULL
    );
    WITH
        --Get the latest date that was in the the API response from ČNB.
        latest_exchange_rate_date AS (
            SELECT
                (TO_CHAR(TO_DATE(cnb_exchange_rate.datum, 'DD.MM.YYYY'), 'YYYYMMDD'::TEXT))::INTEGER AS date_as_integer
            FROM stage.cnb_exchange_rate_counter_currency_czk_i AS cnb_exchange_rate
            ORDER BY (TO_CHAR(TO_DATE(cnb_exchange_rate.datum, 'DD.MM.YYYY'), 'YYYYMMDD'::TEXT))::INTEGER DESC LIMIT 1
            )
        ,usd_to_czk_missing_holidays AS (
            SELECT
                czk_currency.currency_id AS fk_currency_id_counter_currency
                ,usd_currency.currency_id AS fk_currency_id_base_currency
                ,REPLACE(cnb_exchange_rate.usd_1, ',', '.')::DOUBLE PRECISION AS exchange_rate
                ,(TO_CHAR(TO_DATE(cnb_exchange_rate.datum, 'DD.MM.YYYY'), 'YYYYMMDD'::TEXT))::INTEGER AS fk_date_id
                ,cnb_exchange_rate.tech_data_load_utc_timestamp
                ,cnb_exchange_rate.tech_data_load_uuid
            FROM stage.cnb_exchange_rate_counter_currency_czk_i AS cnb_exchange_rate
            JOIN core.c_currency_g AS czk_currency ON czk_currency.alphabetical_code = 'CZK'
            JOIN core.c_currency_g AS usd_currency ON usd_currency.alphabetical_code = 'USD'
            )
        ,usd_to_eur_missing_holidays AS (
            SELECT
                eur_currency.currency_id AS fk_currency_id_counter_currency
                ,usd_currency.currency_id AS fk_currency_id_base_currency
                ,REPLACE(cnb_exchange_rate.usd_1, ',', '.')::DOUBLE PRECISION / REPLACE(eur_1, ',', '.')::DOUBLE PRECISION AS exchange_rate
                ,(TO_CHAR(TO_DATE(cnb_exchange_rate.datum, 'DD.MM.YYYY'), 'YYYYMMDD'::TEXT))::INTEGER AS fk_date_id
                ,cnb_exchange_rate.tech_data_load_utc_timestamp
                ,cnb_exchange_rate.tech_data_load_uuid
            FROM stage.cnb_exchange_rate_counter_currency_czk_i AS cnb_exchange_rate
            JOIN core.c_currency_g AS eur_currency ON eur_currency.alphabetical_code = 'EUR'
            JOIN core.c_currency_g AS usd_currency ON usd_currency.alphabetical_code = 'USD'
        )
        ,czk_to_usd_missing_holidays AS (
            SELECT
                usd_currency.currency_id AS fk_currency_id_counter_currency
                ,czk_currency.currency_id AS fk_currency_id_base_currency
                ,1 /(REPLACE(cnb_exchange_rate.usd_1, ',', '.')::DOUBLE PRECISION) AS exchange_rate
                ,(TO_CHAR(TO_DATE(cnb_exchange_rate.datum, 'DD.MM.YYYY'), 'YYYYMMDD'::TEXT))::INTEGER AS fk_date_id
                ,cnb_exchange_rate.tech_data_load_utc_timestamp
                ,cnb_exchange_rate.tech_data_load_uuid
            FROM stage.cnb_exchange_rate_counter_currency_czk_i AS cnb_exchange_rate
            JOIN core.c_currency_g AS czk_currency ON czk_currency.alphabetical_code = 'CZK'
            JOIN core.c_currency_g AS usd_currency ON usd_currency.alphabetical_code = 'USD'
        )
        ,czk_to_eur_missing_holidays AS (
            SELECT
                eur_currency.currency_id AS fk_currency_id_counter_currency
                ,czk_currency.currency_id AS fk_currency_id_base_currency
                ,1 /(REPLACE(cnb_exchange_rate.eur_1, ',', '.')::DOUBLE PRECISION) AS exchange_rate
                ,(TO_CHAR(TO_DATE(cnb_exchange_rate.datum, 'DD.MM.YYYY'), 'YYYYMMDD'::TEXT))::INTEGER AS fk_date_id
                ,cnb_exchange_rate.tech_data_load_utc_timestamp
                ,cnb_exchange_rate.tech_data_load_uuid
            FROM stage.cnb_exchange_rate_counter_currency_czk_i AS cnb_exchange_rate
            JOIN core.c_currency_g AS czk_currency ON czk_currency.alphabetical_code = 'CZK'
            JOIN core.c_currency_g AS eur_currency ON eur_currency.alphabetical_code = 'EUR'
        )
        ,eur_to_usd_missing_holidays AS (
            SELECT
                usd_currency.currency_id AS fk_currency_id_counter_currency
                ,eur_currency.currency_id AS fk_currency_id_base_currency
                ,REPLACE(cnb_exchange_rate.eur_1, ',', '.')::DOUBLE PRECISION / REPLACE(usd_1, ',', '.')::DOUBLE PRECISION AS exchange_rate
                ,(TO_CHAR(TO_DATE(cnb_exchange_rate.datum, 'DD.MM.YYYY'), 'YYYYMMDD'::TEXT))::INTEGER AS fk_date_id
                ,cnb_exchange_rate.tech_data_load_utc_timestamp
                ,cnb_exchange_rate.tech_data_load_uuid
            FROM stage.cnb_exchange_rate_counter_currency_czk_i AS cnb_exchange_rate
            JOIN core.c_currency_g AS eur_currency ON eur_currency.alphabetical_code = 'EUR'
            JOIN core.c_currency_g AS usd_currency ON usd_currency.alphabetical_code = 'USD'
        )
        ,eur_to_czk_missing_holidays AS (
            SELECT
                czk_currency.currency_id AS fk_currency_id_counter_currency
                ,eur_currency.currency_id AS fk_currency_id_base_currency
                ,REPLACE(cnb_exchange_rate.eur_1, ',', '.')::DOUBLE PRECISION AS exchange_rate
                ,(TO_CHAR(TO_DATE(cnb_exchange_rate.datum, 'DD.MM.YYYY'), 'YYYYMMDD'::TEXT))::INTEGER AS fk_date_id
                ,cnb_exchange_rate.tech_data_load_utc_timestamp
                ,cnb_exchange_rate.tech_data_load_uuid
            FROM stage.cnb_exchange_rate_counter_currency_czk_i AS cnb_exchange_rate
            JOIN core.c_currency_g AS czk_currency ON czk_currency.alphabetical_code = 'CZK'
            JOIN core.c_currency_g AS eur_currency ON eur_currency.alphabetical_code = 'EUR'
        )
        ,usd_to_czk_added_missing_dates_without_exchange_rates AS (
            SELECT
                c_date.date_id
                ,usd_to_czk_missing_holidays.exchange_rate
               ,SUM(CASE WHEN fk_date_id IS NOT NULL THEN 1 ELSE 0 END) OVER (
                    ORDER BY date_id ASC
                    ) AS by_date_partition
                ,usd_to_czk_missing_holidays.tech_data_load_utc_timestamp
                ,usd_to_czk_missing_holidays.tech_data_load_uuid
                ,usd_to_czk_missing_holidays.fk_currency_id_counter_currency
                ,usd_to_czk_missing_holidays.fk_currency_id_base_currency
            FROM core.c_date_g AS c_date
            LEFT JOIN usd_to_czk_missing_holidays ON usd_to_czk_missing_holidays.fk_date_id = c_date.date_id
            WHERE c_date.date_id > 20100101
                AND c_date.date_id <= (
                    SELECT date_as_integer
                    FROM latest_exchange_rate_date
                    )
        )
        ,usd_to_eur_added_missing_dates_without_exchange_rates AS (
            SELECT
                c_date.date_id
                ,usd_to_eur_missing_holidays.exchange_rate
               ,SUM(CASE WHEN fk_date_id IS NOT NULL THEN 1 ELSE 0 END) OVER (
                    ORDER BY date_id ASC
                    ) AS by_date_partition
                ,usd_to_eur_missing_holidays.tech_data_load_utc_timestamp
                ,usd_to_eur_missing_holidays.tech_data_load_uuid
                ,usd_to_eur_missing_holidays.fk_currency_id_counter_currency
                ,usd_to_eur_missing_holidays.fk_currency_id_base_currency
            FROM core.c_date_g AS c_date
            LEFT JOIN usd_to_eur_missing_holidays ON usd_to_eur_missing_holidays.fk_date_id = c_date.date_id
            WHERE c_date.date_id > 20100101
                AND c_date.date_id <= (
                    SELECT date_as_integer
                    FROM latest_exchange_rate_date
                    )
        )
        ,czk_to_usd_added_missing_dates_without_exchange_rates AS (
            SELECT
                c_date.date_id
                ,czk_to_usd_missing_holidays.exchange_rate
               ,SUM(CASE WHEN fk_date_id IS NOT NULL THEN 1 ELSE 0 END) OVER (
                    ORDER BY date_id ASC
                    ) AS by_date_partition
                ,czk_to_usd_missing_holidays.tech_data_load_utc_timestamp
                ,czk_to_usd_missing_holidays.tech_data_load_uuid
                ,czk_to_usd_missing_holidays.fk_currency_id_counter_currency
                ,czk_to_usd_missing_holidays.fk_currency_id_base_currency
            FROM core.c_date_g AS c_date
            LEFT JOIN czk_to_usd_missing_holidays ON czk_to_usd_missing_holidays.fk_date_id = c_date.date_id
            WHERE c_date.date_id > 20100101
                AND c_date.date_id <= (
                    SELECT date_as_integer
                    FROM latest_exchange_rate_date
                    )
        )
        ,czk_to_eur_added_missing_dates_without_exchange_rates AS (
            SELECT
                c_date.date_id
                ,czk_to_eur_missing_holidays.exchange_rate
               ,SUM(CASE WHEN fk_date_id IS NOT NULL THEN 1 ELSE 0 END) OVER (
                    ORDER BY date_id ASC
                    ) AS by_date_partition
                ,czk_to_eur_missing_holidays.tech_data_load_utc_timestamp
                ,czk_to_eur_missing_holidays.tech_data_load_uuid
                ,czk_to_eur_missing_holidays.fk_currency_id_counter_currency
                ,czk_to_eur_missing_holidays.fk_currency_id_base_currency
            FROM core.c_date_g AS c_date
            LEFT JOIN czk_to_eur_missing_holidays ON czk_to_eur_missing_holidays.fk_date_id = c_date.date_id
            WHERE c_date.date_id > 20100101
                AND c_date.date_id <= (
                    SELECT date_as_integer
                    FROM latest_exchange_rate_date
                    )
        )
        ,eur_to_usd_added_missing_dates_without_exchange_rates AS (
            SELECT
                c_date.date_id
                ,eur_to_usd_missing_holidays.exchange_rate
               ,SUM(CASE WHEN fk_date_id IS NOT NULL THEN 1 ELSE 0 END) OVER (
                    ORDER BY date_id ASC
                    ) AS by_date_partition
                ,eur_to_usd_missing_holidays.tech_data_load_utc_timestamp
                ,eur_to_usd_missing_holidays.tech_data_load_uuid
                ,eur_to_usd_missing_holidays.fk_currency_id_counter_currency
                ,eur_to_usd_missing_holidays.fk_currency_id_base_currency
            FROM core.c_date_g AS c_date
            LEFT JOIN eur_to_usd_missing_holidays ON eur_to_usd_missing_holidays.fk_date_id = c_date.date_id
            WHERE c_date.date_id > 20100101
                AND c_date.date_id <= (
                    SELECT date_as_integer
                    FROM latest_exchange_rate_date
                    )
        )
        ,eur_to_czk_added_missing_dates_without_exchange_rates AS (
            SELECT
                c_date.date_id
                ,eur_to_czk_missing_holidays.exchange_rate
               ,SUM(CASE WHEN fk_date_id IS NOT NULL THEN 1 ELSE 0 END) OVER (
                    ORDER BY date_id ASC
                    ) AS by_date_partition
                ,eur_to_czk_missing_holidays.tech_data_load_utc_timestamp
                ,eur_to_czk_missing_holidays.tech_data_load_uuid
                ,eur_to_czk_missing_holidays.fk_currency_id_counter_currency
                ,eur_to_czk_missing_holidays.fk_currency_id_base_currency
            FROM core.c_date_g AS c_date
            LEFT JOIN eur_to_czk_missing_holidays ON eur_to_czk_missing_holidays.fk_date_id = c_date.date_id
            WHERE c_date.date_id > 20100101
                AND c_date.date_id <= (
                    SELECT date_as_integer
                    FROM latest_exchange_rate_date
                    )
        )
        ,usd_to_czk_added_missing_exchange_rates AS (
            SELECT
                FIRST_VALUE(fk_currency_id_counter_currency) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS fk_currency_id_counter_currency
                ,FIRST_VALUE(fk_currency_id_base_currency) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS fk_currency_id_base_currency
                ,FIRST_VALUE(exchange_rate) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS exchange_rate
                ,date_id
                ,FIRST_VALUE(tech_data_load_utc_timestamp) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS tech_data_load_utc_timestamp
                ,FIRST_VALUE(tech_data_load_uuid) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS tech_data_load_uuid
            FROM usd_to_czk_added_missing_dates_without_exchange_rates
        )
        ,usd_to_eur_added_missing_exchange_rates AS (
            SELECT
                FIRST_VALUE(fk_currency_id_counter_currency) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS fk_currency_id_counter_currency
                ,FIRST_VALUE(fk_currency_id_base_currency) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS fk_currency_id_base_currency
                ,FIRST_VALUE(exchange_rate) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS exchange_rate
                ,date_id
                ,FIRST_VALUE(tech_data_load_utc_timestamp) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS tech_data_load_utc_timestamp
                ,FIRST_VALUE(tech_data_load_uuid) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS tech_data_load_uuid
            FROM usd_to_eur_added_missing_dates_without_exchange_rates
        )
        ,czk_to_usd_added_missing_exchange_rates AS (
            SELECT
                FIRST_VALUE(fk_currency_id_counter_currency) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS fk_currency_id_counter_currency
                ,FIRST_VALUE(fk_currency_id_base_currency) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS fk_currency_id_base_currency
                ,FIRST_VALUE(exchange_rate) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS exchange_rate
                ,date_id
                ,FIRST_VALUE(tech_data_load_utc_timestamp) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS tech_data_load_utc_timestamp
                ,FIRST_VALUE(tech_data_load_uuid) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS tech_data_load_uuid
            FROM czk_to_usd_added_missing_dates_without_exchange_rates
        )
        ,czk_to_eur_added_missing_exchange_rates AS (
            SELECT
                FIRST_VALUE(fk_currency_id_counter_currency) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS fk_currency_id_counter_currency
                ,FIRST_VALUE(fk_currency_id_base_currency) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS fk_currency_id_base_currency
                ,FIRST_VALUE(exchange_rate) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS exchange_rate
                ,date_id
                ,FIRST_VALUE(tech_data_load_utc_timestamp) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS tech_data_load_utc_timestamp
                ,FIRST_VALUE(tech_data_load_uuid) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS tech_data_load_uuid
            FROM czk_to_eur_added_missing_dates_without_exchange_rates
        )
        ,eur_to_usd_added_missing_exchange_rates AS (
            SELECT
                FIRST_VALUE(fk_currency_id_counter_currency) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS fk_currency_id_counter_currency
                ,FIRST_VALUE(fk_currency_id_base_currency) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS fk_currency_id_base_currency
                ,FIRST_VALUE(exchange_rate) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS exchange_rate
                ,date_id
                ,FIRST_VALUE(tech_data_load_utc_timestamp) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS tech_data_load_utc_timestamp
                ,FIRST_VALUE(tech_data_load_uuid) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS tech_data_load_uuid
            FROM eur_to_usd_added_missing_dates_without_exchange_rates
        )
        ,eur_to_czk_added_missing_exchange_rates AS (
            SELECT
                FIRST_VALUE(fk_currency_id_counter_currency) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS fk_currency_id_counter_currency
                ,FIRST_VALUE(fk_currency_id_base_currency) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS fk_currency_id_base_currency
                ,FIRST_VALUE(exchange_rate) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS exchange_rate
                ,date_id
                ,FIRST_VALUE(tech_data_load_utc_timestamp) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS tech_data_load_utc_timestamp
                ,FIRST_VALUE(tech_data_load_uuid) OVER (
                    PARTITION BY by_date_partition ORDER BY date_id ASC
                    ) AS tech_data_load_uuid
            FROM eur_to_czk_added_missing_dates_without_exchange_rates
        )
        ,all_exchange_rates AS (
            SELECT
                fk_currency_id_counter_currency
                ,fk_currency_id_base_currency
                ,exchange_rate
                ,date_id
                ,tech_data_load_utc_timestamp
                ,tech_data_load_uuid
            FROM usd_to_czk_added_missing_exchange_rates
            WHERE exchange_rate IS NOT NULL
            UNION ALL
            SELECT
                fk_currency_id_counter_currency
                ,fk_currency_id_base_currency
                ,exchange_rate
                ,date_id
                ,tech_data_load_utc_timestamp
                ,tech_data_load_uuid
            FROM usd_to_eur_added_missing_exchange_rates
            WHERE exchange_rate IS NOT NULL
            UNION ALL
            SELECT
                fk_currency_id_counter_currency
                ,fk_currency_id_base_currency
                ,exchange_rate
                ,date_id
                ,tech_data_load_utc_timestamp
                ,tech_data_load_uuid
            FROM czk_to_usd_added_missing_exchange_rates
            WHERE exchange_rate IS NOT NULL
            UNION ALL
            SELECT
                fk_currency_id_counter_currency
                ,fk_currency_id_base_currency
                ,exchange_rate
                ,date_id
                ,tech_data_load_utc_timestamp
                ,tech_data_load_uuid
            FROM czk_to_eur_added_missing_exchange_rates
            WHERE exchange_rate IS NOT NULL
            UNION ALL
            SELECT
                fk_currency_id_counter_currency
                ,fk_currency_id_base_currency
                ,exchange_rate
                ,date_id
                ,tech_data_load_utc_timestamp
                ,tech_data_load_uuid
            FROM eur_to_usd_added_missing_exchange_rates
            WHERE exchange_rate IS NOT NULL
            UNION ALL
            SELECT
                fk_currency_id_counter_currency
                ,fk_currency_id_base_currency
                ,exchange_rate
                ,date_id
                ,tech_data_load_utc_timestamp
                ,tech_data_load_uuid
            FROM eur_to_czk_added_missing_exchange_rates
            WHERE exchange_rate IS NOT NULL
        )
    INSERT INTO tmp_c_exchange_rate_g (
        fk_currency_id_counter_currency
        ,fk_currency_id_base_currency
        ,exchange_rate
        ,fk_date_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        all_exchange_rates.fk_currency_id_counter_currency
        ,all_exchange_rates.fk_currency_id_base_currency
        ,all_exchange_rates.exchange_rate
        ,all_exchange_rates.date_id AS fk_date_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,all_exchange_rates.tech_data_load_utc_timestamp
        ,all_exchange_rates.tech_data_load_uuid
    FROM all_exchange_rates;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO CORE TABLE --
    -----------------------------------------
    INSERT INTO core.c_exchange_rate_g (
        fk_currency_id_counter_currency
        ,fk_currency_id_base_currency
        ,exchange_rate
        ,fk_date_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        tmp_c_exchange_rate_g.fk_currency_id_counter_currency
        ,tmp_c_exchange_rate_g.fk_currency_id_base_currency
        ,tmp_c_exchange_rate_g.exchange_rate
        ,tmp_c_exchange_rate_g.fk_date_id
        ,tmp_c_exchange_rate_g.tech_insert_function
        ,tmp_c_exchange_rate_g.tech_insert_utc_timestamp
        ,tmp_c_exchange_rate_g.tech_data_load_utc_timestamp
        ,tmp_c_exchange_rate_g.tech_data_load_uuid
    FROM tmp_c_exchange_rate_g
    ON CONFLICT DO NOTHING; -- ADD ONLY NEW RECORDS
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_jira_trg_employee_i" id="Procedure_4283aea" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_jira_trg_employee_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Insert data from stage 'jira_*' tables into core input table employee_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
JIRA_DELETED_USER_DISPLAY_NAME TEXT := 'Former user';
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.employee_i (
        employee_id
        ,employee_key
        ,full_name
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,fk_date_id_created_date
        ,created_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    VALUES (
        -1 -- employee_id
        ,TEXT_NULL -- employee_key
        ,TEXT_NULL -- full_name
        ,TEXT_NULL -- email
        ,TEXT_NULL -- secondary_email
        ,TEXT_NULL -- phone
        ,TEXT_NULL -- mobile_phone
        ,-1 -- fk_date_id_created_date
        ,TIMESTAMP_NEVER -- created_timestamp
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_employee_i;
    CREATE TEMPORARY TABLE tmp_employee_i (
        employee_key                    TEXT PRIMARY KEY
        ,full_name                      TEXT NOT NULL
        ,email                          TEXT NOT NULL
        ,secondary_email                TEXT NOT NULL
        ,phone                          TEXT NOT NULL
        ,mobile_phone                   TEXT NOT NULL
        ,fk_date_id_created_date        INTEGER NOT NULL
        ,created_timestamp              TIMESTAMP WITH TIME ZONE NOT NULL
        ,tech_insert_function           TEXT NOT NULL
        ,tech_insert_utc_timestamp      BIGINT NOT NULL
        ,tech_deleted_in_source_system  BOOL NOT NULL
        ,tech_row_hash                  TEXT NOT NULL
        ,tech_data_load_utc_timestamp   BIGINT NOT NULL
        ,tech_data_load_uuid            TEXT NOT NULL
    );
    INSERT INTO tmp_employee_i (
        employee_key
        ,full_name
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,fk_date_id_created_date
        ,created_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        jira_user.account_id AS employee_key
        ,CASE
            WHEN jira_user.display_name IS NOT NULL AND jira_user.display_name = JIRA_DELETED_USER_DISPLAY_NAME THEN tf_u_replace_empty_string_with_null_flag(removed_jira_user.name)
            ELSE tf_u_replace_empty_string_with_null_flag(jira_user.display_name)
        END AS full_name
        ,tf_u_replace_empty_string_with_null_flag(jira_user.email) AS email
        ,tf_u_replace_empty_string_with_null_flag(NULL::TEXT) AS secondary_emal
        ,tf_u_replace_empty_string_with_null_flag(NULL::TEXT) AS phone
        ,tf_u_replace_empty_string_with_null_flag(NULL::TEXT) AS mobile_phone
        ,-1 AS fk_date_id_created_date
        ,TIMESTAMP_NEVER AS created_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
           COALESCE(jira_user.name,'')
        || COALESCE(jira_user.email, '')
        ) AS tech_row_hash
        ,jira_user.tech_data_load_utc_timestamp
        ,jira_user.tech_data_load_uuid
    FROM stage.jira_user_employee_i AS jira_user
    LEFT JOIN stage.ocean_removed_jira_user_i AS removed_jira_user ON removed_jira_user.removed_user_accountid = jira_user.account_id;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.employee_i (
        employee_key
        ,full_name
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,fk_date_id_created_date
        ,created_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_employee_i.employee_key
        ,tmp_employee_i.full_name
        ,tmp_employee_i.email
        ,tmp_employee_i.secondary_email
        ,tmp_employee_i.phone
        ,tmp_employee_i.mobile_phone
        ,tmp_employee_i.fk_date_id_created_date
        ,tmp_employee_i.created_timestamp
        ,tmp_employee_i.tech_insert_function
        ,tmp_employee_i.tech_insert_utc_timestamp
        ,tmp_employee_i.tech_deleted_in_source_system
        ,tmp_employee_i.tech_row_hash
        ,tmp_employee_i.tech_data_load_utc_timestamp
        ,tmp_employee_i.tech_data_load_uuid
    FROM tmp_employee_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_jira_trg_issue_comment_i" id="Procedure_120513a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_jira_trg_issue_comment_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================
    DESCRIPTION:        Insert data from stage 'jira_issue_comment_i' table into core input table issue_comment_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-08-28 (YYYY-MM-DD)
    NOTE:
    =============================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_issue_comment_i;
    CREATE TEMPORARY TABLE tmp_issue_comment_i (
        issue_comment_key               TEXT NOT NULL
        ,fk_date_id_created_date        INTEGER NOT NULL
        ,created_timestamp              TIMESTAMP WITH TIME ZONE NOT NULL
        ,fk_date_id_last_updated_date   INTEGER NOT NULL
        ,last_updated_timestamp         TIMESTAMP WITH TIME ZONE NOT NULL
        ,body                           TEXT NOT NULL
        ,fk_employee_id_created_by      INTEGER NOT NULL
        ,fk_employee_id_updated_by      INTEGER NOT NULL
        ,fk_issue_id                    INTEGER NOT NULL
        ,is_public                      bool NOT NULL
        ,tech_insert_function           TEXT NOT NULL
        ,tech_insert_utc_timestamp      BIGINT NOT NULL
        ,tech_deleted_in_source_system  BOOL NOT NULL DEFAULT FALSE
        ,tech_row_hash                  TEXT NOT NULL
        ,tech_data_load_utc_timestamp   BIGINT NOT NULL
        ,tech_data_load_uuid            TEXT NOT NULL
    );
    INSERT INTO tmp_issue_comment_i (
        issue_comment_key
        ,body
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_updated_date
        ,last_updated_timestamp
        ,fk_employee_id_created_by
        ,fk_employee_id_updated_by
        ,fk_issue_id
        ,is_public
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        jira_comment.id AS issue_comment_key
        ,jira_comment.body AS body
        ,REPLACE(SUBSTRING(jira_comment.created FROM 1 FOR 10), '-', '')::INTEGER AS fk_date_id_created_date
        ,jira_comment.created::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,REPLACE(SUBSTRING(jira_comment.updated FROM 1 FOR 10), '-', '')::INTEGER AS fk_date_id_last_updated_date
        ,jira_comment.updated::TIMESTAMP WITH TIME ZONE AS last_updated_timestamp
        ,COALESCE(employee_created_by.employee_id, -1) AS fk_employee_id_created_by
        ,COALESCE(employee_updated_by.employee_id, -1) AS fk_employee_id_updated_by
        ,issue.issue_id AS fk_issue_id
        ,jira_comment.jsdpublic AS is_public
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
            COALESCE(jira_comment.body::TEXT, '')
            || COALESCE(jira_comment.updated::TEXT, '')
            || COALESCE(jira_comment.jsdpublic::TEXT, '')
            || COALESCE(jira_comment.update_author_account_id::TEXT, '')
        ) AS tech_row_hash
        ,jira_comment.tech_data_load_utc_timestamp
        ,jira_comment.tech_data_load_uuid
    FROM stage.jira_issue_comment_i AS jira_comment
    LEFT JOIN core.employee_i AS employee_created_by ON employee_created_by.employee_key = jira_comment.author_account_id
    LEFT JOIN core.employee_i AS employee_updated_by ON employee_updated_by.employee_key = jira_comment.update_author_account_id
    LEFT JOIN core.issue_i AS issue ON issue.issue_key = jira_comment.issue_key;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.issue_comment_i (
        issue_comment_key
        ,body
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_updated_date
        ,last_updated_timestamp
        ,fk_employee_id_created_by
        ,fk_employee_id_updated_by
        ,fk_issue_id
        ,is_public
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        tmp_issue_comment_i.issue_comment_key
        ,tmp_issue_comment_i.body
        ,tmp_issue_comment_i.fk_date_id_created_date
        ,tmp_issue_comment_i.created_timestamp
        ,tmp_issue_comment_i.fk_date_id_last_updated_date
        ,tmp_issue_comment_i.last_updated_timestamp
        ,tmp_issue_comment_i.fk_employee_id_created_by
        ,tmp_issue_comment_i.fk_employee_id_updated_by
        ,tmp_issue_comment_i.fk_issue_id
        ,tmp_issue_comment_i.is_public
        ,tmp_issue_comment_i.tech_insert_function
        ,tmp_issue_comment_i.tech_insert_utc_timestamp
        ,tmp_issue_comment_i.tech_deleted_in_source_system
        ,tmp_issue_comment_i.tech_row_hash
        ,tmp_issue_comment_i.tech_data_load_utc_timestamp
        ,tmp_issue_comment_i.tech_data_load_uuid
    FROM tmp_issue_comment_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_jira_trg_issue_i" id="Procedure_68cf23" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_jira_trg_issue_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Insert data from stage 'jira_*' tables into core input table issue_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
DATE_NEVER DATE := (SELECT date_never FROM core.c_null_replacement_g);
INTERVAL_NEVER INTERVAL := (SELECT interval_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
DEVELOPMENT_PROJECT_KEY TEXT := 'DEV';
SUPPORT_ISSUE_FLAG TEXT := 'Support';
COMMON_SUPPORT_ISSUE_ACCOUNT_FLAG TEXT := 'Common';
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.issue_i (
        issue_id
        ,jira_key
        ,jira_id
        ,issue_key
        ,account
        ,customer
        ,status
        ,summary
        ,priority
        ,sla_priority
        ,description
        ,issue_type
        ,resolution
        ,deployment
        ,epic_name
        ,epic_jira_key
        ,original_estimate
        ,remaining_estimate
        ,aggregate_original_estimate
        ,aggregate_remaining_estimate
        ,hours_logged_total
        ,days_logged_total
        ,labels
        ,components
        ,fix_versions
        ,affected_versions
        ,inception_to_first_response_days
        ,inception_to_pilot_days
        ,inception_to_sales_days
        ,inception_to_deployment_days
        ,inception_to_resolution_days
        ,inception_to_now_days
        ,first_response_to_resolution_days
        ,activation_to_pilot_days
        ,activation_to_sales_days
        ,activation_to_deployment_days
        ,activation_to_now_days
        ,pilot_to_pilot_finished_days
        ,pilot_to_sales_days
        ,pilot_to_deployment_days
        ,pilot_to_now_days
        ,pilot_finished_to_sales_days
        ,pilot_finished_to_now_days
        ,sales_to_deployment_days
        ,sales_to_now_days
        ,deployment_to_now_days
        ,fk_date_id_activation_date
        ,activation_timestamp
        ,fk_date_id_first_response_date
        ,first_response_timestamp
        ,fk_date_id_resolution_date
        ,resolution_timestamp
        ,fk_date_id_pilot_date
        ,pilot_date
        ,fk_date_id_pilot_finished_date
        ,pilot_finished_date
        ,fk_date_id_sales_date
        ,sales_date
        ,fk_project_id
        ,fk_party_id_created_by
        ,fk_party_id_reported_by
        ,fk_employee_id_assigned_to
        ,fk_date_id_inception_date
        ,inception_date
        ,fk_date_id_deployment_date
        ,deployment_date
        ,fk_date_id_created_date
        ,created_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    VALUES (
        -1 -- issue_id
        ,TEXT_NULL -- jira_key
        ,-1 -- jira_id
        ,TEXT_NULL -- issue_key
        ,TEXT_NULL -- account
        ,TEXT_NULL -- customer
        ,TEXT_NULL -- status
        ,TEXT_NULL -- summary
        ,TEXT_NULL -- priority
        ,TEXT_NULL -- sla_priority
        ,TEXT_NULL -- description
        ,TEXT_NULL -- issue_type
        ,TEXT_NULL -- resolution
        ,TEXT_NULL -- deployment
        ,TEXT_NULL -- epic_name
        ,TEXT_NULL -- epic_jira_key
        ,INTERVAL_NEVER -- original_estimate
        ,INTERVAL_NEVER -- remaining_estimate
        ,INTERVAL_NEVER -- aggregate_original_estimate
        ,INTERVAL_NEVER -- aggregate_remaining_estimate
        ,0 -- hours_logged_total
        ,0 -- days_logged_total
        ,TEXT_ARRAY_NULL -- labels
        ,TEXT_ARRAY_NULL -- components
        ,TEXT_ARRAY_NULL -- fix_versions
        ,TEXT_ARRAY_NULL -- affected_versions
        ,-1 -- inception_to_first_response_days
        ,-1 -- inception_to_pilot_days
        ,-1 -- inception_to_sales_days
        ,-1 -- inception_to_deployment_days
        ,-1 -- inception_to_resolution_days
        ,-1 -- inception_to_now_days
        ,-1 -- first_response_to_resolution_days
        ,-1 -- activation_to_pilot_days
        ,-1 -- activation_to_sales_days
        ,-1 -- activation_to_deployment_days
        ,-1 -- activation_to_now_days
        ,-1 -- pilot_to_pilot_finished_days
        ,-1 -- pilot_to_sales_days
        ,-1 -- pilot_to_deployment_days
        ,-1 -- pilot_to_now_days
        ,-1 -- pilot_finished_to_sales_days
        ,-1 -- pilot_finished_to_now_days
        ,-1 -- sales_to_deployment_days
        ,-1 -- sales_to_now_days
        ,-1 -- deployment_to_now_days
        ,-1 -- fk_date_id_activation_date
        ,TIMESTAMP_NEVER -- activation_timestamp
        ,-1 -- fk_date_id_first_response_date
        ,TIMESTAMP_NEVER -- first_response_timestamp
        ,-1 -- fk_date_id_resolution_date
        ,TIMESTAMP_NEVER -- resolution_timestamp
        ,-1 -- fk_date_id_pilot_date
        ,DATE_NEVER -- pilot_date
        ,-1 -- fk_date_id_pilot_finished_date
        ,DATE_NEVER -- pilot_finished_date
        ,-1 -- fk_date_id_sales_date
        ,DATE_NEVER -- sales_date
        ,-1 -- fk_project_id
        ,-1 -- fk_party_id_created_by
        ,-1 -- fk_party_id_reported_by
        ,-1 -- fk_employee_id_assigned_to
        ,-1 -- fk_date_id_inception_date
        ,DATE_NEVER -- inception_date
        ,-1 -- fk_date_id_deployment_date
        ,DATE_NEVER -- deployment_date
        ,-1 -- fk_date_id_created_date
        ,TIMESTAMP_NEVER -- created_timestamp
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    );
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    
    DROP TABLE IF EXISTS tmp_issue_i;
        
    CREATE TEMPORARY TABLE tmp_issue_i (
        issue_key                               TEXT NOT NULL
        ,jira_key                               TEXT NOT NULL
        ,jira_id                                INTEGER NOT NULL
        ,status                                 TEXT NOT NULL
        ,summary                                TEXT NOT NULL
        ,priority                               TEXT NOT NULL
        ,sla_priority                           TEXT NOT NULL
        ,description                            TEXT NOT NULL
        ,issue_type                             TEXT NOT NULL
        ,resolution                             TEXT NOT NULL
        ,deployment                             TEXT NOT NULL
        ,epic_name                              TEXT NOT NULL
        ,epic_jira_key                          TEXT NOT NULL
        ,original_estimate                      INTERVAL
        ,remaining_estimate                     INTERVAL
        ,aggregate_original_estimate            INTERVAL
        ,aggregate_remaining_estimate           INTERVAL
        ,hours_logged_total                     NUMERIC(10,5)
        ,days_logged_total                      NUMERIC(10,5)
        ,labels                                 TEXT[]
        ,components                             TEXT[]
        ,fix_versions                           TEXT[]
        ,affected_versions                      TEXT[]
        ,inception_to_first_response_days       INTEGER NOT NULL
        ,inception_to_pilot_days                INTEGER NOT NULL
        ,inception_to_sales_days                INTEGER NOT NULL
        ,inception_to_deployment_days           INTEGER NOT NULL
        ,inception_to_resolution_days           INTEGER NOT NULL
        ,inception_to_now_days                  INTEGER NOT NULL
        ,first_response_to_resolution_days      INTEGER NOT NULL
        ,activation_to_pilot_days               INTEGER NOT NULL
        ,activation_to_sales_days               INTEGER NOT NULL
        ,activation_to_deployment_days          INTEGER NOT NULL
        ,activation_to_now_days                 INTEGER NOT NULL
        ,pilot_to_pilot_finished_days           INTEGER NOT NULL
        ,pilot_to_sales_days                    INTEGER NOT NULL
        ,pilot_to_deployment_days               INTEGER NOT NULL
        ,pilot_to_now_days                      INTEGER NOT NULL
        ,pilot_finished_to_sales_days           INTEGER NOT NULL
        ,pilot_finished_to_now_days             INTEGER NOT NULL
        ,sales_to_deployment_days               INTEGER NOT NULL
        ,sales_to_now_days                      INTEGER NOT NULL
        ,deployment_to_now_days                 INTEGER NOT NULL
        ,fk_project_id                          INTEGER NOT NULL
        ,fk_party_id_created_by                 INTEGER NOT NULL
        ,fk_party_id_reported_by                INTEGER NOT NULL
        ,fk_employee_id_assigned_to             INTEGER NOT NULL
        ,account                                TEXT NOT NULL
        ,customer                               TEXT NOT NULL
        ,fk_date_id_activation_date             INTEGER NOT NULL
        ,activation_timestamp                   TIMESTAMP WITH TIME ZONE NOT NULL
        ,fk_date_id_inception_date              INTEGER NOT NULL
        ,inception_date                         DATE NOT NULL
        ,fk_date_id_pilot_date                  INTEGER NOT NULL
        ,pilot_date                             DATE NOT NULL
        ,fk_date_id_pilot_finished_date         INTEGER NULL
        ,pilot_finished_date                    DATE NOT NULL
        ,fk_date_id_sales_date                  INTEGER NOT NULL
        ,sales_date                             DATE NOT NULL
        ,fk_date_id_deployment_date             INTEGER NOT NULL
        ,deployment_date                        DATE NOT NULL
        ,fk_date_id_first_response_date         INTEGER NOT NULL
        ,first_response_timestamp               TIMESTAMP WITH TIME ZONE NOT NULL
        ,fk_date_id_created_date                INTEGER NOT NULL
        ,created_timestamp                      TIMESTAMP WITH TIME ZONE NOT NULL
        ,fk_date_id_resolution_date             INTEGER NOT NULL
        ,resolution_timestamp                   TIMESTAMP WITH TIME ZONE
        ,tech_insert_function                   TEXT NOT NULL
        ,tech_insert_utc_timestamp              BIGINT NOT NULL
        ,tech_row_hash                          TEXT NOT NULL
        ,tech_data_load_utc_timestamp           BIGINT NOT NULL
        ,tech_data_load_uuid                    TEXT NOT NULL
        ,tech_deleted_in_source_system          bool DEFAULT false NOT NULL
    );
    WITH first_worklog_for_issue AS (
        WITH ranked_worklogs AS (
            SELECT
                jira_issue.issue_id
                ,(jira_tempo_worklog.work_started_at_date || ' ' || jira_tempo_worklog.work_started_at_time || ' UTC')::TIMESTAMP WITH TIME ZONE AS work_started_at_timestamp
                ,RANK() OVER (
                    PARTITION BY jira_issue.issue_id ORDER BY jira_tempo_worklog.work_started_at_date ASC, jira_tempo_worklog.work_started_at_time ASC
                ) AS worklogs_asc_rank
            FROM stage.jira_issue_i AS jira_issue
        LEFT JOIN stage.jira_worklog_i AS jira_tempo_worklog ON jira_issue.issue_id = jira_tempo_worklog.issue_id
        GROUP BY jira_issue.issue_id, jira_tempo_worklog.work_started_at_date, jira_tempo_worklog.work_started_at_time
        )
        SELECT
            ranked_worklogs.issue_id
            ,ranked_worklogs.work_started_at_timestamp
        FROM ranked_worklogs
        WHERE ranked_worklogs.worklogs_asc_rank = 1
    )
    ,issue_dates AS (
        SELECT 
            jira_issue.issue_id
            ,COALESCE(jira_issue.inception_date::DATE, jira_issue.created_timestamp::DATE) AS inception_date
            ,jira_issue.created_timestamp::TIMESTAMP WITH TIME ZONE AS created_timestamp
            ,COALESCE(
                LEAST(
                    first_worklog_for_issue.work_started_at_timestamp::TIMESTAMP WITH TIME ZONE
                    ,jira_issue.pilot_date::DATE
                    ,jira_issue.pilot_finished_date::DATE
                    ,jira_issue.sales_date::DATE
                )
                ,jira_issue.created_timestamp::DATE
                ,jira_issue.inception_date::DATE
            ) AS activation_timestamp
            ,jira_issue.first_response_timestamp::TIMESTAMP WITH TIME ZONE AS first_response_timestamp
            ,jira_issue.resolution_timestamp::TIMESTAMP WITH TIME ZONE AS resolution_timestamp
            ,jira_issue.pilot_date::DATE AS pilot_date
            ,jira_issue.pilot_finished_date::DATE AS pilot_finished_date
            ,jira_issue.sales_date::DATE AS sales_date
            ,jira_issue.deployment_date::DATE AS deployment_date
         FROM stage.jira_issue_i AS jira_issue
         LEFT JOIN first_worklog_for_issue ON first_worklog_for_issue.issue_id = jira_issue.issue_id
    )
    ,hours_logged_per_issue_in_aggregate AS (
        SELECT
            jira_issue.issue_id
            ,COALESCE(SUM((time_logged_seconds || ' ' || 'seconds')::INTERVAL), '0 seconds'::INTERVAL) AS time_interval_logged
            ,COALESCE(tf_u_convert_interval_to_hours(SUM((jira_tempo_worklog.time_logged_seconds || ' ' || 'seconds')::INTERVAL)), 0) AS hours_logged_total
            ,COALESCE(tf_u_convert_interval_to_days(SUM((jira_tempo_worklog.time_logged_seconds || ' ' || 'seconds')::INTERVAL)), 0) AS days_logged_total
        FROM stage.jira_issue_i AS jira_issue
        LEFT JOIN stage.jira_worklog_i AS jira_tempo_worklog ON jira_issue.issue_id = jira_tempo_worklog.issue_id
        GROUP BY jira_issue.issue_id
    )
    INSERT INTO tmp_issue_i (
        issue_key
        ,jira_key
        ,jira_id
        ,account
        ,customer
        ,status
        ,summary
        ,priority
        ,sla_priority
        ,description
        ,issue_type
        ,resolution
        ,deployment
        ,epic_name
        ,epic_jira_key
        ,original_estimate
        ,remaining_estimate
        ,aggregate_original_estimate
        ,aggregate_remaining_estimate
        ,hours_logged_total
        ,days_logged_total
        ,labels
        ,components
        ,fix_versions
        ,affected_versions
        ,inception_to_first_response_days
        ,inception_to_pilot_days
        ,inception_to_sales_days
        ,inception_to_deployment_days
        ,inception_to_resolution_days
        ,inception_to_now_days
        ,first_response_to_resolution_days
        ,activation_to_pilot_days
        ,activation_to_sales_days
        ,activation_to_deployment_days
        ,activation_to_now_days
        ,pilot_to_pilot_finished_days
        ,pilot_to_sales_days
        ,pilot_to_deployment_days
        ,pilot_to_now_days
        ,pilot_finished_to_sales_days
        ,pilot_finished_to_now_days
        ,sales_to_deployment_days
        ,sales_to_now_days
        ,deployment_to_now_days
        ,fk_date_id_activation_date
        ,activation_timestamp
        ,fk_date_id_first_response_date
        ,first_response_timestamp
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_resolution_date
        ,resolution_timestamp
        ,fk_date_id_inception_date
        ,inception_date
        ,fk_date_id_pilot_date
        ,pilot_date
        ,fk_date_id_pilot_finished_date
        ,pilot_finished_date
        ,fk_date_id_sales_date
        ,sales_date
        ,fk_date_id_deployment_date
        ,deployment_date
        ,fk_project_id
        ,fk_party_id_created_by
        ,fk_party_id_reported_by
        ,fk_employee_id_assigned_to
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT 
        jira_issue.issue_key AS issue_key
        ,jira_issue.issue_key AS jira_key
        ,jira_issue.issue_id AS jira_id
        ,CASE
            WHEN jira_issue.account_name IS NULL
                AND jira_issue.project_key = DEVELOPMENT_PROJECT_KEY
                AND jira_issue.issue_type = SUPPORT_ISSUE_FLAG
                AND POSITION(' - ' IN jira_issue.summary) = 0
                    THEN COMMON_SUPPORT_ISSUE_ACCOUNT_FLAG
            WHEN jira_issue.account_name IS NULL
                AND jira_issue.project_key = DEVELOPMENT_PROJECT_KEY
                AND jira_issue.issue_type = SUPPORT_ISSUE_FLAG
                AND POSITION(' - ' IN jira_issue.summary) > 0
                    THEN SUBSTRING(jira_issue.summary FROM 0 FOR position(' - ' IN jira_issue.summary))
            ELSE tf_u_replace_empty_string_with_null_flag(jira_issue.account_name)
        END AS account
        ,CASE
            WHEN jira_tempo_account.customer_name IS NULL
                AND jira_issue.project_key = DEVELOPMENT_PROJECT_KEY
                AND jira_issue.issue_type = SUPPORT_ISSUE_FLAG
                AND POSITION(' - ' IN jira_issue.summary) = 0
                    THEN COMMON_SUPPORT_ISSUE_ACCOUNT_FLAG
            WHEN jira_tempo_account.customer_name IS NULL
                AND jira_issue.project_key = DEVELOPMENT_PROJECT_KEY
                AND jira_issue.issue_type = SUPPORT_ISSUE_FLAG
                AND POSITION(' - ' IN jira_issue.summary) > 0
                    THEN SUBSTRING(jira_issue.summary FROM 0 FOR position(' - ' IN jira_issue.summary))
            ELSE tf_u_replace_empty_string_with_null_flag(jira_tempo_account.customer_name)
        END AS customer
        ,tf_u_replace_empty_string_with_null_flag(jira_issue.status) AS status
        ,tf_u_replace_empty_string_with_null_flag(jira_issue.summary) AS summary
        ,tf_u_replace_empty_string_with_null_flag(jira_issue.priority) AS priority
        ,tf_u_replace_empty_string_with_null_flag(jira_issue.sla_priority) AS sla_priority
        ,tf_u_replace_empty_string_with_null_flag(jira_issue.description) AS description
        ,tf_u_replace_empty_string_with_null_flag(jira_issue.issue_type) AS issue_type
        ,tf_u_replace_empty_string_with_null_flag(jira_issue.resolution) AS resolution
        ,tf_u_replace_empty_string_with_null_flag(jira_issue.deployment) AS deployment
        ,tf_u_replace_empty_string_with_null_flag(epic_issue.summary) AS epic_name
        ,tf_u_replace_empty_string_with_null_flag(epic_issue.issue_key) AS epic_jira_key
        ,COALESCE((jira_issue.original_estimate_seconds || ' seconds')::INTERVAL, INTERVAL_NEVER) AS original_estimate
        ,COALESCE((jira_issue.remaining_estimate_seconds || ' seconds')::INTERVAL, INTERVAL_NEVER) AS remaining_estimate
        ,COALESCE((jira_issue.aggregate_original_estimate_seconds || ' seconds')::INTERVAL, INTERVAL_NEVER) AS aggregate_original_estimate
        ,COALESCE((jira_issue.aggregate_remaining_estimate_seconds || ' seconds')::INTERVAL, INTERVAL_NEVER) AS aggregate_remaining_estimate
        ,hours_logged_per_issue_in_aggregate.hours_logged_total
        ,hours_logged_per_issue_in_aggregate.days_logged_total
        ,string_to_array(tf_u_replace_empty_string_with_null_flag(jira_issue.labels),',') AS labels
        ,string_to_array(tf_u_replace_empty_string_with_null_flag(jira_issue.components),',') AS components
        ,string_to_array(tf_u_replace_empty_string_with_null_flag(jira_issue.fix_versions),',') AS fix_versions
        ,string_to_array(tf_u_replace_empty_string_with_null_flag(jira_issue.affected_versions),',') AS affected_versions
        ,COALESCE(tf_u_days_diff_between_dates(issue_dates.first_response_timestamp::DATE, issue_dates.inception_date), -1) AS inception_to_first_response_days
        ,COALESCE(tf_u_days_diff_between_dates(issue_dates.pilot_date, issue_dates.inception_date), -1) AS inception_to_pilot_days
        ,COALESCE(tf_u_days_diff_between_dates(issue_dates.sales_date, issue_dates.inception_date), -1) AS inception_to_sales_days
        ,COALESCE(tf_u_days_diff_between_dates(issue_dates.deployment_date, issue_dates.inception_date), -1) AS inception_to_deployment_days
        ,COALESCE(tf_u_days_diff_between_dates(issue_dates.resolution_timestamp::DATE, issue_dates.inception_date), -1) AS inception_to_resolution_days
        ,COALESCE(tf_u_days_diff_between_dates(now()::DATE, issue_dates.inception_date), -1) AS inception_to_now_days
        ,CASE
            WHEN issue_dates.resolution_timestamp IS NOT NULL
                AND issue_dates.first_response_timestamp IS NOT NULL
                AND issue_dates.first_response_timestamp IS NOT NULL
                AND issue_dates.resolution_timestamp > issue_dates.first_response_timestamp::DATE
                THEN tf_u_days_diff_between_dates(issue_dates.resolution_timestamp::DATE, issue_dates.first_response_timestamp::DATE)
            ELSE -1
        END AS first_response_to_resolution_days
        ,COALESCE(tf_u_days_diff_between_dates(issue_dates.pilot_date, issue_dates.activation_timestamp::DATE), -1) AS activation_to_pilot_days
        ,COALESCE(tf_u_days_diff_between_dates(issue_dates.sales_date, issue_dates.activation_timestamp::DATE), -1) AS activation_to_sales_days
        ,COALESCE(tf_u_days_diff_between_dates(issue_dates.deployment_date, issue_dates.activation_timestamp::DATE), -1) AS activation_to_deployment_days
        ,COALESCE(tf_u_days_diff_between_dates(now()::DATE, issue_dates.activation_timestamp::DATE), -1) AS activation_to_now_days
        ,COALESCE(tf_u_days_diff_between_dates(issue_dates.pilot_finished_date, issue_dates.pilot_date), -1) AS pilot_to_pilot_finished_days
        ,COALESCE(tf_u_days_diff_between_dates(issue_dates.sales_date, issue_dates.pilot_date), -1) AS pilot_to_sales_days
        ,COALESCE(tf_u_days_diff_between_dates(issue_dates.deployment_date, issue_dates.pilot_date), -1) AS pilot_to_deployment_days
        ,COALESCE(tf_u_days_diff_between_dates(now()::DATE, issue_dates.pilot_date), -1) AS pilot_to_now_days
        ,COALESCE(tf_u_days_diff_between_dates(issue_dates.sales_date, issue_dates.pilot_finished_date), -1) AS pilot_finished_to_sales_days
        ,COALESCE(tf_u_days_diff_between_dates(now()::DATE, issue_dates.pilot_finished_date), -1) AS pilot_finished_to_now_days
        ,COALESCE(tf_u_days_diff_between_dates(issue_dates.deployment_date, issue_dates.sales_date), -1) AS sales_to_deployment_days
        ,COALESCE(tf_u_days_diff_between_dates(now()::DATE, issue_dates.sales_date), -1) AS sales_to_now_days
        ,COALESCE(tf_u_days_diff_between_dates(now()::DATE, issue_dates.deployment_date), -1) AS deployment_to_now_days
        ,COALESCE(tf_u_convert_date_to_yyyymmdd_integer(issue_dates.activation_timestamp::DATE), -1) AS fk_date_id_activation_date
        ,COALESCE(issue_dates.activation_timestamp, TIMESTAMP_NEVER) AS activation_timestamp
        ,COALESCE(tf_u_convert_date_to_yyyymmdd_integer(issue_dates.first_response_timestamp::DATE), -1) AS fk_date_id_first_response_date
        ,COALESCE(issue_dates.first_response_timestamp, TIMESTAMP_NEVER) AS first_response_timestamp
        ,COALESCE(tf_u_convert_date_to_yyyymmdd_integer(issue_dates.created_timestamp::DATE), -1) AS fk_date_id_created_date
        ,COALESCE(issue_dates.created_timestamp, TIMESTAMP_NEVER) AS created_timestamp
        ,COALESCE(tf_u_convert_date_to_yyyymmdd_integer(issue_dates.resolution_timestamp::DATE), -1) AS fk_date_id_resolution_date
        ,COALESCE(issue_dates.resolution_timestamp, TIMESTAMP_NEVER) AS resolution_timestamp
        ,COALESCE(tf_u_convert_date_to_yyyymmdd_integer(issue_dates.inception_date), -1) AS fk_date_id_inception_date
        ,COALESCE(issue_dates.inception_date, DATE_NEVER) AS inception_date
        ,COALESCE(tf_u_convert_date_to_yyyymmdd_integer(issue_dates.pilot_date), -1) AS fk_date_id_pilot_date
        ,COALESCE(issue_dates.pilot_date, DATE_NEVER) AS pilot_date
        ,COALESCE(tf_u_convert_date_to_yyyymmdd_integer(issue_dates.pilot_finished_date), -1) AS fk_date_id_pilot_finished_date
        ,COALESCE(issue_dates.pilot_finished_date, DATE_NEVER) AS pilot_finished_date
        ,COALESCE(tf_u_convert_date_to_yyyymmdd_integer(issue_dates.sales_date), -1) AS fk_date_id_sales_date
        ,COALESCE(issue_dates.sales_date, DATE_NEVER) AS sales_date
        ,COALESCE(tf_u_convert_date_to_yyyymmdd_integer(issue_dates.deployment_date), -1) AS fk_date_id_deployment_date
        ,COALESCE(issue_dates.deployment_date, DATE_NEVER) AS deployment_date
        ,project.project_id AS fk_project_id
        ,COALESCE(party_creator.party_id, -1) AS fk_party_id_created_by
        ,COALESCE(party_reporter.party_id, -1) AS fk_party_id_reported_by
        ,COALESCE(employee.employee_id, -1) AS fk_employee_id_assigned_to 
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
           COALESCE(jira_issue.status, '')
        || COALESCE(jira_issue.summary, '')
        || COALESCE(jira_issue.priority, '')
        || COALESCE(jira_issue.sla_priority, '')
        || COALESCE(jira_issue.description, '')
        || COALESCE(jira_issue.issue_type, '')
        || COALESCE(jira_issue.resolution, '')
        || COALESCE(jira_issue.deployment, '')
        || COALESCE(jira_issue.epic, '')
        || COALESCE(jira_issue.original_estimate_seconds, '')
        || COALESCE(jira_issue.remaining_estimate_seconds, '')
        || COALESCE(jira_issue.aggregate_original_estimate_seconds, '')
        || COALESCE(jira_issue.aggregate_remaining_estimate_seconds, '')
        || COALESCE(jira_issue.labels, '')
        || COALESCE(jira_issue.components, '')
        || COALESCE(jira_issue.fix_versions, '')
        || COALESCE(jira_issue.affected_versions, '')
        || COALESCE(jira_issue.project_key, '')
        || COALESCE(jira_issue.creator_account_id, '')
        || COALESCE(jira_issue.reporter_account_id, '')
        || COALESCE(jira_issue.assignee_account_id, '')
        || COALESCE(jira_issue.account_name, '')
        || COALESCE(jira_tempo_account.customer_name, '')
        || COALESCE(jira_issue.inception_date, '')
        || COALESCE(jira_issue.pilot_date, '')
        || COALESCE(jira_issue.pilot_finished_date, '')
        || COALESCE(jira_issue.sales_date, '')
        || COALESCE(jira_issue.deployment_date, '')
        || COALESCE(jira_issue.first_response_timestamp, '')
        || COALESCE(jira_issue.created_timestamp, '')
        || COALESCE(jira_issue.resolution_timestamp, '')
        || COALESCE(jira_issue.account_id::TEXT, '')
        ) AS tech_row_hash
        ,jira_issue.tech_data_load_utc_timestamp
        ,jira_issue.tech_data_load_uuid
    FROM stage.jira_issue_i AS jira_issue
    LEFT JOIN hours_logged_per_issue_in_aggregate ON hours_logged_per_issue_in_aggregate.issue_id = jira_issue.issue_id
    LEFT JOIN issue_dates ON issue_dates.issue_id = jira_issue.issue_id
    LEFT JOIN stage.jira_tempo_account_i AS jira_tempo_account ON jira_tempo_account.id = jira_issue.account_id
    LEFT JOIN stage.jira_issue_i AS epic_issue ON epic_issue.issue_key = jira_issue.epic
    LEFT JOIN core.project_i AS project ON project.jira_key = jira_issue.project_key
    LEFT JOIN core.party_i AS party_creator ON party_creator.party_key = jira_issue.creator_account_id
    LEFT JOIN core.party_i AS party_reporter ON party_reporter.party_key = jira_issue.reporter_account_id
    LEFT JOIN core.employee_i AS employee ON employee.employee_key = jira_issue.assignee_account_id;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    
    INSERT INTO core.issue_i (
        issue_key
        ,jira_key
        ,jira_id
        ,account
        ,customer
        ,status
        ,summary
        ,priority
        ,sla_priority
        ,description
        ,issue_type
        ,resolution
        ,deployment
        ,epic_name
        ,epic_jira_key
        ,original_estimate
        ,remaining_estimate
        ,aggregate_original_estimate
        ,aggregate_remaining_estimate
        ,hours_logged_total
        ,days_logged_total
        ,labels
        ,components
        ,fix_versions
        ,affected_versions
        ,inception_to_first_response_days
        ,inception_to_pilot_days
        ,inception_to_sales_days
        ,inception_to_deployment_days
        ,inception_to_resolution_days
        ,inception_to_now_days
        ,first_response_to_resolution_days
        ,activation_to_pilot_days
        ,activation_to_sales_days
        ,activation_to_deployment_days
        ,activation_to_now_days
        ,pilot_to_pilot_finished_days
        ,pilot_to_sales_days
        ,pilot_to_deployment_days
        ,pilot_to_now_days
        ,pilot_finished_to_sales_days
        ,pilot_finished_to_now_days
        ,sales_to_deployment_days
        ,sales_to_now_days
        ,deployment_to_now_days
        ,fk_date_id_activation_date
        ,activation_timestamp
        ,fk_date_id_first_response_date
        ,first_response_timestamp
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_resolution_date
        ,resolution_timestamp
        ,fk_date_id_inception_date
        ,inception_date
        ,fk_date_id_pilot_date
        ,pilot_date
        ,fk_date_id_pilot_finished_date
        ,pilot_finished_date
        ,fk_date_id_sales_date
        ,sales_date
        ,fk_date_id_deployment_date
        ,deployment_date
        ,fk_project_id
        ,fk_party_id_created_by
        ,fk_party_id_reported_by
        ,fk_employee_id_assigned_to
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_issue_i.issue_key
        ,tmp_issue_i.jira_key
        ,tmp_issue_i.jira_id
        ,tmp_issue_i.account
        ,tmp_issue_i.customer
        ,tmp_issue_i.status
        ,tmp_issue_i.summary
        ,tmp_issue_i.priority
        ,tmp_issue_i.sla_priority
        ,tmp_issue_i.description
        ,tmp_issue_i.issue_type
        ,tmp_issue_i.resolution
        ,tmp_issue_i.deployment
        ,tmp_issue_i.epic_name
        ,tmp_issue_i.epic_jira_key
        ,tmp_issue_i.original_estimate
        ,tmp_issue_i.remaining_estimate
        ,tmp_issue_i.aggregate_original_estimate
        ,tmp_issue_i.aggregate_remaining_estimate
        ,tmp_issue_i.hours_logged_total
        ,tmp_issue_i.days_logged_total
        ,tmp_issue_i.labels
        ,tmp_issue_i.components
        ,tmp_issue_i.fix_versions
        ,tmp_issue_i.affected_versions
        ,tmp_issue_i.inception_to_first_response_days
        ,tmp_issue_i.inception_to_pilot_days
        ,tmp_issue_i.inception_to_sales_days
        ,tmp_issue_i.inception_to_deployment_days
        ,tmp_issue_i.inception_to_resolution_days
        ,tmp_issue_i.inception_to_now_days
        ,tmp_issue_i.first_response_to_resolution_days
        ,tmp_issue_i.activation_to_pilot_days
        ,tmp_issue_i.activation_to_sales_days
        ,tmp_issue_i.activation_to_deployment_days
        ,tmp_issue_i.activation_to_now_days
        ,tmp_issue_i.pilot_to_pilot_finished_days
        ,tmp_issue_i.pilot_to_sales_days
        ,tmp_issue_i.pilot_to_deployment_days
        ,tmp_issue_i.pilot_to_now_days
        ,tmp_issue_i.pilot_finished_to_sales_days
        ,tmp_issue_i.pilot_finished_to_now_days
        ,tmp_issue_i.sales_to_deployment_days
        ,tmp_issue_i.sales_to_now_days
        ,tmp_issue_i.deployment_to_now_days
        ,tmp_issue_i.fk_date_id_activation_date
        ,tmp_issue_i.activation_timestamp
        ,tmp_issue_i.fk_date_id_first_response_date
        ,tmp_issue_i.first_response_timestamp
        ,tmp_issue_i.fk_date_id_created_date
        ,tmp_issue_i.created_timestamp
        ,tmp_issue_i.fk_date_id_resolution_date
        ,tmp_issue_i.resolution_timestamp
        ,tmp_issue_i.fk_date_id_inception_date
        ,tmp_issue_i.inception_date
        ,tmp_issue_i.fk_date_id_pilot_date
        ,tmp_issue_i.pilot_date
        ,tmp_issue_i.fk_date_id_pilot_finished_date
        ,tmp_issue_i.pilot_finished_date
        ,tmp_issue_i.fk_date_id_sales_date
        ,tmp_issue_i.sales_date
        ,tmp_issue_i.fk_date_id_deployment_date
        ,tmp_issue_i.deployment_date
        ,tmp_issue_i.fk_project_id
        ,tmp_issue_i.fk_party_id_created_by
        ,tmp_issue_i.fk_party_id_reported_by
        ,tmp_issue_i.fk_employee_id_assigned_to
        ,tmp_issue_i.tech_insert_function
        ,tmp_issue_i.tech_insert_utc_timestamp
        ,tmp_issue_i.tech_deleted_in_source_system
        ,tmp_issue_i.tech_row_hash
        ,tmp_issue_i.tech_data_load_utc_timestamp
        ,tmp_issue_i.tech_data_load_uuid
    FROM tmp_issue_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_jira_trg_issue_relation_map_i" id="Procedure_5b95f6a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_jira_trg_issue_relation_map_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Insert data from stage 'jira_*' tables into core input table issue_relation_map_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = SUBSTRING(stack FROM 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_issue_relation_map_i;
    CREATE TEMPORARY TABLE tmp_issue_relation_map_i (
        issue_key                       TEXT NOT NULL
        ,issue_key_related_issue        TEXT NOT NULL
        ,fk_issue_id                    INTEGER NOT NULL
        ,fk_issue_id_related_issue      INTEGER NOT NULL
        ,relation                       TEXT NOT NULL
        ,relation_direction             TEXT NOT NULL
        ,tech_insert_function           TEXT NOT NULL
        ,tech_insert_utc_timestamp      BIGINT NOT NULL
        ,tech_row_hash                  TEXT NOT NULL
        ,tech_data_load_utc_timestamp   BIGINT NOT NULL
        ,tech_data_load_uuid            TEXT NOT NULl
        ,tech_deleted_in_source_system  bool DEFAULT false NOT NULL
    );
    INSERT INTO tmp_issue_relation_map_i (
        issue_key
        ,issue_key_related_issue
        ,fk_issue_id
        ,fk_issue_id_related_issue
        ,relation
        ,relation_direction
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        issue_relation_map.issue_key AS issue_key
        ,issue_relation_map.issue_key_related_issue AS issue_key_related_issue
        ,issue.issue_id AS fk_issue_id
        ,related_issue.issue_id AS fk_issue_id_related_issue
        ,relation AS relation
        ,relation_direction	AS relation_direction
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
               COALESCE(issue.issue_key, '')::TEXT
            || COALESCE(related_issue.issue_key, '')::TEXT
            || COALESCE(relation, '')
            || COALESCE(relation_direction, '')
        ) AS tech_row_hash
        ,issue_relation_map.tech_data_load_utc_timestamp
        ,issue_relation_map.tech_data_load_uuid
    FROM stage.jira_issue_relation_i AS issue_relation_map
    LEFT JOIN core.issue_i AS issue ON issue.jira_key = issue_relation_map.issue_key
    LEFT JOIN core.issue_i AS related_issue ON related_issue.jira_key = issue_relation_map.issue_key_related_issue;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.issue_relation_map_i (
        issue_key
        ,issue_key_related_issue
        ,fk_issue_id
        ,fk_issue_id_related_issue
        ,relation
        ,relation_direction
        ,tech_insert_function
        ,tech_deleted_in_source_system
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        tmp_issue_relation_map_i.issue_key
        ,tmp_issue_relation_map_i.issue_key_related_issue
        ,tmp_issue_relation_map_i.fk_issue_id
        ,tmp_issue_relation_map_i.fk_issue_id_related_issue
        ,tmp_issue_relation_map_i.relation
        ,tmp_issue_relation_map_i.relation_direction
        ,tmp_issue_relation_map_i.tech_insert_function
        ,tmp_issue_relation_map_i.tech_deleted_in_source_system
        ,tmp_issue_relation_map_i.tech_insert_utc_timestamp
        ,tmp_issue_relation_map_i.tech_row_hash
        ,tmp_issue_relation_map_i.tech_data_load_utc_timestamp
        ,tmp_issue_relation_map_i.tech_data_load_uuid
    FROM tmp_issue_relation_map_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_jira_trg_party_i" id="Procedure_8770e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_jira_trg_party_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Insert data from stage 'jira_*' tables into core input table party_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
JIRA_DELETED_USER_DISPLAY_NAME TEXT := 'Former user';
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ------------------------
    -- INSERT NULL RECORD --
    ------------------------
    INSERT INTO core.party_i (
        party_id
        ,party_key
        ,full_name
        ,short_name
        ,fk_employee_id_created_by
        ,fk_employee_id_last_modified_by
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_modified_date
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    VALUES (
        -1 -- party_id
        ,TEXT_NULL -- party_key
        ,TEXT_NULL -- full_name
        ,TEXT_NULL -- short_name
        ,-1 -- fk_employee_id_created_by
        ,-1 -- fk_employee_id_last_modified_by
        ,-1 -- fk_date_id_created_date
        ,TIMESTAMP_NEVER -- created_timestamp
        ,-1 -- fk_date_id_last_modified_date
        ,TIMESTAMP_NEVER -- last_modified_timestamp
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_party_i;
    CREATE TEMPORARY TABLE tmp_party_i (
        party_key                           TEXT NOT NULL
        ,full_name                          TEXT
        ,short_name                         TEXT
        ,fk_employee_id_last_modified_by    INTEGER NOT NULL
        ,fk_employee_id_created_by          INTEGER NOT NULL
        ,fk_date_id_created_date            INTEGER NOT NULL
        ,created_timestamp                  TIMESTAMP WITH TIME ZONE NOT NULL
        ,fk_date_id_last_modified_date      INTEGER NOT NULL
        ,last_modified_timestamp            TIMESTAMP WITH TIME ZONE NOT NULL
        ,tech_insert_function               TEXT NOT NULL
        ,tech_insert_utc_timestamp          BIGINT NOT NULL
        ,tech_deleted_in_source_system      BOOL NOT NULL
        ,tech_row_hash                      TEXT NOT NULL
        ,tech_data_load_utc_timestamp       BIGINT NOT NULL
        ,tech_data_load_uuid                TEXT NOT NULL
    );
    INSERT INTO tmp_party_i (
        party_key
        ,full_name
        ,short_name
        ,fk_employee_id_created_by
        ,fk_employee_id_last_modified_by
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_modified_date
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        jira_user.account_id AS party_key
        ,CASE
            WHEN jira_user.display_name IS NOT NULL AND jira_user.display_name = JIRA_DELETED_USER_DISPLAY_NAME THEN tf_u_replace_empty_string_with_null_flag(jira_user.name)
            ELSE tf_u_replace_empty_string_with_null_flag(jira_user.display_name)
        END AS full_name
        ,CASE
            WHEN jira_user.display_name IS NOT NULL AND jira_user.display_name = JIRA_DELETED_USER_DISPLAY_NAME THEN tf_u_replace_empty_string_with_null_flag(jira_user.name)
            ELSE tf_u_replace_empty_string_with_null_flag(jira_user.display_name)
        END AS short_name
        ,-1 AS fk_employee_id_created_by
        ,-1 AS fk_employee_id_last_modified_by
        ,-1 AS fk_date_id_created_date
        ,TIMESTAMP_NEVER AS created_timestamp
        ,-1 AS fk_date_id_last_modified_date
        ,TIMESTAMP_NEVER AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
        COALESCE(name ,'')
        ) AS tech_row_hash
        ,jira_user.tech_data_load_utc_timestamp
        ,jira_user.tech_data_load_uuid
    FROM stage.jira_user_i AS jira_user;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.party_i (
        party_key
        ,full_name
        ,short_name
        ,fk_employee_id_created_by
        ,fk_employee_id_last_modified_by
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_modified_date
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_party_i.party_key
        ,tmp_party_i.full_name
        ,tmp_party_i.short_name
        ,tmp_party_i.fk_employee_id_created_by
        ,tmp_party_i.fk_employee_id_last_modified_by
        ,tmp_party_i.fk_date_id_created_date
        ,tmp_party_i.created_timestamp
        ,tmp_party_i.fk_date_id_last_modified_date
        ,tmp_party_i.last_modified_timestamp
        ,tmp_party_i.tech_insert_function
        ,tmp_party_i.tech_insert_utc_timestamp
        ,tmp_party_i.tech_deleted_in_source_system
        ,tmp_party_i.tech_row_hash
        ,tmp_party_i.tech_data_load_utc_timestamp
        ,tmp_party_i.tech_data_load_uuid
    FROM tmp_party_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_jira_trg_project_i" id="Procedure_4682603" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_jira_trg_project_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Insert data from stage 'jira_*' tables into core input table project_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.project_i (
        project_id
        ,project_key
        ,jira_id
        ,jira_key
        ,project_name
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    VALUES (
        -1 -- project_id
        ,TEXT_NULL -- project_key
        ,-1 -- jira_id
        ,TEXT_NULL -- jira_key
        ,TEXT_NULL -- project_name
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    );
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_project_i;
    CREATE TEMPORARY TABLE tmp_project_i (
        project_key                     TEXT NOT NULL
        ,jira_id                        INTEGER NOT NULL
        ,jira_key                       TEXT NOT NULL
        ,project_name                   TEXT NOT NULL
        ,tech_insert_function           TEXT NOT NULL
        ,tech_insert_utc_timestamp      BIGINT NOT NULL
        ,tech_row_hash                  TEXT NOT NULL
        ,tech_data_load_utc_timestamp   BIGINT NOT NULL
        ,tech_data_load_uuid            TEXT NOT NULL
        ,tech_deleted_in_source_system  bool DEFAULT false NOT NULL
    );
    INSERT INTO tmp_project_i (
        project_key
        ,jira_key
        ,jira_id
        ,project_name
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT 
        jira_project.project_key AS project_key
        ,jira_project.project_key AS jira_key
        ,jira_project.project_id AS jira_id
        ,jira_project.name AS project_name
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
        COALESCE(jira_project.name,'')
        ) AS tech_row_hash
        ,jira_project.tech_data_load_utc_timestamp
        ,jira_project.tech_data_load_uuid
    FROM stage.jira_project_i AS jira_project;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.project_i (
        project_key
        ,jira_key
        ,jira_id
        ,project_name
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_project_i.project_key
        ,tmp_project_i.jira_key
        ,tmp_project_i.jira_id
        ,tmp_project_i.project_name
        ,tmp_project_i.tech_insert_function
        ,tmp_project_i.tech_insert_utc_timestamp
        ,tmp_project_i.tech_deleted_in_source_system
        ,tmp_project_i.tech_row_hash
        ,tmp_project_i.tech_data_load_utc_timestamp
        ,tmp_project_i.tech_data_load_uuid		
    FROM tmp_project_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_jira_trg_release_i" id="Procedure_503121a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_jira_trg_release_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Insert data from stage 'jira_*' tables into core input table release_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_release_i;
    CREATE TEMPORARY TABLE tmp_release_i (
        release_key                     TEXT NOT NULL
        ,jira_id                        INTEGER NOT NULL
        ,fk_date_id_release_date        INTEGER NOT NULL
        ,release_date                   DATE NOT NULL
        ,release_name                   TEXT NOT NULL
        ,release_number                 INTEGER NOT NULL
        ,fk_date_id_start_date          INTEGER NOT NULL
        ,start_date                     DATE NOT NULL
        ,fk_project_id                  INTEGER NOT NULL
        ,description                    TEXT NOT NULL
        ,tech_insert_function           TEXT NOT NULL
        ,tech_insert_utc_timestamp      BIGINT NOT NULL
        ,tech_row_hash                  TEXT NOT NULL
        ,tech_data_load_utc_timestamp   BIGINT NOT NULL
        ,tech_data_load_uuid            TEXT NOT NULL
        ,tech_deleted_in_source_system  bool DEFAULT false NOT NULL
    );
    INSERT INTO tmp_release_i (
        release_key
        ,jira_id
        ,release_name
        ,release_number
        ,description
        ,fk_date_id_start_date
        ,start_date
        ,fk_date_id_release_date
        ,release_date
        ,fk_project_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        jira_release.release_id AS release_key
        ,jira_release.release_id AS jira_id
        ,jira_release.name AS release_name
        ,CASE
            WHEN project.project_key = 'DEV' THEN SUBSTRING(jira_release.name FROM 2 )::INTEGER
            ELSE -1
        END AS release_number
        ,tf_u_replace_empty_string_with_null_flag(jira_release.description) AS description
        ,COALESCE(REPLACE(jira_release.start_date, '-', '')::INTEGER, -1) AS fk_date_id_start_date
        ,COALESCE(jira_release.start_date::DATE, NULL_DATE) AS start_date
        ,COALESCE(REPLACE(jira_release.release_date, '-', '')::INTEGER, -1) AS fk_date_id_release_date
        ,COALESCE(jira_release.release_date::DATE, NULL_DATE) AS release_date
        ,CASE WHEN project.project_id IS NULL THEN - 1
            ELSE project.project_id
        END AS fk_project_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
           COALESCE(jira_release.NAME, '')
        || COALESCE(jira_release.description, '')
        || COALESCE(jira_release.start_date, '')
        || COALESCE(jira_release.release_date, '')
        || COALESCE(project.project_key, '')
        ) AS tech_row_hash
        ,jira_release.tech_data_load_utc_timestamp
        ,jira_release.tech_data_load_uuid
    FROM stage.jira_release_i AS jira_release
    LEFT JOIN core.project_i AS project ON project.jira_id = jira_release.project_id;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.release_i (
        release_key
        ,jira_id
        ,release_name
        ,release_number
        ,description
        ,fk_date_id_start_date
        ,start_date
        ,fk_date_id_release_date
        ,release_date
        ,fk_project_id
        ,tech_insert_function
        ,tech_deleted_in_source_system
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_release_i.release_key
        ,tmp_release_i.jira_id
        ,tmp_release_i.release_name
        ,tmp_release_i.release_number
        ,tmp_release_i.description
        ,tmp_release_i.fk_date_id_start_date
        ,tmp_release_i.start_date
        ,tmp_release_i.fk_date_id_release_date
        ,tmp_release_i.release_date
        ,tmp_release_i.fk_project_id
        ,tmp_release_i.tech_insert_function
        ,tmp_release_i.tech_deleted_in_source_system
        ,tmp_release_i.tech_insert_utc_timestamp
        ,tmp_release_i.tech_row_hash
        ,tmp_release_i.tech_data_load_utc_timestamp
        ,tmp_release_i.tech_data_load_uuid
    FROM tmp_release_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_jira_trg_worklog_i" id="Procedure_181152d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_jira_trg_worklog_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Insert data from stage 'jira_*' tables into core input table worklog_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_worklog_i;
    CREATE TEMPORARY TABLE tmp_worklog_i (
        worklog_key                     TEXT NOT NULL
        ,tempo_id                       INTEGER NOT NULL
        ,time_logged                    INTERVAL NOT NULL
        ,hours_logged                   NUMERIC(10, 5) NOT NULL
        ,days_logged                    NUMERIC(10, 5) NOT NULL
        ,worklog_comment                TEXT NOT NULL
        ,fk_issue_id                    INTEGER NOT NULL
        ,fk_employee_id_created_by      INTEGER NOT NULL
        ,fk_date_id_work_started_date   INTEGER NOT NULL
        ,work_started_at_timestamp      TIMESTAMP WITH TIME ZONE NOT NULL
        ,tech_insert_function           TEXT NOT NULL
        ,tech_insert_utc_timestamp      BIGINT NOT NULL
        ,tech_row_hash                  TEXT NOT NULL
        ,tech_data_load_utc_timestamp   BIGINT NOT NULL
        ,tech_data_load_uuid            TEXT NOT NULL
        ,tech_deleted_in_source_system  bool DEFAULT false NOT NULL
    );
    INSERT INTO tmp_worklog_i (
        worklog_key
        ,tempo_id
        ,time_logged
        ,hours_logged
        ,days_logged
        ,worklog_comment
        ,fk_issue_id
        ,fk_employee_id_created_by
        ,fk_date_id_work_started_date
        ,work_started_at_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        jira_tempo_worklog.tempo_worklog_id AS worklog_key
        ,jira_tempo_worklog.tempo_worklog_id AS tempo_id
        ,(time_logged_seconds || ' ' || 'seconds')::INTERVAL AS time_logged
        ,tf_u_convert_interval_to_hours((time_logged_seconds || ' ' || 'seconds')::INTERVAL) AS hours_logged
        ,tf_u_convert_interval_to_days((time_logged_seconds || ' ' || 'seconds')::INTERVAL) AS days_logged
        ,tf_u_replace_empty_string_with_null_flag(jira_tempo_worklog.worklog_comment) AS worklog_comment
        ,issue.issue_id AS fk_issue_id
        ,COALESCE(employee.employee_id, -1) AS fk_employee_id_created_by
        ,REPLACE(jira_tempo_worklog.work_started_at_date, '-', '')::INTEGER AS fk_date_id_work_started_date
        ,(jira_tempo_worklog.work_started_at_date || ' ' || jira_tempo_worklog.work_started_at_time || ' UTC')::TIMESTAMP WITH TIME ZONE AS work_started_at_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
           COALESCE(jira_tempo_worklog.worklog_comment, '')
        || COALESCE(jira_tempo_worklog.time_logged_seconds, 0)
        || COALESCE(jira_tempo_worklog.work_started_at_date, '')
        || COALESCE(jira_tempo_worklog.work_started_at_time, '')
        || COALESCE(jira_tempo_worklog.author_account_id, '')
        ) AS tech_row_hash
        ,jira_tempo_worklog.tech_data_load_utc_timestamp
        ,jira_tempo_worklog.tech_data_load_uuid
    FROM stage.jira_worklog_i AS jira_tempo_worklog
    LEFT JOIN core.issue_i AS issue ON issue.jira_id = jira_tempo_worklog.issue_id
    LEFT JOIN core.employee_i AS employee ON employee.employee_key = jira_tempo_worklog.author_account_id;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.worklog_i (
        worklog_key
        ,tempo_id
        ,time_logged
        ,hours_logged
        ,days_logged
        ,worklog_comment
        ,fk_issue_id
        ,fk_employee_id_created_by
        ,fk_date_id_work_started_date
        ,work_started_at_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT 		
        tmp_worklog_i.worklog_key
        ,tmp_worklog_i.tempo_id
        ,tmp_worklog_i.time_logged
        ,tmp_worklog_i.hours_logged
        ,tmp_worklog_i.days_logged
        ,tmp_worklog_i.worklog_comment
        ,tmp_worklog_i.fk_issue_id
        ,tmp_worklog_i.fk_employee_id_created_by
        ,tmp_worklog_i.fk_date_id_work_started_date
        ,tmp_worklog_i.work_started_at_timestamp
        ,tmp_worklog_i.tech_insert_function
        ,tmp_worklog_i.tech_insert_utc_timestamp
        ,tmp_worklog_i.tech_deleted_in_source_system
        ,tmp_worklog_i.tech_row_hash
        ,tmp_worklog_i.tech_data_load_utc_timestamp
        ,tmp_worklog_i.tech_data_load_uuid
    FROM tmp_worklog_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_mailchimp_trg_email_campaign_bounced_email_i" id="Procedure_35048e6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_mailchimp_trg_email_campaign_bounced_email_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Insert data from stage 'mailchimp_*' tables into core input table email_campaign_bounced_email_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-08-13 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.email_campaign_bounced_email_i (
        email_campaign_bounced_email_id
        ,email_campaign_bounced_email_key
        ,fk_email_campaign_report_id
        ,email_address
        ,bounce_type
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    VALUES (
        -1 -- email_campaign_bounced_email_id
        ,TEXT_NULL -- email_campaign_bounced_email_key
        ,-1 -- fk_email_campaign_report_id
        ,TEXT_NULL -- email_address
        ,TEXT_NULL -- bounce_type
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_email_campaign_bounce_report;
    CREATE TEMPORARY TABLE tmp_email_campaign_bounce_report (
        email_campaign_bounced_email_key    TEXT NOT NULL
        ,email_address                      TEXT NOT NULL
        ,fk_email_campaign_report_id        INTEGER NOT NULL
        ,bounce_type                        TEXT NOT NULL
        ,tech_insert_function               TEXT NOT NULL
        ,tech_insert_utc_timestamp          BIGINT NOT NULL
        ,tech_row_hash                      TEXT NOT NULL
        ,tech_data_load_utc_timestamp       BIGINT NOT NULL
        ,tech_data_load_uuid                TEXT NOT NULL
        ,tech_deleted_in_source_system      bool NOT NULL
     );
    INSERT INTO tmp_email_campaign_bounce_report (
        email_campaign_bounced_email_key
        ,fk_email_campaign_report_id
        ,email_address
        ,bounce_type
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        mailchimp_bounce_report.campaign_id || mailchimp_bounce_report.list_id || mailchimp_bounce_report.email_id AS email_campaign_bounced_email_key
        ,core_email_campaign_report.email_campaign_report_id AS fk_email_campaign_report_id
        ,mailchimp_bounce_report.email_address AS email_address
        ,mailchimp_bounce_report.activity_type AS bounce_type
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
            COALESCE(mailchimp_bounce_report.email_address, '')
            || COALESCE(mailchimp_bounce_report.activity_type, '')
        ) AS tech_row_hash
        ,mailchimp_bounce_report.tech_data_load_utc_timestamp
        ,mailchimp_bounce_report.tech_data_load_uuid
    FROM stage.mailchimp_report_email_activity_i AS mailchimp_bounce_report
    JOIN core.email_campaign_report_i AS core_email_campaign_report ON core_email_campaign_report.email_campaign_report_key = mailchimp_bounce_report.campaign_id
    WHERE activity_action = 'bounce';
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.email_campaign_bounced_email_i (
        email_campaign_bounced_email_key
        ,fk_email_campaign_report_id
        ,email_address
        ,bounce_type
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_email_campaign_bounce_report.email_campaign_bounced_email_key
        ,tmp_email_campaign_bounce_report.fk_email_campaign_report_id
        ,tmp_email_campaign_bounce_report.email_address
        ,tmp_email_campaign_bounce_report.bounce_type
        ,tmp_email_campaign_bounce_report.tech_insert_function
        ,tmp_email_campaign_bounce_report.tech_insert_utc_timestamp
        ,tmp_email_campaign_bounce_report.tech_deleted_in_source_system
        ,tmp_email_campaign_bounce_report.tech_row_hash
        ,tmp_email_campaign_bounce_report.tech_data_load_utc_timestamp
        ,tmp_email_campaign_bounce_report.tech_data_load_uuid
    FROM tmp_email_campaign_bounce_report;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_mailchimp_trg_email_campaign_clicked_url_i" id="Procedure_315cbd7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_mailchimp_trg_email_campaign_clicked_url_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Insert data from stage 'mailchimp_*' tables into core input table email_campaign_clicked_url_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-08-14 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.email_campaign_clicked_url_i (
        email_campaign_clicked_url_id
        ,email_campaign_clicked_url_key
        ,fk_email_campaign_report_id
        ,url
        ,clicks
        ,unique_clicks
        ,percentage_ot_total_clicks
        ,percentage_ot_unique_clicks
        ,last_click_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    VALUES (
        -1 -- email_campaign_clicked_url_id
        ,TEXT_NULL -- email_campaign_clicked_url_key
        ,-1 -- fk_email_campaign_report_id
        ,TEXT_NULL -- url
        ,-1 -- clicks
        ,-1 -- unique_clicks
        ,-1 -- percentage_ot_total_clicks
        ,-1 -- percentage_ot_unique_clicks
        ,TIMESTAMP_NEVER -- last_click_timestamp
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_email_campaign_clicked_url;
    CREATE TEMPORARY TABLE tmp_email_campaign_clicked_url (
        email_campaign_clicked_url_key      TEXT NOT NULL
        ,fk_email_campaign_report_id        INTEGER NOT NULL
        ,url                                TEXT NOT NULL
        ,clicks                             INTEGER NOT NULL
        ,unique_clicks                      INTEGER NOT NULL
        ,percentage_ot_total_clicks         REAL NOT NULL
        ,percentage_ot_unique_clicks        REAL NOT NULL
        ,last_click_timestamp               TIMESTAMP WITH TIME ZONE
        ,tech_insert_function               TEXT NOT NULL
        ,tech_insert_utc_timestamp          BIGINT NOT NULL
        ,tech_row_hash                      TEXT NOT NULL
        ,tech_data_load_utc_timestamp       BIGINT NOT NULL
        ,tech_data_load_uuid                TEXT NOT NULL
        ,tech_deleted_in_source_system      BOOL NOT NULL
    );
    INSERT INTO tmp_email_campaign_clicked_url (
        email_campaign_clicked_url_key
        ,fk_email_campaign_report_id
        ,url
        ,clicks
        ,unique_clicks
        ,percentage_ot_total_clicks
        ,percentage_ot_unique_clicks
        ,last_click_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        mailchimp_click_report.id AS email_campaign_clicked_url_key
        ,core_email_campaign_report.email_campaign_report_id AS fk_email_campaign_report_id
        ,mailchimp_click_report.url AS url
        ,mailchimp_click_report.total_clicks AS clicks
        ,mailchimp_click_report.unique_clicks AS unique_clicks
        ,mailchimp_click_report.click_percentage AS percentage_ot_total_clicks
        ,mailchimp_click_report.unique_click_percentage AS percentage_ot_unique_clicks
        ,CASE
            WHEN mailchimp_click_report.last_click <> '' THEN mailchimp_click_report.last_click::TIMESTAMP
            ELSE NULL
        END AS last_click_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
            COALESCE(mailchimp_click_report.id, '')
            || COALESCE(mailchimp_click_report.campaign_id, '')
            || COALESCE(mailchimp_click_report.url, '')
            || COALESCE(mailchimp_click_report.total_clicks::TEXT, '')
            || COALESCE(mailchimp_click_report.click_percentage::TEXT, '')
            || COALESCE(mailchimp_click_report.unique_clicks::TEXT, '')
            || COALESCE(mailchimp_click_report.unique_click_percentage::TEXT, '')
            || COALESCE(mailchimp_click_report.last_click, '')
        ) AS tech_row_hash
        ,mailchimp_click_report.tech_data_load_utc_timestamp
        ,mailchimp_click_report.tech_data_load_uuid
    FROM stage.mailchimp_report_click_report_i AS mailchimp_click_report
    JOIN core.email_campaign_report_i AS core_email_campaign_report ON core_email_campaign_report.email_campaign_report_key = mailchimp_click_report.campaign_id;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.email_campaign_clicked_url_i (
        email_campaign_clicked_url_key
        ,fk_email_campaign_report_id
        ,url
        ,clicks
        ,unique_clicks
        ,percentage_ot_total_clicks
        ,percentage_ot_unique_clicks
        ,last_click_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_email_campaign_clicked_url.email_campaign_clicked_url_key
        ,tmp_email_campaign_clicked_url.fk_email_campaign_report_id
        ,tmp_email_campaign_clicked_url.url
        ,tmp_email_campaign_clicked_url.clicks
        ,tmp_email_campaign_clicked_url.unique_clicks
        ,tmp_email_campaign_clicked_url.percentage_ot_total_clicks
        ,tmp_email_campaign_clicked_url.percentage_ot_unique_clicks
        ,tmp_email_campaign_clicked_url.last_click_timestamp
        ,tmp_email_campaign_clicked_url.tech_insert_function
        ,tmp_email_campaign_clicked_url.tech_insert_utc_timestamp
        ,tmp_email_campaign_clicked_url.tech_deleted_in_source_system
        ,tmp_email_campaign_clicked_url.tech_row_hash
        ,tmp_email_campaign_clicked_url.tech_data_load_utc_timestamp
        ,tmp_email_campaign_clicked_url.tech_data_load_uuid
    FROM tmp_email_campaign_clicked_url;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_mailchimp_trg_email_campaign_opened_by_i" id="Procedure_c6f810" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_mailchimp_trg_email_campaign_opened_by_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Insert data from stage 'mailchimp_*' tables into core input table email_campaign_opened_by_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-08-13 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
TIMESTAMP_ARRAY_NULL TIMESTAMP WITH TIME ZONE[] := (SELECT timestamp_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.email_campaign_opened_by_i (
        email_campaign_opened_by_id
        ,email_campaign_opened_by_key
        ,fk_email_campaign_report_id
        ,email_address
        ,opens_count
        ,open_timestamps
        ,first_name
        ,last_name
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    VALUES (
        -1 -- email_campaign_opened_by_id
        ,TEXT_NULL -- email_campaign_opened_by_key
        ,-1 -- fk_email_campaign_report_id
        ,TEXT_NULL -- email_address
        ,-1 -- opens_count
        ,TIMESTAMP_ARRAY_NULL -- open_timestamps
        ,TEXT_NULL -- first_name
        ,TEXT_NULL -- last_name
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_email_campaign_open_report;
    CREATE TEMPORARY TABLE tmp_email_campaign_open_report (
        email_campaign_opened_by_key            TEXT NOT NULL
        ,fk_email_campaign_report_id            INTEGER NOT NULL
        ,email_address                          TEXT NOT NULL
        ,open_timestamps                        TIMESTAMP WITH TIME ZONE [] NOT NULL
        ,opens_count                            INTEGER NOT NULL
        ,first_name                             TEXT
        ,last_name                              TEXT
        ,tech_insert_function                   TEXT NOT NULL
        ,tech_insert_utc_timestamp              BIGINT NOT NULL
        ,tech_row_hash                          TEXT NOT NULL
        ,tech_data_load_utc_timestamp           BIGINT NOT NULL
        ,tech_data_load_uuid                    TEXT NOT NULL
        ,tech_deleted_in_source_system          bool NOT NULL
     );
    INSERT INTO tmp_email_campaign_open_report (
        email_campaign_opened_by_key
        ,fk_email_campaign_report_id
        ,email_address
        ,open_timestamps
        ,opens_count
        ,first_name
        ,last_name
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        mailchimp_open_report.campaign_id || mailchimp_open_report.email_id AS email_campaign_opened_by_key
        ,core_email_campaign_report.email_campaign_report_id AS fk_email_campaign_report_id
        ,mailchimp_open_report.email_address AS email_address
        ,mailchimp_open_report.opens_timestamp::TIMESTAMP WITH TIME ZONE [] AS open_timestamps
        ,mailchimp_open_report.opens_count AS opens_count
        ,mailchimp_open_report.merge_fields_fname AS first_name
        ,mailchimp_open_report.merge_fields_lname AS last_name
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
            COALESCE(mailchimp_open_report.campaign_id, '')
            || COALESCE(mailchimp_open_report.email_id, '')
            || COALESCE(mailchimp_open_report.email_address, '')
            || COALESCE(mailchimp_open_report.opens_timestamp, '')
            || COALESCE(mailchimp_open_report.opens_count::TEXT, '')
            || COALESCE(mailchimp_open_report.merge_fields_fname, '')
            || COALESCE(mailchimp_open_report.merge_fields_lname, '')
        ) AS tech_row_hash
        ,mailchimp_open_report.tech_data_load_utc_timestamp
        ,mailchimp_open_report.tech_data_load_uuid
    FROM stage.mailchimp_report_open_report_i AS mailchimp_open_report
    JOIN core.email_campaign_report_i AS core_email_campaign_report ON core_email_campaign_report.email_campaign_report_key = mailchimp_open_report.campaign_id;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.email_campaign_opened_by_i (
        email_campaign_opened_by_key
        ,fk_email_campaign_report_id
        ,email_address
        ,open_timestamps
        ,opens_count
        ,first_name
        ,last_name
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_email_campaign_open_report.email_campaign_opened_by_key
        ,tmp_email_campaign_open_report.fk_email_campaign_report_id
        ,tmp_email_campaign_open_report.email_address
        ,tmp_email_campaign_open_report.open_timestamps
        ,tmp_email_campaign_open_report.opens_count
        ,tmp_email_campaign_open_report.first_name
        ,tmp_email_campaign_open_report.last_name
        ,tmp_email_campaign_open_report.tech_insert_function
        ,tmp_email_campaign_open_report.tech_insert_utc_timestamp
        ,tmp_email_campaign_open_report.tech_deleted_in_source_system
        ,tmp_email_campaign_open_report.tech_row_hash
        ,tmp_email_campaign_open_report.tech_data_load_utc_timestamp
        ,tmp_email_campaign_open_report.tech_data_load_uuid
    FROM tmp_email_campaign_open_report;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_mailchimp_trg_email_campaign_recipient_i" id="Procedure_1c08504" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_mailchimp_trg_email_campaign_recipient_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Insert data from stage 'mailchimp_*' tables into core input table email_campaign_recipient_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-08-10 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.email_campaign_recipient_i (
        email_campaign_recipient_id
        ,email_campaign_recipient_key
        ,fk_email_campaign_report_id
        ,email_address
        ,first_name
        ,last_name
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    VALUES (
        -1 -- email_campaign_recipient_id
        ,TEXT_NULL -- email_campaign_recipient_key
        ,-1 -- fk_email_campaign_report_id
        ,TEXT_NULL -- email_address
        ,TEXT_NULL -- first_name
        ,TEXT_NULL -- last_name
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_email_campaign_recipient;
    CREATE TEMPORARY TABLE tmp_email_campaign_recipient (
        email_campaign_recipient_key            TEXT NOT NULL
        ,email_address                          TEXT NOT NULL
        ,fk_email_campaign_report_id                    INTEGER NOT NULL
        ,first_name                             TEXT
        ,last_name                              TEXT
        ,tech_insert_function                   TEXT NOT NULL
        ,tech_insert_utc_timestamp              BIGINT NOT NULL
        ,tech_row_hash                          TEXT NOT NULL
        ,tech_data_load_utc_timestamp           BIGINT NOT NULL
        ,tech_data_load_uuid                    TEXT NOT NULL
        ,tech_deleted_in_source_system          bool NOT NULL
     );
    INSERT INTO tmp_email_campaign_recipient (
        email_campaign_recipient_key
        ,email_address
        ,fk_email_campaign_report_id
        ,first_name
        ,last_name
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        mailchimp_report_sent_to.campaign_id || mailchimp_report_sent_to.list_id ||mailchimp_report_sent_to.email_id AS email_campaign_recipient_key
        ,mailchimp_report_sent_to.email_address AS email_address
        ,core_email_campaign_report.email_campaign_report_id AS fk_email_campaign_report_id
        ,mailchimp_report_sent_to.merge_fields_fname AS first_name
        ,mailchimp_report_sent_to.merge_fields_lname AS last_name
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
            COALESCE(mailchimp_report_sent_to.campaign_id, '')
            || COALESCE(mailchimp_report_sent_to.list_id, '')
            || COALESCE(mailchimp_report_sent_to.email_id, '')
            || COALESCE(mailchimp_report_sent_to.email_address, '')
            || COALESCE(mailchimp_report_sent_to.merge_fields_fname, '')
            || COALESCE(mailchimp_report_sent_to.merge_fields_lname, '')
        ) AS tech_row_hash
        ,mailchimp_report_sent_to.tech_data_load_utc_timestamp
        ,mailchimp_report_sent_to.tech_data_load_uuid
    FROM stage.mailchimp_report_sent_to_i AS mailchimp_report_sent_to
    JOIN core.email_campaign_report_i AS core_email_campaign_report ON core_email_campaign_report.email_campaign_report_key = mailchimp_report_sent_to.campaign_id;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.email_campaign_recipient_i (
        email_campaign_recipient_key
        ,email_address
        ,fk_email_campaign_report_id
        ,first_name
        ,last_name
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_email_campaign_recipient.email_campaign_recipient_key
        ,tmp_email_campaign_recipient.email_address
        ,tmp_email_campaign_recipient.fk_email_campaign_report_id
        ,tmp_email_campaign_recipient.first_name
        ,tmp_email_campaign_recipient.last_name
        ,tmp_email_campaign_recipient.tech_insert_function
        ,tmp_email_campaign_recipient.tech_insert_utc_timestamp
        ,tmp_email_campaign_recipient.tech_deleted_in_source_system
        ,tmp_email_campaign_recipient.tech_row_hash
        ,tmp_email_campaign_recipient.tech_data_load_utc_timestamp
        ,tmp_email_campaign_recipient.tech_data_load_uuid
    FROM tmp_email_campaign_recipient;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_mailchimp_trg_email_campaign_report_i" id="Procedure_5516839" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_mailchimp_trg_email_campaign_report_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Insert data from stage 'mailchimp_*' tables into core input table email_campaign_report_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-07-03 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.email_campaign_report_i (
        email_campaign_report_id
        ,email_campaign_report_key
        ,mailchimp_id
        ,mailchimp_web_id
        ,campaign_title
        ,campaign_type
        ,sent_to_mailing_list
        ,sent_to_mailing_list_segment_filter
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_send_date
        ,send_timestamp
        ,emails_sent_total
        ,abuse_reports_total
        ,unsubscribed_total
        ,hard_bounces_total
        ,soft_bounces_total
        ,syntax_error_bounce_total
        ,forwards_total
        ,forwards_opens_total
        ,opens_total
        ,unique_opens_total
        ,total_open_to_unique_open_rate
        ,fk_date_id_last_open_date
        ,last_open_timestamp
        ,clicks_total
        ,unique_clicks_total
        ,total_clicks_to_unique_clicks_rate
        ,unique_subscriiber_clicks_total
        ,fk_date_id_last_click_date
        ,last_click_timestamp
        ,industry_type
        ,industry_open_to_unique_open_rate
        ,industry_click_to_unique_click_rate
        ,industry_bounce_rate
        ,industry_unopen_rate
        ,industry_unsub_rate
        ,industry_abuse_rate
        ,was_timewarp_used
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    VALUES (
        -1 -- email_campaign_report_id
        ,TEXT_NULL -- email_campaign_report_key
        ,TEXT_NULL -- mailchimp_id
        ,-1 -- mailchimp_web_id
        ,TEXT_NULL -- campaign_title
        ,TEXT_NULL -- campaign_type
        ,TEXT_NULL -- sent_to_mailing_list
        ,TEXT_NULL -- sent_to_mailing_list_segment_filter
        ,-1 -- fk_date_id_created_date
        ,TIMESTAMP_NEVER -- created_timestamp
        ,-1 -- fk_date_id_send_date
        ,TIMESTAMP_NEVER -- send_timestamp
        ,-1 -- emails_sent_total
        ,-1 -- abuse_reports_total
        ,-1 -- unsubscribed_total
        ,-1 -- hard_bounces_total
        ,-1 -- soft_bounces_total
        ,-1 -- syntax_error_bounce_total
        ,-1 -- forwards_total
        ,-1 -- forwards_opens_total
        ,-1 -- opens_total
        ,-1 -- unique_opens_total
        ,-1 -- total_open_to_unique_open_rate
        ,-1 -- fk_date_id_last_open_date
        ,TIMESTAMP_NEVER -- last_open_timestamp
        ,-1 -- clicks_total
        ,-1 -- unique_clicks_total
        ,-1 -- total_clicks_to_unique_clicks_rate
        ,-1 -- unique_subscriiber_clicks_total
        ,-1 -- fk_date_id_last_click_date
        ,TIMESTAMP_NEVER -- last_click_timestamp
        ,-1 -- industry_type
        ,-1 -- industry_open_to_unique_open_rate
        ,-1 -- industry_click_to_unique_click_rate
        ,-1 -- industry_bounce_rate
        ,-1 -- industry_unopen_rate
        ,-1 -- industry_unsub_rate
        ,-1 -- industry_abuse_rate
        ,FALSE -- was_timewarp_used
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_email_campaign_report;
    CREATE TEMPORARY TABLE tmp_email_campaign_report (
        email_campaign_report_key               text  NOT NULL
        ,mailchimp_id                           text
        ,mailchimp_web_id                       integer
        ,campaign_title                         text  NOT NULL
        ,campaign_type                          text  NOT NULL
        ,sent_to_mailing_list                   text
        ,sent_to_mailing_list_segment_filter    text
        ,fk_date_id_created_date                integer not null
        ,created_timestamp                      timestamp with time zone
        ,fk_date_id_send_date                   integer NOT NULL
        ,send_timestamp                         timestamp with time zone NOT NULL
        ,emails_sent_total                      integer  NOT NULL
        ,abuse_reports_total                    integer  NOT NULL
        ,unsubscribed_total                     integer  NOT NULL
        ,hard_bounces_total                     integer  NOT NULL
        ,soft_bounces_total                     integer  NOT NULL
        ,syntax_error_bounce_total              integer
        ,forwards_total                         integer  NOT NULL
        ,forwards_opens_total                   integer  NOT NULL
        ,opens_total                            integer  NOT NULL
        ,unique_opens_total                     integer
        ,total_open_to_unique_open_rate         real
        ,fk_date_id_last_open_date              integer NOT NULL
        ,last_open_timestamp                    timestamp with time zone
        ,clicks_total                           integer  NOT NULL
        ,unique_clicks_total                    integer
        ,total_clicks_to_unique_clicks_rate     real
        ,unique_subscriiber_clicks_total        integer
        ,fk_date_id_last_click_date             integer not null
        ,last_click_timestamp                   timestamp with time zone
        ,industry_type                          text
        ,industry_open_to_unique_open_rate      real
        ,industry_click_to_unique_click_rate    real
        ,industry_bounce_rate                   real
        ,industry_unopen_rate                   real
        ,industry_unsub_rate                    real
        ,industry_abuse_rate                    real
        ,was_timewarp_used                      bool  NOT NULL
        ,tech_insert_function                   text  NOT NULL
        ,tech_insert_utc_timestamp              bigint  NOT NULL
        ,tech_row_hash                          text  NOT NULL
        ,tech_data_load_utc_timestamp           bigint  NOT NULL
        ,tech_data_load_uuid                    text  NOT NULL
        ,tech_deleted_in_source_system          bool  NOT NULL
     );
    INSERT INTO tmp_email_campaign_report (
        email_campaign_report_key
        ,mailchimp_id
        ,mailchimp_web_id
        ,campaign_title
        ,campaign_type
        ,sent_to_mailing_list
        ,sent_to_mailing_list_segment_filter
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_send_date
        ,send_timestamp
        ,emails_sent_total
        ,abuse_reports_total
        ,unsubscribed_total
        ,hard_bounces_total
        ,soft_bounces_total
        ,syntax_error_bounce_total
        ,forwards_total
        ,forwards_opens_total
        ,opens_total
        ,unique_opens_total
        ,total_open_to_unique_open_rate
        ,fk_date_id_last_open_date
        ,last_open_timestamp
        ,clicks_total
        ,unique_clicks_total
        ,total_clicks_to_unique_clicks_rate
        ,unique_subscriiber_clicks_total
        ,fk_date_id_last_click_date
        ,last_click_timestamp
        ,industry_type
        ,industry_open_to_unique_open_rate
        ,industry_click_to_unique_click_rate
        ,industry_bounce_rate
        ,industry_unopen_rate
        ,industry_unsub_rate
        ,industry_abuse_rate
        ,was_timewarp_used
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
         mailchimp_campaign.id AS email_campaign_report_key
        ,mailchimp_campaign.id  AS mailchimp_id
        ,mailchimp_campaign.web_id  AS mailchimp_web_id
        ,mailchimp_campaign.settings_title AS campaign_title
        ,mailchimp_campaign."type"  AS campaign_type
        ,mailchimp_list.name AS sent_to_mailing_list
        ,regexp_replace(regexp_replace(mailchimp_campaign.recipients_segment_text, '<[^<]+>', '', 'gs'), '(For a total of [0-9]+ emails sent.)', '', 'gs') /* Remove Tags */ AS sent_to_mailing_list_segment_filter
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(mailchimp_campaign.create_time), -1) AS fk_date_id_created_date
        ,CASE
            WHEN mailchimp_campaign.create_time = '' THEN NULL
            ELSE mailchimp_campaign.create_time::TIMESTAMP WITH TIME ZONE
        END AS created_timestamp
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(mailchimp_report.send_time), -1) AS fk_date_id_send_date
        ,CASE
            WHEN mailchimp_report.send_time = '' THEN NULL
            ELSE mailchimp_report.send_time::TIMESTAMP WITH TIME ZONE
        END AS send_timestamp
        ,mailchimp_report.emails_sent AS emails_sent_total
        ,mailchimp_report.abuse_reports AS abuse_reports_total
        ,mailchimp_report.unsubscribed AS unsubscribed_total
        ,mailchimp_report.bounces_hard_bounces AS hard_bounces_total
        ,mailchimp_report.bounces_soft_bounces AS soft_bounces_total
        ,mailchimp_report.bounces_syntax_errors AS syntax_error_bounce_total
        ,mailchimp_report.forwards_forwards_count AS forwards_total
        ,mailchimp_report.forwards_forwards_opens AS forwards_opens_total
        ,mailchimp_report.opens_opens_total AS opens_total
        ,mailchimp_report.opens_unique_opens AS unique_opens_total
        ,mailchimp_report.opens_open_rate AS total_open_to_unique_open_rate
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(mailchimp_report.opens_last_open), -1) AS fk_date_id_last_open_date
        ,CASE
            WHEN mailchimp_report.opens_last_open = '' THEN NULL
            ELSE mailchimp_report.opens_last_open::TIMESTAMP WITH TIME ZONE
        END AS last_open_timestamp
        ,mailchimp_report.clicks_clicks_total AS clicks_total
        ,mailchimp_report.clicks_unique_clicks AS unique_clicks_total
        ,mailchimp_report.clicks_click_rate AS total_clicks_to_unique_clicks_rate
        ,mailchimp_report.clicks_unique_subscriber_clicks AS unique_subscriiber_clicks_total
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(mailchimp_report.clicks_last_click), -1) AS fk_date_id_last_click_date
        ,CASE
            WHEN mailchimp_report.clicks_last_click = '' THEN NULL
            ELSE mailchimp_report.clicks_last_click::TIMESTAMP WITH TIME ZONE
        END AS last_click_timestamp
        ,mailchimp_report.industry_stats_type AS industry_type
        ,mailchimp_report.industry_stats_open_rate AS industry_open_to_unique_open_rate
        ,mailchimp_report.industry_stats_click_rate AS industry_click_to_unique_click_rate
        ,mailchimp_report.industry_stats_bounce_rate AS industry_bounce_rate
        ,mailchimp_report.industry_stats_unopen_rate AS industry_unopen_rate
        ,mailchimp_report.industry_stats_unsub_rate AS industry_unsub_rate
        ,mailchimp_report.industry_stats_abuse_rate AS industry_abuse_rate
        ,mailchimp_campaign.settings_timewarp AS was_timewarp_used
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
            COALESCE(mailchimp_campaign.id, '')
            || COALESCE(mailchimp_campaign.web_id::TEXT , '')
            || COALESCE(mailchimp_campaign.settings_title, '')
            || COALESCE(mailchimp_campaign.create_time, '')
            || COALESCE(mailchimp_campaign.recipients_list_id::TEXT, '')
            || COALESCE(mailchimp_campaign.recipients_segment_text, '')
            || COALESCE(mailchimp_campaign.status, '')
            || COALESCE(mailchimp_campaign.settings_timewarp::TEXT, '')
            || COALESCE(mailchimp_report.campaign_title, '')
            || COALESCE(mailchimp_report."type"::TEXT, '')
            || COALESCE(mailchimp_report.send_time, '')
            || COALESCE(mailchimp_report.subject_line, '')
            || COALESCE(mailchimp_report.emails_sent::TEXT, '')
            || COALESCE(mailchimp_report.abuse_reports::TEXT, '')
            || COALESCE(mailchimp_report.unsubscribed::TEXT, '')
            || COALESCE(mailchimp_report.bounces_hard_bounces::TEXT, '')
            || COALESCE(mailchimp_report.bounces_soft_bounces::TEXT, '')
            || COALESCE(mailchimp_report.bounces_syntax_errors::TEXT, '')
            || COALESCE(mailchimp_report.forwards_forwards_count::TEXT, '')
            || COALESCE(mailchimp_report.forwards_forwards_opens::TEXT, '')
            || COALESCE(mailchimp_report.opens_opens_total::TEXT, '')
            || COALESCE(mailchimp_report.opens_unique_opens::TEXT, '')
            || COALESCE(mailchimp_report.opens_open_rate::TEXT, '')
            || COALESCE(mailchimp_report.opens_last_open, '')
            || COALESCE(mailchimp_report.clicks_clicks_total::TEXT, '')
            || COALESCE(mailchimp_report.clicks_unique_clicks::TEXT, '')
            || COALESCE(mailchimp_report.clicks_unique_subscriber_clicks::TEXT, '')
            || COALESCE(mailchimp_report.clicks_click_rate::TEXT, '')
            || COALESCE(mailchimp_report.clicks_last_click, '')
            || COALESCE(mailchimp_report.industry_stats_type, '')
            || COALESCE(mailchimp_report.industry_stats_open_rate::TEXT, '')
            || COALESCE(mailchimp_report.industry_stats_click_rate::TEXT, '')
            || COALESCE(mailchimp_report.industry_stats_bounce_rate::TEXT, '')
            || COALESCE(mailchimp_report.industry_stats_unopen_rate::TEXT, '')
            || COALESCE(mailchimp_report.industry_stats_unsub_rate::TEXT, '')
            || COALESCE(mailchimp_report.industry_stats_abuse_rate::TEXT, '')
        ) AS tech_row_hash
        ,mailchimp_campaign.tech_data_load_utc_timestamp
        ,mailchimp_campaign.tech_data_load_uuid
    FROM stage.mailchimp_campaign_i AS mailchimp_campaign
    LEFT JOIN stage.mailchimp_report_i AS mailchimp_report ON mailchimp_report.id = mailchimp_campaign.id
    LEFT JOIN stage.mailchimp_list_i AS mailchimp_list ON mailchimp_list.id = mailchimp_campaign.recipients_list_id
    WHERE mailchimp_campaign.status = 'sent';
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.email_campaign_report_i (
        email_campaign_report_key
        ,mailchimp_id
        ,mailchimp_web_id
        ,campaign_title
        ,campaign_type
        ,sent_to_mailing_list
        ,sent_to_mailing_list_segment_filter
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_send_date
        ,send_timestamp
        ,emails_sent_total
        ,abuse_reports_total
        ,unsubscribed_total
        ,hard_bounces_total
        ,soft_bounces_total
        ,syntax_error_bounce_total
        ,forwards_total
        ,forwards_opens_total
        ,opens_total
        ,unique_opens_total
        ,total_open_to_unique_open_rate
        ,fk_date_id_last_open_date
        ,last_open_timestamp
        ,clicks_total
        ,unique_clicks_total
        ,total_clicks_to_unique_clicks_rate
        ,unique_subscriiber_clicks_total
        ,fk_date_id_last_click_date
        ,last_click_timestamp
        ,industry_type
        ,industry_open_to_unique_open_rate
        ,industry_click_to_unique_click_rate
        ,industry_bounce_rate
        ,industry_unopen_rate
        ,industry_unsub_rate
        ,industry_abuse_rate
        ,was_timewarp_used
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_email_campaign_report.email_campaign_report_key
        ,tmp_email_campaign_report.mailchimp_id
        ,tmp_email_campaign_report.mailchimp_web_id
        ,tmp_email_campaign_report.campaign_title
        ,tmp_email_campaign_report.campaign_type
        ,tmp_email_campaign_report.sent_to_mailing_list
        ,tmp_email_campaign_report.sent_to_mailing_list_segment_filter
        ,tmp_email_campaign_report.fk_date_id_created_date
        ,tmp_email_campaign_report.created_timestamp
        ,tmp_email_campaign_report.fk_date_id_send_date
        ,tmp_email_campaign_report.send_timestamp
        ,tmp_email_campaign_report.emails_sent_total
        ,tmp_email_campaign_report.abuse_reports_total
        ,tmp_email_campaign_report.unsubscribed_total
        ,tmp_email_campaign_report.hard_bounces_total
        ,tmp_email_campaign_report.soft_bounces_total
        ,tmp_email_campaign_report.syntax_error_bounce_total
        ,tmp_email_campaign_report.forwards_total
        ,tmp_email_campaign_report.forwards_opens_total
        ,tmp_email_campaign_report.opens_total
        ,tmp_email_campaign_report.unique_opens_total
        ,tmp_email_campaign_report.total_open_to_unique_open_rate
        ,tmp_email_campaign_report.fk_date_id_last_open_date
        ,tmp_email_campaign_report.last_open_timestamp
        ,tmp_email_campaign_report.clicks_total
        ,tmp_email_campaign_report.unique_clicks_total
        ,tmp_email_campaign_report.total_clicks_to_unique_clicks_rate
        ,tmp_email_campaign_report.unique_subscriiber_clicks_total
        ,tmp_email_campaign_report.fk_date_id_last_click_date
        ,tmp_email_campaign_report.last_click_timestamp
        ,tmp_email_campaign_report.industry_type
        ,tmp_email_campaign_report.industry_open_to_unique_open_rate
        ,tmp_email_campaign_report.industry_click_to_unique_click_rate
        ,tmp_email_campaign_report.industry_bounce_rate
        ,tmp_email_campaign_report.industry_unopen_rate
        ,tmp_email_campaign_report.industry_unsub_rate
        ,tmp_email_campaign_report.industry_abuse_rate
        ,tmp_email_campaign_report.was_timewarp_used
        ,tmp_email_campaign_report.tech_insert_function
        ,tmp_email_campaign_report.tech_insert_utc_timestamp
        ,tmp_email_campaign_report.tech_deleted_in_source_system
        ,tmp_email_campaign_report.tech_row_hash
        ,tmp_email_campaign_report.tech_data_load_utc_timestamp
        ,tmp_email_campaign_report.tech_data_load_uuid
    FROM tmp_email_campaign_report;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_mailchimp_trg_employee_i" id="Procedure_3a41d52" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_mailchimp_trg_employee_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ==============================================================================================
    DESCRIPTION:        Insert Null Employee, if not already in DWH
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:               There are 2 reasons why I included this transformation
                        1. Null employee (with id -1) is needed for transformation into 'mailchimp' party.
                        2. To keep all mailchimp transformations independent from other transformations, like JIRA or Vtiger CRM
    ==============================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.employee_i (
        employee_id
        ,employee_key
        ,full_name
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,fk_date_id_created_date
        ,created_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    VALUES (
        -1 -- employee_id
        ,TEXT_NULL -- employee_key
        ,TEXT_NULL-- full_name
        ,TEXT_NULL -- email
        ,TEXT_NULL -- secondary_email
        ,TEXT_NULL -- phone
        ,TEXT_NULL -- mobile_phone
        ,-1 -- fk_date_id_created_date
        ,TIMESTAMP_NEVER -- created_timestamp
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_mailchimp_trg_list_segment_list_member_map_i" id="Procedure_2c14fd6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_mailchimp_trg_list_segment_list_member_map_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Insert data from stage 'mailchimp_*' tables into core input table list_segment_list_member_map_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-07-20 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_mailing_list_segment_list_member_map;
    CREATE TEMPORARY TABLE tmp_mailing_list_segment_list_member_map (
        list_segment_key                TEXT NOT NULL
        ,list_member_key                TEXT NOT NULL
        ,fk_mailing_list_segment_id     INTEGER NOT NULL
        ,fk_mailing_list_member_id      INTEGER NOT NULL
        ,tech_insert_function           TEXT NOT NULL
        ,tech_insert_utc_timestamp      BIGINT NOT NULL
        ,tech_row_hash                  TEXT NOT NULL
        ,tech_data_load_utc_timestamp   BIGINT NOT NULL
        ,tech_data_load_uuid            TEXT NOT NULL
        ,tech_deleted_in_source_system  BOOL NOT NULL
    );
    INSERT INTO tmp_mailing_list_segment_list_member_map (
        list_segment_key
        ,list_member_key
        ,fk_mailing_list_segment_id
        ,fk_mailing_list_member_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        list_segment_member.list_segment_id AS list_segment_key
        ,list_segment_member.unique_email_id || list_segment_member.list_id AS list_member_key
        ,core_input_list_segment.mailing_list_segment_id AS fk_mailing_list_segment_id
        ,core_input_list_member.mailing_list_member_id AS fk_mailing_list_member_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
            COALESCE(list_segment_member.list_segment_id::TEXT, '')
            || COALESCE(list_segment_member.unique_email_id::TEXT, '')
            || COALESCE(list_segment_member.list_id::TEXT, '')
        ) AS tech_row_hash
        ,list_segment_member.tech_data_load_utc_timestamp
        ,list_segment_member.tech_data_load_uuid
    FROM stage.mailchimp_list_segment_member_i AS list_segment_member
    JOIN core.mailing_list_segment_i AS core_input_list_segment ON core_input_list_segment.mailing_list_segment_key = list_segment_member.list_segment_id::TEXT
    JOIN core.mailing_list_member_i AS core_input_list_member ON core_input_list_member.mailing_list_member_key = list_segment_member.id || list_segment_member.list_id;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.list_segment_list_member_map_i (
        list_segment_key
        ,list_member_key
        ,fk_mailing_list_segment_id
        ,fk_mailing_list_member_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_mailing_list_segment_list_member_map.list_segment_key
        ,tmp_mailing_list_segment_list_member_map.list_member_key
        ,tmp_mailing_list_segment_list_member_map.fk_mailing_list_segment_id
        ,tmp_mailing_list_segment_list_member_map.fk_mailing_list_member_id
        ,tmp_mailing_list_segment_list_member_map.tech_insert_function
        ,tmp_mailing_list_segment_list_member_map.tech_insert_utc_timestamp
        ,tmp_mailing_list_segment_list_member_map.tech_deleted_in_source_system
        ,tmp_mailing_list_segment_list_member_map.tech_row_hash
        ,tmp_mailing_list_segment_list_member_map.tech_data_load_utc_timestamp
        ,tmp_mailing_list_segment_list_member_map.tech_data_load_uuid
    FROM tmp_mailing_list_segment_list_member_map;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_mailchimp_trg_mailing_list_i" id="Procedure_5ae4dec" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_mailchimp_trg_mailing_list_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Insert data from stage 'mailchimp_*' tables into core input table mailing_list_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-07-03 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ------------------------
    -- INSERT NULL RECORD --
    ------------------------
    INSERT INTO core.mailing_list_i (
        mailing_list_id
        ,mailing_list_key
        ,mailchimp_id
        ,mailchimp_id_web_id
        ,mailing_list_name
        ,notify_on_subscribe_email
        ,notify_on_unsubscribe_email
        ,fk_date_id_created_date
        ,created_timestamp
        ,subscribe_url_short
        ,subscribe_url_long
        ,visibility
        ,double_optin
        ,marketing_permissions
        ,member_count
        ,unsubscribe_count
        ,cleaned_count
        ,member_count_since_last_campaign
        ,unsubscribe_count_last_campaign
        ,cleaned_count_last_campaign
        ,campaign_count
        ,fk_date_id_last_sent_date
        ,campaign_last_sent_timestamp
        ,merge_field_count
        ,avg_sub_rate
        ,avg_unsub_rate
        ,target_sub_rate
        ,open_rate
        ,click_rate
        ,fk_date_id_last_sub_date
        ,last_sub_timestamp
        ,fk_date_id_last_unsub_date
        ,last_unsub_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        ,tech_deleted_in_source_system
        )
    VALUES (
         -1 -- mailing_list_id
        ,TEXT_NULL -- mailing_list_key
        ,TEXT_NULL-- mailchimp_id
        ,-1 -- mailchimp_id_web_id
        ,TEXT_NULL -- mailing_list_name
        ,TEXT_NULL -- notify_on_subscribe_email
        ,TEXT_NULL -- notify_on_unsubscribe_email
        ,-1 -- fk_date_id_created_date
        ,TIMESTAMP_NEVER -- created_timestamp
        ,TEXT_NULL -- subscribe_url_short
        ,TEXT_NULL -- subscribe_url_long
        ,TEXT_NULL -- visibility
        ,FALSE -- double_optin
        ,FALSE-- marketing_permissions
        ,-1 -- member_count
        ,-1 -- unsubscribe_count
        ,-1 -- cleaned_count
        ,-1 -- member_count_since_last_campaign
        ,-1 -- unsubscribe_count_last_campaign
        ,-1 -- cleaned_count_last_campaign
        ,-1 -- campaign_count
        ,-1 -- fk_date_id_last_sent_date
        ,TIMESTAMP_NEVER -- campaign_last_sent_timestamp
        ,-1-- merge_field_count
        ,-1-- avg_sub_rate
        ,-1-- avg_unsub_rate
        ,-1-- target_sub_rate
        ,-1-- open_rate
        ,-1-- click_rate
        ,-1 -- fk_date_id_last_sub_date
        ,TIMESTAMP_NEVER -- last_sub_timestamp
        ,-1 -- fk_date_id_last_unsub_date
        ,TIMESTAMP_NEVER -- last_unsub_timestamp
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
        ,FALSE -- tech_deleted_in_source_system
    ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_mailing_list_i;
    CREATE TEMPORARY TABLE tmp_mailing_list_i (
        mailing_list_key                    text NOT NULL
        ,mailchimp_id                       text NOT NULL
        ,mailchimp_id_web_id                integer NOT NULL
        ,mailing_list_name                  text NOT NULL
        ,notify_on_subscribe_email          text NOT NULL
        ,notify_on_unsubscribe_email        text NOT NULL
        ,fk_date_id_created_date            INTEGER NOT NULL
        ,created_timestamp                  TIMESTAMP WITH TIME ZONE NOT NULL
        ,subscribe_url_short                text
        ,subscribe_url_long                 text
        ,visibility                         text
        ,double_optin                       bool
        ,marketing_permissions              bool
        ,member_count                       integer NOT NULL
        ,unsubscribe_count                  integer NOT NULL
        ,cleaned_count                      integer
        ,member_count_since_last_campaign   integer
        ,unsubscribe_count_last_campaign    integer
        ,cleaned_count_last_campaign        integer
        ,campaign_count                     integer
        ,fk_date_id_last_sent_date          INTEGER NOT NULL
        ,campaign_last_sent_timestamp       TIMESTAMP WITH TIME ZONE NOT NULL
        ,merge_field_count                  integer
        ,avg_sub_rate                       real
        ,avg_unsub_rate                     real
        ,target_sub_rate                    real
        ,open_rate                          real
        ,click_rate                         real
        ,fk_date_id_last_sub_date           INTEGER NOT NULL
        ,last_sub_timestamp                 TIMESTAMP WITH TIME ZONE NOT NULL
        ,fk_date_id_last_unsub_date         INTEGER NOT NULL
        ,last_unsub_timestamp               TIMESTAMP WITH TIME ZONE NOT NULL
        ,tech_insert_function               text NOT NULL
        ,tech_insert_utc_timestamp          bigint  NOT NULL
        ,tech_row_hash                      text  NOT NULL
        ,tech_data_load_utc_timestamp       bigint  NOT NULL
        ,tech_data_load_uuid                text  NOT NULL
        ,tech_deleted_in_source_system      bool DEFAULT false NOT NULL
    );
    INSERT INTO tmp_mailing_list_i (
        mailing_list_key
        ,mailchimp_id
        ,mailchimp_id_web_id
        ,mailing_list_name
        ,notify_on_subscribe_email
        ,notify_on_unsubscribe_email
        ,fk_date_id_created_date
        ,created_timestamp
        ,subscribe_url_short
        ,subscribe_url_long
        ,visibility
        ,double_optin
        ,marketing_permissions
        ,member_count
        ,unsubscribe_count
        ,cleaned_count
        ,member_count_since_last_campaign
        ,unsubscribe_count_last_campaign
        ,cleaned_count_last_campaign
        ,campaign_count
        ,fk_date_id_last_sent_date
        ,campaign_last_sent_timestamp
        ,merge_field_count
        ,avg_sub_rate
        ,avg_unsub_rate
        ,target_sub_rate
        ,open_rate
        ,click_rate
        ,fk_date_id_last_sub_date
        ,last_sub_timestamp
        ,fk_date_id_last_unsub_date
        ,last_unsub_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
         mailing_list.id AS mailing_list_key
        ,mailing_list.id AS mailchimp_id
        ,mailing_list.web_id AS mailchimp_id_web_id
        ,mailing_list.name AS mailing_list_name
        ,mailing_list.notify_on_subscribe AS notify_on_subscribe_email
        ,mailing_list.notify_on_unsubscribe AS notify_on_unsubscribe_email
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(mailing_list.date_created), -1) AS fk_date_id_created_date
        ,CASE
            WHEN mailing_list.date_created = '' THEN TIMESTAMP_NEVER
            ELSE mailing_list.date_created::TIMESTAMP WITH TIME ZONE
        END AS created_timestamp
        ,mailing_list.subscribe_url_short AS subscribe_url_short
        ,mailing_list.subscribe_url_long AS subscribe_url_long
        ,mailing_list.visibility AS visibility
        ,mailing_list.double_optin AS double_optin
        ,mailing_list.marketing_permissions AS marketing_permissions
        ,mailing_list.stats_member_count AS member_count
        ,mailing_list.stats_unsubscribe_count AS unsubscribe_count
        ,mailing_list.stats_cleaned_count AS cleaned_count
        ,mailing_list.stats_member_count_since_send AS member_count_since_last_campaign
        ,mailing_list.stats_unsubscribe_count_since_send AS unsubscribe_count_last_campaign
        ,mailing_list.stats_cleaned_count_since_send AS cleaned_count_last_campaign
        ,mailing_list.stats_campaign_count AS campaign_count
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(mailing_list.stats_campaign_last_sent), -1) AS fk_date_id_last_sent_date
        ,CASE
            WHEN mailing_list.stats_campaign_last_sent = '' THEN TIMESTAMP_NEVER
            ELSE mailing_list.stats_campaign_last_sent::TIMESTAMP WITH TIME ZONE
        END AS campaign_last_sent_timestamp
        ,mailing_list.stats_merge_field_count AS merge_field_count
        ,mailing_list.stats_avg_sub_rate AS avg_sub_rate
        ,mailing_list.stats_avg_unsub_rate AS avg_unsub_rate
        ,mailing_list.stats_target_sub_rate AS target_sub_rate
        ,mailing_list.stats_open_rate AS open_rate
        ,mailing_list.stats_click_rate AS click_rate
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(mailing_list.stats_last_sub_date), -1) AS fk_date_id_last_sub_date
        ,CASE
            WHEN mailing_list.stats_last_sub_date = '' THEN TIMESTAMP_NEVER
            ELSE mailing_list.stats_last_sub_date::TIMESTAMP WITH TIME ZONE
        END AS last_sub_timestamp
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(mailing_list.stats_last_unsub_date), -1) AS fk_date_id_last_unsub_date
        ,CASE
            WHEN mailing_list.stats_last_unsub_date = '' THEN TIMESTAMP_NEVER
            ELSE mailing_list.stats_last_unsub_date::TIMESTAMP WITH TIME ZONE
        END AS last_unsub_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
            COALESCE(mailing_list.id, '')
            || COALESCE(mailing_list.web_id::TEXT, '')
            || COALESCE(mailing_list.name, '')
            || COALESCE(mailing_list.notify_on_subscribe, '')
            || COALESCE(mailing_list.notify_on_unsubscribe, '')
            || COALESCE(mailing_list.date_created, '')
            || COALESCE(mailing_list.subscribe_url_short, '')
            || COALESCE(mailing_list.subscribe_url_long, '')
            || COALESCE(mailing_list.visibility, '')
            || COALESCE(mailing_list.double_optin::TEXT, '')
            || COALESCE(mailing_list.marketing_permissions::TEXT, '')
            || COALESCE(mailing_list.stats_member_count::TEXT, '')
            || COALESCE(mailing_list.stats_unsubscribe_count::TEXT, '')
            || COALESCE(mailing_list.stats_cleaned_count::TEXT, '')
            || COALESCE(mailing_list.stats_member_count_since_send::TEXT, '')
            || COALESCE(mailing_list.stats_unsubscribe_count_since_send::TEXT, '')
            || COALESCE(mailing_list.stats_cleaned_count_since_send::TEXT, '')
            || COALESCE(mailing_list.stats_campaign_count::TEXT, '')
            || COALESCE(mailing_list.stats_campaign_last_sent, '')
            || COALESCE(mailing_list.stats_merge_field_count::TEXT, '')
            || COALESCE(mailing_list.stats_avg_sub_rate::TEXT, '')
            || COALESCE(mailing_list.stats_avg_unsub_rate::TEXT, '')
            || COALESCE(mailing_list.stats_target_sub_rate::TEXT, '')
            || COALESCE(mailing_list.stats_open_rate::TEXT, '')
            || COALESCE(mailing_list.stats_click_rate::TEXT, '')
            || COALESCE(mailing_list.stats_last_sub_date, '')
            || COALESCE(mailing_list.stats_last_unsub_date, '')
        ) AS tech_row_hash
        ,mailing_list.tech_data_load_utc_timestamp
        ,mailing_list.tech_data_load_uuid
    FROM stage.mailchimp_list_i AS mailing_list;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.mailing_list_i (
        mailing_list_key
        ,mailchimp_id
        ,mailchimp_id_web_id
        ,mailing_list_name
        ,notify_on_subscribe_email
        ,notify_on_unsubscribe_email
        ,fk_date_id_created_date
        ,created_timestamp
        ,subscribe_url_short
        ,subscribe_url_long
        ,visibility
        ,double_optin
        ,marketing_permissions
        ,member_count
        ,unsubscribe_count
        ,cleaned_count
        ,member_count_since_last_campaign
        ,unsubscribe_count_last_campaign
        ,cleaned_count_last_campaign
        ,campaign_count
        ,fk_date_id_last_sent_date
        ,campaign_last_sent_timestamp
        ,merge_field_count
        ,avg_sub_rate
        ,avg_unsub_rate
        ,target_sub_rate
        ,open_rate
        ,click_rate
        ,fk_date_id_last_sub_date
        ,last_sub_timestamp
        ,fk_date_id_last_unsub_date
        ,last_unsub_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_mailing_list_i.mailing_list_key
        ,tmp_mailing_list_i.mailchimp_id
        ,tmp_mailing_list_i.mailchimp_id_web_id
        ,tmp_mailing_list_i.mailing_list_name
        ,tmp_mailing_list_i.notify_on_subscribe_email
        ,tmp_mailing_list_i.notify_on_unsubscribe_email
        ,tmp_mailing_list_i.fk_date_id_created_date
        ,tmp_mailing_list_i.created_timestamp
        ,tmp_mailing_list_i.subscribe_url_short
        ,tmp_mailing_list_i.subscribe_url_long
        ,tmp_mailing_list_i.visibility
        ,tmp_mailing_list_i.double_optin
        ,tmp_mailing_list_i.marketing_permissions
        ,tmp_mailing_list_i.member_count
        ,tmp_mailing_list_i.unsubscribe_count
        ,tmp_mailing_list_i.cleaned_count
        ,tmp_mailing_list_i.member_count_since_last_campaign
        ,tmp_mailing_list_i.unsubscribe_count_last_campaign
        ,tmp_mailing_list_i.cleaned_count_last_campaign
        ,tmp_mailing_list_i.campaign_count
        ,tmp_mailing_list_i.fk_date_id_last_sent_date
        ,tmp_mailing_list_i.campaign_last_sent_timestamp
        ,tmp_mailing_list_i.merge_field_count
        ,tmp_mailing_list_i.avg_sub_rate
        ,tmp_mailing_list_i.avg_unsub_rate
        ,tmp_mailing_list_i.target_sub_rate
        ,tmp_mailing_list_i.open_rate
        ,tmp_mailing_list_i.click_rate
        ,tmp_mailing_list_i.fk_date_id_last_sub_date
        ,tmp_mailing_list_i.last_sub_timestamp
        ,tmp_mailing_list_i.fk_date_id_last_unsub_date
        ,tmp_mailing_list_i.last_unsub_timestamp
        ,tmp_mailing_list_i.tech_insert_function
        ,tmp_mailing_list_i.tech_insert_utc_timestamp
        ,tmp_mailing_list_i.tech_deleted_in_source_system
        ,tmp_mailing_list_i.tech_row_hash
        ,tmp_mailing_list_i.tech_data_load_utc_timestamp
        ,tmp_mailing_list_i.tech_data_load_uuid
    FROM tmp_mailing_list_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_mailchimp_trg_mailing_list_member_i" id="Procedure_5474a14" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_mailchimp_trg_mailing_list_member_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Insert data from stage 'mailchimp_*' tables into core input table mailing_list_member_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-07-03 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER DATE := (SELECT timestamp_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_mailing_list_member_i;
    CREATE TEMPORARY TABLE tmp_mailing_list_member_i (
        mailing_list_member_key         text  NOT NULL
        ,mailchimp_id                   text  NOT NULL
        ,email_address                  text  NOT NULL
        ,mailchimp_unique_email_id      text  NOT NULL
        ,status                         text  NOT NULL
        ,fk_party_id                    integer
        ,avg_open_rate                  real  NOT NULL
        ,avg_click_rate                 real  NOT NULL
        ,ip_address_signup              text
        ,fk_date_id_signup_date         integer NOT NULL
        ,timestamp_signup               timestamp with time zone NOT NULL
        ,ip_address_opt_in              text
        ,fk_date_id_opt_in_date         integer NOT NULL
        ,timestamp_opt_in               timestamp with time zone NOT NULL
        ,fk_date_id_last_changed_date   integer NOT NULL
        ,last_changed_timestamp         timestamp with time zone NOT NULL
        ,email_client                   text
        ,location_latitude              integer
        ,location_longitude             integer
        ,location_country_code          text
        ,fk_mailing_list_id             integer  NOT NULL
        ,tech_insert_function           text  NOT NULL
        ,tech_insert_utc_timestamp      bigint  NOT NULL
        ,tech_row_hash                  text  NOT NULL
        ,tech_data_load_utc_timestamp   bigint  NOT NULL
        ,tech_data_load_uuid            text  NOT NULL
        ,tech_deleted_in_source_system  bool NOT NULL
     );
    INSERT INTO tmp_mailing_list_member_i (
        mailing_list_member_key
        ,mailchimp_id
        ,email_address
        ,mailchimp_unique_email_id
        ,status
        ,fk_party_id
        ,avg_open_rate
        ,avg_click_rate
        ,ip_address_signup
        ,fk_date_id_signup_date
        ,timestamp_signup
        ,ip_address_opt_in
        ,fk_date_id_opt_in_date
        ,timestamp_opt_in
        ,fk_date_id_last_changed_date
        ,last_changed_timestamp
        ,email_client
        ,location_latitude
        ,location_longitude
        ,location_country_code
        ,fk_mailing_list_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        list_member.id || list_member.list_id AS mailing_list_member_key
        ,list_member.id AS mailchimp_id
        ,list_member.email_address AS email_address
        ,list_member.unique_email_id AS mailchimp_unique_email_id
        ,list_member.status AS status
        ,core_input_party.party_id AS fk_party_id
        ,list_member.stats_avg_open_rate AS avg_open_rate
        ,list_member.stats_avg_click_rate AS avg_click_rate
        ,list_member.ip_signup As ip_address_signup
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(list_member.timestamp_signup), -1) AS fk_date_id_signup_date
        ,CASE
            WHEN list_member.timestamp_signup <> '' THEN list_member.timestamp_signup::TIMESTAMP WITH TIME ZONE
            ELSE TIMESTAMP_NEVER
        END AS timestamp_signup
        ,list_member.ip_opt AS ip_address_opt_in
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(list_member.timestamp_opt), -1) AS fk_date_id_opt_in_date
        ,CASE
            WHEN list_member.timestamp_opt <> '' THEN list_member.timestamp_opt::TIMESTAMP WITH TIME ZONE
            ELSE TIMESTAMP_NEVER
        END AS timestamp_opt_in
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(list_member.last_changed), -1) AS fk_date_id_last_changed_date
        ,CASE
            WHEN list_member.last_changed <> '' THEN list_member.last_changed::TIMESTAMP WITH TIME ZONE
            ELSE TIMESTAMP_NEVER
        END AS last_changed_timestamp
        ,list_member.email_client AS email_client
        ,list_member.location_latitude AS location_latitude
        ,list_member.location_longitude AS location_longitude
        ,list_member.location_country_code AS location_country_code
        ,core_input_mailing_list.mailing_list_id AS fk_mailing_list_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
            COALESCE(email_address, '')
            || COALESCE(unique_email_id, '')
            || COALESCE(status, '')
            || COALESCE(stats_avg_open_rate::TEXT, '')
            || COALESCE(stats_avg_click_rate::TEXT, '')
            || COALESCE(ip_signup, '')
            || COALESCE(timestamp_signup, '')
            || COALESCE(ip_opt, '')
            || COALESCE(timestamp_opt, '')
            || COALESCE(last_changed, '')
            || COALESCE(email_client, '')
            || COALESCE(location_latitude::TEXT, '')
            || COALESCE(location_longitude::TEXT, '')
            || COALESCE(location_country_code, '')
            || COALESCE(list_id, '')
            || core_input_party.party_key
            || core_input_mailing_list.mailing_list_key
        ) AS tech_row_hash
        ,list_member.tech_data_load_utc_timestamp
        ,list_member.tech_data_load_uuid
    FROM stage.mailchimp_list_member_i AS list_member
    JOIN core.party_i AS core_input_party ON core_input_party.party_key = list_member.id || list_member.list_id
    JOIN core.mailing_list_i AS core_input_mailing_list ON core_input_mailing_list.mailing_list_key = list_member.list_id;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.mailing_list_member_i (
        mailing_list_member_key
        ,mailchimp_id
        ,email_address
        ,mailchimp_unique_email_id
        ,status
        ,fk_party_id
        ,avg_open_rate
        ,avg_click_rate
        ,ip_address_signup
        ,fk_date_id_signup_date
        ,timestamp_signup
        ,ip_address_opt_in
        ,fk_date_id_opt_in_date
        ,timestamp_opt_in
        ,fk_date_id_last_changed_date
        ,last_changed_timestamp
        ,email_client
        ,location_latitude
        ,location_longitude
        ,location_country_code
        ,fk_mailing_list_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_mailing_list_member_i.mailing_list_member_key
        ,tmp_mailing_list_member_i.mailchimp_id
        ,tmp_mailing_list_member_i.email_address
        ,tmp_mailing_list_member_i.mailchimp_unique_email_id
        ,tmp_mailing_list_member_i.status
        ,tmp_mailing_list_member_i.fk_party_id
        ,tmp_mailing_list_member_i.avg_open_rate
        ,tmp_mailing_list_member_i.avg_click_rate
        ,tmp_mailing_list_member_i.ip_address_signup
        ,tmp_mailing_list_member_i.fk_date_id_signup_date
        ,tmp_mailing_list_member_i.timestamp_signup
        ,tmp_mailing_list_member_i.ip_address_opt_in
        ,tmp_mailing_list_member_i.fk_date_id_opt_in_date
        ,tmp_mailing_list_member_i.timestamp_opt_in
        ,tmp_mailing_list_member_i.fk_date_id_last_changed_date
        ,tmp_mailing_list_member_i.last_changed_timestamp
        ,tmp_mailing_list_member_i.email_client
        ,tmp_mailing_list_member_i.location_latitude
        ,tmp_mailing_list_member_i.location_longitude
        ,tmp_mailing_list_member_i.location_country_code
        ,tmp_mailing_list_member_i.fk_mailing_list_id
        ,tmp_mailing_list_member_i.tech_insert_function
        ,tmp_mailing_list_member_i.tech_insert_utc_timestamp
        ,tmp_mailing_list_member_i.tech_deleted_in_source_system
        ,tmp_mailing_list_member_i.tech_row_hash
        ,tmp_mailing_list_member_i.tech_data_load_utc_timestamp
        ,tmp_mailing_list_member_i.tech_data_load_uuid
    FROM tmp_mailing_list_member_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_mailchimp_trg_mailing_list_segment_i" id="Procedure_23abf9a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_mailchimp_trg_mailing_list_segment_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Insert data from stage 'mailchimp_*' tables into core input table mailing_list_segment_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-07-14 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_mailing_list_segment;
    CREATE TEMPORARY TABLE tmp_mailing_list_segment (
        mailing_list_segment_key        TEXT NOT NULL
        ,segment_name                   TEXT NOT NULL
        ,mailchimp_id                   INTEGER
        ,segment_type                   TEXT
        ,fk_date_id_created_date        INTEGER NOT NULL
        ,created_timestamp              TIMESTAMP WITH TIME ZONE NOT NULL
        ,fk_date_id_last_updated_date   INTEGER NOT NULL
        ,last_updated_timestamp         TIMESTAMP WITH TIME ZONE NOT NULL
        ,segment_filter_options         JSONB
        ,fk_mailing_list_id             INTEGER NOT NULL
        ,tech_insert_function           TEXT  NOT NULL
        ,tech_insert_utc_timestamp      bigint  NOT NULL
        ,tech_row_hash                  TEXT  NOT NULL
        ,tech_data_load_utc_timestamp   bigint  NOT NULL
        ,tech_data_load_uuid            TEXT  NOT NULL
        ,tech_deleted_in_source_system  BOOL NOT NULL
     );
    INSERT INTO tmp_mailing_list_segment (
        mailing_list_segment_key
        ,segment_name
        ,mailchimp_id
        ,segment_type
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_updated_date
        ,last_updated_timestamp
        ,segment_filter_options
        ,fk_mailing_list_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        list_segment.id  AS mailing_list_segment_key
        ,list_segment.name AS segment_name
        ,list_segment.id AS mailchimp_id
        ,list_segment."type" AS segment_type
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(list_segment.created_at), -1) AS fk_date_id_created_date
        ,list_segment.created_at::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(list_segment.updated_at), -1) AS fk_date_id_last_updated_date
        ,list_segment.updated_at::TIMESTAMP WITH TIME ZONE AS last_updated_timestamp
        ,list_segment.options::JSONB AS segment_filter_options
        ,core_input_list.mailing_list_id AS fk_mailing_list_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
            COALESCE(list_segment.id::TEXT, '')
            || COALESCE(list_segment.name, '')
            || COALESCE(list_segment."type"::TEXT, '')
            || COALESCE(list_segment.created_at::TEXT, '')
            || COALESCE(list_segment.updated_at, '')
            || COALESCE(list_segment.options, '')
            || COALESCE(list_segment.list_id, '')
        ) AS tech_row_hash
        ,list_segment.tech_data_load_utc_timestamp
        ,list_segment.tech_data_load_uuid
    FROM stage.mailchimp_list_segment_i AS list_segment
    JOIN core.mailing_list_i AS core_input_list ON core_input_list.mailing_list_key = list_segment.list_id;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.mailing_list_segment_i (
        mailing_list_segment_key
        ,segment_name
        ,mailchimp_id
        ,segment_type
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_updated_date
        ,last_updated_timestamp
        ,segment_filter_options
        ,fk_mailing_list_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_mailing_list_segment.mailing_list_segment_key
        ,tmp_mailing_list_segment.segment_name
        ,tmp_mailing_list_segment.mailchimp_id
        ,tmp_mailing_list_segment.segment_type
        ,tmp_mailing_list_segment.fk_date_id_created_date
        ,tmp_mailing_list_segment.created_timestamp
        ,tmp_mailing_list_segment.fk_date_id_last_updated_date
        ,tmp_mailing_list_segment.last_updated_timestamp
        ,tmp_mailing_list_segment.segment_filter_options
        ,tmp_mailing_list_segment.fk_mailing_list_id
        ,tmp_mailing_list_segment.tech_insert_function
        ,tmp_mailing_list_segment.tech_insert_utc_timestamp
        ,tmp_mailing_list_segment.tech_deleted_in_source_system
        ,tmp_mailing_list_segment.tech_row_hash
        ,tmp_mailing_list_segment.tech_data_load_utc_timestamp
        ,tmp_mailing_list_segment.tech_data_load_uuid
    FROM tmp_mailing_list_segment;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_mailchimp_trg_party_i" id="Procedure_1298654" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_mailchimp_trg_party_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Insert data from stage 'mailchimp_member_i' table into core input table party_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-07-03 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_party_i;
    CREATE TEMPORARY TABLE tmp_party_i (
        party_key                       text  NOT NULL,
        full_name                       text  NOT NULL,
        short_name                      text  NOT NULL,
        fk_employee_id_last_modified_by integer  NOT NULL,
        fk_employee_id_created_by       integer  NOT NULL,
        fk_date_id_created_date         integer  NOT NULL,
        created_timestamp               timestamptz  NOT NULL,
        fk_date_id_last_modified_date   integer  NOT NULL,
        last_modified_timestamp         timestamptz  NOT NULL,
        tech_insert_function text       NOT NULL,
        tech_insert_utc_timestamp       bigint  NOT NULL,
        tech_row_hash                   text  NOT NULL,
        tech_data_load_utc_timestamp    bigint  NOT NULL,
        tech_data_load_uuid             text  NOT NULL,
        tech_deleted_in_source_system   bool NOT NULL
     );
    INSERT INTO tmp_party_i (
        party_key
        ,full_name
        ,short_name
        ,fk_employee_id_last_modified_by
        ,fk_employee_id_created_by
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_modified_date
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        list_member.id || list_member.list_id AS party_key
        ,list_member.merge_fields_fname || ' ' || merge_fields_lname AS full_name
        ,list_member.merge_fields_fname AS short_name
        ,-1 AS fk_employee_id_last_modified_by
        ,-1 AS fk_employee_id_created_by
        ,-1 AS fk_date_id_created_date
        ,TIMESTAMP_NEVER AS created_timestamp
        ,-1 AS fk_date_id_last_modified_date
        ,TIMESTAMP_NEVER AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
            COALESCE(list_member.merge_fields_fname, '')
            || COALESCE(list_member.merge_fields_lname, '')
            || COALESCE(list_member.list_id, '')
        ) AS tech_row_hash
        ,list_member.tech_data_load_utc_timestamp
        ,list_member.tech_data_load_uuid
    FROM stage.mailchimp_list_member_i AS list_member;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.party_i (
        party_key
        ,full_name
        ,short_name
        ,fk_employee_id_last_modified_by
        ,fk_employee_id_created_by
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_modified_date
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_party_i.party_key
        ,tmp_party_i.full_name
        ,tmp_party_i.short_name
        ,tmp_party_i.fk_employee_id_last_modified_by
        ,tmp_party_i.fk_employee_id_created_by
        ,tmp_party_i.fk_date_id_created_date
        ,tmp_party_i.created_timestamp
        ,tmp_party_i.fk_date_id_last_modified_date
        ,tmp_party_i.last_modified_timestamp
        ,tmp_party_i.tech_insert_function
        ,tmp_party_i.tech_insert_utc_timestamp
        ,tmp_party_i.tech_deleted_in_source_system
        ,tmp_party_i.tech_row_hash
        ,tmp_party_i.tech_data_load_utc_timestamp
        ,tmp_party_i.tech_data_load_uuid
    FROM tmp_party_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_ocean_trg_c_partner_list_i" id="Procedure_3fc7cd2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_ocean_trg_c_partner_list_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Insert data from stage 'ocean_*' tables into core input table partner_list_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_c_partner_list_i;
    CREATE TEMPORARY TABLE tmp_c_partner_list_i (
        partner_name                    TEXT NOT NULL
        ,is_tracked                     BOOL NOT NULL
        ,tech_insert_function           TEXT NOT NULL
        ,tech_insert_utc_timestamp      BIGINT NOT NULL
        ,tech_deleted_in_source_system  BOOL NOT NULL
        ,tech_row_hash                  TEXT NOT NULL
        ,tech_data_load_utc_timestamp   BIGINT NOT NULL
        ,tech_data_load_uuid            TEXT NOT NULL
    );
    INSERT INTO tmp_c_partner_list_i (
        partner_name
        ,is_tracked
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        partner_list.partner_name AS partner_name
        ,partner_list.is_tracked
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
            partner_list.partner_name::TEXT
            || partner_list.is_tracked::TEXT
        ) AS tech_row_hash
        ,partner_list.tech_data_load_utc_timestamp
        ,partner_list.tech_data_load_uuid
    FROM stage.ocean_partner_list_i AS partner_list;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.c_partner_list_i (
        partner_name
        ,is_tracked
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_c_partner_list_i.partner_name
        ,tmp_c_partner_list_i.is_tracked
        ,tmp_c_partner_list_i.tech_insert_function
        ,tmp_c_partner_list_i.tech_insert_utc_timestamp
        ,tmp_c_partner_list_i.tech_deleted_in_source_system
        ,tmp_c_partner_list_i.tech_row_hash
        ,tmp_c_partner_list_i.tech_data_load_utc_timestamp
        ,tmp_c_partner_list_i.tech_data_load_uuid
    FROM tmp_c_partner_list_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_ocean_trg_c_revenue_type_i" id="Procedure_5ba4fb4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_ocean_trg_c_revenue_type_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Insert data from stage 'ocean_*' tables into core input table revenue_type_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_c_revenue_type_i;
    CREATE TEMPORARY TABLE tmp_c_revenue_type_i (
        revenue_type_name               TEXT NOT NULL
        ,tech_insert_function           TEXT NOT NULL
        ,tech_insert_utc_timestamp      BIGINT NOT NULL
        ,tech_deleted_in_source_system  BOOL NOT NULL
        ,tech_row_hash                  TEXT NOT NULL
        ,tech_data_load_utc_timestamp   BIGINT NOT NULL
        ,tech_data_load_uuid            TEXT NOT NULL
    );
    INSERT INTO tmp_c_revenue_type_i (
        revenue_type_name
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        revenue_type.revenue_type AS revenue_type_name
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(revenue_type) AS tech_row_hash
        ,revenue_type.tech_data_load_utc_timestamp
        ,revenue_type.tech_data_load_uuid
    FROM stage.ocean_revenue_type_i AS revenue_type;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.c_revenue_type_i (
        revenue_type_name
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_c_revenue_type_i.revenue_type_name
        ,tmp_c_revenue_type_i.tech_insert_function
        ,tmp_c_revenue_type_i.tech_insert_utc_timestamp
        ,tmp_c_revenue_type_i.tech_deleted_in_source_system
        ,tmp_c_revenue_type_i.tech_row_hash
        ,tmp_c_revenue_type_i.tech_data_load_utc_timestamp
        ,tmp_c_revenue_type_i.tech_data_load_uuid
    FROM tmp_c_revenue_type_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_ocean_trg_sale_i" id="Procedure_477a0d3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_ocean_trg_sale_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Insert data from stage 'ocean_*' tables into core input table sale_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
USD_ALPHABETICAL_CODE TEXT := 'USD';
EUR_ALPHABETICAL_CODE TEXT := 'EUR';
CZK_ALPHABETICAL_CODE TEXT := 'CZK';
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_sale_i;
    CREATE TEMPORARY TABLE tmp_sale_i (
        sale_key                            TEXT NOT NULL
        ,fk_organization_id_customer        INTEGER NOT NULL
        ,fk_organization_id_seller          INTEGER NOT NULL
        ,fk_organization_id_reseller        INTEGER NOT NULL
        ,fk_party_id_sales_representative   INTEGER NOT NULL
        ,fk_revenue_type_id                 INTEGER NOT NULL
        ,fk_date_id_booking_date            INTEGER NOT NULL
        ,booking_date                       DATE NOT NULL
        ,payment_received                   boolean NOT NULL
        ,invoice                            TEXT NOT NULL
        ,usd_amount                         NUMERIC(10, 2) NOT NULL
        ,czk_amount                         NUMERIC(10, 2) NOT NULL
        ,eur_amount                         NUMERIC(10, 2) NOT NULL
        ,local_currency_amount              NUMERIC(10, 2) NOT NULL
        ,fk_currency_id_local_currency      INTEGER NOT NULL
        ,fk_date_id_revenue_start           INTEGER NOT NULL
        ,revenue_start_date                 TIMESTAMP WITH TIME ZONE NOT NULL
        ,fk_date_id_revenue_end             INTEGER NOT NULL
        ,revenue_end_date                   TIMESTAMP WITH TIME ZONE NOT NULL
        ,sale_comment                       TEXT NOT NULL
        ,tech_insert_function               TEXT NOT NULL
        ,tech_insert_utc_timestamp          BIGINT NOT NULL
        ,tech_deleted_in_source_system      BOOL NOT NULL
        ,tech_row_hash                      TEXT NOT NULL
        ,tech_data_load_utc_timestamp       BIGINT NOT NULL
        ,tech_data_load_uuid                TEXT NOT NULL
    );
    WITH
    last_known_czk_to_usd_exchange_rate AS (
        SELECT exchange_rate
        FROM core.c_exchange_rate_g
        WHERE fk_currency_id_counter_currency = (SELECT currency_id FROM core.c_currency_g WHERE alphabetical_code = USD_ALPHABETICAL_CODE)
            AND fk_currency_id_base_currency = (SELECT currency_id FROM core.c_currency_g WHERE alphabetical_code = CZK_ALPHABETICAL_CODE)
        ORDER BY fk_date_id DESC
        LIMIT 1
    )
    ,last_known_eur_to_usd_exchange_rate AS (
        SELECT exchange_rate
        FROM core.c_exchange_rate_g
        WHERE fk_currency_id_counter_currency = (SELECT currency_id FROM core.c_currency_g WHERE alphabetical_code = USD_ALPHABETICAL_CODE)
            AND fk_currency_id_base_currency = (SELECT currency_id FROM core.c_currency_g WHERE alphabetical_code = EUR_ALPHABETICAL_CODE)
        ORDER BY fk_date_id DESC
        LIMIT 1
    )
    ,last_known_czk_to_eur_exchange_rate AS (
        SELECT exchange_rate
        FROM core.c_exchange_rate_g
        WHERE fk_currency_id_counter_currency = (SELECT currency_id FROM core.c_currency_g WHERE alphabetical_code = EUR_ALPHABETICAL_CODE)
            AND fk_currency_id_base_currency = (SELECT currency_id FROM core.c_currency_g WHERE alphabetical_code = CZK_ALPHABETICAL_CODE)
        ORDER BY fk_date_id DESC
        LIMIT 1
    )
    ,last_known_usd_to_eur_exchange_rate AS (
        SELECT exchange_rate
        FROM core.c_exchange_rate_g
        WHERE fk_currency_id_counter_currency = (SELECT currency_id FROM core.c_currency_g WHERE alphabetical_code = EUR_ALPHABETICAL_CODE)
            AND fk_currency_id_base_currency = (SELECT currency_id FROM core.c_currency_g WHERE alphabetical_code = USD_ALPHABETICAL_CODE)
        ORDER BY fk_date_id DESC
        LIMIT 1
    )
    ,last_known_eur_to_czk_exchange_rate AS (
        SELECT exchange_rate
        FROM core.c_exchange_rate_g
        WHERE fk_currency_id_counter_currency = (SELECT currency_id FROM core.c_currency_g WHERE alphabetical_code = CZK_ALPHABETICAL_CODE)
            AND fk_currency_id_base_currency = (SELECT currency_id FROM core.c_currency_g WHERE alphabetical_code = EUR_ALPHABETICAL_CODE)
        ORDER BY fk_date_id DESC
        LIMIT 1
    )
    ,last_known_usd_to_czk_exchange_rate AS (
        SELECT exchange_rate
        FROM core.c_exchange_rate_g
        WHERE fk_currency_id_counter_currency = (SELECT currency_id FROM core.c_currency_g WHERE alphabetical_code = CZK_ALPHABETICAL_CODE)
            AND fk_currency_id_base_currency = (SELECT currency_id FROM core.c_currency_g WHERE alphabetical_code = USD_ALPHABETICAL_CODE)
        ORDER BY fk_date_id DESC
        LIMIT 1
    )
    INSERT INTO tmp_sale_i (
        sale_key
        ,fk_revenue_type_id
        ,fk_organization_id_customer
        ,fk_organization_id_seller
        ,fk_organization_id_reseller
        ,fk_party_id_sales_representative
        ,fk_date_id_booking_date
        ,booking_date
        ,usd_amount
        ,czk_amount
        ,eur_amount
        ,fk_currency_id_local_currency
        ,local_currency_amount
        ,invoice
        ,payment_received
        ,sale_comment
        ,fk_date_id_revenue_start
        ,revenue_start_date
        ,fk_date_id_revenue_end
        ,revenue_end_date
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        sale_report.sale_key AS sale_key
        ,input_revenue_type.revenue_type_id AS fk_revenue_type_id
        ,COALESCE(customer_organization.organization_id, -1) AS fk_organization_id_customer
        ,COALESCE(seller_organization.organization_id, -1) AS fk_organization_id_seller
        ,COALESCE(reseller_organization.organization_id, -1) AS fk_organization_id_reseller
        ,COALESCE(sales_representative_party.party_id, -1) AS fk_party_id_sales_representative
        ,(TO_CHAR(TO_DATE(sale_report.booking_date, 'DD.MM.YYYY'), 'YYYYMMDD'))::INTEGER AS fk_date_id_booking_date
        ,TO_DATE(sale_report.booking_date, 'DD.MM.YYYY') AS booking_date
        ,CASE
            WHEN sale_report.currency = USD_ALPHABETICAL_CODE THEN sale_report.amount
            WHEN local_to_usd_exchange_rate.exchange_rate IS NOT NULL THEN sale_report.amount * local_to_usd_exchange_rate.exchange_rate
            -- If we don't have the exchange_rate for a given date we use the last known exchange_rate
            WHEN sale_report.currency = CZK_ALPHABETICAL_CODE THEN sale_report.amount * (SELECT exchange_rate FROM last_known_czk_to_usd_exchange_rate)
            WHEN sale_report.currency = EUR_ALPHABETICAL_CODE THEN sale_report.amount * (SELECT exchange_rate FROM last_known_eur_to_usd_exchange_rate)
            ELSE NULL
        END AS usd_amount
        ,CASE
            WHEN sale_report.currency = CZK_ALPHABETICAL_CODE THEN sale_report.amount
            WHEN local_to_czk_exchange_rate.exchange_rate IS NOT NULL THEN sale_report.amount * local_to_czk_exchange_rate.exchange_rate
            -- If we don't have the exchange_rate for a given date we use the last known exchange_rate
            WHEN sale_report.currency = USD_ALPHABETICAL_CODE THEN sale_report.amount * (SELECT exchange_rate FROM last_known_usd_to_czk_exchange_rate)
            WHEN sale_report.currency = EUR_ALPHABETICAL_CODE THEN sale_report.amount * (SELECT exchange_rate FROM last_known_eur_to_czk_exchange_rate)
        END AS czk_amount
        ,CASE
            WHEN sale_report.currency = EUR_ALPHABETICAL_CODE THEN sale_report.amount
            WHEN local_to_eur_exchange_rate.exchange_rate IS NOT NULL THEN sale_report.amount * local_to_eur_exchange_rate.exchange_rate
            -- If we don't have the exchange_rate for a given date we use the last known exchange_rate
            WHEN sale_report.currency = USD_ALPHABETICAL_CODE THEN sale_report.amount * (SELECT exchange_rate FROM last_known_usd_to_eur_exchange_rate)
            WHEN sale_report.currency = CZK_ALPHABETICAL_CODE THEN sale_report.amount * (SELECT exchange_rate FROM last_known_czk_to_eur_exchange_rate)
        END AS eur_amount
        ,base_currency.currency_id AS fk_currency_id_local_currency
        ,sale_report.amount AS local_currency_amount
        ,tf_u_replace_empty_string_with_null_flag(sale_report.invoice) AS invoice
        ,sale_report.paid::BOOLEAN AS payment_received
        ,tf_u_replace_empty_string_with_null_flag(sale_report.trade_comment) AS sale_comment
        ,TO_CHAR(TO_DATE(sale_report.revenue_start, 'DD.MM.YYYY'), 'YYYYMMDD')::INTEGER AS fk_date_id_revenue_start
        ,TO_DATE(sale_report.revenue_start, 'DD.MM.YYYY') AS revenue_start_date
        ,CASE
            WHEN sale_report.revenue_end <> '' THEN (TO_CHAR(TO_DATE(sale_report.revenue_end, 'DD.MM.YYYY'), 'YYYYMMDD'))::INTEGER
            ELSE - 1
        END AS fk_date_id_revenue_end
        ,CASE
            WHEN sale_report.revenue_end <> '' THEN TO_DATE(sale_report.revenue_end, 'DD.MM.YYYY')
            ELSE NULL_DATE
        END AS revenue_end_date
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE::bool AS tech_deleted_in_source_system
        ,md5 (
            COALESCE(customer_organization.organization_key::TEXT, '')
            || COALESCE(reseller_organization.organization_key::TEXT, '')
            || COALESCE(sale_report.revenue_type::TEXT, '')
            || COALESCE(sale_report.invoice::TEXT, '')
            || COALESCE(sale_report.seller::TEXT, '')
            || COALESCE(sale_report.reseller::TEXT, '')
            || COALESCE(sale_report.sales_rep::TEXT, '')
            || COALESCE(sale_report.paid::TEXT, '')
            || COALESCE(sale_report.booking_date::TEXT, '')
            || COALESCE(sale_report.amount::TEXT, '')
            || COALESCE(sale_report.currency::TEXT, '')
            || COALESCE(sale_report.revenue_start::TEXT, '')
            || COALESCE(sale_report.revenue_end::TEXT, '')
            || COALESCE(sale_report.trade_comment::TEXT, '')
        ) AS tech_row_hash
        ,sale_report.tech_data_load_utc_timestamp
        ,sale_report.tech_data_load_uuid
    FROM stage.ocean_sales_report_i AS sale_report
    JOIN stage.ocean_seller_i AS seller ON seller.seller_code = sale_report.seller
    JOIN stage.ocean_organziation_to_crm_map_i AS customer_org_map ON customer_org_map.organization_name = sale_report.customer
    LEFT JOIN stage.ocean_sales_representative_i AS stage_sales_representative ON stage_sales_representative.sales_rep_code = sale_report.sales_rep
    LEFT JOIN core.party_i AS sales_representative_party ON sales_representative_party.party_key = 'PIPEDRIVE_EMPLOYEE_' || stage_sales_representative.crm_id
    LEFT JOIN stage.ocean_organziation_to_crm_map_i AS reseller_org_map ON reseller_org_map.organization_name = sale_report.reseller
    JOIN core.c_revenue_type_i AS input_revenue_type ON input_revenue_type.revenue_type_name = sale_report.revenue_type
    LEFT JOIN core.organization_i AS customer_organization ON customer_organization.pipedrive_id = customer_org_map.crm_id::TEXT
    LEFT JOIN core.organization_i AS reseller_organization ON reseller_organization.pipedrive_id = reseller_org_map.crm_id::TEXT
    LEFT JOIN core.organization_i AS seller_organization ON seller_organization.pipedrive_id = seller.crm_id::TEXT
    JOIN core.c_currency_g AS base_currency ON base_currency.alphabetical_code = sale_report.currency
    LEFT JOIN core.c_exchange_rate_g AS local_to_usd_exchange_rate ON local_to_usd_exchange_rate.fk_currency_id_base_currency = base_currency.currency_id
        AND (TO_CHAR(TO_DATE(sale_report.booking_date, 'DD.MM.YYYY'), 'YYYYMMDD'))::INTEGER = local_to_usd_exchange_rate.fk_date_id
        AND local_to_usd_exchange_rate.fk_currency_id_counter_currency = (SELECT currency_id FROM core.c_currency_g WHERE alphabetical_code = 'USD')
    LEFT JOIN core.c_exchange_rate_g AS local_to_eur_exchange_rate ON local_to_eur_exchange_rate.fk_currency_id_base_currency = base_currency.currency_id
        AND (TO_CHAR(TO_DATE(sale_report.booking_date, 'DD.MM.YYYY'), 'YYYYMMDD'))::INTEGER = local_to_eur_exchange_rate.fk_date_id
        AND local_to_eur_exchange_rate.fk_currency_id_counter_currency = (SELECT currency_id FROM core.c_currency_g WHERE alphabetical_code = 'EUR')
    LEFT JOIN core.c_exchange_rate_g AS local_to_czk_exchange_rate ON local_to_czk_exchange_rate.fk_currency_id_base_currency = base_currency.currency_id
        AND (TO_CHAR(TO_DATE(sale_report.booking_date, 'DD.MM.YYYY'), 'YYYYMMDD'))::INTEGER = local_to_czk_exchange_rate.fk_date_id
        AND local_to_czk_exchange_rate.fk_currency_id_counter_currency = (SELECT currency_id FROM core.c_currency_g WHERE alphabetical_code = 'CZK')
    LEFT JOIN stage.ocean_sales_representative_i AS sales_representative ON sale_report.sales_rep = sales_representative.sales_rep_code
    WHERE sale_report.error = FALSE
        AND customer_org_map.error = FALSE
        AND (
            reseller_org_map.error IS NULL
            OR reseller_org_map.error = FALSE
            );
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.sale_i (
        sale_key
        ,fk_revenue_type_id
        ,fk_organization_id_customer
        ,fk_organization_id_seller
        ,fk_organization_id_reseller
        ,fk_party_id_sales_representative
        ,fk_date_id_booking_date
        ,booking_date
        ,usd_amount
        ,czk_amount
        ,eur_amount
        ,fk_currency_id_local_currency
        ,local_currency_amount
        ,invoice
        ,payment_received
        ,sale_comment
        ,fk_date_id_revenue_start
        ,revenue_start_date
        ,fk_date_id_revenue_end
        ,revenue_end_date
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        tmp_sale_i.sale_key
        ,tmp_sale_i.fk_revenue_type_id
        ,tmp_sale_i.fk_organization_id_customer
        ,tmp_sale_i.fk_organization_id_seller
        ,tmp_sale_i.fk_organization_id_reseller
        ,tmp_sale_i.fk_party_id_sales_representative
        ,tmp_sale_i.fk_date_id_booking_date
        ,tmp_sale_i.booking_date
        ,tmp_sale_i.usd_amount
        ,tmp_sale_i.czk_amount
        ,tmp_sale_i.eur_amount
        ,tmp_sale_i.fk_currency_id_local_currency
        ,tmp_sale_i.local_currency_amount
        ,tmp_sale_i.invoice
        ,tmp_sale_i.payment_received
        ,tmp_sale_i.sale_comment
        ,tmp_sale_i.fk_date_id_revenue_start
        ,tmp_sale_i.revenue_start_date
        ,tmp_sale_i.fk_date_id_revenue_end
        ,tmp_sale_i.revenue_end_date
        ,tmp_sale_i.tech_insert_function
        ,tmp_sale_i.tech_insert_utc_timestamp
        ,tmp_sale_i.tech_deleted_in_source_system
        ,tmp_sale_i.tech_row_hash
        ,tmp_sale_i.tech_data_load_utc_timestamp
        ,tmp_sale_i.tech_data_load_uuid
    FROM tmp_sale_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_pipedrive_trg_activity_i" id="Procedure_2153f7c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_pipedrive_trg_activity_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ==============================================================================================
    DESCRIPTION:        Insert data from stage 'pipedrive_*' tables into core input table activity_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-11-12 (YYYY-MM-DD)
    NOTE:
    ==============================================================================================
    */
DECLARE
PIPEDRIVE_PREFIX TEXT := 'PIPEDRIVE_';
DEAL_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'DEAL_';
ORGANIZATION_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'ORGANIZATION_';
PERSON_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'PERSON_';
CONTACT_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'CONTACT_';
EMPLOYEE_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'EMPLOYEE_';
ACTIVITY_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'ACTIVITY_';
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.activity_i (
        activity_id
        ,activity_key
        ,fk_employee_id_created_by
        ,fk_organization_id
        ,fk_contact_id
        ,fk_deal_id
        ,fk_date_id_due_date
        ,due_timestamp
        ,marked_as_done
        ,fk_date_id_marked_as_done
        ,fk_date_id_created_date
        ,marked_as_done_timestamp
        ,subject
        ,fk_employee_id_assigned_to
        ,note
        ,created_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    VALUES (
       -1 -- activity_id
        ,TEXT_NULL -- activity_key
        ,-1 -- fk_employee_id_created_by
        ,-1 -- fk_organization_id
        ,-1 -- fk_contact_id
        ,-1 -- fk_deal_id
        ,-1 -- fk_date_id_due_date
        ,TIMESTAMP_NEVER -- due_timestamp
        ,FALSE -- marked_as_done
        ,-1 -- fk_date_id_marked_as_done
        ,-1 -- fk_date_id_created_date
        ,TIMESTAMP_NEVER -- marked_as_done_timestamp
        ,TEXT_NULL -- subject
        ,-1 -- fk_employee_id_assigned_to
        ,TEXT_NULL -- note
        ,TIMESTAMP_NEVER -- created_timestamp
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_activity_i cascade;
    CREATE TEMPORARY TABLE tmp_activity_i (
        activity_key                    text NOT NULL,
        fk_employee_id_created_by       integer NOT NULL,
        fk_organization_id              integer NOT NULL,
        fk_contact_id                   integer NOT NULL,
        fk_deal_id                      integer NOT NULL,
        fk_date_id_due_date             integer NOT NULL,
        due_timestamp                   timestamp with time zone NOT NULL,
        fk_date_id_marked_as_done       integer NOT NULL,
        fk_date_id_created_date         integer NOT NULL,
        marked_as_done                  bool NOT NULL,
        marked_as_done_timestamp        timestamp with time zone NOT NULL,
        subject                         text NOT NULL,
        fk_employee_id_assigned_to      integer NOT NULL,
        note                            text NOT NULL,
        created_timestamp               timestamp with time zone NOT NULL,
        tech_insert_function            text NOT NULL,
        tech_insert_utc_timestamp       bigint NOT NULL,
        tech_row_hash                   text NOT NULL,
        tech_data_load_utc_timestamp    bigint NOT NULL,
        tech_data_load_uuid             text NOT NULL,
        tech_deleted_in_source_system   bool NOT NULL
    );
    INSERT INTO tmp_activity_i (
        activity_key
        ,fk_employee_id_created_by
        ,fk_organization_id
        ,fk_contact_id
        ,fk_deal_id
        ,fk_date_id_due_date
        ,due_timestamp
        ,marked_as_done
        ,fk_date_id_marked_as_done
        ,fk_date_id_created_date
        ,marked_as_done_timestamp
        ,subject
        ,fk_employee_id_assigned_to
        ,note
        ,created_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        ACTIVITY_KEY_PREFIX || pipedrive_activity.id AS activity_key
        ,COALESCE(core_employee_created_by.employee_id, -1) AS fk_employee_id_created_by
        ,COALESCE(core_organization.organization_id, -1) AS fk_organization_id
        ,COALESCE(core_contact.contact_id, -1) AS fk_contact_id
        ,COALESCE(core_deal.deal_id, -1) AS fk_deal_id
        ,CASE
            WHEN pipedrive_activity.due_date <> '' THEN TO_CHAR(TO_DATE(pipedrive_activity.due_date, 'YYYY-MM-DD'), 'YYYYMMDD')::INTEGER
            ELSE -1
        END AS fk_date_id_due_date
        ,(pipedrive_activity.due_date || '+00')::TIMESTAMP WITH TIME ZONE AS due_timestamp
        ,pipedrive_activity.done AS marked_as_done
        ,CASE
            WHEN pipedrive_activity.marked_as_done_time <> '' THEN TO_CHAR(TO_DATE(pipedrive_activity.marked_as_done_time, 'YYYY-MM-DD'), 'YYYYMMDD')::INTEGER
            ELSE -1
        END AS fk_date_id_marked_as_done
        ,CASE
            WHEN pipedrive_activity.add_time <> '' THEN TO_CHAR(TO_DATE(pipedrive_activity.add_time, 'YYYY-MM-DD'), 'YYYYMMDD')::INTEGER
            ELSE -1
        END AS fk_date_id_created_date
        ,(pipedrive_activity.add_time || '+00')::TIMESTAMP WITH TIME ZONE AS marked_as_done_timestamp
        ,pipedrive_activity.subject AS subject
        ,COALESCE(core_employee_assigned_to.employee_id, -1) AS fk_employee_id_assigned_to
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_activity.note) AS note
        ,(pipedrive_activity.add_time || '+00')::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,NOT pipedrive_activity.active_flag AS tech_deleted_in_source_system
        ,md5(
            COALESCE(pipedrive_activity.created_by_user_id::TEXT, '')
            || COALESCE(pipedrive_activity.org_id::TEXT, '')
            || COALESCE(pipedrive_activity.person_id::TEXT, '')
            || COALESCE(pipedrive_activity.deal_id::TEXT, '')
            || COALESCE(pipedrive_activity.due_date::TEXT, '')
            || COALESCE(pipedrive_activity.marked_as_done_time::TEXT, '')
            || COALESCE(pipedrive_activity.done::TEXT, '')
            || COALESCE(pipedrive_activity.add_time::TEXT, '')
            || COALESCE(pipedrive_activity.subject::TEXT, '')
            || COALESCE(pipedrive_activity.assigned_to_user_id::TEXT, '')
            || COALESCE(pipedrive_activity.note::TEXT, '')
        ) AS tech_row_hash
        ,pipedrive_activity.tech_data_load_utc_timestamp
        ,pipedrive_activity.tech_data_load_uuid
    FROM stage.pipedrive_activity_i AS pipedrive_activity
    LEFT JOIN core.organization_i AS core_organization ON core_organization.organization_key = ORGANIZATION_KEY_PREFIX || pipedrive_activity.org_id
    LEFT JOIN core.contact_i AS core_contact ON core_contact.contact_key = CONTACT_KEY_PREFIX || pipedrive_activity.person_id
    LEFT JOIN core.deal_i AS core_deal ON core_deal.deal_key = DEAL_KEY_PREFIX || pipedrive_activity.deal_id
    LEFT JOIN core.employee_i AS core_employee_created_by ON core_employee_created_by.employee_key = EMPLOYEE_KEY_PREFIX || pipedrive_activity.created_by_user_id
    LEFT JOIN core.employee_i AS core_employee_assigned_to ON core_employee_assigned_to.employee_key = EMPLOYEE_KEY_PREFIX || pipedrive_activity.assigned_to_user_id;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.activity_i (
        activity_key
        ,fk_employee_id_created_by
        ,fk_organization_id
        ,fk_contact_id
        ,fk_deal_id
        ,fk_date_id_due_date
        ,due_timestamp
        ,marked_as_done
        ,fk_date_id_marked_as_done
        ,fk_date_id_created_date
        ,marked_as_done_timestamp
        ,subject
        ,fk_employee_id_assigned_to
        ,note
        ,created_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        tmp_activity_i.activity_key
        ,tmp_activity_i.fk_employee_id_created_by
        ,tmp_activity_i.fk_organization_id
        ,tmp_activity_i.fk_contact_id
        ,tmp_activity_i.fk_deal_id
        ,tmp_activity_i.fk_date_id_due_date
        ,tmp_activity_i.due_timestamp
        ,tmp_activity_i.marked_as_done
        ,tmp_activity_i.fk_date_id_marked_as_done
        ,tmp_activity_i.fk_date_id_created_date
        ,tmp_activity_i.marked_as_done_timestamp
        ,tmp_activity_i.subject
        ,tmp_activity_i.fk_employee_id_assigned_to
        ,tmp_activity_i.note
        ,tmp_activity_i.created_timestamp
        ,tmp_activity_i.tech_insert_function
        ,tmp_activity_i.tech_insert_utc_timestamp
        ,tmp_activity_i.tech_deleted_in_source_system
        ,tmp_activity_i.tech_row_hash
        ,tmp_activity_i.tech_data_load_utc_timestamp
        ,tmp_activity_i.tech_data_load_uuid
    FROM tmp_activity_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_pipedrive_trg_contact_i" id="Procedure_33168b8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_pipedrive_trg_contact_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ==============================================================================================
    DESCRIPTION:        Insert data from stage 'pipedrive_*' tables into core input table contact_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-10-26 (YYYY-MM-DD)
    NOTE:
    ==============================================================================================
    */
DECLARE 
PIPEDRIVE_PREFIX TEXT := 'PIPEDRIVE_';
ORGANIZATION_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'ORGANIZATION_';
PERSON_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'PERSON_';
CONTACT_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'CONTACT_';
EMPLOYEE_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'EMPLOYEE_';
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.contact_i (
        contact_id
        ,contact_key
        ,phone_number
        ,email_address
        ,location_full
        ,location_city
        ,location_country
        ,location_region
        ,fk_organization_id
        ,fk_party_id
        ,fk_employee_id_owner
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_updated_date
        ,last_updated_timestamp
        ,pipedrive_id
        ,pipedrive_label
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    VALUES (
        -1 -- contact_id
        ,TEXT_NULL -- contact_key
        ,TEXT_NULL -- phone_number
        ,TEXT_NULL -- email_address
        ,TEXT_NULL -- location_full
        ,TEXT_NULL -- location_city
        ,TEXT_NULL -- location_country
        ,TEXT_NULL -- location_region
        ,-1 -- fk_organization_id
        ,-1 -- fk_party_id
        ,-1 -- fk_employee_id_owner
        ,-1 -- fk_date_id_created_date
        ,TIMESTAMP_NEVER -- created_timestamp
        ,-1 -- fk_date_id_last_updated_date
        ,TIMESTAMP_NEVER -- last_updated_timestamp
        ,TEXT_NULL -- pipedrive_id
        ,TEXT_NULL -- pipedrive_label
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_contact_i cascade;
    CREATE TEMPORARY TABLE tmp_contact_i (
        contact_key                         TEXT  NOT NULL
        ,phone_number                       TEXT
        ,email_address                      TEXT
        ,location_full                      TEXT
        ,location_city                      TEXT
        ,location_country                   TEXT
        ,location_region                    TEXT
        ,fk_party_id                        INTEGER  NOT NULL
        ,fk_employee_id_owner               INTEGER  NOT NULL
        ,fk_organization_id                 INTEGER  NOT NULL
        ,fk_date_id_created_date            INTEGER  NOT NULL
        ,created_timestamp                  TIMESTAMP WITH TIME ZONE  NOT NULL
        ,fk_date_id_last_updated_date       INTEGER  NOT NULL
        ,last_updated_timestamp             TIMESTAMP WITH TIME ZONE  NOT NULL
        ,pipedrive_id                       TEXT  NOT NULL
        ,pipedrive_label                    TEXT
        ,tech_insert_function               TEXT  NOT NULL
        ,tech_insert_utc_timestamp          BIGINT  NOT NULL
        ,tech_row_hash                      TEXT  NOT NULL
        ,tech_data_load_utc_timestamp       BIGINT  NOT NULL
        ,tech_data_load_uuid                TEXT  NOT NULL
        ,tech_deleted_in_source_system      BOOL DEFAULT FALSE NOT NULL
    );
    INSERT INTO tmp_contact_i (
        contact_key
        ,phone_number
        ,email_address
        ,location_full
        ,location_city
        ,location_country
        ,location_region
        ,fk_organization_id
        ,fk_party_id
        ,fk_employee_id_owner
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_updated_date
        ,last_updated_timestamp
        ,pipedrive_id
        ,pipedrive_label
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        CONTACT_KEY_PREFIX || pipedrive_person.id AS contact_key
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_person.phone_1_value) AS phone_number
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_person.email_1_value) AS email_address
        ,CASE
            WHEN pipedrive_person.location_formatted_address <> '' THEN pipedrive_person.location_formatted_address
            ELSE tf_u_replace_empty_string_with_null_flag(pipedrive_person.location)
        END AS location_full
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_person.location_locality) AS location_city
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_person.location_country) AS location_country
        ,tf_u_replace_empty_string_with_null_flag(iso_country_list.region) AS location_region
        ,COALESCE(core_organization.organization_id, -1) AS fk_organization_id
        ,contact_party.party_id AS fk_party_id
        ,employee.employee_id AS fk_employee_id_owner
        ,tf_u_convert_iso_8601_to_yyyymmdd_integer(add_time) AS fk_date_id_created_date
        ,(pipedrive_person.add_time || '+00')::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,tf_u_convert_iso_8601_to_yyyymmdd_integer(update_time) AS fk_date_id_last_updated_date
        ,(pipedrive_person.update_time || '+00')::TIMESTAMP WITH TIME ZONE AS last_updated_timestamp
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_person.id::TEXT) AS pipedrive_id
        ,tf_u_replace_empty_string_with_null_flag(person_label.label) AS pipedrive_label
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,NOT pipedrive_person.active_flag AS tech_deleted_in_source_system
        ,md5(
            COALESCE(pipedrive_person.phone_1_value::TEXT, '')
            || COALESCE(pipedrive_person.email_1_value::TEXT, '')
            || COALESCE(pipedrive_person.location_formatted_address::TEXT, '')
            || COALESCE(pipedrive_person.location_locality::TEXT, '')
            || COALESCE(pipedrive_person.location_country::TEXT, '')
            || COALESCE(pipedrive_person.org_id::TEXT, '')
            || COALESCE(pipedrive_person.id::TEXT, '')
            || COALESCE(pipedrive_person.label::TEXT, '')
        ) AS tech_row_hash
        ,pipedrive_person.tech_data_load_utc_timestamp
        ,pipedrive_person.tech_data_load_uuid
    FROM stage.pipedrive_person_i AS pipedrive_person
    LEFT JOIN stage.pipedrive_person_label_options_i AS person_label ON person_label.id = pipedrive_person.label
    LEFT JOIN core.organization_i AS core_organization ON core_organization.organization_key = ORGANIZATION_KEY_PREFIX || pipedrive_person.org_id
    LEFT JOIN core.party_i AS contact_party ON contact_party.party_key = PERSON_KEY_PREFIX || pipedrive_person.id
    LEFT JOIN core.employee_i AS employee ON employee.employee_key = EMPLOYEE_KEY_PREFIX || pipedrive_person.owner_id
    LEFT JOIN core.c_contry_name_map_g AS country_name_map ON country_name_map.google_country_name = pipedrive_person.location_country
    LEFT JOIN core.iso_3166_country_list_i AS iso_country_list ON iso_country_list.country_name = COALESCE(country_name_map.iso_3166_country_name, pipedrive_person.location_country);
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.contact_i (
        contact_key
        ,phone_number
        ,email_address
        ,location_full
        ,location_city
        ,location_country
        ,location_region
        ,fk_organization_id
        ,fk_party_id
        ,fk_employee_id_owner
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_updated_date
        ,last_updated_timestamp
        ,pipedrive_id
        ,pipedrive_label
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT 
        tmp_contact_i.contact_key
        ,tmp_contact_i.phone_number
        ,tmp_contact_i.email_address
        ,tmp_contact_i.location_full
        ,tmp_contact_i.location_city
        ,tmp_contact_i.location_country
        ,tmp_contact_i.location_region
        ,tmp_contact_i.fk_organization_id
        ,tmp_contact_i.fk_party_id
        ,tmp_contact_i.fk_employee_id_owner
        ,tmp_contact_i.fk_date_id_created_date
        ,tmp_contact_i.created_timestamp
        ,tmp_contact_i.fk_date_id_last_updated_date
        ,tmp_contact_i.last_updated_timestamp
        ,tmp_contact_i.pipedrive_id
        ,tmp_contact_i.pipedrive_label
        ,tmp_contact_i.tech_insert_function
        ,tmp_contact_i.tech_insert_utc_timestamp
        ,tmp_contact_i.tech_deleted_in_source_system
        ,tmp_contact_i.tech_row_hash
        ,tmp_contact_i.tech_data_load_utc_timestamp
        ,tmp_contact_i.tech_data_load_uuid
    FROM tmp_contact_i;
    
    RETURN 0;
    
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_pipedrive_trg_deal_change_log_i" id="Procedure_4f22bc6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_pipedrive_trg_deal_change_log_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ==============================================================================================
    DESCRIPTION:        Insert data from stage 'pipedrive_*' tables into core input table deal_change_log_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-10-26 (YYYY-MM-DD)
    NOTE:
    ==============================================================================================
    */
DECLARE 
PIPEDRIVE_PREFIX TEXT := 'PIPEDRIVE_';
ORGANIZATION_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'ORGANIZATION_';
PERSON_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'PERSON_';
CONTACT_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'CONTACT_';
EMPLOYEE_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'EMPLOYEE_';
DEAL_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'DEAL_';
DEAL_CHANGE_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'DEAL_CHANGE_';
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.deal_change_log_i (
        deal_change_log_id
        ,deal_change_log_key
        ,field
        ,old_value
        ,new_value
        ,fk_deal_id
        ,fk_employee_id
        ,fk_date_id_log_date
        ,log_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    VALUES (
        -1 -- deal_change_log_id
        ,TEXT_NULL -- deal_change_log_key
        ,TEXT_NULL -- field
        ,TEXT_NULL -- old_value
        ,TEXT_NULL -- new_value
        ,-1 -- fk_deal_id
        ,-1 -- fk_employee_id
        ,-1 -- fk_date_id_log_date
        ,TIMESTAMP_NEVER -- log_timestamp
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_deal_change_log_i cascade;
    CREATE TEMPORARY TABLE tmp_deal_change_log_i (
        deal_change_log_key             TEXT NOT NULL,
        field                           TEXT NOT NULL,
        old_value                       TEXT NOT NULL,
        new_value                       TEXT NOT NULL,
        fk_deal_id                      INTEGER NOT NULL,
        fk_employee_id                  INTEGER NOT NULL,
        fk_date_id_log_date             INTEGER NOT NULL,
        log_timestamp                   TIMESTAMP WITH TIME ZONE NOT NULL,
        tech_insert_function            TEXT NOT NULL,
        tech_insert_utc_timestamp       BIGINT NOT NULL,
        tech_row_hash                   TEXT NOT NULL,
        tech_data_load_utc_timestamp    BIGINT NOT NULL,
        tech_data_load_uuid             TEXT NOT NULL,
        tech_deleted_in_source_system   BOOL NOT NULL
     );
    INSERT INTO tmp_deal_change_log_i (
        deal_change_log_key
        ,field
        ,old_value
        ,new_value
        ,fk_deal_id
        ,fk_employee_id
        ,fk_date_id_log_date
        ,log_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        DEAL_CHANGE_KEY_PREFIX || pipedrive_change_log.id AS deal_change_log_key
        ,pipedrive_change_log.field_key AS field
        ,COALESCE(pipedrive_change_log.additional_data_old_value_formatted, tf_u_replace_empty_string_with_null_flag(pipedrive_change_log.old_value)) AS old_value
        ,COALESCE(pipedrive_change_log.additional_data_new_value_formatted, tf_u_replace_empty_string_with_null_flag(pipedrive_change_log.new_value)) AS new_value        
        ,core_deal.deal_id AS fk_deal_id
        ,core_employee.employee_id AS fk_employee_id
        ,tf_u_convert_iso_8601_to_yyyymmdd_integer(pipedrive_change_log.timestamp) AS fk_date_id_log_date
        ,(pipedrive_change_log.timestamp || '+00')::TIMESTAMP WITH TIME ZONE AS log_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
            COALESCE(pipedrive_change_log.field_key::TEXT, '')
            || COALESCE(pipedrive_change_log.additional_data_old_value_formatted::TEXT, '')
            || COALESCE(pipedrive_change_log.old_value::TEXT, '')
            || COALESCE(pipedrive_change_log.additional_data_new_value_formatted::TEXT, '')
            || COALESCE(pipedrive_change_log.new_value::TEXT, '')
            || COALESCE(pipedrive_change_log.timestamp::TEXT, '')
        ) AS tech_row_hash
        ,pipedrive_change_log.tech_data_load_utc_timestamp
        ,pipedrive_change_log.tech_data_load_uuid
    FROM stage.pipedrive_deal_deal_change_i AS pipedrive_change_log
    LEFT JOIN core.deal_i AS core_deal ON core_deal.deal_key = DEAL_KEY_PREFIX || pipedrive_change_log.item_id
    LEFT JOIN core.employee_i AS core_employee ON core_employee.employee_key = EMPLOYEE_KEY_PREFIX || pipedrive_change_log.user_id;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.deal_change_log_i (
        deal_change_log_key
        ,field
        ,old_value
        ,new_value
        ,fk_deal_id
        ,fk_employee_id
        ,fk_date_id_log_date
        ,log_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT 
        tmp_deal_change_log_i.deal_change_log_key
        ,tmp_deal_change_log_i.field
        ,tmp_deal_change_log_i.old_value
        ,tmp_deal_change_log_i.new_value
        ,tmp_deal_change_log_i.fk_deal_id
        ,tmp_deal_change_log_i.fk_employee_id
        ,tmp_deal_change_log_i.fk_date_id_log_date
        ,tmp_deal_change_log_i.log_timestamp
        ,tmp_deal_change_log_i.tech_insert_function
        ,tmp_deal_change_log_i.tech_insert_utc_timestamp
        ,tmp_deal_change_log_i.tech_deleted_in_source_system
        ,tmp_deal_change_log_i.tech_row_hash
        ,tmp_deal_change_log_i.tech_data_load_utc_timestamp
        ,tmp_deal_change_log_i.tech_data_load_uuid
    FROM tmp_deal_change_log_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_pipedrive_trg_deal_contact_map_i" id="Procedure_5f0e162" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_pipedrive_trg_deal_contact_map_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ==============================================================================================
    DESCRIPTION:        Insert data from stage 'pipedrive_*' tables into core input table deal_contact_map_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-11-01 (YYYY-MM-DD)
    NOTE:
    ==============================================================================================
    */
DECLARE 
PIPEDRIVE_PREFIX TEXT := 'PIPEDRIVE_';
ORGANIZATION_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'ORGANIZATION_';
PERSON_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'PERSON_';
CONTACT_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'CONTACT_';
EMPLOYEE_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'EMPLOYEE_';
DEAL_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'DEAL_';
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text; 
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_deal_contact_map_i cascade;
    CREATE TEMPORARY TABLE tmp_deal_contact_map_i ( 
        deal_key                         TEXT NOT NULL
        ,contact_key                     TEXT NOT NULL
        ,fk_deal_id                      INTEGER NOT NULL
        ,fk_contact_id                   INTEGER NOT NULL
        ,tech_insert_function            TEXT NOT NULL
        ,tech_insert_utc_timestamp       BIGINT NOT NULL
        ,tech_row_hash                   TEXT NOT NULL
        ,tech_data_load_utc_timestamp    BIGINT NOT NULL
        ,tech_data_load_uuid             TEXT NOT NULL
        ,tech_deleted_in_source_system   BOOL NOT NULL
    );
    INSERT INTO tmp_deal_contact_map_i (
        deal_key
        ,contact_key
        ,fk_deal_id
        ,fk_contact_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        core_deal.deal_key AS deal_key
        ,core_contact.contact_key AS contact_key
        ,core_deal.deal_id AS fk_deal_id
        ,core_contact.contact_id AS fk_deal_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(           
            COALESCE(pipedrive_deal.id::TEXT, '')
            || COALESCE(pipedrive_deal.person_id::TEXT, '')
        ) AS tech_row_hash
        ,pipedrive_deal.tech_data_load_utc_timestamp
        ,pipedrive_deal.tech_data_load_uuid
    FROM stage.pipedrive_deal_i AS pipedrive_deal
    JOIN core.deal_i AS core_deal ON core_deal.deal_key = DEAL_KEY_PREFIX || pipedrive_deal.id
    JOIN core.contact_i AS core_contact ON core_contact.contact_key = CONTACT_KEY_PREFIX || pipedrive_deal.person_id
    UNION ALL
    SELECT
        core_deal.deal_key AS deal_key
        ,core_contact.contact_key AS contact_key
        ,core_deal.deal_id AS fk_deal_id
        ,core_contact.contact_id AS fk_deal_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(           
            COALESCE(stage_deal_contact_map.deal_id::TEXT, '')
            || COALESCE(stage_deal_contact_map.participant_person_id::TEXT, '')
        ) AS tech_row_hash
        ,pipedrive_deal.tech_data_load_utc_timestamp
        ,pipedrive_deal.tech_data_load_uuid
    FROM stage.pipedrive_deal_i AS pipedrive_deal
    JOIN stage.pipedrive_deal_participants_i AS stage_deal_contact_map ON stage_deal_contact_map.deal_id = pipedrive_deal.id
    JOIN core.deal_i AS core_deal ON core_deal.deal_key = DEAL_KEY_PREFIX || stage_deal_contact_map.deal_id
    JOIN core.contact_i AS core_contact ON core_contact.contact_key = CONTACT_KEY_PREFIX || stage_deal_contact_map.participant_person_id
    WHERE pipedrive_deal.person_id IS NOT NULL
        AND stage_deal_contact_map.participant_person_id != pipedrive_deal.person_id;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.deal_contact_map_i (
        deal_key
        ,contact_key
        ,fk_deal_id
        ,fk_contact_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT 
        tmp_deal_contact_map_i.deal_key
        ,tmp_deal_contact_map_i.contact_key
        ,tmp_deal_contact_map_i.fk_deal_id
        ,tmp_deal_contact_map_i.fk_contact_id
        ,tmp_deal_contact_map_i.tech_insert_function
        ,tmp_deal_contact_map_i.tech_insert_utc_timestamp
        ,tmp_deal_contact_map_i.tech_deleted_in_source_system
        ,tmp_deal_contact_map_i.tech_row_hash
        ,tmp_deal_contact_map_i.tech_data_load_utc_timestamp
        ,tmp_deal_contact_map_i.tech_data_load_uuid
    FROM tmp_deal_contact_map_i;
    RETURN 0;
    
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_pipedrive_trg_deal_i" id="Procedure_5af424b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_pipedrive_trg_deal_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ==============================================================================================
    DESCRIPTION:        Insert data from stage 'pipedrive_*' tables into core input table deal_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-10-26 (YYYY-MM-DD)
    NOTE:
    ==============================================================================================
    */
DECLARE 
PIPEDRIVE_PREFIX TEXT := 'PIPEDRIVE_';
ORGANIZATION_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'ORGANIZATION_';
PERSON_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'PERSON_';
CONTACT_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'CONTACT_';
EMPLOYEE_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'EMPLOYEE_';
DEAL_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'DEAL_';
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.deal_i (
        deal_id
        ,deal_key
        ,title
        ,stage
        ,fk_issue_id
        ,fk_contact_id
        ,fk_organization_id
        ,fk_employee_id_owner
        ,usd_value
        ,fk_currency_id_deal_currency
        ,local_currency_value
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_updated_date
        ,last_updated_timestamp
        ,fk_date_id_closed_date
        ,closed_timestamp
        ,pipedrive_id
        ,status
        ,pipeline
        ,fk_date_id_won_date
        ,won_timestamp
        ,fk_date_id_lost_date
        ,lost_timestamp
        ,fk_date_id_expected_close_date
        ,expected_close_date
        ,industry
        ,deal_source
        ,deal_source_detail
        ,region
        ,reason_lost
        ,resulting_state
        ,category
        ,country
        ,vtiger_key
        ,partner_identified_by
        ,partner_qualified_by
        ,partner_poc_done_by
        ,partner_closed_by
        ,partner_resold_by
        ,partner_owned_by
        ,partner_supported_by
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    VALUES (
        -1 -- deal_id
        ,TEXT_NULL -- deal_key
        ,TEXT_NULL -- title
        ,TEXT_NULL -- stage
        ,-1 -- fk_issue_id
        ,-1 -- fk_contact_id
        ,-1 -- fk_organization_id
        ,-1 -- fk_employee_id_owner
        ,-1 -- usd_value
        ,-1 -- fk_currency_id_deal_currency
        ,-1 -- local_currency_value
        ,-1 -- fk_date_id_created_date
        ,TIMESTAMP_NEVER -- created_timestamp
        ,-1 -- fk_date_id_last_updated_date
        ,TIMESTAMP_NEVER -- last_updated_timestamp
        ,-1 -- fk_date_id_closed_date
        ,TIMESTAMP_NEVER -- closed_timestamp
        ,TEXT_NULL -- pipedrive_id
        ,TEXT_NULL -- status
        ,TEXT_NULL -- pipeline
        ,-1 -- fk_date_id_won_date
        ,TIMESTAMP_NEVER -- won_timestamp
        ,-1 -- fk_date_id_lost_date
        ,TIMESTAMP_NEVER -- lost_timestamp
        ,-1 -- fk_date_id_expected_close_date
        ,TIMESTAMP_NEVER -- expected_close_date
        ,TEXT_NULL -- industry
        ,TEXT_NULL -- deal_source
        ,TEXT_NULL -- deal_source_detail
        ,TEXT_NULL -- region
        ,TEXT_NULL -- reason_lost
        ,TEXT_NULL -- resulting_state
        ,TEXT_NULL -- category
        ,TEXT_NULL -- country
        ,TEXT_NULL -- vtiger_key
        ,TEXT_NULL -- partner_identified_by
        ,TEXT_NULL -- partner_qualified_by
        ,TEXT_NULL -- partner_poc_done_by
        ,TEXT_NULL -- partner_closed_by
        ,TEXT_NULL -- partner_resold_by
        ,TEXT_NULL -- partner_owned_by
        ,TEXT_NULL -- partner_supported_by
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_deal_i cascade;
    CREATE TEMPORARY TABLE tmp_deal_i (
        deal_key                             TEXT NOT NULL
        ,title                               TEXT NOT NULL
        ,stage                               TEXT NOT NULL
        ,usd_value                           INTEGER NOT NULL
        ,fk_currency_id_deal_currency        INTEGER NOT NULL
        ,local_currency_value                INTEGER NOT NULL
        ,fk_date_id_created_date             INTEGER  NOT NULL
        ,created_timestamp                   TIMESTAMP WITH TIME ZONE NOT NULL
        ,fk_date_id_last_updated_date        INTEGER  NOT NULL
        ,last_updated_timestamp              TIMESTAMP WITH TIME ZONE NOT NULL
        ,fk_date_id_closed_date              INTEGER  NOT NULL
        ,closed_timestamp                    TIMESTAMP WITH TIME ZONE
        ,pipedrive_id                        TEXT NOT NULL
        ,status                              TEXT NOT NULL
        ,pipeline                            TEXT NOT NULL
        ,fk_date_id_won_date                 INTEGER  NOT NULL
        ,won_timestamp                       TIMESTAMP WITH TIME ZONE
        ,fk_date_id_lost_date                INTEGER  NOT NULL
        ,lost_timestamp                      TIMESTAMP WITH TIME ZONE
        ,fk_date_id_expected_close_date      INTEGER  NOT NULL
        ,expected_close_date                 DATE  NOT NULL
        ,industry                            TEXT  NOT NULL
        ,deal_source                         TEXT  NOT NULL
        ,deal_source_detail                  TEXT  NOT NULL
        ,region                              TEXT  NOT NULL
        ,reason_lost                         TEXT  NOT NULL
        ,resulting_state                     TEXT  NOT NULL
        ,fk_issue_id                         INTEGER NOT NULL
        ,fk_contact_id                       INTEGER NOT NULL
        ,fk_organization_id                  INTEGER NOT NULL
        ,fk_employee_id_owner                INTEGER NOT NULL
        ,category                            TEXT  NOT NULL
        ,country                             TEXT  NOT NULL
        ,partner_identified_by               TEXT  NOT NULL
        ,partner_qualified_by                TEXT  NOT NULL
        ,partner_poc_done_by                 TEXT  NOT NULL
        ,partner_closed_by                   TEXT  NOT NULL
        ,partner_resold_by                   TEXT  NOT NULL
        ,partner_owned_by                    TEXT  NOT NULL
        ,partner_supported_by                TEXT  NOT NULL
        ,vtiger_key                          TEXT  NOT NULL
        ,tech_insert_function                TEXT  NOT NULL
        ,tech_insert_utc_timestamp           BIGINT NOT NULL
        ,tech_row_hash                       TEXT NOT NULL
        ,tech_data_load_utc_timestamp        BIGINT NOT NULL
        ,tech_data_load_uuid                 TEXT NOT NULL
        ,tech_deleted_in_source_system       BOOL NOT NULL
     );
    INSERT INTO tmp_deal_i (
        deal_key
        ,title
        ,stage
        ,usd_value
        ,fk_currency_id_deal_currency
        ,local_currency_value
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_updated_date
        ,last_updated_timestamp
        ,fk_date_id_closed_date
        ,closed_timestamp
        ,pipedrive_id
        ,status
        ,pipeline
        ,fk_date_id_won_date
        ,won_timestamp
        ,fk_date_id_lost_date
        ,lost_timestamp
        ,fk_date_id_expected_close_date
        ,expected_close_date
        ,industry
        ,deal_source
        ,deal_source_detail
        ,region
        ,reason_lost
        ,resulting_state
        ,fk_issue_id
        ,fk_contact_id
        ,fk_organization_id
        ,fk_employee_id_owner
        ,category
        ,country
        ,partner_identified_by
        ,partner_qualified_by
        ,partner_poc_done_by
        ,partner_closed_by
        ,partner_resold_by
        ,partner_owned_by
        ,partner_supported_by
        ,vtiger_key
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        DEAL_KEY_PREFIX || pipedrive_deal.id AS deal_key
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_deal.title) AS title
        ,tf_u_replace_empty_string_with_null_flag(deal_stage.name) AS stage
        ,CASE 
            WHEN pipedrive_deal.currency = 'USD' THEN pipedrive_deal."value"
            ELSE local_currency_to_usd_exchange_rate.exchange_rate * pipedrive_deal."value"
        END AS usd_value
        ,base_currency.currency_id AS fk_currency_id_deal_currency
        ,COALESCE(pipedrive_deal."value", 0) AS local_currency_value
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(pipedrive_deal.add_time), -1) AS fk_date_id_created_date
        ,COALESCE((pipedrive_deal.add_time || ' +00')::TIMESTAMP WITH TIME ZONE, TIMESTAMP_NEVER) AS created_timestamp
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(pipedrive_deal.update_time), -1) AS fk_date_id_last_updated_date
        ,COALESCE((pipedrive_deal.update_time || ' +00')::TIMESTAMP WITH TIME ZONE, TIMESTAMP_NEVER) AS last_updated_timestamp
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(pipedrive_deal.close_time), -1) AS fk_date_id_closed_date
        ,COALESCE((pipedrive_deal.close_time || ' +00')::TIMESTAMP WITH TIME ZONE, TIMESTAMP_NEVER) AS closed_timestamp
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_deal.id::TEXT) AS pipedrive_id
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_deal.status) AS status
        ,tf_u_replace_empty_string_with_null_flag(deal_pipeline.name) AS pipeline
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(pipedrive_deal.won_time), -1) AS fk_date_id_won_date
        ,COALESCE((pipedrive_deal.won_time || ' +00')::TIMESTAMP WITH TIME ZONE, TIMESTAMP_NEVER) AS won_timestamp
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(pipedrive_deal.lost_time), -1) AS fk_date_id_lost_date
        ,COALESCE((pipedrive_deal.lost_time || ' +00')::TIMESTAMP WITH TIME ZONE, TIMESTAMP_NEVER) AS lost_timestamp        
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(pipedrive_deal.expected_close_date), -1) AS fk_date_id_expected_close_date
        ,COALESCE((pipedrive_deal.expected_close_date || ' +00')::TIMESTAMP WITH TIME ZONE, TIMESTAMP_NEVER) AS expected_close_date
        ,tf_u_replace_empty_string_with_null_flag(deal_industry.label) AS industry
        ,tf_u_replace_empty_string_with_null_flag(deal_source.label) AS deal_source
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_deal.deal_source_detail) AS deal_source_detail
        ,tf_u_replace_empty_string_with_null_flag(deal_region.label) AS region
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_deal.lost_reason) AS reason_lost
        ,tf_u_replace_empty_string_with_null_flag(deal_resulting_state.label) AS resulting_state
        ,COALESCE(jira_issue.issue_id, -1) AS fk_issue_id
        ,COALESCE(core_contact.contact_id, -1) AS fk_contact_id
        ,COALESCE(core_organization.organization_id, -1) AS fk_organization_id
        ,core_employee.employee_id AS fk_employee_id_owner
        ,tf_u_replace_empty_string_with_null_flag(deal_category.label) AS category
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_deal.country_country) AS country
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_deal.partner_identified_by) AS partner_identified_by
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_deal.partner_qualified_by) AS partner_qualified_by
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_deal.partner_poc_done_by) AS partner_poc_done_by
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_deal.partner_closed_by) AS partner_closed_by
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_deal.partner_resold_by) AS partner_resold_by
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_deal.partner_owned_by) AS partner_owned_by
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_deal.partner_supported_by) AS partner_supported_by
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_deal.vtiger_id) AS vtiger_key
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
            COALESCE(pipedrive_deal.title::TEXT, '')
            || COALESCE(pipedrive_deal."value"::TEXT, '')
            || COALESCE(pipedrive_deal.stage_id::TEXT, '')
            || COALESCE(pipedrive_deal.org_id::TEXT, '')
            || COALESCE(pipedrive_deal.person_id::TEXT, '')
            || COALESCE(pipedrive_deal.close_time::TEXT, '')
            || COALESCE(pipedrive_deal.status::TEXT, '')
            || COALESCE(pipedrive_deal.pipeline_id::TEXT, '')
            || COALESCE(pipedrive_deal.won_time::TEXT, '')
            || COALESCE(pipedrive_deal.lost_time::TEXT, '')
            || COALESCE(pipedrive_deal.lost_reason::TEXT, '')
            || COALESCE(pipedrive_deal.expected_close_date::TEXT, '')
            || COALESCE(pipedrive_deal.industry::TEXT, '')
            || COALESCE(pipedrive_deal.deal_source::TEXT, '')
            || COALESCE(pipedrive_deal.deal_source_detail::TEXT, '')
            || COALESCE(pipedrive_deal.region::TEXT, '')
            || COALESCE(pipedrive_deal.reason_lost::TEXT, '')
            || COALESCE(pipedrive_deal.resulting_state::TEXT, '')
            || COALESCE(pipedrive_deal.jira_issue_key::TEXT, '')
            || COALESCE(pipedrive_deal.category::TEXT, '')
            || COALESCE(pipedrive_deal.country_country::TEXT, '')
            || COALESCE(pipedrive_deal.partner_identified_by::TEXT, '')
            || COALESCE(pipedrive_deal.partner_qualified_by::TEXT, '')
            || COALESCE(pipedrive_deal.partner_poc_done_by::TEXT, '')
            || COALESCE(pipedrive_deal.partner_closed_by::TEXT, '')
            || COALESCE(pipedrive_deal.partner_resold_by::TEXT, '')
            || COALESCE(pipedrive_deal.partner_owned_by::TEXT, '')
            || COALESCE(pipedrive_deal.partner_supported_by::TEXT, '')
        ) AS tech_row_hash
        ,pipedrive_deal.tech_data_load_utc_timestamp
        ,pipedrive_deal.tech_data_load_uuid
    FROM stage.pipedrive_deal_i AS pipedrive_deal
    LEFT JOIN core.c_currency_g AS base_currency ON base_currency.alphabetical_code = pipedrive_deal.currency
    LEFT JOIN core.c_exchange_rate_g AS local_currency_to_usd_exchange_rate ON local_currency_to_usd_exchange_rate.fk_currency_id_base_currency = base_currency.currency_id
        AND local_currency_to_usd_exchange_rate.fk_date_id = to_char(NOW() - '1 week'::INTERVAL, 'YYYYMMDD')::INTEGER
        AND local_currency_to_usd_exchange_rate.fk_currency_id_counter_currency = (SELECT currency_id FROM core.c_currency_g WHERE alphabetical_code = 'USD')
    LEFT JOIN stage.pipedrive_stage_i AS deal_stage ON deal_stage.id = pipedrive_deal.stage_id
    LEFT JOIN stage.pipedrive_pipeline_i AS deal_pipeline ON deal_pipeline.id = pipedrive_deal.pipeline_id
    LEFT JOIN stage.pipedrive_deal_industry_options_i AS deal_industry ON deal_industry.id = pipedrive_deal.industry
    LEFT JOIN stage.pipedrive_deal_deal_source_options_i AS deal_source ON deal_source.id = pipedrive_deal.deal_source
    LEFT JOIN stage.pipedrive_deal_region_options_i AS deal_region ON deal_region.id = pipedrive_deal.region
    LEFT JOIN stage.pipedrive_deal_reason_lost_options_i AS deal_reason_lost ON deal_reason_lost.id = pipedrive_deal.reason_lost
    LEFT JOIN stage.pipedrive_deal_resulting_state_options_i AS deal_resulting_state ON deal_resulting_state.id = pipedrive_deal.resulting_state
    LEFT JOIN stage.pipedrive_deal_category_options_i AS deal_category ON deal_category.id = pipedrive_deal.category
    LEFT JOIN core.issue_i AS jira_issue ON jira_issue.jira_key = pipedrive_deal.jira_issue_key
    LEFT JOIN stage.pipedrive_person_i AS pipedrive_person ON pipedrive_person.id = pipedrive_deal.person_id
    LEFT JOIN stage.pipedrive_person_label_options_i AS person_label ON person_label.id = pipedrive_person.label
    LEFT JOIN core.organization_i AS core_organization ON core_organization.organization_key = ORGANIZATION_KEY_PREFIX || pipedrive_deal.org_id
    LEFT JOIN core.contact_i AS core_contact ON core_contact.contact_key = CONTACT_KEY_PREFIX || pipedrive_deal.person_id
    LEFT JOIN core.employee_i AS core_employee ON core_employee.employee_key = EMPLOYEE_KEY_PREFIX || pipedrive_deal.user_id;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.deal_i (
        deal_key
        ,title
        ,stage
        ,usd_value
        ,fk_currency_id_deal_currency
        ,local_currency_value
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_updated_date
        ,last_updated_timestamp
        ,fk_date_id_closed_date
        ,closed_timestamp
        ,pipedrive_id
        ,status
        ,pipeline
        ,fk_date_id_won_date
        ,won_timestamp
        ,fk_date_id_lost_date
        ,lost_timestamp
        ,fk_date_id_expected_close_date
        ,expected_close_date
        ,industry
        ,deal_source
        ,deal_source_detail
        ,region
        ,reason_lost
        ,resulting_state
        ,fk_issue_id
        ,fk_contact_id
        ,fk_organization_id
        ,fk_employee_id_owner
        ,category
        ,country
        ,partner_identified_by
        ,partner_qualified_by
        ,partner_poc_done_by
        ,partner_closed_by
        ,partner_resold_by
        ,partner_owned_by
        ,partner_supported_by
        ,vtiger_key
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT 
        tmp_deal_i.deal_key
        ,tmp_deal_i.title
        ,tmp_deal_i.stage
        ,tmp_deal_i.usd_value
        ,tmp_deal_i.fk_currency_id_deal_currency
        ,tmp_deal_i.local_currency_value
        ,tmp_deal_i.fk_date_id_created_date
        ,tmp_deal_i.created_timestamp
        ,tmp_deal_i.fk_date_id_last_updated_date
        ,tmp_deal_i.last_updated_timestamp
        ,tmp_deal_i.fk_date_id_closed_date
        ,tmp_deal_i.closed_timestamp
        ,tmp_deal_i.pipedrive_id
        ,tmp_deal_i.status
        ,tmp_deal_i.pipeline
        ,tmp_deal_i.fk_date_id_won_date
        ,tmp_deal_i.won_timestamp
        ,tmp_deal_i.fk_date_id_lost_date
        ,tmp_deal_i.lost_timestamp
        ,tmp_deal_i.fk_date_id_expected_close_date
        ,tmp_deal_i.expected_close_date
        ,tmp_deal_i.industry
        ,tmp_deal_i.deal_source
        ,tmp_deal_i.deal_source_detail
        ,tmp_deal_i.region
        ,tmp_deal_i.reason_lost
        ,tmp_deal_i.resulting_state
        ,tmp_deal_i.fk_issue_id
        ,tmp_deal_i.fk_contact_id
        ,tmp_deal_i.fk_organization_id
        ,tmp_deal_i.fk_employee_id_owner
        ,tmp_deal_i.category
        ,tmp_deal_i.country
        ,tmp_deal_i.partner_identified_by
        ,tmp_deal_i.partner_qualified_by
        ,tmp_deal_i.partner_poc_done_by
        ,tmp_deal_i.partner_closed_by
        ,tmp_deal_i.partner_resold_by
        ,tmp_deal_i.partner_owned_by
        ,tmp_deal_i.partner_supported_by
        ,tmp_deal_i.vtiger_key
        ,tmp_deal_i.tech_insert_function
        ,tmp_deal_i.tech_insert_utc_timestamp
        ,tmp_deal_i.tech_deleted_in_source_system
        ,tmp_deal_i.tech_row_hash
        ,tmp_deal_i.tech_data_load_utc_timestamp
        ,tmp_deal_i.tech_data_load_uuid
    FROM tmp_deal_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_pipedrive_trg_employee_i" id="Procedure_2c57a27" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_pipedrive_trg_employee_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ==============================================================================================
    DESCRIPTION:        Insert data from stage 'pipedrive_*' tables into core input table employee_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-10-25 (YYYY-MM-DD)
    NOTE:
    ==============================================================================================
    */
DECLARE 
EMPLOYEE_KEY_PREFIX TEXT := 'PIPEDRIVE_EMPLOYEE_';
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.employee_i (
        employee_id
        ,employee_key
        ,full_name
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,fk_date_id_created_date
        ,created_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    VALUES ( 
        -1 -- employee_id
        ,TEXT_NULL -- employee_key
        ,TEXT_NULL-- full_name
        ,TEXT_NULL -- email
        ,TEXT_NULL -- secondary_email
        ,TEXT_NULL -- phone
        ,TEXT_NULL -- mobile_phone
        ,-1 -- fk_date_id_created_date
        ,TIMESTAMP_NEVER -- created_timestamp
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_employee_i cascade;
    CREATE TEMPORARY TABLE tmp_employee_i (
        employee_key                    TEXT PRIMARY KEY
        ,full_name                      TEXT NOT NULL
        ,email                          TEXT NOT NULL
        ,secondary_email                TEXT NOT NULL
        ,phone                          TEXT NOT NULL
        ,mobile_phone                   TEXT NOT NULL
        ,fk_date_id_created_date        INTEGER NOT NULL
        ,created_timestamp              TIMESTAMP WITH TIME ZONE NOT NULL
        ,tech_insert_function           TEXT NOT NULL
        ,tech_insert_utc_timestamp      BIGINT NOT NULL
        ,tech_deleted_in_source_system  BOOL NOT NULL
        ,tech_row_hash                  TEXT NOT NULL
        ,tech_data_load_utc_timestamp   BIGINT NOT NULL
        ,tech_data_load_uuid            TEXT NOT NULL
    );
    INSERT INTO tmp_employee_i (
        employee_key
        ,full_name
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,fk_date_id_created_date
        ,created_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        EMPLOYEE_KEY_PREFIX || pipedrive_user.id AS employee_key
        ,pipedrive_user.name AS full_name
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_user.email) AS email
        ,tf_u_replace_empty_string_with_null_flag(NULL) AS secondary_email
        ,tf_u_replace_empty_string_with_null_flag(NULL) AS phone
        ,tf_u_replace_empty_string_with_null_flag(NULL) AS mobile_phone
        ,tf_u_convert_iso_8601_to_yyyymmdd_integer(pipedrive_user.created) AS fk_date_id_created_date
        ,(pipedrive_user.created || ' ' || 'UTC')::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
        COALESCE(pipedrive_user.name, '')
        || COALESCE(pipedrive_user.email, '')
        || COALESCE(pipedrive_user.active_flag::TEXT, '')
        ) AS tech_row_hash
        ,pipedrive_user.tech_data_load_utc_timestamp
        ,pipedrive_user.tech_data_load_uuid
    FROM stage.pipedrive_user_i AS pipedrive_user;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.employee_i (
        employee_key
        ,full_name
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,fk_date_id_created_date
        ,created_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT 
        tmp_employee_i.employee_key
        ,tmp_employee_i.full_name
        ,tmp_employee_i.email
        ,tmp_employee_i.secondary_email
        ,tmp_employee_i.phone
        ,tmp_employee_i.mobile_phone
        ,tmp_employee_i.fk_date_id_created_date
        ,tmp_employee_i.created_timestamp
        ,tmp_employee_i.tech_insert_function
        ,tmp_employee_i.tech_insert_utc_timestamp
        ,tmp_employee_i.tech_deleted_in_source_system
        ,tmp_employee_i.tech_row_hash
        ,tmp_employee_i.tech_data_load_utc_timestamp
        ,tmp_employee_i.tech_data_load_uuid
    FROM tmp_employee_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_pipedrive_trg_mail_message_i" id="Procedure_358d40d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_pipedrive_trg_mail_message_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Insert data from stage 'pipedrive_*' tables into core input table mail_message_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-11-13 (YYYY-MM-DD)
    NOTE:               
    ===========================================================================================================
    */
DECLARE
PERSON_KEY_PREFIX TEXT := 'PIPEDRIVE_PERSON_';
CONTACT_KEY_PREFIX TEXT := 'PIPEDRIVE_CONTACT_';
ORGANIZATION_KEY_PREFIX TEXT := 'PIPEDRIVE_ORGANIZATION_';
DEAL_KEY_PREFIX TEXT := 'PIPEDRIVE_DEAL_';
EMPLOYEE_KEY_PREFIX TEXT := 'PIPEDRIVE_EMPLOYEE_';
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack TEXT;
FUNCTION_NAME TEXT;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::TEXT;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.mail_message_i (
        mail_message_id
        ,mail_message_key
        ,fk_deal_id
        ,fk_date_id_sent_date
        ,sent_timestamp
        ,from_email_address
        ,fk_contact_id_from
        ,to_email_address
        ,fk_contact_id_to
        ,cc_email_address
        ,fk_contact_id_cc
        ,bcc_email_address
        ,fk_contact_id_bcc
        ,body_url
        ,fk_employee_id
        ,subject
        ,body_snippet
        ,read_flag
        ,pipedrive_mail_message_id
        ,pipedrive_mail_thread_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    VALUES (
        -1 -- mail_message_id
        ,TEXT_NULL -- mail_message_key
        ,-1 -- fk_deal_id
        ,-1 -- fk_date_id_sent_date
        ,TIMESTAMP_NEVER -- sent_timestamp
        ,TEXT_NULL -- from_email_address
        ,-1 -- fk_contact_id_from
        ,TEXT_NULL -- to_email_address
        ,-1 -- fk_contact_id_to
        ,TEXT_NULL -- cc_email_address
        ,-1 -- fk_contact_id_cc
        ,TEXT_NULL -- bcc_email_address
        ,-1 -- fk_contact_id_bcc
        ,TEXT_NULL -- body_url
        ,-1 -- fk_employee_id
        ,TEXT_NULL -- subject
        ,TEXT_NULL -- body_snippet
        ,FALSE -- read_flag
        ,-1 -- pipedrive_mail_message_id
        ,-1 -- pipedrive_mail_thread_id
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_mail_message_i;
    CREATE TEMPORARY TABLE tmp_mail_message_i ( 	
        mail_message_key                TEXT  NOT NULL,
        fk_deal_id                      INTEGER  NOT NULL,
        fk_date_id_sent_date            INTEGER  NOT NULL,
        sent_timestamp                  TIMESTAMP WITH TIME ZONE  NOT NULL,
        from_email_address              TEXT NOT NULL,
        fk_contact_id_from              INTEGER  NOT NULL,
        to_email_address                TEXT NOT NULL,
        fk_contact_id_to                INTEGER  NOT NULL,
        cc_email_address                TEXT NOT NULL,
        fk_contact_id_cc                INTEGER  NOT NULL,
        bcc_email_address               TEXT NOT NULL,
        fk_contact_id_bcc               INTEGER  NOT NULL,
        body_url                        TEXT NOT NULL,
        fk_employee_id                  INTEGER  NOT NULL,
        subject                         TEXT  NOT NULL,
        body_snippet                    TEXT  NOT NULL,
        read_flag                       BOOL  NOT NULL,
        pipedrive_mail_message_id       INTEGER  NOT NULL,
        pipedrive_mail_thread_id        INTEGER  NOT NULL,
        tech_insert_function            TEXT  NOT NULL,
        tech_insert_utc_timestamp       BIGINT  NOT NULL,
        tech_row_hash                   TEXT  NOT NULL,
        tech_data_load_utc_timestamp    BIGINT  NOT NULL,
        tech_data_load_uuid             TEXT  NOT NULL,
        tech_deleted_in_source_system   BOOL NOT NULL	
    );
    INSERT INTO tmp_mail_message_i (
        mail_message_key
        ,fk_deal_id
        ,fk_date_id_sent_date
        ,sent_timestamp
        ,from_email_address
        ,fk_contact_id_from
        ,to_email_address
        ,fk_contact_id_to
        ,cc_email_address
        ,fk_contact_id_cc
        ,bcc_email_address
        ,fk_contact_id_bcc
        ,body_url
        ,fk_employee_id
        ,subject
        ,body_snippet
        ,read_flag
        ,pipedrive_mail_message_id
        ,pipedrive_mail_thread_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT 
        (pipedrive_mail_message.id + (floor(random() * 1000 + 1)::int)) mail_message_key
        ,COALESCE(deal.deal_id, -1) AS fk_deal_id
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer("timestamp"), -1) AS fk_date_id_sent_date
        ,COALESCE("timestamp"::TIMESTAMP WITH TIME ZONE, TIMESTAMP_NEVER) AS sent_timestamp
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_mail_message.from_email_address) AS from_email_address
        ,COALESCE(contact_from.contact_id, -1) AS fk_contact_id_from
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_mail_message.to_email_address) AS to_email_address
        ,COALESCE(contact_to.contact_id, -1) AS fk_contact_id_to
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_mail_message.cc_email_address) AS cc_email_address
        ,COALESCE(contact_cc.contact_id, -1) AS fk_contact_id_cc
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_mail_message.bcc_email_address) AS bcc_email_address
        ,COALESCE(contact_bcc.contact_id, -1) AS fk_contact_id_bcc
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_mail_message.body_url) AS body_url
        ,COALESCE(employee.employee_id, -1) fk_employee_id
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_mail_message.subject) AS subject
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_mail_message.snippet) AS body_snippet
        ,pipedrive_mail_message.read_flag::BOOL AS read_flag
        ,COALESCE(pipedrive_mail_message.id, -1) AS pipedrive_mail_message_id
        ,COALESCE(pipedrive_mail_message.mail_thread_id, -1) AS pipedrive_mail_thread_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
        COALESCE(pipedrive_mail_message.deal_id::TEXT, '')
        || COALESCE(pipedrive_mail_message."timestamp"::TEXT, '')
        || COALESCE(pipedrive_mail_message.from_linked_person_id::TEXT, '')
        || COALESCE(pipedrive_mail_message.to_linked_person_id::TEXT, '')
        || COALESCE(pipedrive_mail_message.cc_linked_person_id::TEXT, '')
        || COALESCE(pipedrive_mail_message.bcc_linked_person_id::TEXT, '')
        || COALESCE(pipedrive_mail_message.from_email_address::TEXT, '')
        || COALESCE(pipedrive_mail_message.to_email_address::TEXT, '')
        || COALESCE(pipedrive_mail_message.cc_email_address::TEXT, '')
        || COALESCE(pipedrive_mail_message.bcc_email_address::TEXT, '')
        || COALESCE(pipedrive_mail_message.id::TEXT, '')
        || COALESCE(pipedrive_mail_message.mail_thread_id::TEXT, '')
        ) AS tech_row_hash
        ,pipedrive_mail_message.tech_data_load_utc_timestamp
        ,pipedrive_mail_message.tech_data_load_uuid
    FROM stage.pipedrive_deal_mail_message_i AS pipedrive_mail_message
    LEFT JOIN core.deal_i AS deal ON deal.deal_key = DEAL_KEY_PREFIX || pipedrive_mail_message.deal_id
    LEFT JOIN core.contact_i AS contact_to ON contact_to.contact_key = CONTACT_KEY_PREFIX || pipedrive_mail_message.to_linked_person_id
    LEFT JOIN core.contact_i AS contact_from ON contact_from.contact_key = CONTACT_KEY_PREFIX || pipedrive_mail_message.from_linked_person_id
    LEFT JOIN core.contact_i AS contact_cc ON contact_cc.contact_key = CONTACT_KEY_PREFIX || pipedrive_mail_message.cc_linked_person_id
    LEFT JOIN core.contact_i AS contact_bcc ON contact_bcc.contact_key = CONTACT_KEY_PREFIX || pipedrive_mail_message.bcc_linked_person_id
    LEFT JOIN core.employee_i AS employee ON employee.employee_key = EMPLOYEE_KEY_PREFIX || pipedrive_mail_message.user_id;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.mail_message_i (
       mail_message_key
        ,fk_deal_id
        ,fk_date_id_sent_date
        ,sent_timestamp
        ,from_email_address
        ,fk_contact_id_from
        ,to_email_address
        ,fk_contact_id_to
        ,cc_email_address
        ,fk_contact_id_cc
        ,bcc_email_address
        ,fk_contact_id_bcc
        ,body_url
        ,fk_employee_id
        ,subject
        ,body_snippet
        ,read_flag
        ,pipedrive_mail_message_id
        ,pipedrive_mail_thread_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        tmp_mail_message_i.mail_message_key
        ,tmp_mail_message_i.fk_deal_id
        ,tmp_mail_message_i.fk_date_id_sent_date
        ,tmp_mail_message_i.sent_timestamp
        ,tmp_mail_message_i.from_email_address
        ,tmp_mail_message_i.fk_contact_id_from
        ,tmp_mail_message_i.to_email_address
        ,tmp_mail_message_i.fk_contact_id_to
        ,tmp_mail_message_i.cc_email_address
        ,tmp_mail_message_i.fk_contact_id_cc
        ,tmp_mail_message_i.bcc_email_address
        ,tmp_mail_message_i.fk_contact_id_bcc
        ,tmp_mail_message_i.body_url
        ,tmp_mail_message_i.fk_employee_id
        ,tmp_mail_message_i.subject
        ,tmp_mail_message_i.body_snippet
        ,tmp_mail_message_i.read_flag
        ,tmp_mail_message_i.pipedrive_mail_message_id
        ,tmp_mail_message_i.pipedrive_mail_thread_id
        ,tmp_mail_message_i.tech_insert_function
        ,tmp_mail_message_i.tech_insert_utc_timestamp
        ,tmp_mail_message_i.tech_deleted_in_source_system
        ,tmp_mail_message_i.tech_row_hash
        ,tmp_mail_message_i.tech_data_load_utc_timestamp
        ,tmp_mail_message_i.tech_data_load_uuid
    FROM tmp_mail_message_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_pipedrive_trg_note_i" id="Procedure_5d23d6d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_pipedrive_trg_note_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ==============================================================================================
    DESCRIPTION:        Insert data from stage 'pipedrive_*' tables into core input table note_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-11-12 (YYYY-MM-DD)
    NOTE:
    ==============================================================================================
    */
DECLARE 
PIPEDRIVE_PREFIX TEXT := 'PIPEDRIVE_';
DEAL_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'DEAL_';
ORGANIZATION_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'ORGANIZATION_';
PERSON_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'PERSON_';
CONTACT_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'CONTACT_';
EMPLOYEE_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'EMPLOYEE_';
ACTIVITY_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'ACTIVITY_';
NOTE_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'NOTE_';
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.note_i (
        note_id
        ,note_key
        ,fk_deal_id
        ,fk_contact_id
        ,fk_organization_id
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_modified_date
        ,last_modified_timestamp
        ,pinned_to_deal_flag
        ,pinned_to_person_flag
        ,pinned_to_organization_flag
        ,content
        ,fk_employee_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    VALUES (
        -1 -- note_id
        ,TEXT_NULL -- note_key
        ,-1 -- fk_deal_id
        ,-1 -- fk_contact_id
        ,-1 -- fk_organization_id
        ,-1 -- fk_date_id_created_date
        ,TIMESTAMP_NEVER -- created_timestamp
        ,-1 -- fk_date_id_last_modified_date
        ,TIMESTAMP_NEVER -- last_modified_timestamp
        ,FALSE -- pinned_to_deal_flag
        ,FALSE -- pinned_to_person_flag
        ,FALSE -- pinned_to_organization_flag
        ,TEXT_NULL -- content
        ,-1 -- fk_employee_id
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_note_i;
    CREATE TEMPORARY TABLE tmp_note_i ( 
        note_key                        text  NOT NULL,
        fk_deal_id                      integer  NOT NULL,
        fk_contact_id                   integer  NOT NULL,
        fk_organization_id              integer  NOT NULL,
        fk_date_id_created_date         integer  NOT NULL,
        created_timestamp               timestamp with time zone  NOT NULL,
        fk_date_id_last_modified_date   integer  NOT NULL,
        last_modified_timestamp         timestamp with time zone  NOT NULL,
        pinned_to_deal_flag             bool  NOT NULL,
        pinned_to_person_flag           bool  NOT NULL,
        pinned_to_organization_flag     bool  NOT NULL,
        content                         text  NOT NULL,
        fk_employee_id                  integer  NOT NULL,
        tech_insert_function            text  NOT NULL,
        tech_insert_utc_timestamp       bigint  NOT NULL,
        tech_row_hash                   text  NOT NULL,
        tech_data_load_utc_timestamp    bigint  NOT NULL,
        tech_data_load_uuid             text  NOT NULL,
        tech_deleted_in_source_system   bool  NOT NULL
    );
    INSERT INTO tmp_note_i (
        note_key
        ,fk_deal_id
        ,fk_contact_id
        ,fk_organization_id
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_modified_date
        ,last_modified_timestamp
        ,pinned_to_deal_flag
        ,pinned_to_person_flag
        ,pinned_to_organization_flag
        ,content
        ,fk_employee_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        NOTE_KEY_PREFIX ||pipedrive_note.id AS note_key
        ,COALESCE(core_deal.deal_id, -1) AS fk_deal_id
        ,COALESCE(core_contact.contact_id, -1) AS fk_contact_id
        ,COALESCE(core_organization.organization_id, -1) AS fk_organization_id
        ,tf_u_convert_iso_8601_to_yyyymmdd_integer(pipedrive_note.add_time) AS fk_date_id_created_date
        ,(pipedrive_note.add_time || '+00')::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,tf_u_convert_iso_8601_to_yyyymmdd_integer(pipedrive_note.update_time) fk_date_id_last_modified_date
        ,(pipedrive_note.update_time || '+00')::TIMESTAMP WITH TIME ZONE AS last_modified_timestamp
        ,pipedrive_note.pinned_to_deal_flag AS pinned_to_deal_flag
        ,pipedrive_note.pinned_to_person_flag AS pinned_to_person_flag
        ,pipedrive_note.pinned_to_organization_flag AS pinned_to_organization_flag
        ,pipedrive_note.content AS content
        ,COALESCE(core_employee.employee_id, -1) AS fk_employee_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,NOT pipedrive_note.active_flag AS tech_deleted_in_source_system
        ,md5(
            COALESCE(pipedrive_note.deal_id::TEXT, '')
            || COALESCE(pipedrive_note.person_id::TEXT, '')
            || COALESCE(pipedrive_note.pinned_to_deal_flag::TEXT, '')
            || COALESCE(pipedrive_note.pinned_to_person_flag::TEXT, '')
            || COALESCE(pipedrive_note.pinned_to_organization_flag::TEXT, '')
            || COALESCE(pipedrive_note.content::TEXT, '')
            || COALESCE(pipedrive_note.user_id::TEXT, '')
            || COALESCE(pipedrive_note.active_flag::TEXT, '')
        ) AS tech_row_hash
        ,pipedrive_note.tech_data_load_utc_timestamp
        ,pipedrive_note.tech_data_load_uuid
    FROM stage.pipedrive_note_i AS pipedrive_note
    LEFT JOIN core.organization_i AS core_organization ON core_organization.organization_key = ORGANIZATION_KEY_PREFIX || pipedrive_note.org_id
    LEFT JOIN core.contact_i AS core_contact ON core_contact.contact_key = CONTACT_KEY_PREFIX || pipedrive_note.person_id
    LEFT JOIN core.deal_i AS core_deal ON core_deal.deal_key = DEAL_KEY_PREFIX || pipedrive_note.deal_id
    LEFT JOIN core.employee_i AS core_employee ON core_employee.employee_key = EMPLOYEE_KEY_PREFIX || pipedrive_note.user_id;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.note_i (
        note_key
        ,fk_deal_id
        ,fk_contact_id
        ,fk_organization_id
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_modified_date
        ,last_modified_timestamp
        ,pinned_to_deal_flag
        ,pinned_to_person_flag
        ,pinned_to_organization_flag
        ,content
        ,fk_employee_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT 
        tmp_note_i.note_key
        ,tmp_note_i.fk_deal_id
        ,tmp_note_i.fk_contact_id
        ,tmp_note_i.fk_organization_id
        ,tmp_note_i.fk_date_id_created_date
        ,tmp_note_i.created_timestamp
        ,tmp_note_i.fk_date_id_last_modified_date
        ,tmp_note_i.last_modified_timestamp
        ,tmp_note_i.pinned_to_deal_flag
        ,tmp_note_i.pinned_to_person_flag
        ,tmp_note_i.pinned_to_organization_flag
        ,tmp_note_i.content
        ,tmp_note_i.fk_employee_id
        ,tmp_note_i.tech_insert_function
        ,tmp_note_i.tech_insert_utc_timestamp
        ,tmp_note_i.tech_deleted_in_source_system
        ,tmp_note_i.tech_row_hash
        ,tmp_note_i.tech_data_load_utc_timestamp
        ,tmp_note_i.tech_data_load_uuid
    FROM tmp_note_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_pipedrive_trg_organization_i" id="Procedure_2278483" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_pipedrive_trg_organization_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ==============================================================================================
    DESCRIPTION:        Insert data from stage 'pipedrive_*' tables into core input table organization_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-10-26 (YYYY-MM-DD)
    NOTE:
    ==============================================================================================
    */
DECLARE 
ORGANIZATION_KEY_PREFIX TEXT := 'PIPEDRIVE_ORGANIZATION_';
EMPLOYEE_KEY_PREFIX TEXT := 'PIPEDRIVE_EMPLOYEE_';
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.organization_i (
        organization_id
        ,organization_key
        ,address_full
        ,address_city
        ,address_country
        ,address_region
        ,pipedrive_label
        ,fk_party_id
        ,fk_employee_id_owner
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_updated_date
        ,last_updated_timestamp
        ,pipedrive_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    VALUES (
        -1 -- organization_id
        ,TEXT_NULL -- organization_key
        ,TEXT_NULL -- address_full
        ,TEXT_NULL -- address_city
        ,TEXT_NULL -- address_country
        ,TEXT_NULL -- address_region
        ,TEXT_NULL -- pipedrive_label
        ,-1 -- fk_party_id
        ,-1 -- fk_employee_id_owner
        ,-1 -- fk_date_id_created_date
        ,TIMESTAMP_NEVER -- created_timestamp
        ,-1 -- fk_date_id_last_updated_date
        ,TIMESTAMP_NEVER -- last_updated_timestamp
        ,TEXT_NULL -- pipedrive_id
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_organization_i cascade;
    CREATE TEMPORARY TABLE tmp_organization_i (
        organization_key                 TEXT  NOT NULL
        ,address_full                    TEXT  NOT NULL
        ,address_city                    TEXT  NOT NULL
        ,address_country                 TEXT  NOT NULL
        ,address_region                  TEXT  NOT NULL
        ,pipedrive_label                 TEXT  NOT NULL
        ,fk_party_id                     INTEGER  NOT NULL
        ,fk_employee_id_owner            INTEGER  NOT NULL
        ,fk_date_id_created_date         INTEGER  NOT NULL
        ,created_timestamp               TIMESTAMP WITH TIME ZONE  NOT NULL
        ,fk_date_id_last_updated_date    INTEGER  NOT NULL
        ,last_updated_timestamp          TIMESTAMP WITH TIME ZONE  NOT NULL
        ,pipedrive_id                    TEXT  NOT NULL
        ,tech_insert_function            TEXT  NOT NULL
        ,tech_insert_utc_timestamp       BIGINT  NOT NULL
        ,tech_row_hash                   TEXT  NOT NULL
        ,tech_data_load_utc_timestamp    BIGINT  NOT NULL
        ,tech_data_load_uuid             TEXT  NOT NULL
        ,tech_deleted_in_source_system   BOOL DEFAULT FALSE NOT NULL
    );
    INSERT INTO tmp_organization_i (
        organization_key
        ,address_full
        ,address_city
        ,address_country
        ,address_region
        ,pipedrive_label
        ,fk_party_id
        ,fk_employee_id_owner
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_updated_date
        ,last_updated_timestamp
        ,pipedrive_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        ORGANIZATION_KEY_PREFIX || pipedrive_organization.id AS organization_key
        ,CASE
            WHEN pipedrive_organization.address_formatted_address <> '' THEN tf_u_replace_empty_string_with_null_flag(pipedrive_organization.address_formatted_address)
            ELSE tf_u_replace_empty_string_with_null_flag(pipedrive_organization.address)
        END AS address_full
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_organization.address_locality) AS address_city
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_organization.address_country) AS address_country
        ,tf_u_replace_empty_string_with_null_flag(iso_country_list.region) AS address_region
        ,tf_u_replace_empty_string_with_null_flag(organization_label.label) AS pipedrive_label
        ,organization_party.party_id AS fk_party_id
        ,employee.employee_id AS fk_employee_id_owner
        ,tf_u_convert_iso_8601_to_yyyymmdd_integer(pipedrive_organization.add_time) AS fk_date_id_created_date
        ,(pipedrive_organization.add_time || '+00')::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,tf_u_convert_iso_8601_to_yyyymmdd_integer(pipedrive_organization.update_time) AS fk_date_id_last_updated_date
        ,(pipedrive_organization.update_time || '+00')::TIMESTAMP WITH TIME ZONE AS last_updated_timestamp
        ,tf_u_replace_empty_string_with_null_flag(pipedrive_organization.id::TEXT) AS pipedrive_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,NOT pipedrive_organization.active_flag AS tech_deleted_in_source_system
        ,md5(
        COALESCE(pipedrive_organization.address_formatted_address::TEXT, '')
        || COALESCE(pipedrive_organization.address::TEXT, '')
        || COALESCE(pipedrive_organization.address_locality::TEXT, '')
        || COALESCE(pipedrive_organization.address_country::TEXT, '')
        || COALESCE(pipedrive_organization.label::TEXT, '')
        || COALESCE(pipedrive_organization.active_flag::TEXT, '')
        ) AS tech_row_hash
        ,pipedrive_organization.tech_data_load_utc_timestamp
        ,pipedrive_organization.tech_data_load_uuid
    FROM stage.pipedrive_organization_i AS pipedrive_organization
    LEFT JOIN stage.pipedrive_organization_label_options_i AS organization_label ON organization_label.id = pipedrive_organization.label
    LEFT JOIN core.party_i AS organization_party ON organization_party.party_key = ORGANIZATION_KEY_PREFIX || pipedrive_organization.id
    LEFT JOIN core.employee_i AS employee ON employee.employee_key = EMPLOYEE_KEY_PREFIX || pipedrive_organization.owner_id
    LEFT JOIN core.c_contry_name_map_g AS country_name_map ON country_name_map.google_country_name = pipedrive_organization.address_country
    LEFT JOIN core.iso_3166_country_list_i AS iso_country_list ON iso_country_list.country_name = COALESCE(country_name_map.iso_3166_country_name, pipedrive_organization.address_country);
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.organization_i (
        organization_key
        ,address_full
        ,address_city
        ,address_country
        ,address_region
        ,pipedrive_label
        ,fk_party_id
        ,fk_employee_id_owner
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_updated_date
        ,last_updated_timestamp
        ,pipedrive_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT 
        tmp_organization_i.organization_key
        ,tmp_organization_i.address_full
        ,tmp_organization_i.address_city
        ,tmp_organization_i.address_country
        ,tmp_organization_i.address_region
        ,tmp_organization_i.pipedrive_label
        ,tmp_organization_i.fk_party_id
        ,tmp_organization_i.fk_employee_id_owner
        ,tmp_organization_i.fk_date_id_created_date
        ,tmp_organization_i.created_timestamp
        ,tmp_organization_i.fk_date_id_last_updated_date
        ,tmp_organization_i.last_updated_timestamp
        ,tmp_organization_i.pipedrive_id
        ,tmp_organization_i.tech_insert_function
        ,tmp_organization_i.tech_insert_utc_timestamp
        ,tmp_organization_i.tech_deleted_in_source_system
        ,tmp_organization_i.tech_row_hash
        ,tmp_organization_i.tech_data_load_utc_timestamp
        ,tmp_organization_i.tech_data_load_uuid
    FROM tmp_organization_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_pipedrive_trg_organization_relation_i" id="Procedure_1229fbf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_pipedrive_trg_organization_relation_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ==============================================================================================
    DESCRIPTION:        Insert data from stage 'pipedrive_*' tables into core input table organization_relation_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-11-01 (YYYY-MM-DD)
    NOTE:
    ==============================================================================================
    */
DECLARE 
PIPEDRIVE_PREFIX TEXT := 'PIPEDRIVE_';
ORGANIZATION_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'ORGANIZATION_';
PERSON_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'PERSON_';
CONTACT_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'CONTACT_';
EMPLOYEE_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'EMPLOYEE_';
DEAL_KEY_PREFIX TEXT := PIPEDRIVE_PREFIX || 'DEAL_';
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text; 
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_organization_relation_i cascade;
    CREATE TEMPORARY TABLE tmp_organization_relation_i ( 
        organization_key                            TEXT NOT NULL
        ,organization_key_related_organization      TEXT NOT NULL
        ,fk_organization_id                         INTEGER NOT NULL
        ,fk_organization_id_related_organization    INTEGER NOT NULL
        ,related_organization_is                    TEXT NOT NULL
        ,tech_insert_function                       TEXT NOT NULL
        ,tech_insert_utc_timestamp                  BIGINT NOT NULL
        ,tech_row_hash                              TEXT NOT NULL
        ,tech_data_load_utc_timestamp               BIGINT NOT NULL
        ,tech_data_load_uuid                        TEXT NOT NULL
        ,tech_deleted_in_source_system              BOOL NOT NULL
    );
    INSERT INTO tmp_organization_relation_i (
        organization_key
        ,organization_key_related_organization
        ,fk_organization_id
        ,fk_organization_id_related_organization
        ,related_organization_is
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        DEAL_KEY_PREFIX || organization_relation_map.rel_linked_org_id_value AS deal_key
        ,CONTACT_KEY_PREFIX || organization_relation_map.calculated_related_org_id AS contact_key
        ,organization.organization_id AS fk_organization_id
        ,related_organization.organization_id AS fk_organization_id_related_organization
        ,organization_relation_map.calculated_type AS related_organization_is
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(           
            COALESCE(organization_relation_map.rel_linked_org_id_value::TEXT, '')
            || COALESCE(organization_relation_map.calculated_related_org_id::TEXT, '')
        ) AS tech_row_hash
        ,organization_relation_map.tech_data_load_utc_timestamp
        ,organization_relation_map.tech_data_load_uuid
    FROM stage.pipedrive_organization_relation_i AS organization_relation_map
    LEFT JOIN core.organization_i AS organization ON organization.organization_key = ORGANIZATION_KEY_PREFIX || organization_relation_map.rel_linked_org_id_value
    LEFT JOIN core.organization_i AS related_organization ON related_organization.organization_key = ORGANIZATION_KEY_PREFIX || organization_relation_map.calculated_related_org_id;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.organization_relation_i (
        organization_key
        ,organization_key_related_organization
        ,fk_organization_id
        ,fk_organization_id_related_organization
        ,related_organization_is
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT 
        tmp_organization_relation_i.organization_key
        ,tmp_organization_relation_i.organization_key_related_organization
        ,tmp_organization_relation_i.fk_organization_id
        ,tmp_organization_relation_i.fk_organization_id_related_organization
        ,tmp_organization_relation_i.related_organization_is
        ,tmp_organization_relation_i.tech_insert_function
        ,tmp_organization_relation_i.tech_insert_utc_timestamp
        ,tmp_organization_relation_i.tech_deleted_in_source_system
        ,tmp_organization_relation_i.tech_row_hash
        ,tmp_organization_relation_i.tech_data_load_utc_timestamp
        ,tmp_organization_relation_i.tech_data_load_uuid
    FROM tmp_organization_relation_i;
    
    RETURN 0;
    
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_pipedrive_trg_party_i" id="Procedure_73a700" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_pipedrive_trg_party_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Insert data from stage 'pipedrive_*' tables into core input table party_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-10-25 (YYYY-MM-DD)
    NOTE:               
    ===========================================================================================================
    */
DECLARE
EMPLOYEE_KEY_PREFIX TEXT := 'PIPEDRIVE_EMPLOYEE_';
PERSON_KEY_PREFIX TEXT := 'PIPEDRIVE_PERSON_';
ORGANIZATION_KEY_PREFIX TEXT := 'PIPEDRIVE_ORGANIZATION_';
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack TEXT;
FUNCTION_NAME TEXT;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::TEXT;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.party_i (
       party_id
       ,party_key
       ,full_name
       ,short_name
       ,fk_employee_id_last_modified_by
       ,fk_employee_id_created_by
       ,fk_date_id_created_date
       ,created_timestamp
       ,fk_date_id_last_modified_date
       ,last_modified_timestamp
       ,tech_insert_function
       ,tech_insert_utc_timestamp
       ,tech_deleted_in_source_system
       ,tech_row_hash
       ,tech_data_load_utc_timestamp
       ,tech_data_load_uuid
    )
    VALUES (
        -1 -- party_id
        ,TEXT_NULL -- party_key
        ,TEXT_NULL -- full_name
        ,TEXT_NULL -- short_name
        ,-1 -- fk_employee_id_last_modified_by
        ,-1 -- fk_employee_id_created_by
        ,-1 -- fk_date_id_created_date
        ,TIMESTAMP_NEVER -- created_timestamp
        ,-1 -- fk_date_id_last_modified_date
        ,TIMESTAMP_NEVER -- last_modified_timestamp
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_party_i;
    CREATE TEMPORARY TABLE tmp_party_i(
        party_key                        TEXT  NOT NULL
        ,full_name                       TEXT  NOT NULL
        ,short_name                      TEXT  NOT NULL
        ,fk_employee_id_last_modified_by INTEGER  NOT NULL
        ,fk_employee_id_created_by       INTEGER  NOT NULL
        ,fk_date_id_created_date         INTEGER NULL
        ,created_timestamp               TIMESTAMP WITH TIME ZONE NOT NULL
        ,fk_date_id_last_modified_date   INTEGER  NOT NULL
        ,last_modified_timestamp         TIMESTAMP WITH TIME ZONE NOT NULL
        ,tech_insert_function            TEXT  NOT NULL
        ,tech_insert_utc_timestamp       BIGINT  NOT NULL
        ,tech_row_hash                   TEXT  NOT NULL
        ,tech_data_load_utc_timestamp    BIGINT  NOT NULL
        ,tech_data_load_uuid             TEXT  NOT NULL
        ,tech_deleted_in_source_system   BOOL DEFAULT FALSE NOT NULL
    );
    INSERT INTO tmp_party_i (
       party_key
       ,full_name
       ,short_name
       ,fk_employee_id_last_modified_by
       ,fk_employee_id_created_by
       ,fk_date_id_created_date
       ,created_timestamp
       ,fk_date_id_last_modified_date
       ,last_modified_timestamp
       ,tech_insert_function
       ,tech_insert_utc_timestamp
       ,tech_deleted_in_source_system
       ,tech_row_hash
       ,tech_data_load_utc_timestamp
       ,tech_data_load_uuid
    )
    SELECT 
        ORGANIZATION_KEY_PREFIX || pipedrive_organization.id AS party_key
        ,COALESCE(pipedrive_organization.name, '') AS full_name
        ,COALESCE(pipedrive_organization.name, '') AS short_name
        ,-1 AS fk_employee_id_last_modified_by
        ,-1 AS fk_employee_id_created_by
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(pipedrive_organization.add_time), -1) AS fk_date_id_created_date
        ,(pipedrive_organization.add_time || ' UTC')::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(pipedrive_organization.update_time), -1) AS fk_date_id_last_modified_date
        ,(pipedrive_organization.update_time || ' UTC')::TIMESTAMP WITH TIME ZONE AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
            COALESCE(pipedrive_organization.name, '')
        ) AS tech_row_hash
        ,pipedrive_organization.tech_data_load_utc_timestamp
        ,pipedrive_organization.tech_data_load_uuid
    FROM stage.pipedrive_organization_i AS pipedrive_organization
    UNION ALL
    SELECT 
        PERSON_KEY_PREFIX || pipedrive_person.id AS party_key
        ,COALESCE(pipedrive_person.name, '') AS full_name
        ,COALESCE(pipedrive_person.first_name, '') AS short_name
        ,-1 AS fk_employee_id_last_modified_by
        ,-1 AS fk_employee_id_created_by
        ,tf_u_convert_iso_8601_to_yyyymmdd_integer(pipedrive_person.add_time) AS fk_date_id_created_date
        ,(pipedrive_person.add_time || ' UTC')::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,COALESCE(tf_u_convert_iso_8601_to_yyyymmdd_integer(pipedrive_person.update_time), -1) AS fk_date_id_last_modified_date
        ,(pipedrive_person.update_time || ' UTC')::TIMESTAMP WITH TIME ZONE AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
            COALESCE(pipedrive_person.name, '')
        ) AS tech_row_hash
        ,pipedrive_person.tech_data_load_utc_timestamp
        ,pipedrive_person.tech_data_load_uuid
    FROM stage.pipedrive_person_i AS pipedrive_person
    
    UNION ALL
    
    SELECT
        EMPLOYEE_KEY_PREFIX || pipedrive_user.id AS party_key
        ,pipedrive_user.name AS full_name
        ,pipedrive_user.name AS short_name
        ,-1 AS fk_employee_id_last_modified_by
        ,-1 AS fk_employee_id_created_by
        ,tf_u_convert_iso_8601_to_yyyymmdd_integer(pipedrive_user.created) AS fk_date_id_created_date
        ,(pipedrive_user.created || ' ' || 'UTC')::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,-1 AS fk_date_id_last_modified_date
        ,TIMESTAMP_NEVER AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
            COALESCE(pipedrive_user.name, '')
            || COALESCE(pipedrive_user.email, '')
        ) AS tech_row_hash
        ,pipedrive_user.tech_data_load_utc_timestamp
        ,pipedrive_user.tech_data_load_uuid
    FROM stage.pipedrive_user_i AS pipedrive_user;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    
    INSERT INTO core.party_i (
       party_key
       ,full_name
       ,short_name
       ,fk_employee_id_last_modified_by
       ,fk_employee_id_created_by
       ,fk_date_id_created_date
       ,created_timestamp
       ,fk_date_id_last_modified_date
       ,last_modified_timestamp
       ,tech_insert_function
       ,tech_insert_utc_timestamp
       ,tech_deleted_in_source_system
       ,tech_row_hash
       ,tech_data_load_utc_timestamp
       ,tech_data_load_uuid
    )
    SELECT
       tmp_party_i.party_key
       ,tmp_party_i.full_name
       ,tmp_party_i.short_name
       ,tmp_party_i.fk_employee_id_last_modified_by
       ,tmp_party_i.fk_employee_id_created_by
       ,tmp_party_i.fk_date_id_created_date
       ,tmp_party_i.created_timestamp
       ,tmp_party_i.fk_date_id_last_modified_date
       ,tmp_party_i.last_modified_timestamp
       ,tmp_party_i.tech_insert_function
       ,tmp_party_i.tech_insert_utc_timestamp
       ,tmp_party_i.tech_deleted_in_source_system
       ,tmp_party_i.tech_row_hash
       ,tmp_party_i.tech_data_load_utc_timestamp
       ,tmp_party_i.tech_data_load_uuid
    FROM tmp_party_i;
    RETURN 0;
    
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_rest_countries_trg_iso_3166_country_list_i" id="Procedure_24b0f6a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_rest_countries_trg_iso_3166_country_list_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Populates Table of ISO 3166-1 Countries 
    AUTHOR:             Martin Vrabel ('https://github.com/mvrabel)
    CREATED ON:         2018-12-07 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE 
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NULL_DATE DATE := (SELECT date_never FROM core.c_null_replacement_g);
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.iso_3166_country_list_i (
        iso_3166_country_list_id
        ,iso_3166_country_list_key
        ,country_name
        ,alpha2code
        ,alpha3code
        ,capital
        ,region
        ,subregion
        ,numericcode
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    VALUES (
        -1 -- iso_3166_country_list_id
        ,TEXT_NULL -- iso_3166_country_list_key
        ,TEXT_NULL -- country_name
        ,TEXT_NULL -- alpha2code
        ,TEXT_NULL -- alpha3code
        ,TEXT_NULL -- capital
        ,TEXT_NULL -- region
        ,TEXT_NULL -- subregion
        ,TEXT_NULL -- numericcode
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,TEXT_NULL -- tech_row_hash
        ,-1 -- tech_data_load_utc_timestamp
        ,TEXT_NULL -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_iso_3166_country_list_i cascade;
    CREATE TEMPORARY TABLE tmp_iso_3166_country_list_i (
        iso_3166_country_list_key           TEXT  NOT NULL
        ,country_name                       TEXT  NOT NULL
        ,alpha2code                         TEXT  NOT NULL
        ,alpha3code                         TEXT  NOT NULL
        ,capital                            TEXT  NOT NULL
        ,region                             TEXT  NOT NULL
        ,subregion                          TEXT  NOT NULL
        ,numericcode                        TEXT  NOT NULL
        ,tech_insert_function               TEXT NOT NULL
        ,tech_insert_utc_timestamp          BIGINT NOT NULL
        ,tech_row_hash                      TEXT NOT NULL
        ,tech_data_load_utc_timestamp       BIGINT NOT NULL
        ,tech_data_load_uuid                TEXT NOT NULL
        ,tech_deleted_in_source_system      BOOL NOT NULL
     );
    INSERT INTO tmp_iso_3166_country_list_i (
        iso_3166_country_list_key
        ,country_name
        ,alpha2code
        ,alpha3code
        ,capital
        ,region
        ,subregion
        ,numericcode
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        country_list.alpha3code AS iso_3166_country_list_key
        ,country_list.name AS country_name
        ,tf_u_replace_empty_string_with_null_flag(country_list.alpha2code) AS alpha2code
        ,tf_u_replace_empty_string_with_null_flag(country_list.alpha3code) AS alpha3code
        ,tf_u_replace_empty_string_with_null_flag(country_list.capital) AS capital
        ,tf_u_replace_empty_string_with_null_flag(country_list.region) AS region
        ,tf_u_replace_empty_string_with_null_flag(country_list.subregion) AS subregion 
        ,tf_u_replace_empty_string_with_null_flag(country_list.numericcode) AS numericcode
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,FALSE AS tech_deleted_in_source_system
        ,md5(
            COALESCE(country_list.name::TEXT, '')
            || COALESCE(country_list.alpha2code::TEXT, '')
            || COALESCE(country_list.alpha3code::TEXT, '')
            || COALESCE(country_list.capital::TEXT, '')
            || COALESCE(country_list.region::TEXT, '')
            || COALESCE(country_list.subregion::TEXT, '')
            || COALESCE(country_list.numericcode::TEXT, '')
        ) AS tech_row_hash
        ,country_list.tech_data_load_utc_timestamp
        ,country_list.tech_data_load_uuid
    FROM stage.restcountries_country_list_i AS country_list;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.iso_3166_country_list_i (
        iso_3166_country_list_key
        ,country_name
        ,alpha2code
        ,alpha3code
        ,capital
        ,region
        ,subregion
        ,numericcode
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT 
        tmp_iso_3166_country_list_i.iso_3166_country_list_key
        ,tmp_iso_3166_country_list_i.country_name
        ,tmp_iso_3166_country_list_i.alpha2code
        ,tmp_iso_3166_country_list_i.alpha3code
        ,tmp_iso_3166_country_list_i.capital
        ,tmp_iso_3166_country_list_i.region
        ,tmp_iso_3166_country_list_i.subregion
        ,tmp_iso_3166_country_list_i.numericcode
        ,tmp_iso_3166_country_list_i.tech_insert_function
        ,tmp_iso_3166_country_list_i.tech_insert_utc_timestamp
        ,tmp_iso_3166_country_list_i.tech_deleted_in_source_system
        ,tmp_iso_3166_country_list_i.tech_row_hash
        ,tmp_iso_3166_country_list_i.tech_data_load_utc_timestamp
        ,tmp_iso_3166_country_list_i.tech_data_load_uuid
    FROM tmp_iso_3166_country_list_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_vtiger_trg_comment_i" id="Procedure_17ef054" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_vtiger_trg_comment_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================
    DESCRIPTION:        Insert data from stage 'vtiger_*' tables into core input table comment_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =============================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
LEAD_CONTACT_FLAG TEXT := 'CONTACT';
LEAD_ORGANIZATION_FLAG TEXT:= 'ORGANIZATION';
ORGANIZATION_TABLE TEXT:= 'core.organization';
CONTACT_TABLE TEXT:= 'core.contact';
LOPP_TABLE TEXT:= 'core.lopp';
EMPLOYEE_TABLE TEXT:= 'core.employee';
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_comment_i;
    CREATE TEMPORARY TABLE tmp_comment_i (
        comment_key                     TEXT NOT NULL
        ,comment_body                   TEXT
        ,table_name_comment_on      TEXT NOT NULL
        ,record_key_comment_on          TEXT NOT NULL
        ,table_name_commenter           TEXT NOT NULL
        ,record_key_commenter           TEXT NOT NULL
        ,created_timestamp              TIMESTAMP WITH TIME ZONE NOT NULL
        ,last_modified_timestamp        TIMESTAMP WITH TIME ZONE NOT NULL
        ,tech_insert_function           TEXT NOT NULL
        ,tech_insert_utc_timestamp      BIGINT NOT NULL
        ,tech_deleted_in_source_system  BOOL NOT NULL DEFAULT FALSE
        ,tech_row_hash                  TEXT NOT NULL
        ,tech_data_load_utc_timestamp   BIGINT NOT NULL
        ,tech_data_load_uuid            TEXT NOT NULL
    );
    INSERT INTO tmp_comment_i (
        comment_key
        ,comment_body
        ,table_name_comment_on
        ,record_key_comment_on
        ,table_name_commenter
        ,record_key_commenter
        ,created_timestamp
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    --vt_comment from Opportunities
    SELECT
        vt_comment.modcommentsid AS comment_key
        ,vt_comment.commentcontent AS comment_body
        ,LOPP_TABLE AS table_name_comment_on
        ,vt_potential.potential_no AS record_key_comment_on
        ,EMPLOYEE_TABLE AS table_name_commenter --becasue only employees can use CRM i can simplyfi this transform by simply put EMPLOYEE
        ,vt_user_created.user_name AS record_key_commenter
        ,vt_crmentity.createdtime::TIMESTAMP WITH TIME ZONE AT TIME ZONE vt_user_created.time_zone AS created_timestamp
        ,vt_crmentity.modifiedtime::TIMESTAMP WITH TIME ZONE AT TIME ZONE vt_user_modified.time_zone AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,vt_crmentity.deleted::bool AS tech_deleted_in_source_system
        ,md5(
        COALESCE(vt_comment.commentcontent, '')
        || vt_potential.potential_no
        || vt_crmentity.deleted::TEXT
        || LOPP_TABLE
        || EMPLOYEE_TABLE
        || vt_user_created.user_name
        || vt_user_modified.user_name
        ) AS tech_row_hash
        ,vt_comment.tech_data_load_utc_timestamp
        ,vt_comment.tech_data_load_uuid
    FROM stage.vtiger_modcomments_i AS vt_comment
    JOIN stage.vtiger_crmentity_i AS vt_crmentity ON vt_comment.modcommentsid = vt_crmentity.crmid
    JOIN stage.vtiger_users_i AS vt_user_created ON vt_user_created.id = vt_crmentity.smcreatorid
    JOIN stage.vtiger_users_i AS vt_user_modified ON vt_user_modified.id = vt_crmentity.modifiedby
    JOIN stage.vtiger_crmentity_i AS vt_crmentity_related_to_crm ON vt_comment.related_to = vt_crmentity_related_to_crm.crmid
    JOIN stage.vtiger_potential_i AS vt_potential ON vt_potential.potentialid = vt_crmentity_related_to_crm.crmid
    WHERE vt_crmentity_related_to_crm.setype = 'Potentials'
    UNION ALL
    --Comments from Leads on Lopps
    SELECT
        vt_comment.modcommentsid AS comment_key
        ,vt_comment.commentcontent AS comment_body
        ,LOPP_TABLE AS table_name_comment_on
        ,vt_lead.lead_no AS record_key_comment_on
        ,EMPLOYEE_TABLE AS table_name_commenter --becasue only employees can use CRM i can simplyfi this transform by simply put EMPLOYEE
        ,vt_user_created.user_name AS record_key_commenter
        ,vt_crmentity.createdtime::TIMESTAMP WITH TIME ZONE AT TIME ZONE vt_user_created.time_zone AS created_timestamp
        ,vt_crmentity.modifiedtime::TIMESTAMP WITH TIME ZONE AT TIME ZONE vt_user_modified.time_zone AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,vt_crmentity.deleted::bool AS tech_deleted_in_source_system
        ,md5(
        COALESCE(vt_comment.commentcontent, '')
        || vt_lead.lead_no
        || vt_crmentity.deleted::TEXT
        || LOPP_TABLE
        || EMPLOYEE_TABLE
        || vt_user_created.user_name
        || vt_user_modified.user_name
        ) AS tech_row_hash
        ,vt_comment.tech_data_load_utc_timestamp
        ,vt_comment.tech_data_load_uuid
    FROM stage.vtiger_modcomments_i AS vt_comment
    JOIN stage.vtiger_crmentity_i AS vt_crmentity ON vt_comment.modcommentsid = vt_crmentity.crmid
    JOIN stage.vtiger_users_i AS vt_user_created ON vt_user_created.id = vt_crmentity.smcreatorid
    JOIN stage.vtiger_users_i AS vt_user_modified ON vt_user_modified.id = vt_crmentity.modifiedby
    JOIN stage.vtiger_crmentity_i AS vt_crmentity_related_to_crm ON vt_comment.related_to = vt_crmentity_related_to_crm.crmid
    JOIN stage.vtiger_leaddetails_i AS vt_lead ON vt_lead.leadid = vt_crmentity_related_to_crm.crmid
    WHERE vt_crmentity_related_to_crm.setype = 'Leads'
    UNION ALL
    -- Comments from Leads to Organization
    -- NOTE: 'Comments from Leads to Organization' have the same JOINs AS 'Comments from Leads' because during ETL every single lead is split
    -- into an organization and into a contact
    SELECT
        vt_comment.modcommentsid AS comment_key
        ,vt_comment.commentcontent AS comment_body
        ,ORGANIZATION_TABLE AS table_name_comment_on
        ,vt_lead.lead_no || LEAD_ORGANIZATION_FLAG AS record_key_comment_on
        ,EMPLOYEE_TABLE AS table_name_commenter --becasue only employees can use CRM i can simplyfi this transform by simply put EMPLOYEE
        ,vt_user_created.user_name AS record_key_commenter
        ,vt_crmentity.createdtime::TIMESTAMP WITH TIME ZONE AT TIME ZONE vt_user_created.time_zone AS created_timestamp
        ,vt_crmentity.modifiedtime::TIMESTAMP WITH TIME ZONE AT TIME ZONE vt_user_modified.time_zone AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,vt_crmentity.deleted::bool AS tech_deleted_in_source_system
        ,md5(
        COALESCE(vt_comment.commentcontent, '')
        || vt_lead.lead_no
        || vt_crmentity.deleted::TEXT
        || ORGANIZATION_TABLE
        || EMPLOYEE_TABLE
        || vt_user_created.user_name
        || vt_user_modified.user_name
        ) AS tech_row_hash
        ,vt_comment.tech_data_load_utc_timestamp
        ,vt_comment.tech_data_load_uuid
    FROM stage.vtiger_modcomments_i AS vt_comment
    JOIN stage.vtiger_crmentity_i AS vt_crmentity ON vt_comment.modcommentsid = vt_crmentity.crmid
    JOIN stage.vtiger_users_i AS vt_user_created ON vt_user_created.id = vt_crmentity.smcreatorid
    JOIN stage.vtiger_users_i AS vt_user_modified ON vt_user_modified.id = vt_crmentity.modifiedby
    JOIN stage.vtiger_crmentity_i AS vt_crmentity_related_to_crm ON vt_comment.related_to = vt_crmentity_related_to_crm.crmid
    JOIN stage.vtiger_leaddetails_i AS vt_lead ON vt_lead.leadid = vt_crmentity_related_to_crm.crmid
    WHERE vt_crmentity_related_to_crm.setype = 'Leads'
    UNION ALL
    -- Comments from Leads to Contact
    -- NOTE: 'Comments from Leads to Contact' have the same JOINs AS 'Comments from Leads to Lopps' because during ETL every single lead is split
    -- into an organization and into a contact
    SELECT
        vt_comment.modcommentsid AS comment_key
        ,vt_comment.commentcontent AS comment_body
        ,CONTACT_TABLE AS table_name_comment_on
        ,vt_lead.lead_no || LEAD_CONTACT_FLAG AS record_key_comment_on
        ,EMPLOYEE_TABLE AS table_name_commenter --becasue only employees can use CRM i can simplyfi this transform by simply put EMPLOYEE
        ,vt_user_created.user_name AS record_key_commenter
        ,vt_crmentity.createdtime::TIMESTAMP WITH TIME ZONE AT TIME ZONE vt_user_created.time_zone AS created_timestamp
        ,vt_crmentity.modifiedtime::TIMESTAMP WITH TIME ZONE AT TIME ZONE vt_user_modified.time_zone AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,vt_crmentity.deleted::bool AS tech_deleted_in_source_system
        ,md5(
        COALESCE(vt_comment.commentcontent, '')
        || vt_lead.lead_no
        || vt_crmentity.deleted::TEXT
        || CONTACT_TABLE
        || EMPLOYEE_TABLE
        || vt_user_created.user_name
        || vt_user_modified.user_name
        ) AS tech_row_hash
        ,vt_comment.tech_data_load_utc_timestamp
        ,vt_comment.tech_data_load_uuid
    FROM stage.vtiger_modcomments_i AS vt_comment
    JOIN stage.vtiger_crmentity_i AS vt_crmentity ON vt_comment.modcommentsid = vt_crmentity.crmid
    JOIN stage.vtiger_users_i AS vt_user_created ON vt_user_created.id = vt_crmentity.smcreatorid
    JOIN stage.vtiger_users_i AS vt_user_modified ON vt_user_modified.id = vt_crmentity.modifiedby
    JOIN stage.vtiger_crmentity_i AS vt_crmentity_related_to_crm ON vt_comment.related_to = vt_crmentity_related_to_crm.crmid
    JOIN stage.vtiger_leaddetails_i AS vt_lead ON vt_lead.leadid = vt_crmentity_related_to_crm.crmid
    WHERE vt_crmentity_related_to_crm.setype = 'Leads'
    UNION ALL
    --Comments from Contact to Contact
    SELECT
        vt_comment.modcommentsid AS comment_key
        ,vt_comment.commentcontent AS comment_body
        ,CONTACT_TABLE AS table_name_comment_on
        ,vt_contact.contact_no AS record_key_comment_on
        ,EMPLOYEE_TABLE AS table_name_commenter --becasue only employees can use CRM i can simplyfi this transform by simply put EMPLOYEE
        ,vt_user_created.user_name AS record_key_commenter
        ,vt_crmentity.createdtime::TIMESTAMP WITH TIME ZONE AT TIME ZONE vt_user_created.time_zone AS created_timestamp
        ,vt_crmentity.modifiedtime::TIMESTAMP WITH TIME ZONE AT TIME ZONE vt_user_modified.time_zone AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,vt_crmentity.deleted::bool AS tech_deleted_in_source_system
        ,md5(
        COALESCE(vt_comment.commentcontent, '')
        || vt_contact.contact_no
        || vt_crmentity.deleted::TEXT
        || CONTACT_TABLE
        || EMPLOYEE_TABLE
        || vt_user_created.user_name
        || vt_user_modified.user_name
        ) AS tech_row_hash
        ,vt_comment.tech_data_load_utc_timestamp
        ,vt_comment.tech_data_load_uuid
    FROM stage.vtiger_modcomments_i AS vt_comment
    JOIN stage.vtiger_crmentity_i AS vt_crmentity ON vt_comment.modcommentsid = vt_crmentity.crmid
    JOIN stage.vtiger_users_i AS vt_user_created ON vt_user_created.id = vt_crmentity.smcreatorid
    JOIN stage.vtiger_users_i AS vt_user_modified ON vt_user_modified.id = vt_crmentity.modifiedby
    JOIN stage.vtiger_crmentity_i AS vt_crmentity_related_to_crm ON vt_comment.related_to = vt_crmentity_related_to_crm.crmid
    JOIN stage.vtiger_contactdetails_i AS vt_contact ON vt_contact.contactid = vt_crmentity_related_to_crm.crmid
    WHERE vt_crmentity_related_to_crm.setype = 'Contacts'
    UNION ALL
    --Comments from Account to Organization
    SELECT
        vt_comment.modcommentsid AS comment_key
        ,vt_comment.commentcontent AS comment_body
        ,ORGANIZATION_TABLE AS table_name_comment_on
        ,vt_account.account_no AS record_key_comment_on
        ,EMPLOYEE_TABLE AS table_name_commenter --becasue only employees can use CRM i can simplyfi this transform by simply put EMPLOYEE
        ,vt_user_created.user_name AS record_key_commenter
        ,vt_crmentity.createdtime::TIMESTAMP WITH TIME ZONE AT TIME ZONE vt_user_created.time_zone AS created_timestamp
        ,vt_crmentity.modifiedtime::TIMESTAMP WITH TIME ZONE AT TIME ZONE vt_user_modified.time_zone AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,vt_crmentity.deleted::bool AS tech_deleted_in_source_system
        ,md5(
        COALESCE(vt_comment.commentcontent, '')
        || vt_account.account_no
        || vt_crmentity.deleted::TEXT
        || ORGANIZATION_TABLE
        || EMPLOYEE_TABLE
        || vt_user_created.user_name
        || vt_user_modified.user_name
        ) AS tech_row_hash
        ,vt_comment.tech_data_load_utc_timestamp
        ,vt_comment.tech_data_load_uuid
    FROM stage.vtiger_modcomments_i AS vt_comment
    JOIN stage.vtiger_crmentity_i AS vt_crmentity ON vt_comment.modcommentsid = vt_crmentity.crmid
    JOIN stage.vtiger_users_i AS vt_user_created ON vt_user_created.id = vt_crmentity.smcreatorid
    JOIN stage.vtiger_users_i AS vt_user_modified ON vt_user_modified.id = vt_crmentity.modifiedby
    JOIN stage.vtiger_crmentity_i AS vt_crmentity_related_to_crm ON vt_comment.related_to = vt_crmentity_related_to_crm.crmid
    JOIN stage.vtiger_account_i AS vt_account ON vt_account.accountid = vt_crmentity_related_to_crm.crmid
    WHERE vt_crmentity_related_to_crm.setype = 'Accounts';
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.comment_i (
        comment_key
        ,comment_body
        ,table_name_comment_on
        ,record_key_comment_on
        ,table_name_commenter
        ,record_key_commenter
        ,created_timestamp
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_comment_i.comment_key
        ,tmp_comment_i.comment_body
        ,tmp_comment_i.table_name_comment_on
        ,tmp_comment_i.record_key_comment_on
        ,tmp_comment_i.table_name_commenter
        ,tmp_comment_i.record_key_commenter
        ,tmp_comment_i.created_timestamp
        ,tmp_comment_i.last_modified_timestamp
        ,tmp_comment_i.tech_insert_function
        ,tmp_comment_i.tech_insert_utc_timestamp
        ,tmp_comment_i.tech_deleted_in_source_system
        ,tmp_comment_i.tech_row_hash
        ,tmp_comment_i.tech_data_load_utc_timestamp
        ,tmp_comment_i.tech_data_load_uuid
    FROM tmp_comment_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_vtiger_trg_contact_i" id="Procedure_d5d87e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_vtiger_trg_contact_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================
    DESCRIPTION:        Insert data from stage 'vtiger_*' tables into core input table contact_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =============================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
NULL_UTC_TIMESTAMP TIMESTAMP := to_timestamp(0)::TIMESTAMP AT TIME ZONE 'UTC';
stack text;
FUNCTION_NAME text;
LEAD_CONTACT_FLAG TEXT := 'CONTACT';
LEAD_ORGANIZATION_FLAG TEXT:= 'ORGANIZATION';
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.contact_i (
        contact_id
        ,contact_key
        ,crm_id
        ,salutation
        ,fk_organization_id
        ,title
        ,department
        ,reference
        ,lead_source
        ,lead_source_details
        ,profesional_profile
        ,external_inteligence
        ,description
        ,flag_do_not_contact
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,mailing_country
        ,mailing_state
        ,mailing_city
        ,mailing_zip
        ,mailing_post_office_box
        ,mailing_street
        ,fk_party_id
        ,fk_employee_id_assigned_to
        ,fk_employee_id_created_by
        ,fk_employee_id_last_modified_by
        ,created_timestamp
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    VALUES (
        -1 -- contact_id
        ,'NULL_CONTACT' -- contact_key
        ,0 -- crm_id
        ,'' -- salutation
        ,-1 -- fk_organization_id
        ,'' -- title
        ,'' -- department
        ,'' -- reference
        ,'' -- lead_source
        ,'' -- lead_source_details
        ,'' -- profesional_profile
        ,'' -- external_inteligence
        ,'' -- description
        ,TRUE -- flag_do_not_contact
        ,'' -- email
        ,'' -- secondary_email
        ,'' -- phone
        ,'' -- mobile_phone
        ,'' -- mailing_country
        ,'' -- mailing_state
        ,'' -- mailing_city
        ,'' -- mailing_zip
        ,'' -- mailing_post_office_box
        ,'' -- mailing_street
        ,-1 -- fk_party_id
        ,-1 -- fk_employee_id_assigned_to
        ,-1 -- fk_employee_id_created_by
        ,-1 -- fk_employee_id_last_modified_by
        ,NULL_UTC_TIMESTAMP -- created_timestamp
        ,NULL_UTC_TIMESTAMP -- last_modified_timestamp
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,'' -- tech_row_hash
        ,0 -- tech_data_load_utc_timestamp
        ,'' -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_contact_i;
    CREATE TEMPORARY TABLE tmp_contact_i (
        contact_key                         TEXT NOT NULL
        ,crm_id                             INTEGER NOT NULL
        ,salutation                         TEXT
        ,fk_organization_id                 INTEGER NOT NULL
        ,title                              TEXT
        ,department                         TEXT
        ,reference                          TEXT
        ,lead_source                        TEXT
        ,lead_source_details                TEXT
        ,profesional_profile                TEXT
        ,external_inteligence               TEXT
        ,description                        TEXT
        ,flag_do_not_contact                bool
        ,email                              TEXT
        ,secondary_email                    TEXT
        ,phone                              TEXT
        ,mobile_phone                       TEXT
        ,fk_party_id                        INTEGER NOT NULL
        ,mailing_country                    TEXT
        ,mailing_state                      TEXT
        ,mailing_city                       TEXT
        ,mailing_zip                        TEXT
        ,mailing_post_office_box            TEXT
        ,mailing_street                     TEXT
        ,fk_employee_id_assigned_to         INTEGER NOT NULL
        ,fk_employee_id_created_by          INTEGER NOT NULL
        ,fk_employee_id_last_modified_by    INTEGER NOT NULL
        ,created_timestamp                  timestamptz NOT NULL
        ,last_modified_timestamp            timestamptz NOT NULL
        ,tech_insert_function               TEXT NOT NULL
        ,tech_insert_utc_timestamp          BIGINT NOT NULL
        ,tech_deleted_in_source_system      BOOL NOT NULL
        ,tech_row_hash                      TEXT NOT NULL
        ,tech_data_load_utc_timestamp       BIGINT NOT NULL
        ,tech_data_load_uuid                TEXT NOT NULL
     );
    INSERT INTO tmp_contact_i (
        contact_key
        ,crm_id
        ,salutation
        ,fk_organization_id
        ,title
        ,department
        ,reference
        ,lead_source
        ,lead_source_details
        ,profesional_profile
        ,external_inteligence
        ,description
        ,flag_do_not_contact
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,mailing_country
        ,mailing_state
        ,mailing_city
        ,mailing_street
        ,mailing_zip
        ,mailing_post_office_box
        ,fk_party_id
        ,fk_employee_id_assigned_to
        ,fk_employee_id_created_by
        ,fk_employee_id_last_modified_by
        ,created_timestamp
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    --from contact
    SELECT
        contact.contact_no AS contact_key
        ,crm.crmid AS crm_id
        ,contact.salutation
        ,CASE WHEN organization.organization_id IS NULL THEN -1
            ELSE organization.organization_id
        END AS fk_organization_id
        ,contact.title AS title
        ,contact.department
        ,contact.reference
        ,subdetail.leadsource AS lead_source
        ,contact_custom_field.cf_787 AS lead_source_details
        ,contact_custom_field.cf_773 AS profesional_profile
        ,contact_custom_field.cf_843 AS external_inteligence
        ,crm.description
        ,contact.emailoptout::bool AS flag_do_not_contact
        ,contact.email AS email
        ,contact.secondaryemail AS secondary_email
        ,contact.phone AS phone
        ,contact.mobile AS mobile_phone
        ,address.mailingcountry AS mailing_country
        ,address.mailingstate AS mailing_state
        ,address.mailingcity AS mailing_city
        ,address.mailingstreet AS mailing_street
        ,address.mailingzip AS mailing_zip
        ,address.mailingpobox AS mailing_post_office_box
        ,party.party_id AS fk_party_id
        ,employee_assigned.employee_id AS fk_employee_id_assigned_to
        ,employee_created.employee_id AS fk_employee_id_created_by
        ,employee_modified.employee_id AS fk_employee_id_last_modified_by
        ,(crm.createdtime || ' ' || user_created.time_zone)::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,(crm.modifiedtime || ' ' || user_modified.time_zone)::TIMESTAMP WITH TIME ZONE AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,crm.deleted::bool AS tech_deleted_in_source_system
        ,md5(
           COALESCE(contact.salutation, '')
        || COALESCE(organization.organization_key, '')
        || COALESCE(contact.title, '')
        || COALESCE(contact.department, '')
        || COALESCE(contact.reference, '')
        || COALESCE(subdetail.leadsource, '')
        || COALESCE(contact_custom_field.cf_787, '')
        || COALESCE(contact_custom_field.cf_773, '')
        || COALESCE(contact_custom_field.cf_843, '')
        || COALESCE(crm.description, '')
        || COALESCE(contact.emailoptout, '')
        || COALESCE(contact.email, '')
        || COALESCE(contact.secondaryemail, '')
        || COALESCE(contact.phone, '')
        || COALESCE(contact.mobile, '')
        || COALESCE(address.mailingcountry, '')
        || COALESCE(address.mailingstreet, '')
        || COALESCE(address.mailingpobox, '')
        || COALESCE(address.mailingcity, '')
        || COALESCE(address.mailingzip, '')
        || COALESCE(address.mailingstate)
        || employee_assigned.employee_key
        || employee_created.employee_key
        || crm.deleted
        ) AS tech_row_hash
        ,contact.tech_data_load_utc_timestamp
        ,contact.tech_data_load_uuid
    FROM stage.vtiger_contactdetails_i AS contact
    JOIN stage.vtiger_contactsubdetails_i AS subdetail ON subdetail.contactsubscriptionid = contact.contactid
    JOIN stage.vtiger_contactscf_i AS contact_custom_field ON contact_custom_field.contactid = contact.contactid
    JOIN stage.vtiger_contactaddress_i AS address ON address.contactaddressid = contact.contactid
    JOIN stage.vtiger_crmentity_i AS crm ON crm.crmid = contact.contactid
    JOIN stage.vtiger_users_i AS user_assigned ON user_assigned.id = crm.smownerid
    JOIN stage.vtiger_users_i AS user_created ON user_created.id = crm.smcreatorid
    JOIN stage.vtiger_users_i AS user_modified ON user_modified.id = crm.modifiedby
    JOIN core.employee_i AS employee_assigned ON employee_assigned.employee_key = user_assigned.user_name
    JOIN core.employee_i AS employee_created ON employee_created.employee_key = user_created.user_name
    JOIN core.employee_i AS employee_modified ON employee_modified.employee_key = user_modified.user_name
    JOIN pg_timezone_names AS tz_created ON tz_created.name = user_created.time_zone
    JOIN pg_timezone_names AS tz_modified ON tz_modified.name = user_modified.time_zone
    JOIN core.party_i AS party ON contact.contact_no = party.party_key
    LEFT JOIN stage.vtiger_account_i AS account ON account.accountid = contact.accountid
    LEFT JOIN core.organization_i AS organization ON organization.organization_key = account.account_no
    UNION ALL
    --from lead
    SELECT
        lead.lead_no || LEAD_CONTACT_FLAG AS contact_key
        ,crm.crmid AS crm_id
        ,lead.salutation
        ,CASE WHEN organization.organization_id IS NULL THEN -1
            ELSE organization.organization_id
        END AS fk_organization_id
        ,lead.designation AS title
        ,null::text AS department
        ,lead_custom_field.cf_757 AS reference
        ,lead.leadsource AS lead_source
        ,lead_custom_field.cf_791 AS lead_source_details
        ,lead_custom_field.cf_771 AS profesional_profile
        ,lead_custom_field.cf_864 AS external_inteligence
        ,crm.description
        ,false AS flag_do_not_contact --lead doesn't have this flag so we set it to TRUE
        ,lead.email AS email
        ,lead.secondaryemail AS secondary_email
        ,address.phone AS phone
        ,address.mobile AS mobile_phone
        ,address.country AS mailing_country
        ,address."state" AS mailing_state
        ,address.city AS mailing_city
        ,address.lane AS mailing_street
        ,address.code AS mailing_zip
        ,address.pobox AS mailing_post_office_box
        ,party.party_id AS fk_party_id
        ,employee_assigned.employee_id AS fk_employee_id_assigned_to
        ,employee_created.employee_id AS fk_employee_id_created_by
        ,employee_modified.employee_id AS fk_employee_id_last_modified_by
        ,(crm.createdtime || ' ' || user_created.time_zone)::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,(crm.modifiedtime || ' ' || user_modified.time_zone)::TIMESTAMP WITH TIME ZONE AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,crm.deleted::bool OR lead.converted::bool AS tech_deleted_in_source_system
        ,md5(
           COALESCE(lead.salutation, '')
        || COALESCE(organization.organization_key, '')
        || COALESCE(lead.designation, '')
        || COALESCE(lead_custom_field.cf_757, '')
        || COALESCE(lead.leadsource, '')
        || COALESCE(lead_custom_field.cf_791, '')
        || COALESCE(lead_custom_field.cf_771, '')
        || COALESCE(lead_custom_field.cf_864, '')
        || COALESCE(crm.description, '')
        || COALESCE(lead.email, '')
        || COALESCE(lead.secondaryemail, '')
        || COALESCE(address.phone, '')
        || COALESCE(address.mobile, '')
        || COALESCE(address.country, '')
        || COALESCE(address."state" )
        || COALESCE(address.city, '')
        || COALESCE(address.lane, '')
        || COALESCE(address.code, '')
        || COALESCE(address.pobox, '')
        || employee_assigned.employee_key
        || employee_created.employee_key
        || crm.deleted
        || lead.converted
        ) AS tech_row_hash
        ,lead.tech_data_load_utc_timestamp
        ,lead.tech_data_load_uuid
    FROM stage.vtiger_leaddetails_i AS lead
    JOIN stage.vtiger_leadaddress_i AS address ON address.leadaddressid = lead.leadid
    JOIN stage.vtiger_leadscf_i AS lead_custom_field ON lead.leadid = lead_custom_field.leadid
    JOIN stage.vtiger_crmentity_i AS crm ON crm.crmid = lead.leadid
    JOIN stage.vtiger_users_i AS user_assigned ON user_assigned.id = crm.smownerid
    JOIN stage.vtiger_users_i AS user_created ON user_created.id = crm.smcreatorid
    JOIN stage.vtiger_users_i AS user_modified ON user_modified.id = crm.modifiedby
    JOIN core.employee_i AS employee_assigned ON employee_assigned.employee_key = user_assigned.user_name
    JOIN core.employee_i AS employee_created ON employee_created.employee_key = user_created.user_name
    JOIN core.employee_i AS employee_modified ON employee_modified.employee_key = user_modified.user_name
    JOIN core.party_i AS party ON lead.lead_no || LEAD_CONTACT_FLAG = party.party_key
    LEFT JOIN core.organization_i AS organization ON organization.organization_key = lead.lead_no || LEAD_ORGANIZATION_FLAG;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.contact_i (
        contact_key
        ,crm_id
        ,salutation
        ,fk_organization_id
        ,title
        ,department
        ,reference
        ,lead_source
        ,lead_source_details
        ,profesional_profile
        ,external_inteligence
        ,description
        ,flag_do_not_contact
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,mailing_country
        ,mailing_state
        ,mailing_city
        ,mailing_zip
        ,mailing_post_office_box
        ,mailing_street
        ,fk_party_id
        ,fk_employee_id_assigned_to
        ,fk_employee_id_created_by
        ,fk_employee_id_last_modified_by
        ,created_timestamp
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_contact_i.contact_key
        ,tmp_contact_i.crm_id
        ,tmp_contact_i.salutation
        ,tmp_contact_i.fk_organization_id
        ,tmp_contact_i.title
        ,tmp_contact_i.department
        ,tmp_contact_i.reference
        ,tmp_contact_i.lead_source
        ,tmp_contact_i.lead_source_details
        ,tmp_contact_i.profesional_profile
        ,tmp_contact_i.external_inteligence
        ,tmp_contact_i.description
        ,tmp_contact_i.flag_do_not_contact
        ,tmp_contact_i.email
        ,tmp_contact_i.secondary_email
        ,tmp_contact_i.phone
        ,tmp_contact_i.mobile_phone
        ,tmp_contact_i.mailing_country
        ,tmp_contact_i.mailing_state
        ,tmp_contact_i.mailing_city
        ,tmp_contact_i.mailing_zip
        ,tmp_contact_i.mailing_post_office_box
        ,tmp_contact_i.mailing_street
        ,tmp_contact_i.fk_party_id
        ,tmp_contact_i.fk_employee_id_assigned_to
        ,tmp_contact_i.fk_employee_id_created_by
        ,tmp_contact_i.fk_employee_id_last_modified_by
        ,tmp_contact_i.created_timestamp
        ,tmp_contact_i.last_modified_timestamp
        ,tmp_contact_i.tech_insert_function
        ,tmp_contact_i.tech_insert_utc_timestamp
        ,tmp_contact_i.tech_deleted_in_source_system
        ,tmp_contact_i.tech_row_hash
        ,tmp_contact_i.tech_data_load_utc_timestamp
        ,tmp_contact_i.tech_data_load_uuid
    FROM tmp_contact_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_vtiger_trg_email_i" id="Procedure_24f0c06" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_vtiger_trg_email_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================
    DESCRIPTION:        Insert data from stage 'vtiger_*' tables into core input table email_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
LEAD_CONTACT_FLAG TEXT := 'CONTACT';
LEAD_ORGANIZATION_FLAG TEXT:= 'ORGANIZATION';
ORGANIZATION_TABLE TEXT:= 'core.organization';
CONTACT_TABLE TEXT:= 'core.contact';
LOPP_TABLE TEXT:= 'core.lopp';
SERVICE_CONTRACT_TABLE TEXT:= 'core.service_contract';
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack FROM 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_email_i;
    CREATE TEMPORARY TABLE tmp_email_i (
        email_key                       TEXT
        ,subject                        TEXT
        ,body                           TEXT
        ,recipients_list                _text
        ,cc_list                        _text
        ,bcc_list                       _text
        ,table_name_related_to      TEXT NOT NULL
        ,record_key_related_to          TEXT NOT NULL
        ,email_sender                   TEXT NOT NULL
        ,sent_timestamp                 TIMESTAMP WITH TIME ZONE NOT NULL
        ,tech_insert_function           TEXT NOT NULL
        ,tech_insert_utc_timestamp      BIGINT NOT NULL
        ,tech_deleted_in_source_system  BOOL NOT NULL
        ,tech_row_hash                  TEXT NOT NULL
        ,tech_data_load_utc_timestamp   BIGINT NOT NULL
        ,tech_data_load_uuid            TEXT NOT NULL
    );
    WITH foo AS (
    SELECT
        email.emailid AS email_key
        ,activity.subject AS subject
        ,crm_entiry_email.description AS body
        ,string_to_array(regexp_replace(replace(substring(email.to_email,3,length(email.to_email)-4),'","', ','),'^,*',''),',')::_text  AS recipients_list
        ,string_to_array(regexp_replace(replace(substring(email.cc_email,3,length(email.cc_email)-4),'","', ','),'^,*',''),',')::_text  AS cc_list
        ,string_to_array(regexp_replace(replace(substring(email.bcc_email,3,length(email.bcc_email)-4),'","', ','),'^,*',''),',')::_text  AS bcc_list
        ,email.from_email::TEXT AS email_sender
        ,(activity.date_start || ' ' || time_start || ' ' || users.time_zone)::TIMESTAMP WITH TIME ZONE AS sent_timestamp
        ,unnest(regexp_matches(email.idlists, '([0-9]*)@', 'g'))::TEXT AS related_to
        ,FUNCTION_NAME::TEXT AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,crm_entiry_email.deleted::BOOL AS tech_deleted_in_source_system
        ,md5(
        COALESCE(activity.subject, '')
        || COALESCE(crm_entiry_email.description, '')
        || COALESCE(email.to_email, '')
        || COALESCE(email.cc_email, '')
        || COALESCE(email.bcc_email, '')
        || COALESCE(email.from_email, '')
        || COALESCE(activity.date_start, '')
        || COALESCE(activity.time_start, '')
        || COALESCE(email.idlists, '')
        || crm_entiry_email.deleted::TEXT
        ) AS tech_row_hash
        ,email.tech_data_load_utc_timestamp
        ,email.tech_data_load_uuid
    FROM stage.vtiger_emaildetails_i AS email
    JOIN stage.vtiger_activity_i AS activity ON activity.activityid = email.emailid
    JOIN stage.vtiger_crmentity_i AS crm_entiry_email ON crm_entiry_email.crmid = email.emailid
    JOIN stage.vtiger_users_i AS users ON users.id = crm_entiry_email.smownerid
    )
    INSERT INTO tmp_email_i (
        email_key
        ,subject
        ,body
        ,recipients_list
        ,cc_list
        ,bcc_list
        ,table_name_related_to
        ,record_key_related_to
        ,email_sender
        ,sent_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    -- comments FROM contacts
    )
    SELECT
        foo.email_key
        ,foo.subject
        ,foo.body
        ,foo.recipients_list
        ,foo.cc_list
        ,foo.bcc_list
        ,CONTACT_TABLE AS table_name_related_to
        ,stage_contact.contact_no AS record_key_related_to
        ,foo.email_sender
        ,foo.sent_timestamp
        ,foo.tech_insert_function
        ,foo.tech_insert_utc_timestamp
        ,foo.tech_deleted_in_source_system
        ,foo.tech_row_hash
        ,foo.tech_data_load_utc_timestamp
        ,foo.tech_data_load_uuid
    FROM foo
    JOIN stage.vtiger_crmentity_i AS crm ON crm.crmid = foo.related_to::integer AND crm.setype = 'Contacts'
    JOIN stage.vtiger_contactdetails_i AS stage_contact ON stage_contact.contactid = crm.crmid
    JOIN core.contact_i AS core_contact ON core_contact.contact_key = stage_contact.contact_no
    WHERE foo.related_to != ''
    UNION ALL
    -- comments FROM potentials
    SELECT
        foo.email_key
        ,foo.subject
        ,foo.body
        ,foo.recipients_list
        ,foo.cc_list
        ,foo.bcc_list
        ,LOPP_TABLE AS table_name_related_to
        ,potential.potential_no AS record_key_related_to
        ,foo.email_sender
        ,foo.sent_timestamp
        ,foo.tech_insert_function
        ,foo.tech_insert_utc_timestamp
        ,foo.tech_deleted_in_source_system
        ,foo.tech_row_hash
        ,foo.tech_data_load_utc_timestamp
        ,foo.tech_data_load_uuid
    FROM foo
    JOIN stage.vtiger_crmentity_i AS crm ON crm.crmid = foo.related_to::integer AND crm.setype = 'Potentials'
    JOIN stage.vtiger_potential_i AS potential ON potential.potentialid = crm.crmid
    WHERE foo.related_to != ''
    UNION ALL
    -- comments FROM leads
    SELECT
        foo.email_key
        ,foo.subject
        ,foo.body
        ,foo.recipients_list
        ,foo.cc_list
        ,foo.bcc_list
        ,LOPP_TABLE AS table_name_related_to
        ,lead.lead_no AS record_key_related_to
        ,foo.email_sender
        ,foo.sent_timestamp
        ,foo.tech_insert_function
        ,foo.tech_insert_utc_timestamp
        ,foo.tech_deleted_in_source_system
        ,foo.tech_row_hash
        ,foo.tech_data_load_utc_timestamp
        ,foo.tech_data_load_uuid
    FROM foo
    JOIN stage.vtiger_crmentity_i AS crm ON crm.crmid = foo.related_to::INTEGER AND crm.setype = 'Leads'
    JOIN stage.vtiger_leaddetails_i AS lead ON lead.leadid = crm.crmid
    WHERE foo.related_to != ''
    UNION ALL
    -- comments for contacts FROM leads
    SELECT
        foo.email_key
        ,foo.subject
        ,foo.body
        ,foo.recipients_list
        ,foo.cc_list
        ,foo.bcc_list
        ,CONTACT_TABLE AS table_name_related_to
        ,lead.lead_no || LEAD_CONTACT_FLAG AS record_key_related_to
        ,foo.email_sender
        ,foo.sent_timestamp
        ,foo.tech_insert_function
        ,foo.tech_insert_utc_timestamp
        ,foo.tech_deleted_in_source_system
        ,foo.tech_row_hash
        ,foo.tech_data_load_utc_timestamp
        ,foo.tech_data_load_uuid
    FROM foo
    JOIN stage.vtiger_crmentity_i AS crm ON crm.crmid = foo.related_to::INTEGER AND crm.setype = 'Leads'
    JOIN stage.vtiger_leaddetails_i AS lead ON lead.leadid = crm.crmid
    WHERE foo.related_to != ''
    UNION ALL
    -- comments for organization FROM leads
    SELECT
        foo.email_key
        ,foo.subject
        ,foo.body
        ,foo.recipients_list
        ,foo.cc_list
        ,foo.bcc_list
        ,ORGANIZATION_TABLE AS table_name_related_to
        ,lead.lead_no || LEAD_ORGANIZATION_FLAG AS record_key_related_to
        ,foo.email_sender
        ,foo.sent_timestamp
        ,foo.tech_insert_function
        ,foo.tech_insert_utc_timestamp
        ,foo.tech_deleted_in_source_system
        ,foo.tech_row_hash
        ,foo.tech_data_load_utc_timestamp
        ,foo.tech_data_load_uuid
    FROM foo
    JOIN stage.vtiger_crmentity_i AS crm ON crm.crmid = foo.related_to::INTEGER AND crm.setype = 'Leads'
    JOIN stage.vtiger_leaddetails_i AS lead ON lead.leadid = crm.crmid
    WHERE foo.related_to != ''
    UNION ALL
    -- comments FROM service contracts
    SELECT
        foo.email_key
        ,foo.subject
        ,foo.body
        ,foo.recipients_list
        ,foo.cc_list
        ,foo.bcc_list
        ,SERVICE_CONTRACT_TABLE AS table_name_related_to
        --service contract doens't have a code so we use CRM_ID as a UID. -> therefore we can JOIN core table ON stage crm table directly.
        ,crm.crmid::text AS record_key_related_to
        ,foo.email_sender
        ,foo.sent_timestamp
        ,foo.tech_insert_function
        ,foo.tech_insert_utc_timestamp
        ,foo.tech_deleted_in_source_system
        ,foo.tech_row_hash
        ,foo.tech_data_load_utc_timestamp
        ,foo.tech_data_load_uuid
    FROM foo
    JOIN stage.vtiger_crmentity_i AS crm ON crm.crmid = foo.related_to::INTEGER AND crm.setype = 'ServiceContracts'
    WHERE foo.related_to != ''
    UNION ALL
    -- comments FROM Accounts
    SELECT
        foo.email_key
        ,foo.subject
        ,foo.body
        ,foo.recipients_list
        ,foo.cc_list
        ,foo.bcc_list
        ,ORGANIZATION_TABLE as table_name_related_to
        ,account.account_no as record_key_related_to
        ,foo.email_sender
        ,foo.sent_timestamp
        ,foo.tech_insert_function
        ,foo.tech_insert_utc_timestamp
        ,foo.tech_deleted_in_source_system
        ,foo.tech_row_hash
        ,foo.tech_data_load_utc_timestamp
        ,foo.tech_data_load_uuid
    FROM foo
    JOIN stage.vtiger_crmentity_i AS crm ON crm.crmid = foo.related_to::INTEGER AND crm.setype = 'Accounts'
    JOIN stage.vtiger_account_i AS account ON account.accountid = crm.crmid
    WHERE foo.related_to != '';
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.email_i (
        email_key
        ,subject
        ,body
        ,recipients_list
        ,cc_list
        ,bcc_list
        ,table_name_related_to
        ,record_key_related_to
        ,email_sender
        ,sent_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_email_i.email_key
        ,tmp_email_i.subject
        ,tmp_email_i.body
        ,tmp_email_i.recipients_list
        ,tmp_email_i.cc_list
        ,tmp_email_i.bcc_list
        ,tmp_email_i.table_name_related_to
        ,tmp_email_i.record_key_related_to
        ,tmp_email_i.email_sender
        ,tmp_email_i.sent_timestamp
        ,tmp_email_i.tech_insert_function
        ,tmp_email_i.tech_insert_utc_timestamp
        ,tmp_email_i.tech_deleted_in_source_system
        ,tmp_email_i.tech_row_hash
        ,tmp_email_i.tech_data_load_utc_timestamp
        ,tmp_email_i.tech_data_load_uuid
    FROM tmp_email_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_vtiger_trg_employee_i" id="Procedure_371cac2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_vtiger_trg_employee_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ==============================================================================================
    DESCRIPTION:        Insert data from stage 'vtiger_*' tables into core input table employee_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    ==============================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
NULL_UTC_TIMESTAMP TIMESTAMP := to_timestamp(0)::TIMESTAMP AT TIME ZONE 'UTC';
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.employee_i (
        employee_id
        ,employee_key
        ,full_name
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,created_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    VALUES (
        -1 -- employee_id
        ,'NULL_EMPLOYEE' -- employee_key
        ,''-- full_name
        ,'' -- email
        ,'' -- secondary_email
        ,'' -- phone
        ,'' -- mobile_phone
        ,NULL_UTC_TIMESTAMP -- created_timestamp
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,'' -- tech_row_hash
        ,0 -- tech_data_load_utc_timestamp
        ,'' -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_employee_i cascade;
    CREATE TEMPORARY TABLE tmp_employee_i (
        employee_key                    TEXT PRIMARY KEY
        ,full_name                      TEXT NOT NULL
        ,email                          TEXT NOT NULL
        ,secondary_email                TEXT NOT NULL
        ,phone                          TEXT NOT NULL
        ,mobile_phone                   TEXT NOT NULL
        ,created_timestamp              TIMESTAMP WITH TIME ZONE NOT NULL
        ,tech_insert_function           TEXT NOT NULL
        ,tech_insert_utc_timestamp      BIGINT NOT NULL
        ,tech_deleted_in_source_system  BOOL NOT NULL
        ,tech_row_hash                  TEXT NOT NULL
        ,tech_data_load_utc_timestamp   BIGINT NOT NULL
        ,tech_data_load_uuid            TEXT NOT NULL
    );
    INSERT INTO tmp_employee_i (
        employee_key
        ,full_name
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,created_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        vt_user.user_name AS employee_key
        ,COALESCE(vt_user.first_name || ' ' || vt_user.last_name, vt_user.last_name, vt_user.last_name) AS full_name
        ,vt_user.email1 AS email
        ,vt_user.email2 AS secondary_email
        ,vt_user.phone_work AS phone
        ,vt_user.phone_mobile AS mobile_phone
        ,(vt_user.date_entered || ' ' || vt_user.time_zone)::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,vt_user.deleted::bool AS tech_deleted_in_source_system
        ,md5(
           COALESCE(vt_user.first_name, '')
        || COALESCE(vt_user.last_name, '')
        || COALESCE(vt_user.email1, '')
        || COALESCE(vt_user.email2, '')
        || COALESCE(vt_user.phone_work, '')
        || COALESCE(vt_user.phone_mobile, '')
        || vt_user.deleted
        ) AS tech_row_hash
        ,vt_user.tech_data_load_utc_timestamp
        ,vt_user.tech_data_load_uuid
    FROM stage.vtiger_users_i AS vt_user;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.employee_i (
        employee_key
        ,full_name
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,created_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_employee_i.employee_key
        ,tmp_employee_i.full_name
        ,tmp_employee_i.email
        ,tmp_employee_i.secondary_email
        ,tmp_employee_i.phone
        ,tmp_employee_i.mobile_phone
        ,tmp_employee_i.created_timestamp
        ,tmp_employee_i.tech_insert_function
        ,tmp_employee_i.tech_insert_utc_timestamp
        ,tmp_employee_i.tech_deleted_in_source_system
        ,tmp_employee_i.tech_row_hash
        ,tmp_employee_i.tech_data_load_utc_timestamp
        ,tmp_employee_i.tech_data_load_uuid
    FROM tmp_employee_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_vtiger_trg_lopp_campaign_contact_map_i" id="Procedure_18f432a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_vtiger_trg_lopp_campaign_contact_map_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===============================================================================================================
    DESCRIPTION:        Insert data from stage 'vtiger_*' tables into core input table lopp_campaign_contact_map_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    ===============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
NULL_UTC_TIMESTAMP TIMESTAMP := to_timestamp(0)::TIMESTAMP AT TIME ZONE 'UTC';
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_lopp_campaign_contact_map_i;
    CREATE TEMPORARY TABLE tmp_lopp_campaign_contact_map_i (
        lopp_campaign_key                   TEXT NOT NULL
        ,contact_key                        TEXT NOT NULL
        ,fk_lopp_campaign_id                INTEGER NOT NULL
        ,fk_contact_id                      INTEGER NOT NULL
        ,tech_insert_function               TEXT NOT NULL
        ,tech_insert_utc_timestamp          BIGINT NOT NULL
        ,tech_deleted_in_source_system      BOOL NOT NULL DEFAULT FALSE
        ,tech_row_hash                      TEXT NOT NULL
        ,tech_data_load_utc_timestamp       BIGINT NOT NULL
        ,tech_data_load_uuid                TEXT NOT NULL
     );
    INSERT INTO tmp_lopp_campaign_contact_map_i (
        lopp_campaign_key
        ,contact_key
        ,fk_lopp_campaign_id
        ,fk_contact_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        lopp_campaign.lopp_campaign_key AS lopp_campaign_key
        ,contact.contact_key AS contact_key
        ,lopp_campaign.lopp_campaign_id AS fk_lopp_campaign_id
        ,contact.contact_id AS fk_contact_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,lopp_campaign.tech_deleted_in_source_system OR contact.tech_deleted_in_source_system AS tech_deleted_in_source_system -- sometimes vtiger points briges deleted and non-deleted records
        ,md5(
        vt_campaign_contanct_map.campaignid::TEXT
        || vt_campaign_contanct_map.contactid::TEXT
        || lopp_campaign.lopp_campaign_key
        || contact.contact_key
        ) AS tech_row_hash
        ,vt_campaign_contanct_map.tech_data_load_utc_timestamp
        ,vt_campaign_contanct_map.tech_data_load_uuid
    -- TABLE vtiger_campaigncontrel is not historized, when a contact is removed from campaign the associated record(row) is removed
    FROM stage.vtiger_campaigncontrel_i AS vt_campaign_contanct_map
    JOIN stage.vtiger_crmentity_i AS vt_campaign_crm_entity ON vt_campaign_crm_entity.crmid = vt_campaign_contanct_map.campaignid
    JOIN stage.vtiger_crmentity_i AS vt_contact_crm_entity ON vt_contact_crm_entity.crmid = vt_campaign_contanct_map.contactid
    JOIN core.lopp_campaign_i AS lopp_campaign ON lopp_campaign.crm_id = vt_campaign_contanct_map.campaignid
    JOIN core.contact_i AS contact ON contact.crm_id = vt_campaign_contanct_map.contactid
    UNION ALL
    SELECT
        lopp_campaign.lopp_campaign_key AS lopp_campaign_key
        ,contact.contact_key AS contact_key
        ,lopp_campaign.lopp_campaign_id AS fk_lopp_campaign_id
        ,contact.contact_id AS fk_contact_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,lopp_campaign.tech_deleted_in_source_system OR contact.tech_deleted_in_source_system AS tech_deleted_in_source_system -- sometimes vtiger points briges deleted and non-deleted records
        ,md5(
        vt_campaign_lead_map.campaignid::TEXT
        || vt_campaign_lead_map.leadid::TEXT
        || lopp_campaign.lopp_campaign_key
        || contact.contact_key
        ) AS tech_row_hash
        ,vt_campaign_lead_map.tech_data_load_utc_timestamp
        ,vt_campaign_lead_map.tech_data_load_uuid
    -- We add contacts that were created from leads
    FROM stage.vtiger_campaignleadrel_i AS vt_campaign_lead_map
    JOIN stage.vtiger_crmentity_i AS vt_campaign_crm_entity ON vt_campaign_crm_entity.crmid = vt_campaign_lead_map.campaignid
    JOIN stage.vtiger_crmentity_i AS vt_lead_crm_entity ON vt_lead_crm_entity.crmid = vt_campaign_lead_map.leadid
    JOIN core.lopp_campaign_i AS lopp_campaign ON lopp_campaign.crm_id = vt_campaign_lead_map.campaignid
    JOIN core.contact_i AS contact ON contact.crm_id = vt_campaign_lead_map.leadid;  -- leadid is the crm_id of contact because contacts were created from leads
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.lopp_campaign__contact_map_i (
        lopp_campaign_key
        ,contact_key
        ,fk_lopp_campaign_id
        ,fk_contact_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_lopp_campaign_contact_map_i.lopp_campaign_key
        ,tmp_lopp_campaign_contact_map_i.contact_key
        ,tmp_lopp_campaign_contact_map_i.fk_lopp_campaign_id
        ,tmp_lopp_campaign_contact_map_i.fk_contact_id
        ,tmp_lopp_campaign_contact_map_i.tech_insert_function
        ,tmp_lopp_campaign_contact_map_i.tech_insert_utc_timestamp
        ,tmp_lopp_campaign_contact_map_i.tech_deleted_in_source_system
        ,tmp_lopp_campaign_contact_map_i.tech_row_hash
        ,tmp_lopp_campaign_contact_map_i.tech_data_load_utc_timestamp
        ,tmp_lopp_campaign_contact_map_i.tech_data_load_uuid
    FROM tmp_lopp_campaign_contact_map_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_vtiger_trg_lopp_campaign_i" id="Procedure_2a25753" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_vtiger_trg_lopp_campaign_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===================================================================================================
    DESCRIPTION:        Insert data from stage 'vtiger_*' tables into core input table lopp_campaign_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    ===================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
NULL_UTC_TIMESTAMP TIMESTAMP := to_timestamp(0)::TIMESTAMP AT TIME ZONE 'UTC';
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_lopp_campaign_i;
    CREATE TEMPORARY TABLE tmp_lopp_campaign_i (
        lopp_campaign_key                   TEXT NOT NULL
        ,crm_id                             INTEGER NOT NULL
        ,campaign_name                      TEXT NOT NULL
        ,campaign_type                      TEXT
        ,campaign_status                    TEXT
        ,is_running                         bool NOT NULL
        ,description                        TEXT
        ,fk_date_id_start_date              INTEGER NOT NULL
        ,fk_date_id_expected_close_date     INTEGER NOT NULL
        ,fk_employee_id_created_by          INTEGER NOT NULL
        ,fk_employee_id_last_modified_by    INTEGER NOT NULL
        ,created_timestamp                  TIMESTAMP WITH TIME ZONE NOT NULL
        ,last_modified_timestamp            TIMESTAMP WITH TIME ZONE NOT NULL
        ,tech_insert_function               TEXT NOT NULL
        ,tech_insert_utc_timestamp          BIGINT NOT NULL
        ,tech_deleted_in_source_system      BOOL NOT NULL
        ,tech_row_hash                      TEXT NOT NULL
        ,tech_data_load_utc_timestamp       BIGINT NOT NULL
        ,tech_data_load_uuid                TEXT NOT NULL
     );
    INSERT INTO tmp_lopp_campaign_i(
        lopp_campaign_key
        ,crm_id
        ,campaign_name
        ,campaign_type
        ,campaign_status
        ,is_running
        ,description
        ,fk_date_id_start_date
        ,fk_date_id_expected_close_date
        ,fk_employee_id_created_by
        ,fk_employee_id_last_modified_by
        ,created_timestamp
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        campaign.campaign_no AS lopp_campaign_key
        ,crm_entity.crmid AS crm_id
        ,campaign.campaignname AS campaign_name
        ,campaign.campaigntype AS campaign_type
        ,campaign.campaignstatus AS campaign_status
        ,campaign_custom_field.cf_781::bool AS is_running
        ,crm_entity.description AS description
        ,CASE WHEN campaign_custom_field.cf_779 IS NULL THEN -1
            WHEN cf_779 = '' THEN -1
            ELSE replace(cf_779,'-','')::integer
        END AS fk_date_id_start_date
        ,CASE WHEN campaign.closingdate IS NULL THEN -1
            WHEN campaign.closingdate = '' THEN -1
            ELSE replace(campaign.closingdate,'-','')::integer
        END AS fk_date_id_end_date
        ,employee_created.employee_id AS fk_employee_id_created_by
        ,employee_modified.employee_id AS fk_employee_id_last_modified_by
        ,(crm_entity.createdtime || ' ' || user_created.time_zone)::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,(crm_entity.modifiedtime || ' ' || user_modified.time_zone)::TIMESTAMP WITH TIME ZONE AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,crm_entity.deleted::bool AS tech_deleted_in_source_system
        ,md5(
           COALESCE(campaign.campaignname, '')
        || COALESCE(campaign.campaigntype, '')
        || COALESCE(campaign.campaignstatus, '')
        || COALESCE(campaign_custom_field.cf_781, '')
        || COALESCE(crm_entity.description, '')
        || COALESCE(campaign_custom_field.cf_779, '')
        || COALESCE(campaign.closingdate, '')
        || employee_created.employee_key
        || employee_modified.employee_key
        || crm_entity.modifiedtime
        || crm_entity.modifiedby::TEXT
        || crm_entity.deleted
        ) AS tech_row_hash
        ,campaign.tech_data_load_utc_timestamp
        ,campaign.tech_data_load_uuid
    FROM stage.vtiger_campaign_i AS campaign
    JOIN stage.vtiger_campaignscf_i AS campaign_custom_field ON campaign_custom_field.campaignid = campaign.campaignid
    JOIN stage.vtiger_crmentity_i AS crm_entity ON crm_entity.crmid = campaign.campaignid
    JOIN stage.vtiger_users_i AS user_created ON user_created.id = crm_entity.smcreatorid
    JOIN stage.vtiger_users_i AS user_modified ON user_modified.id = crm_entity.modifiedby
    JOIN core.employee_i AS employee_created ON employee_created.employee_key = user_created.user_name
    JOIN core.employee_i AS employee_modified ON employee_modified.employee_key = user_modified.user_name;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.lopp_campaign_i (
        lopp_campaign_key
        ,crm_id
        ,campaign_name
        ,campaign_type
        ,campaign_status
        ,is_running
        ,description
        ,fk_date_id_start_date
        ,fk_date_id_expected_close_date
        ,fk_employee_id_created_by
        ,fk_employee_id_last_modified_by
        ,created_timestamp
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
         tmp_lopp_campaign_i.lopp_campaign_key
        ,tmp_lopp_campaign_i.crm_id
        ,tmp_lopp_campaign_i.campaign_name
        ,tmp_lopp_campaign_i.campaign_type
        ,tmp_lopp_campaign_i.campaign_status
        ,tmp_lopp_campaign_i.is_running
        ,tmp_lopp_campaign_i.description
        ,tmp_lopp_campaign_i.fk_date_id_start_date
        ,tmp_lopp_campaign_i.fk_date_id_expected_close_date
        ,tmp_lopp_campaign_i.fk_employee_id_created_by
        ,tmp_lopp_campaign_i.fk_employee_id_last_modified_by
        ,tmp_lopp_campaign_i.created_timestamp
        ,tmp_lopp_campaign_i.last_modified_timestamp
        ,tmp_lopp_campaign_i.tech_insert_function
        ,tmp_lopp_campaign_i.tech_insert_utc_timestamp
        ,tmp_lopp_campaign_i.tech_deleted_in_source_system
        ,tmp_lopp_campaign_i.tech_row_hash
        ,tmp_lopp_campaign_i.tech_data_load_utc_timestamp
        ,tmp_lopp_campaign_i.tech_data_load_uuid
    FROM tmp_lopp_campaign_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_vtiger_trg_lopp_campaign_lopp_map_i" id="Procedure_11b834f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_vtiger_trg_lopp_campaign_lopp_map_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Insert data from stage 'vtiger_*' tables into core input table lopp_campaign__lopp_map_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
NULL_UTC_TIMESTAMP TIMESTAMP := to_timestamp(0)::TIMESTAMP AT TIME ZONE 'UTC';
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_lopp_campaign_lopp_map_i;
    CREATE TEMPORARY TABLE tmp_lopp_campaign_lopp_map_i (
        lopp_campaign_key               TEXT NOT NULL
        ,lopp_key                       TEXT NOT NULL
        ,fk_lopp_campaign_id            INTEGER NOT NULL
        ,fk_lopp_id                     INTEGER NOT NULL
        ,tech_insert_function           TEXT NOT NULL
        ,tech_insert_utc_timestamp      BIGINT NOT NULL
        ,tech_deleted_in_source_system  BOOL NOT NULL
        ,tech_row_hash                  TEXT NOT NULL
        ,tech_data_load_utc_timestamp   BIGINT NOT NULL
        ,tech_data_load_uuid            TEXT NOT NULL
     );
    INSERT INTO tmp_lopp_campaign_lopp_map_i (
        lopp_campaign_key
        ,lopp_key
        ,fk_lopp_campaign_id
        ,fk_lopp_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        lopp_campaign.lopp_campaign_key
        ,lopp.lopp_key
        ,lopp_campaign.lopp_campaign_id AS fk_lopp_campaign_id
        ,lopp.lopp_id AS fk_lopp_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,lopp_campaign.tech_deleted_in_source_system OR lopp.tech_deleted_in_source_system AS tech_deleted_in_source_system
        ,md5(
        lopp_campaign.lopp_campaign_key
        || lopp.lopp_key
        ) AS tech_row_hash
        ,campaign_lead_map.tech_data_load_utc_timestamp
        ,campaign_lead_map.tech_data_load_uuid
    FROM stage.vtiger_campaignleadrel_i AS campaign_lead_map
    JOIN core.lopp_campaign_i AS lopp_campaign ON lopp_campaign.crm_id = campaign_lead_map.campaignid
    JOIN core.lopp_i AS lopp ON lopp.crm_id = campaign_lead_map.leadid
    UNION
    SELECT
        lopp_campaign.lopp_campaign_key
        ,lopp.lopp_key
        ,lopp_campaign.lopp_campaign_id AS fk_lopp_campaign_id
        ,lopp.lopp_id AS fk_lopp_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,lopp.tech_deleted_in_source_system OR lopp_campaign.tech_deleted_in_source_system AS tech_deleted_in_source_system
        ,md5(
        lopp_campaign.lopp_campaign_key
        || lopp.lopp_key
        ) AS tech_row_hash
        ,vt_potential.tech_data_load_utc_timestamp
        ,vt_potential.tech_data_load_uuid
    FROM stage.vtiger_potential_i AS vt_potential
    JOIN stage.vtiger_crmentity_i AS vt_potential_crm_entity ON vt_potential_crm_entity.crmid = vt_potential.potentialid
    JOIN stage.vtiger_campaign_i AS vt_campaign ON vt_campaign.campaignid = vt_potential.campaignid
    JOIN stage.vtiger_crmentity_i AS vt_campaign_crm_entity ON vt_campaign_crm_entity.crmid = vt_campaign.campaignid
    JOIN core.lopp_campaign_i AS lopp_campaign ON lopp_campaign.crm_id = vt_potential.campaignid
    JOIN core.lopp_i AS lopp ON lopp.crm_id = vt_potential.potentialid;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.lopp_campaign__lopp_map_i (
        lopp_key
        ,lopp_campaign_key
        ,fk_lopp_id
        ,fk_lopp_campaign_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_lopp_campaign_lopp_map_i.lopp_key
        ,tmp_lopp_campaign_lopp_map_i.lopp_campaign_key
        ,tmp_lopp_campaign_lopp_map_i.fk_lopp_id
        ,tmp_lopp_campaign_lopp_map_i.fk_lopp_campaign_id
        ,tmp_lopp_campaign_lopp_map_i.tech_insert_function
        ,tmp_lopp_campaign_lopp_map_i.tech_insert_utc_timestamp
        ,tmp_lopp_campaign_lopp_map_i.tech_deleted_in_source_system
        ,tmp_lopp_campaign_lopp_map_i.tech_row_hash
        ,tmp_lopp_campaign_lopp_map_i.tech_data_load_utc_timestamp
        ,tmp_lopp_campaign_lopp_map_i.tech_data_load_uuid
    FROM tmp_lopp_campaign_lopp_map_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_vtiger_trg_lopp_campaign_organization_map_i" id="Procedure_54cf7c6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_vtiger_trg_lopp_campaign_organization_map_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =====================================================================================================================
    DESCRIPTION:        Insert data from stage 'vtiger_*' tables into core input table lopp_campaign__organization_map_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =====================================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
NULL_UTC_TIMESTAMP TIMESTAMP := to_timestamp(0)::TIMESTAMP AT TIME ZONE 'UTC';
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_lopp_campaign_organization_map_i;
    CREATE TEMPORARY TABLE tmp_lopp_campaign_organization_map_i (
        lopp_campaign_key               TEXT NOT NULL
        ,organization_key               TEXT NOT NULL
        ,fk_lopp_campaign_id            INTEGER NOT NULL
        ,fk_organization_id             INTEGER NOT NULL
        ,tech_insert_function           TEXT NOT NULL
        ,tech_insert_utc_timestamp      BIGINT NOT NULL
        ,tech_deleted_in_source_system  BOOL NOT NULL
        ,tech_row_hash                  TEXT NOT NULL
        ,tech_data_load_utc_timestamp   BIGINT NOT NULL
        ,tech_data_load_uuid            TEXT NOT NULL
     );
    INSERT INTO tmp_lopp_campaign_organization_map_i (
        lopp_campaign_key
        ,organization_key
        ,fk_lopp_campaign_id
        ,fk_organization_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        lopp_campaign.lopp_campaign_key
        ,organization.organization_key
        ,lopp_campaign.lopp_campaign_id AS fk_lopp_campaign_id
        ,organization.organization_id AS fk_organization_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,lopp_campaign.tech_deleted_in_source_system OR organization.tech_deleted_in_source_system AS tech_deleted_in_source_system
        ,md5(
            lopp_campaign.lopp_campaign_key
        || organization.organization_key
        ) AS tech_row_hash
        ,campaign_organization_map.tech_data_load_utc_timestamp
        ,campaign_organization_map.tech_data_load_uuid
    FROM stage.vtiger_campaignaccountrel_i AS campaign_organization_map
    JOIN core.lopp_campaign_i AS lopp_campaign ON lopp_campaign.crm_id = campaign_organization_map.campaignid
    JOIN core.organization_i AS organization ON organization.crm_id = campaign_organization_map.accountid;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.lopp_campaign__organization_map_i (
        lopp_campaign_key
        ,organization_key
        ,fk_lopp_campaign_id
        ,fk_organization_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_lopp_campaign_organization_map_i.lopp_campaign_key
        ,tmp_lopp_campaign_organization_map_i.organization_key
        ,tmp_lopp_campaign_organization_map_i.fk_lopp_campaign_id
        ,tmp_lopp_campaign_organization_map_i.fk_organization_id
        ,tmp_lopp_campaign_organization_map_i.tech_insert_function
        ,tmp_lopp_campaign_organization_map_i.tech_insert_utc_timestamp
        ,tmp_lopp_campaign_organization_map_i.tech_deleted_in_source_system
        ,tmp_lopp_campaign_organization_map_i.tech_row_hash
        ,tmp_lopp_campaign_organization_map_i.tech_data_load_utc_timestamp
        ,tmp_lopp_campaign_organization_map_i.tech_data_load_uuid
    FROM tmp_lopp_campaign_organization_map_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_vtiger_trg_lopp_contact_map_i" id="Procedure_2d4bf51" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_vtiger_trg_lopp_contact_map_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =====================================================================================================================
    DESCRIPTION:        Insert data from stage 'vtiger_*' tables into core input table lopp__contact_map_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =====================================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_lopp_contact_map_i;
    CREATE TEMPORARY TABLE tmp_lopp_contact_map_i (
        contact_key                         TEXT NOT NULL
        ,lopp_key                           TEXT NOT NULL
        ,fk_contact_id                      INTEGER NOT NULL
        ,fk_lopp_id                         INTEGER NOT NULL
        ,tech_insert_function               TEXT NOT NULL
        ,tech_insert_utc_timestamp          BIGINT NOT NULL
        ,tech_deleted_in_source_system      BOOL NOT NULL
        ,tech_row_hash                      TEXT NOT NULL
        ,tech_data_load_utc_timestamp       BIGINT NOT NULL
        ,tech_data_load_uuid                TEXT NOT NULL
     );
    /* not all contacts related to a lopp are in 'vtiger_contpotentialrel' table so we need to union it with column 'contact_no' from table 'vtiger_potential'.
        One issue arises when we union the results.
        Sure we could UNION only relations and join LOAD_TIMESTAMP later but I choose a different approach.
        I rank (DESC) the results by LOAD_TIMESTAMP and then filter only those with rank 1.
        Example:
        LOADED ROWS
        lopp_uid_in_source_system | contact_uid_in_source_system | tech_load_timestamp
            POT102                |     CON166                   |  201 709 201 229
            POT102                |     CON166                   |  201 709 201 233
        RANKED ROWS
        lopp_uid_in_source_system | contact_uid_in_source_system | tech_load_timestamp | Rank
            POT102                |     CON166                   |  201 709 201 229     |   1
            POT102                |     CON166                   |  201 709 201 233     |   2
        RESULT ROWS
        lopp_uid_in_source_system | contact_uid_in_source_system | tech_load_timestamp
            POT102                |     CON166                   |  201 709 201 233
    */
    WITH contact_map AS (
        -- contacts from contact potential bridge table
        SELECT
            stage_potential.potential_no AS lopp_key
            ,stage_contact.contact_no AS contact_key
            ,core_contact.contact_id AS fk_contact_id
            ,lopp.lopp_id AS fk_lopp_id
            ,contact_potential_map.tech_data_load_utc_timestamp
            ,contact_potential_map.tech_data_load_uuid
            ,lopp.tech_deleted_in_source_system OR core_contact.tech_deleted_in_source_system AS tech_deleted_in_source_system
        FROM stage.vtiger_contpotentialrel_i AS contact_potential_map
        JOIN stage.vtiger_potential_i AS stage_potential ON stage_potential.potentialid = contact_potential_map.potentialid
        JOIN stage.vtiger_contactdetails_i AS stage_contact ON stage_contact.contactid = contact_potential_map.contactid
        JOIN core.lopp_i AS lopp ON lopp.lopp_key = stage_potential.potential_no
        JOIN core.contact_i AS core_contact ON core_contact.contact_key = stage_contact.contact_no
        UNION ALL
        -- contacts from potentials
        SELECT
            stage_potential.potential_no AS lopp_key
            ,stage_contact.contact_no AS contact_key
            ,core_contact.contact_id AS fk_contact_id
            ,lopp.lopp_id AS fk_lopp_id
            ,stage_potential.tech_data_load_utc_timestamp -- we use potential timestamp because we are interested in potential contact i.e. vtiger_potential.contact_id
            ,stage_potential.tech_data_load_uuid -- we use potential tech_data_load_uuid because we are interested in potential contact i.e. vtiger_potential.contact_id
            ,lopp.tech_deleted_in_source_system OR core_contact.tech_deleted_in_source_system AS tech_deleted_in_source_system
        FROM stage.vtiger_potential_i AS stage_potential
        JOIN stage.vtiger_contactdetails_i AS stage_contact ON stage_contact.contactid = stage_potential.contact_id
        JOIN core.lopp_i AS lopp ON lopp.lopp_key = stage_potential.potential_no
        JOIN core.contact_i AS core_contact ON core_contact.contact_key = stage_contact.contact_no
        UNION ALL
        -- contacts from leads
        SELECT
            lopp.lopp_key AS lopp_key
            ,contact.contact_key AS contact_key
            ,contact.contact_id AS fk_contact_id
            ,lopp.lopp_id AS fk_lopp_id
            ,lopp.tech_data_load_utc_timestamp AS tech_data_load_utc_timestamp -- this is the same for contact and lopp because they come from the same stage table
            ,lopp.tech_data_load_uuid AS tech_data_load_uuid -- this is the same for contact and lopp because they come from the same stage table
            ,lopp.tech_deleted_in_source_system OR contact.tech_deleted_in_source_system AS tech_deleted_in_source_system
        FROM core.lopp_i AS lopp
        JOIN core.contact_i AS contact ON contact.contact_id = lopp.fk_contact_id_main_contact
            AND substring(contact.contact_key FROM 1 FOR 3) = 'LEA' -- filter out contacts created from leads
        WHERE substring(lopp.lopp_key FROM 1 FOR 3) = 'LEA' -- filter out lopps created from leads
    )
    ,ranked_contact_map AS (
        SELECT
            contact_map.lopp_key
            ,contact_map.contact_key
            ,contact_map.fk_contact_id
            ,contact_map.fk_lopp_id
            ,contact_map.tech_data_load_utc_timestamp
            ,contact_map.tech_data_load_uuid
            ,RANK() OVER (
                PARTITION BY (
                    lopp_key
                    ,contact_key
                    ) ORDER BY tech_data_load_utc_timestamp DESC
                ) AS tech_data_load_timestamp_rank
            ,contact_map.tech_deleted_in_source_system
        FROM contact_map
    )
    INSERT INTO tmp_lopp_contact_map_i (
        contact_key
        ,lopp_key
        ,fk_contact_id
        ,fk_lopp_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
         ranked_contact_map.contact_key
        ,ranked_contact_map.lopp_key
        ,ranked_contact_map.fk_contact_id
        ,ranked_contact_map.fk_lopp_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,ranked_contact_map.tech_deleted_in_source_system AS tech_deleted_in_source_system
        ,md5(
        ranked_contact_map.contact_key::TEXT
        || ranked_contact_map.lopp_key::TEXT
        ) AS tech_row_hash
        ,ranked_contact_map.tech_data_load_utc_timestamp
        ,ranked_contact_map.tech_data_load_uuid
    FROM ranked_contact_map
    WHERE tech_data_load_timestamp_rank = 1;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.lopp__contact_map_i (
        contact_key
        ,lopp_key
        ,fk_contact_id
        ,fk_lopp_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_lopp_contact_map_i.contact_key
        ,tmp_lopp_contact_map_i.lopp_key
        ,tmp_lopp_contact_map_i.fk_contact_id
        ,tmp_lopp_contact_map_i.fk_lopp_id
        ,tmp_lopp_contact_map_i.tech_insert_function
        ,tmp_lopp_contact_map_i.tech_insert_utc_timestamp
        ,tmp_lopp_contact_map_i.tech_deleted_in_source_system
        ,tmp_lopp_contact_map_i.tech_row_hash
        ,tmp_lopp_contact_map_i.tech_data_load_utc_timestamp
        ,tmp_lopp_contact_map_i.tech_data_load_uuid
    FROM tmp_lopp_contact_map_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_vtiger_trg_lopp_i" id="Procedure_37abfdd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_vtiger_trg_lopp_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =====================================================================================================================
    DESCRIPTION:        Insert data from stage 'vtiger_*' tables into core input table lopp_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =====================================================================================================================
    */
DECLARE
LEAD_CONTACT_FLAG TEXT := 'CONTACT';
LEAD_ORGANIZATION_FLAG TEXT:= 'ORGANIZATION';
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
NULL_UTC_TIMESTAMP TIMESTAMP := to_timestamp(0)::TIMESTAMP AT TIME ZONE 'UTC';
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS converted_leads;
    CREATE TEMPORARY TABLE converted_leads (
        modifiedby INTEGER NOT NULL
        -- Timestap without time zone is used because of BI-190. Time Data in Vtiger is stored as Datetime.
        -- This means no timezone info.
        ,createdtime TIMESTAMP NOT NULL
        ,modifiedtime TIMESTAMP NOT NULL
        ,first_contact_date_manual DATE
    );
    INSERT INTO converted_leads (
        modifiedby
        ,createdtime
        ,modifiedtime
        ,first_contact_date_manual
    )
    SELECT
        crm.modifiedby
        ,crm.createdtime::TIMESTAMP AS createdtime
        ,crm.modifiedtime::TIMESTAMP AS modifiedtime
        ,lead_custom_field.cf_797::DATE AS first_contact_date_manual
    FROM stage.vtiger_leaddetails_i lead
    JOIN stage.vtiger_crmentity_i AS crm ON crm.crmid = lead.leadid
    JOIN stage.vtiger_leadscf_i AS lead_custom_field ON lead_custom_field.leadid = lead.leadid
    JOIN stage.vtiger_users_i AS user_modified ON user_modified.id = crm.modifiedby
    JOIN stage.vtiger_users_i AS user_created ON user_created.id = crm.smcreatorid
    WHERE lead.converted = 1;
    ----------------------------------------------------
    -- CRMID - POTENTIAL_NO TEMPORARY HELPER TABLE --
    ----------------------------------------------------
    DROP TABLE IF EXISTS term_extention_potential_id_key_map;
    CREATE TEMPORARY TABLE term_extention_potential_id_key_map(
        potentialid INTEGER NOT NULL
        ,potential_no TEXT NOT NULL
        ,term_extention_of_potentialid TEXT NOT NULL
        ,term_extention_of_potential_no TEXT NOT NULL
    );
    INSERT INTO term_extention_potential_id_key_map(
        potentialid
        ,potential_no
        ,term_extention_of_potentialid
        ,term_extention_of_potential_no
    )
    WITH foo AS (
        SELECT
            potential.potentialid
            ,potential.potential_no
            ,tf_u_convert_text_to_integer(((regexp_matches(potential_custom_field.cf_876, '[0-9]*$'))[1])::text) AS term_extention_of_potentialid
        FROM stage.vtiger_potential_i AS potential
        JOIN stage.vtiger_potentialscf_i AS potential_custom_field ON potential.potentialid = potential_custom_field.potentialid
        WHERE potential_custom_field.cf_876 <> ''
    )
    SELECT
         foo.potentialid
        ,foo.potential_no
        ,foo.term_extention_of_potentialid
        ,vt_term_extention_potential.potential_no AS term_extention_of_potential_no
    FROM foo
    JOIN stage.vtiger_potential_i AS vt_term_extention_potential ON vt_term_extention_potential.potentialid = foo.term_extention_of_potentialid;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_lopp_i;
    CREATE TEMPORARY TABLE tmp_lopp_i (
        lopp_key                                    TEXT NOT NULL
        ,crm_id                                     INTEGER
        ,jira_issue_key                             TEXT
        ,subject                                    TEXT NOT NULL
        ,relationship_type                          TEXT
        ,category                                   TEXT
        ,description                                TEXT
        ,STATUS                                     TEXT NOT NULL
        ,lead_source                                TEXT NOT NULL
        ,lead_source_detail                         TEXT
        ,budget                                     TEXT
        ,cost_of_sales                              TEXT
        ,amount                                     BIGINT
        ,reason_lost                                TEXT
        ,resulting_state                            TEXT
        ,fk_contact_id_main_contact                 INTEGER NOT NULL
        ,probability                                INTEGER
        ,fk_date_id_inception_date                  INTEGER NOT NULL
        ,inception_timestamp                        TIMESTAMP WITH TIME ZONE NOT NULL
        ,next_step                                  TEXT
        ,fk_date_id_next_step_date                  INTEGER NOT NULL
        ,fk_date_id_last_action_date_manual_entry   INTEGER NOT NULL
        ,fk_date_id_close_date                      INTEGER NOT NULL
        ,term_extention_of_lopp_key                 TEXT
        ,reselling_partner                          TEXT
        ,reselling_partner_note                     TEXT
        ,referring_partner                          TEXT
        ,referring_partner_note                     TEXT
        ,identified_by_partner                      TEXT
        ,identified_by_partner_note                 TEXT
        ,qualified_by_partner                       TEXT
        ,qualified_by_partner_note                  TEXT
        ,proof_of_concept_by_partner                TEXT
        ,proof_of_concept_by_partner_note           TEXT
        ,closed_by_partner                          TEXT
        ,closed_by_partner_note                     TEXT
        ,resold_by_partner                          TEXT
        ,resold_by_partner_note                     TEXT
        ,owned_by_partner                           TEXT
        ,owned_by_partner_note                      TEXT
        ,fk_organization_id                         INTEGER NOT NULL
        ,presales_thread                            TEXT
        ,sales_thread                               TEXT
        ,postsales_thread                           TEXT
        ,case_study                                 TEXT
        ,fk_employee_id_assigned_to                 INTEGER NOT NULL
        ,fk_employee_id_created_by                  INTEGER NOT NULL
        ,fk_employee_id_last_modified_by            INTEGER NOT NULL
        ,last_modified_timestamp                    TIMESTAMP WITH TIME ZONE NOT NULL
        ,tech_insert_function                       TEXT NOT NULL
        ,tech_insert_utc_timestamp                  BIGINT NOT NULL
        ,tech_deleted_in_source_system              BOOL NOT NULL
        ,tech_row_hash                              TEXT NOT NULL
        ,tech_data_load_utc_timestamp               BIGINT NOT NULL
        ,tech_data_load_uuid                        TEXT NOT NULL
     );
    INSERT INTO tmp_lopp_i (
        lopp_key
        ,crm_id
        ,jira_issue_key
        ,subject
        ,relationship_type
        ,category
        ,description
        ,status
        ,lead_source
        ,lead_source_detail
        ,budget
        ,cost_of_sales
        ,amount
        ,reason_lost
        ,resulting_state
        ,fk_contact_id_main_contact
        ,probability
        ,fk_date_id_inception_date
        ,inception_timestamp
        ,next_step
        ,fk_date_id_next_step_date
        ,fk_date_id_last_action_date_manual_entry
        ,fk_date_id_close_date
        ,term_extention_of_lopp_key
        ,reselling_partner
        ,reselling_partner_note
        ,referring_partner
        ,referring_partner_note
        ,identified_by_partner
        ,identified_by_partner_note
        ,qualified_by_partner
        ,qualified_by_partner_note
        ,proof_of_concept_by_partner
        ,proof_of_concept_by_partner_note
        ,closed_by_partner
        ,closed_by_partner_note
        ,resold_by_partner
        ,resold_by_partner_note
        ,owned_by_partner
        ,owned_by_partner_note
        ,fk_organization_id
        ,presales_thread
        ,sales_thread
        ,postsales_thread
        ,case_study
        ,fk_employee_id_assigned_to
        ,fk_employee_id_created_by
        ,fk_employee_id_last_modified_by
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    --From leads
    SELECT
        lead.lead_no AS lopp_key
        ,crm_entity.crmid AS crm_id
        ,lead_custom_field.cf_892 AS jira_issue_key
        ,lead_custom_field.cf_857 AS subject
        ,lead_custom_field.cf_799 AS relationship_type
        ,NULL::text AS category
        ,crm_entity.description
        ,lead.leadstatus AS status -- CASE WHEN (leadstatus IS NULL OR leadstatus = '') THEN undetermined_status END AS STATUS
        ,lead.leadsource AS lead_source
        ,lead_custom_field.cf_791 AS lead_source_detail
        ,NULL::TEXT AS budget
        ,NULL::text AS cost_of_sales
        ,NULL AS amount
        ,lead_custom_field.cf_920 AS reason_lost
        ,lead_custom_field.cf_922 AS resulting_state
        ,CASE
            WHEN contact.contact_id IS NULL THEN -1
            ELSE contact.contact_id
        END AS fk_contact_id_main_contact
        ,NULL AS probability -- LEAD_HAS_NO_PROBABILITY
        ,LEAST(
        to_char((crm_entity.createdtime || ' ' || user_created.time_zone)::TIMESTAMP WITH TIME ZONE, 'YYYYMMDD')::INTEGER
        ,to_char(lead_custom_field.cf_797::DATE, 'YYYYMMDD')::INTEGER
        ) AS fk_date_id_inception_date
        ,LEAST(
        (crm_entity.createdtime || ' ' || user_created.time_zone)::TIMESTAMP WITH TIME ZONE
        ,(lead_custom_field.cf_797 || ' ' || 'UTC')::TIMESTAMP WITH TIME ZONE --I added UTC time zone because
        -- the result has to be a timestamp with time zone. A it's better to speficy (not precise)atrificial timezone than rely on default
        ) AS inception_timestamp
        ,lead_custom_field.cf_777 AS next_step
        ,CASE
            WHEN lead_custom_field.cf_884 = '' OR lead_custom_field.cf_884 IS NULL THEN -1
            ELSE to_char(lead_custom_field.cf_884::DATE, 'YYYYMMDD')::INTEGER
        END AS fk_date_id_next_step_date
        ,CASE
            WHEN lead_custom_field.cf_775 = '' OR lead_custom_field.cf_775 IS NULL THEN -1
            ELSE to_char(lead_custom_field.cf_775::DATE, 'YYYYMMDD')::INTEGER
        END AS fk_date_id_last_action_date_manual_entry
        ,-1 AS fk_date_id_close_date
        ,NULL AS term_extention_of_lopp_key -- LEADS DONT EXTEND OTHER LEADS
        ,NULL::text AS reselling_partner
        ,NULL::text AS reselling_partner_note
        ,CASE
            WHEN position(' - ' IN lead_custom_field.cf_757) != 0
                THEN SUBSTRING(lead_custom_field.cf_757 FROM 0 FOR position(' - ' IN lead_custom_field.cf_757))
            ELSE lead_custom_field.cf_757
        END AS referring_partner
        ,CASE
            WHEN position(' - ' IN lead_custom_field.cf_757) != 0
                THEN SUBSTRING(lead_custom_field.cf_757 FROM position(' - ' IN lead_custom_field.cf_757) + 3)
            ELSE NULL
        END AS referring_partner_note
        ,CASE
            WHEN position(' - ' IN lead_custom_field.cf_894) != 0
                THEN SUBSTRING(lead_custom_field.cf_894 FROM 0 FOR position(' - ' IN lead_custom_field.cf_894))
            ELSE lead_custom_field.cf_894
        END AS identified_by_partner
        ,CASE
            WHEN position(' - ' IN lead_custom_field.cf_894) != 0
                THEN SUBSTRING(lead_custom_field.cf_894 FROM position(' - ' IN lead_custom_field.cf_894) + 3)
            ELSE NULL
        END AS identified_by_partner_note
        ,CASE
            WHEN position(' - ' IN lead_custom_field.cf_896) != 0
                THEN SUBSTRING(lead_custom_field.cf_896 FROM 0 FOR position(' - ' IN lead_custom_field.cf_896))
            ELSE lead_custom_field.cf_896
        END AS qualified_by_partner
        ,CASE
            WHEN position(' - ' IN lead_custom_field.cf_896) != 0
                THEN SUBSTRING(lead_custom_field.cf_896 FROM position(' - ' IN lead_custom_field.cf_896) + 3)
            ELSE NULL
        END AS qualified_by_partner_note
        ,CASE
            WHEN position(' - ' IN lead_custom_field.cf_898) != 0
                THEN SUBSTRING(lead_custom_field.cf_898 FROM 0 FOR position(' - ' IN lead_custom_field.cf_898))
            ELSE lead_custom_field.cf_898
        END AS proof_of_concept_by_partner
        ,CASE
            WHEN position(' - ' IN lead_custom_field.cf_898) != 0
                THEN SUBSTRING(lead_custom_field.cf_898 FROM position(' - ' IN lead_custom_field.cf_898) + 3)
            ELSE NULL
        END AS proof_of_concept_by_partner_note
        ,CASE
            WHEN position(' - ' IN lead_custom_field.cf_900) != 0
                THEN SUBSTRING(lead_custom_field.cf_900 FROM 0 FOR position(' - ' IN lead_custom_field.cf_900))
            ELSE lead_custom_field.cf_900
        END AS closed_by_partner
        ,CASE
            WHEN position(' - ' IN lead_custom_field.cf_900) != 0
                THEN SUBSTRING(lead_custom_field.cf_900 FROM position(' - ' IN lead_custom_field.cf_900) + 3)
            ELSE NULL
        END AS closed_by_partner_note
        ,CASE
            WHEN position(' - ' IN lead_custom_field.cf_902) != 0
                THEN SUBSTRING(lead_custom_field.cf_902 FROM 0 FOR position(' - ' IN lead_custom_field.cf_902))
            ELSE lead_custom_field.cf_902
        END AS resold_by_partner
        ,CASE
            WHEN position(' - ' IN lead_custom_field.cf_902) != 0
                THEN SUBSTRING(lead_custom_field.cf_902 FROM position(' - ' IN lead_custom_field.cf_902) + 3)
            ELSE NULL
        END AS resold_by_partner_note
        ,CASE
            WHEN position(' - ' IN lead_custom_field.cf_904) != 0
                THEN SUBSTRING(lead_custom_field.cf_904 FROM 0 FOR position(' - ' IN lead_custom_field.cf_904))
            ELSE lead_custom_field.cf_904
        END AS owned_by_partner
        ,CASE
            WHEN position(' - ' IN lead_custom_field.cf_904) != 0
                THEN SUBSTRING(lead_custom_field.cf_904 FROM position(' - ' IN lead_custom_field.cf_904) + 3)
            ELSE NULL
        END AS owned_by_partner_note
        ,CASE
            WHEN organization.organization_id IS NULL THEN -1
            ELSE organization.organization_id
        END AS fk_organization_id
        ,lead_custom_field.cf_845 AS presales_thread
        ,lead_custom_field.cf_847 AS sales_thread
        ,NULL::text AS postsales_thread
        ,NULL::text AS case_study
        ,employee_assigned.employee_id AS fk_employee_id_assigned_to
        ,employee_created.employee_id AS fk_employee_id_created_by
        ,employee_modified.employee_id AS fk_employee_id_last_modified_by
        ,(crm_entity.modifiedtime || ' ' || user_modified.time_zone)::TIMESTAMP WITH TIME ZONE AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,crm_entity.deleted::bool OR lead.converted::bool AS tech_deleted_in_source_system
        ,md5(
           COALESCE(lead_custom_field.cf_892, '')
        || COALESCE(lead_custom_field.cf_857, '')
        || COALESCE(lead_custom_field.cf_799, '')
        || COALESCE(crm_entity.description, '')
        || COALESCE(lead.leadstatus, '')
        || COALESCE(lead.leadsource, '')
        || COALESCE(lead_custom_field.cf_920, '')
        || COALESCE(lead_custom_field.cf_922, '')
        || COALESCE(lead_custom_field.cf_791, '')
        || COALESCE(lead_custom_field.cf_797, '')
        || COALESCE(contact.contact_key, '')
        || COALESCE(lead_custom_field.cf_777, '')
        || COALESCE(lead_custom_field.cf_884, '')
        || COALESCE(lead_custom_field.cf_757, '')
        || COALESCE(lead_custom_field.cf_775, '')
        || COALESCE(organization.organization_key, '')
        || COALESCE(lead_custom_field.cf_845, '')
        || COALESCE(lead_custom_field.cf_847, '')
        || COALESCE(lead_custom_field.cf_894, '')
        || COALESCE(lead_custom_field.cf_896, '')
        || COALESCE(lead_custom_field.cf_898, '')
        || COALESCE(lead_custom_field.cf_900, '')
        || COALESCE(lead_custom_field.cf_902, '')
        || COALESCE(lead_custom_field.cf_904, '')
        || employee_assigned.employee_key
        || crm_entity.modifiedtime
        || crm_entity.deleted
        || lead.converted::bool
        ) AS tech_row_hash
        ,lead.tech_data_load_utc_timestamp
        ,lead.tech_data_load_uuid
    FROM stage.vtiger_leaddetails_i AS lead
    JOIN stage.vtiger_leadscf_i AS lead_custom_field ON lead.leadid = lead_custom_field.leadid
    JOIN stage.vtiger_crmentity_i AS crm_entity ON crm_entity.crmid = lead.leadid
    JOIN stage.vtiger_users_i AS user_assigned ON user_assigned.id = crm_entity.smownerid
    JOIN stage.vtiger_users_i AS user_created ON user_created.id = crm_entity.smcreatorid
    JOIN stage.vtiger_users_i AS user_modified ON user_modified.id = crm_entity.modifiedby
    JOIN core.employee_i AS employee_assigned ON employee_assigned.employee_key = user_assigned.user_name
    JOIN core.employee_i AS employee_created ON employee_created.employee_key = user_created.user_name
    JOIN core.employee_i AS employee_modified ON employee_modified.employee_key = user_modified.user_name
    LEFT JOIN core.organization_i AS organization ON organization.organization_key = lead.lead_no || LEAD_ORGANIZATION_FLAG
    LEFT JOIN core.contact_i AS contact ON contact.contact_key = lead.lead_no || LEAD_CONTACT_FLAG
    UNION
    --From potentials
    SELECT
        potential.potential_no AS lopp_key
        ,crm_entity.crmid AS crm_id
        ,potential_custom_field.cf_890 AS jira_issue_key
        ,potential.potentialname AS subject
        ,potential.potentialtype AS relationship_type
        ,potential_custom_field.cf_874 AS category
        ,crm_entity.description
        ,potential.sales_stage AS status
        ,potential.leadsource AS lead_source
        ,potential_custom_field.cf_789 AS lead_source_detail
        ,potential_custom_field.cf_870 AS budget
        ,NULL::text AS cost_of_sales
        ,COALESCE(potential.amount::BIGINT, 0) AS amount
        ,potential_custom_field.cf_809 AS reason_lost
        ,potential_custom_field.cf_918 AS resulting_state
        ,CASE WHEN contact.contact_id IS NULL THEN -1
            ELSE contact.contact_id
        END AS fk_contact_id_main_contact
        ,potential.probability AS probability
        ,LEAST(
        to_char((crm_entity.createdtime || ' ' || user_created.time_zone)::TIMESTAMP WITH TIME ZONE, 'YYYYMMDD')::INTEGER
        ,to_char(potential_custom_field.cf_765::DATE, 'YYYYMMDD')::INTEGER
        ,to_char(converted_leads.createdtime, 'YYYYMMDD')::INTEGER
        ,to_char(converted_leads.first_contact_date_manual::DATE, 'YYYYMMDD')::INTEGER
        ) AS fk_date_id_inception_date
        ,LEAST(
        (crm_entity.createdtime || ' ' || user_created.time_zone)::TIMESTAMP WITH TIME ZONE
        ,(potential_custom_field.cf_765 || ' ' || 'UTC')::TIMESTAMP WITH TIME ZONE
        ,(converted_leads.createdtime || ' ' || 'UTC')::TIMESTAMP WITH TIME ZONE
        ,(converted_leads.first_contact_date_manual || ' ' || 'UTC')::TIMESTAMP WITH TIME ZONE
        ) AS inception_timestamp
        ,potential.nextstep AS next_step
        ,CASE
            WHEN cf_882 = '' OR cf_882 IS NULL THEN -1
            ELSE replace(cf_882,'-','')::INTEGER
        END AS fk_date_id_next_step_date
        ,CASE
            WHEN cf_769 = '' OR cf_769 IS NULL THEN -1
            ELSE replace(cf_769,'-','')::INTEGER
        END AS fk_date_id_last_action_date_manual_entry
        ,CASE
            WHEN potential.closingdate IS NULL THEN -1
            ELSE replace(potential.closingdate,'-','')::integer
        END AS fk_date_id_close_date
        ,term_extention_potential_id_key_map.term_extention_of_potential_no AS term_extention_of_lopp_key
        ,CASE
            WHEN position(' - ' IN potential_custom_field.cf_761) != 0
                THEN SUBSTRING(potential_custom_field.cf_761 FROM 0 FOR position(' - ' IN potential_custom_field.cf_761))
            ELSE potential_custom_field.cf_761
        END AS reselling_partner
        ,CASE
            WHEN position(' - ' IN potential_custom_field.cf_761) != 0
                THEN SUBSTRING(potential_custom_field.cf_761 FROM position(' - ' IN potential_custom_field.cf_761) + 3)
            ELSE NULL
        END AS reselling_partner_note
        ,CASE
            WHEN position(' - ' IN potential_custom_field.cf_759) != 0
                THEN SUBSTRING(potential_custom_field.cf_759 FROM 0 FOR position(' - ' IN potential_custom_field.cf_759))
            ELSE potential_custom_field.cf_759
        END AS referring_partner
        ,CASE
            WHEN position(' - ' IN potential_custom_field.cf_759) != 0
                THEN SUBSTRING(potential_custom_field.cf_759 FROM position(' - ' IN potential_custom_field.cf_759) + 3)
            ELSE NULL
        END AS referring_partner_note
        ,CASE
            WHEN position(' - ' IN potential_custom_field.cf_906) != 0
                THEN SUBSTRING(potential_custom_field.cf_906 FROM 0 FOR position(' - ' IN potential_custom_field.cf_906))
            ELSE potential_custom_field.cf_906
        END AS identified_by_partner
        ,CASE
            WHEN position(' - ' IN potential_custom_field.cf_906) != 0
                THEN SUBSTRING(potential_custom_field.cf_906 FROM position(' - ' IN potential_custom_field.cf_906) + 3)
            ELSE NULL
        END AS identified_by_partner_note
        ,CASE
            WHEN position(' - ' IN potential_custom_field.cf_908) != 0
                THEN SUBSTRING(potential_custom_field.cf_908 FROM 0 FOR position(' - ' IN potential_custom_field.cf_908))
            ELSE potential_custom_field.cf_908
        END AS qualified_by_partner
        ,CASE
            WHEN position(' - ' IN potential_custom_field.cf_908) != 0
                THEN SUBSTRING(potential_custom_field.cf_908 FROM position(' - ' IN potential_custom_field.cf_908) + 3)
            ELSE NULL
        END AS qualified_by_partner_note
        ,CASE
            WHEN position(' - ' IN potential_custom_field.cf_910) != 0
                THEN SUBSTRING(potential_custom_field.cf_910 FROM 0 FOR position(' - ' IN potential_custom_field.cf_910))
            ELSE potential_custom_field.cf_910
        END AS proof_of_concept_by_partner
        ,CASE
            WHEN position(' - ' IN potential_custom_field.cf_910) != 0
                THEN SUBSTRING(potential_custom_field.cf_910 FROM position(' - ' IN potential_custom_field.cf_910) + 3)
            ELSE NULL
        END AS proof_of_concept_by_partner_note
        ,CASE
            WHEN position(' - ' IN potential_custom_field.cf_912) != 0
                THEN SUBSTRING(potential_custom_field.cf_912 FROM 0 FOR position(' - ' IN potential_custom_field.cf_912))
            ELSE potential_custom_field.cf_912
        END AS closed_by_partner
        ,CASE
            WHEN position(' - ' IN potential_custom_field.cf_912) != 0
                THEN SUBSTRING(potential_custom_field.cf_912 FROM position(' - ' IN potential_custom_field.cf_912) + 3)
            ELSE NULL
        END AS closed_by_partner_note
        ,CASE
            WHEN position(' - ' IN potential_custom_field.cf_914) != 0
                THEN SUBSTRING(potential_custom_field.cf_914 FROM 0 FOR position(' - ' IN potential_custom_field.cf_914))
            ELSE potential_custom_field.cf_914
        END AS resold_by_partner
        ,CASE
            WHEN position(' - ' IN potential_custom_field.cf_914) != 0
                THEN SUBSTRING(potential_custom_field.cf_914 FROM position(' - ' IN potential_custom_field.cf_914) + 3)
            ELSE NULL
        END AS resold_by_partner_note
        ,CASE
            WHEN position(' - ' IN potential_custom_field.cf_916) != 0
                THEN SUBSTRING(potential_custom_field.cf_916 FROM 0 FOR position(' - ' IN potential_custom_field.cf_916))
            ELSE potential_custom_field.cf_916
        END AS owned_by_partner
        ,CASE
            WHEN position(' - ' IN potential_custom_field.cf_916) != 0
                THEN SUBSTRING(potential_custom_field.cf_916 FROM position(' - ' IN potential_custom_field.cf_916) + 3)
            ELSE NULL
        END AS owned_by_partner_note
        ,CASE WHEN organization.organization_id IS NULL THEN -1
            ELSE organization.organization_id
        END AS fk_organization_id
        ,potential_custom_field.cf_833 AS presales_thread
        ,potential_custom_field.cf_831 AS sales_thread
        ,potential_custom_field.cf_872 AS postsales_thread
        ,potential_custom_field.cf_880 AS case_study
        ,employee_assigned.employee_id AS fk_employee_id_assigned_to
        ,employee_created.employee_id AS fk_employee_id_created_by
        ,employee_modified.employee_id AS fk_employee_id_last_modified_by
        ,(crm_entity.modifiedtime || ' ' || user_modified.time_zone)::TIMESTAMP WITH TIME ZONE AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,crm_entity.deleted::bool AS tech_deleted_in_source_system
        ,md5(
           COALESCE(potential_custom_field.cf_890, '')
        || COALESCE(potential.potentialname, '')
        || COALESCE(potential.potentialtype, '')
        || COALESCE(potential_custom_field.cf_874, '')
        || COALESCE(crm_entity.description, '')
        || COALESCE(potential.sales_stage, '')
        || COALESCE(potential.leadsource, '')
        || COALESCE(potential_custom_field.cf_789, '')
        || COALESCE(potential_custom_field.cf_870, '')
        || COALESCE(potential.amount, 0)
        || COALESCE(potential_custom_field.cf_809, '')
        || COALESCE(potential_custom_field.cf_918, '')
        || COALESCE(contact.contact_key, '')
        || COALESCE(potential.probability, 0)
        || COALESCE(potential.nextstep, '')
        || COALESCE(potential_custom_field.cf_882, '')
        || COALESCE(potential.closingdate, '')
        || COALESCE(potential_custom_field.cf_765, '')
        || COALESCE(potential_custom_field.cf_876, '')
        || COALESCE(potential_custom_field.cf_761, '')
        || COALESCE(potential_custom_field.cf_759, '')
        || COALESCE(potential_custom_field.cf_769, '')
        || COALESCE(organization.organization_key, '')
        || COALESCE(potential_custom_field.cf_833, '')
        || COALESCE(potential_custom_field.cf_831, '')
        || COALESCE(potential_custom_field.cf_872, '')
        || COALESCE(potential_custom_field.cf_880, '')
        || COALESCE(potential_custom_field.cf_906, '')
        || COALESCE(potential_custom_field.cf_908, '')
        || COALESCE(potential_custom_field.cf_910, '')
        || COALESCE(potential_custom_field.cf_912, '')
        || COALESCE(potential_custom_field.cf_914, '')
        || COALESCE(potential_custom_field.cf_916, '')
        || employee_assigned.employee_key
        || crm_entity.deleted
        ) AS tech_row_hash
        ,potential.tech_data_load_utc_timestamp
        ,potential.tech_data_load_uuid
    FROM stage.vtiger_potential_i AS potential
    JOIN stage.vtiger_potentialscf_i AS potential_custom_field ON potential.potentialid = potential_custom_field.potentialid
    JOIN stage.vtiger_crmentity_i AS crm_entity ON crm_entity.crmid = potential.potentialid
    LEFT JOIN term_extention_potential_id_key_map ON term_extention_potential_id_key_map.potentialid = potential.potentialid
    JOIN stage.vtiger_users_i AS user_assigned ON user_assigned.id = crm_entity.smownerid
    JOIN stage.vtiger_users_i AS user_created ON user_created.id = crm_entity.smcreatorid
    JOIN stage.vtiger_users_i AS user_modified ON user_modified.id = crm_entity.modifiedby
    JOIN core.employee_i AS employee_assigned ON employee_assigned.employee_key = user_assigned.user_name
    JOIN core.employee_i AS employee_created ON employee_created.employee_key = user_created.user_name
    JOIN core.employee_i AS employee_modified ON employee_modified.employee_key = user_modified.user_name
    LEFT JOIN core.contact_i AS contact ON contact.crm_id = potential.contact_id
    LEFT JOIN core.organization_i AS organization ON organization.crm_id = potential.related_to
    LEFT JOIN converted_leads as converted_leads ON potential.isconvertedfromlead = '1'
        AND crm_entity.smcreatorid = converted_leads.modifiedby
        AND (
            crm_entity.createdtime::TIMESTAMP = converted_leads.modifiedtime
            OR crm_entity.createdtime::TIMESTAMP + INTERVAL '1 second' = converted_leads.modifiedtime
            );
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.lopp_i (
        lopp_key
        ,crm_id
        ,jira_issue_key
        ,subject
        ,relationship_type
        ,category
        ,description
        ,STATUS
        ,lead_source
        ,lead_source_detail
        ,budget
        ,cost_of_sales
        ,amount
        ,reason_lost
        ,resulting_state
        ,fk_contact_id_main_contact
        ,probability
        ,fk_date_id_inception_date
        ,inception_timestamp
        ,next_step
        ,fk_date_id_next_step_date
        ,fk_date_id_last_action_date_manual_entry
        ,fk_date_id_close_date
        ,term_extention_of_lopp_key
        ,reselling_partner
        ,reselling_partner_note
        ,referring_partner
        ,referring_partner_note
        ,identified_by_partner
        ,identified_by_partner_note
        ,qualified_by_partner
        ,qualified_by_partner_note
        ,proof_of_concept_by_partner
        ,proof_of_concept_by_partner_note
        ,closed_by_partner
        ,closed_by_partner_note
        ,resold_by_partner
        ,resold_by_partner_note
        ,owned_by_partner
        ,owned_by_partner_note
        ,fk_organization_id
        ,presales_thread
        ,sales_thread
        ,postsales_thread
        ,case_study
        ,fk_employee_id_assigned_to
        ,fk_employee_id_created_by
        ,fk_employee_id_last_modified_by
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
         tmp_lopp_i.lopp_key
        ,tmp_lopp_i.crm_id
        ,tmp_lopp_i.jira_issue_key
        ,tmp_lopp_i.subject
        ,tmp_lopp_i.relationship_type
        ,tmp_lopp_i.category
        ,tmp_lopp_i.description
        ,tmp_lopp_i.STATUS
        ,tmp_lopp_i.lead_source
        ,tmp_lopp_i.lead_source_detail
        ,tmp_lopp_i.budget
        ,tmp_lopp_i.cost_of_sales
        ,tmp_lopp_i.amount
        ,tmp_lopp_i.reason_lost
        ,tmp_lopp_i.resulting_state
        ,tmp_lopp_i.fk_contact_id_main_contact
        ,tmp_lopp_i.probability
        ,tmp_lopp_i.fk_date_id_inception_date
        ,tmp_lopp_i.inception_timestamp
        ,tmp_lopp_i.next_step
        ,tmp_lopp_i.fk_date_id_next_step_date
        ,tmp_lopp_i.fk_date_id_last_action_date_manual_entry
        ,tmp_lopp_i.fk_date_id_close_date
        ,tmp_lopp_i.term_extention_of_lopp_key
        ,tmp_lopp_i.reselling_partner
        ,tmp_lopp_i.reselling_partner_note
        ,tmp_lopp_i.referring_partner
        ,tmp_lopp_i.referring_partner_note
        ,tmp_lopp_i.identified_by_partner
        ,tmp_lopp_i.identified_by_partner_note
        ,tmp_lopp_i.qualified_by_partner
        ,tmp_lopp_i.qualified_by_partner_note
        ,tmp_lopp_i.proof_of_concept_by_partner
        ,tmp_lopp_i.proof_of_concept_by_partner_note
        ,tmp_lopp_i.closed_by_partner
        ,tmp_lopp_i.closed_by_partner_note
        ,tmp_lopp_i.resold_by_partner
        ,tmp_lopp_i.resold_by_partner_note
        ,tmp_lopp_i.owned_by_partner
        ,tmp_lopp_i.owned_by_partner_note
        ,tmp_lopp_i.fk_organization_id
        ,tmp_lopp_i.presales_thread
        ,tmp_lopp_i.sales_thread
        ,tmp_lopp_i.postsales_thread
        ,tmp_lopp_i.case_study
        ,tmp_lopp_i.fk_employee_id_assigned_to
        ,tmp_lopp_i.fk_employee_id_created_by
        ,tmp_lopp_i.fk_employee_id_last_modified_by
        ,tmp_lopp_i.last_modified_timestamp
        ,tmp_lopp_i.tech_insert_function
        ,tmp_lopp_i.tech_insert_utc_timestamp
        ,tmp_lopp_i.tech_deleted_in_source_system
        ,tmp_lopp_i.tech_row_hash
        ,tmp_lopp_i.tech_data_load_utc_timestamp
        ,tmp_lopp_i.tech_data_load_uuid
    FROM tmp_lopp_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_vtiger_trg_organization_hierarchy_i" id="Procedure_3784566" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_vtiger_trg_organization_hierarchy_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =====================================================================================================================
    DESCRIPTION:		Insert data from stage 'vtiger_*' tables into core input table organization_hierarchy_i
    AUTHOR:				Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:			2018-05-14 (YYYY-MM-DD)
    NOTE:				
    =====================================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
NULL_UTC_TIMESTAMP TIMESTAMP := to_timestamp(0)::TIMESTAMP AT TIME ZONE 'UTC';
stack text;
FUNCTION_NAME text;
BEGIN
	-------------------------
	-- GET FUNCTION'S NAME --
	-------------------------
	GET DIAGNOSTICS stack = PG_CONTEXT;
	FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
	 
	-----------------------------------------------
	-- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
	-----------------------------------------------
	 
	DROP TABLE IF EXISTS tmp_organization_hierarchy_i_helper_table;
	
	CREATE TEMPORARY TABLE tmp_organization_hierarchy_i_helper_table (
		organization_key   				TEXT NOT NULL
		,organization_key_parent		TEXT
		,fk_organization_id				INTEGER NOT NULL
		,fk_organization_id_parent		INTEGER
		,organization_deleted			BOOL NOT NULL
		,organization_parent_deleted	BOOL
		,tech_data_load_utc_timestamp 	BIGINT NOT NULL
		,tech_data_load_uuid			TEXT NOT NULL
	 );
	 
	 INSERT INTO tmp_organization_hierarchy_i_helper_table (
		organization_key
		,organization_key_parent
		,fk_organization_id
		,fk_organization_id_parent
		,organization_deleted
		,organization_parent_deleted
		,tech_data_load_utc_timestamp
		,tech_data_load_uuid
	 )
	SELECT
		vt_account.account_no AS organization_key
		,vt_parent_account.account_no AS organization_key_parent
		,organization.organization_id AS fk_organization_id
		,organization_parent.organization_id AS fk_organization_id_parent
		,organization.tech_deleted_in_source_system AS organization_deleted
		,organization_parent.tech_deleted_in_source_system AS organization_parent_deleted
		,vt_account.tech_data_load_utc_timestamp
		,vt_account.tech_data_load_uuid
	FROM stage.vtiger_account_i AS vt_account
	LEFT JOIN stage.vtiger_account_i AS vt_parent_account ON vt_account.parentid = vt_parent_account.accountid
	JOIN core.organization_i AS organization ON organization.crm_id = vt_account.accountid
	LEFT JOIN core.organization_i AS organization_parent ON organization_parent.crm_id = vt_account.parentid;
	
	-----------------------------------------
	-- NEWLY LOADED ORGANIZATION RELATIONS --
	-----------------------------------------
	
	DROP TABLE IF EXISTS tmp_organization_hierarchy_i;
	
	CREATE TEMPORARY TABLE tmp_organization_hierarchy_i (
		fk_organization_id 					INTEGER NOT NULL
		,fk_organization_id_parent 			INTEGER NOT NULL
		,lowest_child_flag 					BOOL NOT NULL
		,highest_parent_flag 				BOOL NOT NULL
		,depth_from_highest_parent 			INTEGER NOT NULL
		,hierarchy_path 					INTEGER [] NOT NULL
		,organization_key_parent 			TEXT
		,organization_key 					TEXT NOT NULL
		,tech_insert_function				TEXT NOT NULL
		,tech_insert_utc_timestamp			BIGINT NOT NULL
		,tech_deleted_in_source_system		BOOL NOT NULL DEFAULT FALSE
		,tech_row_hash						TEXT NOT NULL
		,tech_data_load_utc_timestamp 		BIGINT NOT NULL
		,tech_data_load_uuid				TEXT NOT NULL
	);
	
	WITH recursive rel_tree
	AS (
		SELECT helper_table.fk_organization_id
			,helper_table.fk_organization_id_parent
			,0 AS level
			,array [helper_table.fk_organization_id] AS path_info
			,helper_table.organization_key
			,helper_table.organization_key_parent
			,helper_table.organization_deleted
			,helper_table.organization_parent_deleted
			,helper_table.tech_data_load_utc_timestamp
			,helper_table.tech_data_load_uuid
		FROM tmp_organization_hierarchy_i_helper_table AS helper_table
		WHERE fk_organization_id_parent IS NULL
		
		UNION ALL
		
		SELECT helper_table.fk_organization_id
			,helper_table.fk_organization_id_parent
			,rel_tree.level + 1
			,array_append(rel_tree.path_info, helper_table.fk_organization_id)
			,helper_table.organization_key
			,helper_table.organization_key_parent
			,helper_table.organization_deleted
			,helper_table.organization_parent_deleted
			,helper_table.tech_data_load_utc_timestamp
			,helper_table.tech_data_load_uuid
		FROM tmp_organization_hierarchy_i_helper_table AS helper_table
		JOIN rel_tree AS rel_tree ON helper_table.fk_organization_id_parent = rel_tree.fk_organization_id
		)
	INSERT INTO tmp_organization_hierarchy_i (
			fk_organization_id
			,fk_organization_id_parent
			,lowest_child_flag
			,highest_parent_flag
			,depth_from_highest_parent
			,organization_key_parent
			,organization_key
			,hierarchy_path
			,tech_insert_function
			,tech_insert_utc_timestamp
			,tech_deleted_in_source_system
			,tech_row_hash
			,tech_data_load_utc_timestamp
			,tech_data_load_uuid
		)
	 SELECT
		src.fk_organization_id
		 ,CASE WHEN src.fk_organization_id_parent IS NULL THEN -1 
			   ELSE src.fk_organization_id_parent
		 END AS fk_organization_id_parent
		 ,CASE WHEN joined_rel_tree.fk_organization_id_parent IS NULL THEN TRUE 
			 ELSE FALSE 
		 END AS lowest_child_flag
		 ,CASE WHEN src.fk_organization_id_parent IS NULL THEN TRUE 
			 ELSE FALSE
		 END AS highest_parent_flag
		 ,src.level AS depth_from_highest_parent
		 ,CASE WHEN src.organization_key_parent IS NULL THEN '-1'::text 
			ELSE src.organization_key_parent
		 END AS organization_key_parent
		 ,src.organization_key
		 ,src.path_info AS hierarchy_path
		 ,FUNCTION_NAME AS tech_insert_function
		 ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_function
		 ,src.organization_deleted OR COALESCE(joined_rel_tree.organization_deleted, FALSE) AS tech_deleted_in_source_system		
		 ,md5(
		 array_to_string(src.path_info, ',')
		 || COALESCE(src.organization_key, '')
		 || COALESCE(src.organization_key_parent, '')
		 || COALESCE(joined_rel_tree.organization_key_parent, '')
		 ) AS tech_row_hash
		 ,src.tech_data_load_utc_timestamp
		 ,src.tech_data_load_uuid
	FROM rel_tree AS src
	LEFT OUTER JOIN rel_tree AS joined_rel_tree ON src.fk_organization_id = joined_rel_tree.fk_organization_id_parent
	-- this GROUP BY is only to exclude duplicate rows that arise from above ^^ LEFT OUTHER JOIN. 
	GROUP BY
		src.fk_organization_id
		,src.fk_organization_id_parent
		,joined_rel_tree.fk_organization_id_parent
		,joined_rel_tree.organization_key_parent
		,src.level
		,src.organization_key_parent
		,src.organization_key
		,src.path_info
		,src.organization_deleted
		,joined_rel_tree.organization_deleted
		,src.tech_data_load_utc_timestamp
		,src.tech_data_load_uuid
	ORDER BY src.fk_organization_id;
	-----------------------------------------
	-- INSERT NEW RECORDS INTO INPUT TABLE --
	-----------------------------------------
	
	INSERT INTO core.organization_hierarchy_i (
		organization_key
		,organization_key_parent
		,fk_organization_id
		,fk_organization_id_parent
		,lowest_child_flag
		,highest_parent_flag
		,depth_from_highest_parent
		,hierarchy_path
		,tech_insert_function
		,tech_insert_utc_timestamp
		,tech_deleted_in_source_system
		,tech_row_hash
		,tech_data_load_utc_timestamp
		,tech_data_load_uuid
		)
	SELECT
		tmp_organization_hierarchy_i.organization_key
		,tmp_organization_hierarchy_i.organization_key_parent
		,tmp_organization_hierarchy_i.fk_organization_id
		,tmp_organization_hierarchy_i.fk_organization_id_parent
		,tmp_organization_hierarchy_i.lowest_child_flag
		,tmp_organization_hierarchy_i.highest_parent_flag
		,tmp_organization_hierarchy_i.depth_from_highest_parent
		,tmp_organization_hierarchy_i.hierarchy_path
		,tmp_organization_hierarchy_i.tech_insert_function
		,tmp_organization_hierarchy_i.tech_insert_utc_timestamp
		,tmp_organization_hierarchy_i.tech_deleted_in_source_system
		,tmp_organization_hierarchy_i.tech_row_hash
		,tmp_organization_hierarchy_i.tech_data_load_utc_timestamp
		,tmp_organization_hierarchy_i.tech_data_load_uuid
	FROM tmp_organization_hierarchy_i;
	
	RETURN 0;
	
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_vtiger_trg_organization_i" id="Procedure_36ee58a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_vtiger_trg_organization_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =====================================================================================================================
    DESCRIPTION:        Insert data from stage 'vtiger_*' tables into core input table organization_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =====================================================================================================================
    */
DECLARE
LEAD_CONTACT_FLAG TEXT := 'CONTACT';
LEAD_ORGANIZATION_FLAG TEXT:= 'ORGANIZATION';
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
NULL_UTC_TIMESTAMP TIMESTAMP := to_timestamp(0)::TIMESTAMP AT TIME ZONE 'UTC';
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ---------------------------------------------------------
    -- INSERT NULL ORGANIZATION IF NOT ALREADY IN DATABASE --
    ---------------------------------------------------------
    INSERT INTO core.organization_i (
        organization_id
        ,organization_key
        ,crm_id
        ,organization_type
        ,description
        ,industry
        ,number_of_employees
        ,partner
        ,website
        ,external_inteligence
        ,nda
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,region
        ,billing_country
        ,billing_state
        ,billing_city
        ,billing_zip
        ,billing_post_office_box
        ,billing_street
        ,shipping_country
        ,shipping_state
        ,shipping_city
        ,shipping_zip
        ,shipping_post_office_box
        ,shipping_street
        ,fk_party_id
        ,fk_employee_id_assigned_to
        ,fk_employee_id_created_by
        ,fk_employee_id_last_modified_by
        ,created_timestamp
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    VALUES (
        -1 -- organization_id
        ,'NULL_ORGANIZATION' -- organization_key
        ,-1 -- crm_id
        ,'' -- organization_type
        ,'' -- description
        ,'' -- industry
        ,0  -- number_of_employees
        ,'' -- partner
        ,'' -- website
        ,'' -- external_inteligence
        ,'' -- nda
        ,'' -- email
        ,'' -- secondary_email
        ,'' -- phone
        ,'' -- mobile_phone
        ,'' -- region
        ,'' -- billing_country
        ,'' -- billing_state
        ,'' -- billing_city
        ,'' -- billing_zip
        ,'' -- billing_post_office_box
        ,'' -- billing_street
        ,'' -- shipping_country
        ,'' -- shipping_state
        ,'' -- shipping_city
        ,'' -- shipping_zip
        ,'' -- shipping_post_office_box
        ,'' -- shipping_street
        ,-1 -- fk_party_id
        ,-1 -- fk_employee_id_assigned_to
        ,-1 -- fk_employee_id_created_by
        ,-1 -- fk_employee_id_last_modified_by
        ,NULL_UTC_TIMESTAMP -- created_timestamp
        ,NULL_UTC_TIMESTAMP -- last_modified_timestamp
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,'' -- tech_row_hash
        ,0 -- tech_data_load_utc_timestamp
        ,'' -- tech_data_load_uuid
        ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_organization_i ;
    CREATE TEMPORARY TABLE tmp_organization_i (
        organization_key                    text NOT NULL
        ,crm_id                             integer NOT NULL
        ,organization_type                  text
        ,description                        text
        ,industry                           text
        ,number_of_employees                integer
        ,partner                            text
        ,website                            text
        ,external_inteligence               text
        ,nda                                text
        ,email                              text
        ,secondary_email                    text
        ,phone                              text
        ,mobile_phone                       text
        ,region                             text
        ,billing_country                    text
        ,billing_state                      text
        ,billing_city                       text
        ,billing_zip                        text
        ,billing_post_office_box            text
        ,billing_street                     text
        ,shipping_country                   text
        ,shipping_state                     text
        ,shipping_city                      text
        ,shipping_zip                       text
        ,shipping_post_office_box           text
        ,shipping_street                    text
        ,fk_party_id                        integer  NOT NULL
        ,fk_employee_id_assigned_to         integer  NOT NULL
        ,fk_employee_id_created_by          integer  NOT NULL
        ,fk_employee_id_last_modified_by    integer  NOT NULL
        ,created_timestamp                  TIMESTAMP WITH TIME ZONE NOT NULL
        ,last_modified_timestamp            TIMESTAMP WITH TIME ZONE  NOT NULL
        ,tech_insert_function               TEXT NOT NULL
        ,tech_insert_utc_timestamp          BIGINT NOT NULL
        ,tech_deleted_in_source_system      BOOL NOT NULL
        ,tech_row_hash                      TEXT NOT NULL
        ,tech_data_load_utc_timestamp       BIGINT NOT NULL
        ,tech_data_load_uuid                TEXT NOT NULL
     );
    INSERT INTO tmp_organization_i (
        organization_key
        ,crm_id
        ,organization_type
        ,description
        ,industry
        ,number_of_employees
        ,partner
        ,website
        ,external_inteligence
        ,nda
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,region
        ,billing_country
        ,billing_state
        ,billing_city
        ,billing_zip
        ,billing_post_office_box
        ,billing_street
        ,shipping_country
        ,shipping_state
        ,shipping_city
        ,shipping_street
        ,shipping_zip
        ,shipping_post_office_box
        ,fk_party_id
        ,fk_employee_id_assigned_to
        ,fk_employee_id_created_by
        ,fk_employee_id_last_modified_by
        ,created_timestamp
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        account.account_no AS organization_key
        ,crm.crmid
        ,account.account_type AS organization_type
        ,crm.description
        ,account.industry
        ,account.employees AS number_of_employees
        ,scf.cf_755 AS partner
        ,account.website
        ,scf.cf_839 AS external_inteligence
        ,scf.cf_813 AS nda
        ,account.email1 AS email
        ,account.email2 AS secondary_email
        ,account.phone
        ,null::text AS mobile_phone
        ,scf.cf_751 AS region
        ,bill_address.bill_country AS billing_country
        ,bill_address.bill_state AS billing_state
        ,bill_address.bill_city AS billing_city
        ,bill_address.bill_code AS billing_zip
        ,bill_address.bill_pobox AS billing_post_office_box
        ,bill_address.bill_street AS billing_street
        ,ship_address.ship_country AS shipping_country
        ,ship_address.ship_state AS shipping_state
        ,ship_address.ship_city AS shipping_city
        ,ship_address.ship_code AS shipping_zip
        ,ship_address.ship_pobox AS shipping_post_office_box
        ,ship_address.ship_street AS shipping_street
        ,party.party_id AS fk_party_id
        ,employee_assigned.employee_id AS fk_employee_id_assigned_to
        ,employee_created.employee_id AS fk_employee_id_created_by
        ,employee_modified.employee_id AS fk_employee_id_last_modified_by
        ,(crm.createdtime || ' ' || user_created.time_zone)::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,(crm.modifiedtime || ' ' || user_modified.time_zone)::TIMESTAMP WITH TIME ZONE AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,crm.deleted::bool AS tech_deleted_in_source_system
        ,md5(
        COALESCE(account.account_type, '')
        || COALESCE(crm.description, '')
        || COALESCE(account.industry, '')
        || COALESCE(account.employees, 0)
        || COALESCE(scf.cf_755 , '')
        || COALESCE(account.website, '')
        || COALESCE(scf.cf_839 , '')
        || COALESCE(scf.cf_813 , '')
        || COALESCE(account.email1 , '')
        || COALESCE(account.email2, '')
        || COALESCE(account.phone       , '')
        || COALESCE(scf.cf_751 , '')
        || COALESCE(bill_address.bill_country , '')
        || COALESCE(bill_address.bill_state , '')
        || COALESCE(bill_address.bill_city, '')
        || COALESCE(bill_address.bill_code , '')
        || COALESCE(bill_address.bill_pobox, '')
        || COALESCE(bill_address.bill_street, '')
        || COALESCE(ship_address.ship_country , '')
        || COALESCE(ship_address.ship_state, '')
        || COALESCE(ship_address.ship_city, '')
        || COALESCE(ship_address.ship_street, '')
        || COALESCE(ship_address.ship_code, '')
        || COALESCE(ship_address.ship_pobox, '')
        || employee_assigned.employee_key
        || crm.deleted
        ) AS tech_row_hash
        ,account.tech_data_load_utc_timestamp
        ,account.tech_data_load_uuid
    FROM stage.vtiger_account_i AS account
    JOIN stage.vtiger_accountscf_i AS scf ON account.accountid = scf.accountid
    JOIN stage.vtiger_accountbillads_i AS bill_address ON account.accountid = bill_address.accountaddressid
    JOIN stage.vtiger_accountshipads_i AS ship_address ON account.accountid = ship_address.accountaddressid
    JOIN stage.vtiger_crmentity_i AS crm ON crm.crmid = account.accountid
    JOIN stage.vtiger_users_i AS user_assigned ON user_assigned.id = crm.smownerid
    JOIN stage.vtiger_users_i AS user_created ON user_created.id = crm.smcreatorid
    JOIN stage.vtiger_users_i AS user_modified ON user_modified.id = crm.modifiedby
    JOIN core.employee_i AS employee_assigned ON employee_assigned.employee_key = user_assigned.user_name
    JOIN core.employee_i AS employee_created ON employee_created.employee_key = user_created.user_name
    JOIN core.employee_i AS employee_modified ON employee_modified.employee_key = user_modified.user_name
    JOIN core.party_i AS party ON account.account_no = party.party_key
    UNION ALL
    SELECT
        lead.lead_no || LEAD_ORGANIZATION_FLAG AS organization_key
        ,crm.crmid
        ,scf.cf_799 AS organization_type
        ,crm.description
        ,lead.industry
        ,null::integer AS number_of_employees
        ,null::text AS partner
        ,subdetail.website
        ,scf.cf_864 AS external_inteligence
        ,null::text AS nda
        ,lead.email
        ,lead.secondaryemail AS secondary_email
        ,lead_addr.phone
        ,lead_addr.mobile AS mobile_phone
        ,scf.cf_795 AS region
        ,lead_addr.country AS billing_country
        ,lead_addr."state" AS billing_state
        ,lead_addr.city AS billing_city
        ,lead_addr.code AS billing_zip
        ,lead_addr.pobox AS billing_post_office_box
        ,lead_addr.lane AS billing_street
        ,null::text AS shipping_country
        ,null::text AS shipping_state
        ,null::text AS shipping_city
        ,null::text AS shipping_street
        ,null::text AS shipping_zip
        ,null::text AS shipping_post_office_box
        ,party.party_id AS fk_party_id
        ,employee_assigned.employee_id AS fk_employee_id_assigned_to
        ,employee_created.employee_id AS fk_employee_id_created_by
        ,employee_modified.employee_id AS fk_employee_id_last_modified_by
        ,(crm.createdtime || ' ' || user_created.time_zone)::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,(crm.modifiedtime || ' ' || user_modified.time_zone)::TIMESTAMP WITH TIME ZONE AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,crm.deleted::bool OR lead.converted::bool AS tech_deleted_in_source_system
        ,md5(
        COALESCE(scf.cf_799, '')
        || COALESCE(crm.description, '')
        || COALESCE(lead.industry, '')
        || COALESCE(subdetail.website, '')
        || COALESCE(scf.cf_795, '')
        || COALESCE(scf.cf_864, '')
        || COALESCE(lead.email, '')
        || COALESCE(lead.secondaryemail, '')
        || COALESCE(lead_addr.phone, '')
        || COALESCE(lead_addr.mobile, '')
        || COALESCE(lead_addr.country, '')
        || COALESCE(lead_addr."state", '')
        || COALESCE(lead_addr.city, '')
        || COALESCE(lead_addr.lane, '')
        || COALESCE(lead_addr.code, '')
        || COALESCE(lead_addr.pobox, '')
        || employee_assigned.employee_key
        || crm.deleted
        || lead.converted
        ) AS tech_row_hash
        ,lead.tech_data_load_utc_timestamp
        ,lead.tech_data_load_uuid
    FROM stage.vtiger_leaddetails_i AS lead
    JOIN stage.vtiger_leadaddress_i AS lead_addr ON lead.leadid = lead_addr.leadaddressid
    JOIN stage.vtiger_leadscf_i AS scf ON lead.leadid = scf.leadid
    JOIN stage.vtiger_leadsubdetails_i AS subdetail ON lead.leadid = subdetail.leadsubscriptionid
    JOIN stage.vtiger_crmentity_i AS crm ON crm.crmid = lead.leadid
    JOIN stage.vtiger_users_i AS user_assigned ON user_assigned.id = crm.smownerid
    JOIN stage.vtiger_users_i AS user_created ON user_created.id = crm.smcreatorid
    JOIN stage.vtiger_users_i AS user_modified ON user_modified.id = crm.modifiedby
    JOIN core.employee_i AS employee_assigned ON employee_assigned.employee_key = user_assigned.user_name
    JOIN core.employee_i AS employee_created ON employee_created.employee_key = user_created.user_name
    JOIN core.employee_i AS employee_modified ON employee_modified.employee_key = user_modified.user_name
    JOIN core.party_i AS party ON lead.lead_no || LEAD_ORGANIZATION_FLAG = party.party_key;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.organization_i (
        organization_key
        ,crm_id
        ,organization_type
        ,description
        ,industry
        ,number_of_employees
        ,partner
        ,website
        ,external_inteligence
        ,nda
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,region
        ,billing_country
        ,billing_state
        ,billing_city
        ,billing_zip
        ,billing_post_office_box
        ,billing_street
        ,shipping_country
        ,shipping_state
        ,shipping_city
        ,shipping_zip
        ,shipping_post_office_box
        ,shipping_street
        ,fk_party_id
        ,fk_employee_id_assigned_to
        ,fk_employee_id_created_by
        ,fk_employee_id_last_modified_by
        ,created_timestamp
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_organization_i.organization_key
        ,tmp_organization_i.crm_id
        ,tmp_organization_i.organization_type
        ,tmp_organization_i.description
        ,tmp_organization_i.industry
        ,tmp_organization_i.number_of_employees
        ,tmp_organization_i.partner
        ,tmp_organization_i.website
        ,tmp_organization_i.external_inteligence
        ,tmp_organization_i.nda
        ,tmp_organization_i.email
        ,tmp_organization_i.secondary_email
        ,tmp_organization_i.phone
        ,tmp_organization_i.mobile_phone
        ,tmp_organization_i.region
        ,tmp_organization_i.billing_country
        ,tmp_organization_i.billing_state
        ,tmp_organization_i.billing_city
        ,tmp_organization_i.billing_zip
        ,tmp_organization_i.billing_post_office_box
        ,tmp_organization_i.billing_street
        ,tmp_organization_i.shipping_country
        ,tmp_organization_i.shipping_state
        ,tmp_organization_i.shipping_city
        ,tmp_organization_i.shipping_zip
        ,tmp_organization_i.shipping_post_office_box
        ,tmp_organization_i.shipping_street
        ,tmp_organization_i.fk_party_id
        ,tmp_organization_i.fk_employee_id_assigned_to
        ,tmp_organization_i.fk_employee_id_created_by
        ,tmp_organization_i.fk_employee_id_last_modified_by
        ,tmp_organization_i.created_timestamp
        ,tmp_organization_i.last_modified_timestamp
        ,tmp_organization_i.tech_insert_function
        ,tmp_organization_i.tech_insert_utc_timestamp
        ,tmp_organization_i.tech_deleted_in_source_system
        ,tmp_organization_i.tech_row_hash
        ,tmp_organization_i.tech_data_load_utc_timestamp
        ,tmp_organization_i.tech_data_load_uuid
    FROM tmp_organization_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_vtiger_trg_party_i" id="Procedure_12c8439" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_vtiger_trg_party_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =====================================================================================================================
    DESCRIPTION:        Insert data from stage 'vtiger_*' tables into core input table party_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =====================================================================================================================
    */
DECLARE
LEAD_CONTACT_FLAG TEXT := 'CONTACT';
LEAD_ORGANIZATION_FLAG TEXT:= 'ORGANIZATION';
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
NULL_UTC_TIMESTAMP timestamp := to_timestamp(0)::timestamp at time zone 'UTC';
--PL/pgSQL function get_curr_fx_name() line 6 at GET DIAGNOSTICS
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------
    -- NULL RECORD --
    -----------------
    INSERT INTO core.party_i (
        party_id
        ,party_key
        ,full_name
        ,short_name
        ,fk_employee_id_created_by
        ,fk_employee_id_last_modified_by
        ,created_timestamp
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    VALUES (
        -1 -- party_id
        ,'NULL_PARTY' -- party_key
        ,'' -- full_name
        ,'' -- short_name
        ,-1 -- fk_employee_id_created_by
        ,-1 -- fk_employee_id_last_modified_by
        ,NULL_UTC_TIMESTAMP -- created_timestamp
        ,NULL_UTC_TIMESTAMP -- last_modified_timestamp
        ,FUNCTION_NAME -- tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT -- tech_insert_utc_timestamp
        ,FALSE -- tech_deleted_in_source_system
        ,'' -- tech_row_hash
        ,0 -- tech_data_load_utc_timestamp
        ,'' -- tech_data_load_uuid
    ) ON CONFLICT DO NOTHING;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_party_i;
    CREATE TEMPORARY TABLE tmp_party_i (
        party_key                           TEXT NOT NULL
        ,full_name                          TEXT
        ,short_name                         TEXT
        ,fk_employee_id_last_modified_by    INTEGER NOT NULL
        ,fk_employee_id_created_by          INTEGER NOT NULL
        ,created_timestamp                  TIMESTAMP WITH TIME ZONE
        ,last_modified_timestamp            TIMESTAMP WITH TIME ZONE
        ,tech_insert_function               TEXT NOT NULL
        ,tech_insert_utc_timestamp          BIGINT NOT NULL
        ,tech_deleted_in_source_system      BOOL NOT NULL
        ,tech_row_hash                      TEXT NOT NULL
        ,tech_data_load_utc_timestamp       BIGINT NOT NULL
        ,tech_data_load_uuid                TEXT NOT NULL
    );
    INSERT INTO tmp_party_i (
        party_key
        ,full_name
        ,short_name
        ,fk_employee_id_created_by
        ,fk_employee_id_last_modified_by
        ,created_timestamp
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    --from CRM accounts
    SELECT
        account.account_no AS party_key
        ,account.accountname AS full_name
        ,account.accountname AS short_name
        ,employee_created.employee_id AS fk_employee_id_created_by
        ,employee_modified.employee_id AS fk_employee_id_last_modified_by
        ,(crm.createdtime || ' ' || user_created.time_zone)::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,(crm.modifiedtime || ' ' || user_modified.time_zone)::TIMESTAMP WITH TIME ZONE AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,crm.deleted::bool AS tech_deleted_in_source_system
        ,md5(
        COALESCE(account.accountname, '')
        || crm.deleted
        ) AS tech_row_hash
        ,account.tech_data_load_utc_timestamp
        ,account.tech_data_load_uuid
    FROM stage.vtiger_account_i AS account
    JOIN stage.vtiger_crmentity_i AS crm ON crm.crmid = account.accountid
    JOIN stage.vtiger_users_i AS user_created ON user_created.id = crm.smcreatorid
    JOIN stage.vtiger_users_i AS user_modified ON user_modified.id = crm.modifiedby
    JOIN core.employee_i AS employee_created ON employee_created.employee_key = user_created.user_name
    JOIN core.employee_i AS employee_modified ON employee_modified.employee_key = user_modified.user_name
    UNION ALL
    --from CRM contacts
    SELECT
        contact.contact_no AS party_key
        ,contact.firstname || ' ' || contact.lastname AS full_name
        ,contact.firstname AS short_name
        ,employee_created.employee_id AS fk_employee_id_created_by
        ,employee_modified.employee_id AS fk_employee_id_last_modified_by
        ,(crm.createdtime || ' ' || user_created.time_zone)::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,(crm.modifiedtime || ' ' || user_modified.time_zone)::TIMESTAMP WITH TIME ZONE AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,crm.deleted::bool AS tech_deleted_in_source_system
        ,md5(
        COALESCE(contact.firstname, '')
        || COALESCE(contact.lastname, '')
        || crm.deleted
        ) AS tech_row_hash
        ,contact.tech_data_load_utc_timestamp
        ,contact.tech_data_load_uuid
    FROM stage.vtiger_contactdetails_i AS contact
    JOIN stage.vtiger_crmentity_i AS crm ON crm.crmid = contact.contactid
    JOIN stage.vtiger_users_i AS user_created ON user_created.id = crm.smcreatorid
    JOIN stage.vtiger_users_i AS user_modified ON user_modified.id = crm.modifiedby
    JOIN core.employee_i AS employee_created ON employee_created.employee_key = user_created.user_name
    JOIN core.employee_i AS employee_modified ON employee_modified.employee_key = user_modified.user_name
    UNION ALL
    --Contacts from CRM leads
    SELECT
        lead.lead_no || LEAD_CONTACT_FLAG AS party_key
        ,lead.firstname || ' ' || lead.lastname AS full_name
        ,lead.firstname AS short_name
        ,employee_created.employee_id AS fk_employee_id_created_by
        ,employee_modified.employee_id AS fk_employee_id_last_modified_by
        ,(crm.createdtime || ' ' || user_created.time_zone)::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,(crm.modifiedtime || ' ' || user_modified.time_zone)::TIMESTAMP WITH TIME ZONE AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,crm.deleted::bool OR lead.converted::bool AS tech_deleted_in_source_system
        ,md5(
        COALESCE(lead.firstname ,'')
        || COALESCE(lead.lastname ,'')
        || crm.deleted
        || lead.converted
        ) AS tech_row_hash
        ,lead.tech_data_load_utc_timestamp
        ,lead.tech_data_load_uuid
    FROM stage.vtiger_leaddetails_i AS lead
    JOIN stage.vtiger_crmentity_i AS crm ON crm.crmid = lead.leadid
    JOIN stage.vtiger_users_i AS user_created ON user_created.id = crm.smcreatorid
    JOIN stage.vtiger_users_i AS user_modified ON user_modified.id = crm.modifiedby
    JOIN core.employee_i AS employee_created ON employee_created.employee_key = user_created.user_name
    JOIN core.employee_i AS employee_modified ON employee_modified.employee_key = user_modified.user_name
    UNION ALL
    --Organizations from CRM leads
    SELECT
        lead.lead_no ||  LEAD_ORGANIZATION_FLAG AS party_key
        ,lead.company AS full_name
        ,lead.company AS short_name
        ,employee_created.employee_id AS fk_employee_id_created_by
        ,employee_modified.employee_id AS fk_employee_id_last_modified_by
        ,(crm.createdtime || ' ' || user_created.time_zone)::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,(crm.modifiedtime || ' ' || user_modified.time_zone)::TIMESTAMP WITH TIME ZONE AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,crm.deleted::bool OR lead.converted::bool AS tech_deleted_in_source_system
        ,md5(
        COALESCE(lead.company ,'')
        || crm.deleted
        || lead.converted
        ) AS tech_row_hash
        ,lead.tech_data_load_utc_timestamp
        ,lead.tech_data_load_uuid
    FROM stage.vtiger_leaddetails_i AS lead
    JOIN stage.vtiger_crmentity_i AS crm ON crm.crmid = lead.leadid
    JOIN stage.vtiger_users_i AS user_created ON user_created.id = crm.smcreatorid
    JOIN stage.vtiger_users_i AS user_modified ON user_modified.id = crm.modifiedby
    JOIN core.employee_i AS employee_created ON employee_created.employee_key = user_created.user_name
    JOIN core.employee_i AS employee_modified ON employee_modified.employee_key = user_modified.user_name
    UNION ALL
    --Employees
    SELECT
        vtiger_users.user_name AS party_key
        ,vtiger_users.first_name || ' ' || vtiger_users.last_name AS full_name
        ,vtiger_users.first_name AS short_name
        ,-1 AS fk_employee_id_created_by
        ,-1 AS fk_employee_id_last_modified_by
        ,(vtiger_users.date_entered || ' ' || 'UTC')::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,CASE
            WHEN vtiger_users.date_modified IS NULL THEN NULL_UTC_TIMESTAMP
            ELSE (vtiger_users.date_modified || ' ' || 'UTC')::TIMESTAMP WITH TIME ZONE
        END AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,vtiger_users.deleted::bool AS tech_deleted_in_source_system
        ,md5(
        COALESCE(vtiger_users.first_name, '')
        || COALESCE(vtiger_users.last_name, '')
        ) AS tech_row_hash
        ,vtiger_users.tech_data_load_utc_timestamp
        ,vtiger_users.tech_data_load_uuid
    FROM stage.vtiger_users_i AS vtiger_users;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.party_i (
        party_key
        ,full_name
        ,short_name
        ,fk_employee_id_created_by
        ,fk_employee_id_last_modified_by
        ,created_timestamp
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_party_i.party_key
        ,tmp_party_i.full_name
        ,tmp_party_i.short_name
        ,tmp_party_i.fk_employee_id_created_by
        ,tmp_party_i.fk_employee_id_last_modified_by
        ,tmp_party_i.created_timestamp
        ,tmp_party_i.last_modified_timestamp
        ,tmp_party_i.tech_insert_function
        ,tmp_party_i.tech_insert_utc_timestamp
        ,tmp_party_i.tech_deleted_in_source_system
        ,tmp_party_i.tech_row_hash
        ,tmp_party_i.tech_data_load_utc_timestamp
        ,tmp_party_i.tech_data_load_uuid
    FROM tmp_party_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_src_vtiger_trg_service_contract_i" id="Procedure_2f6b281" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_src_vtiger_trg_service_contract_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =====================================================================================================================
    DESCRIPTION:        Insert data from stage 'vtiger_*' tables into core input table service_contract_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =====================================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    -----------------------------------------------
    -- CREATE TEMPORARY 1:1 TABLE OF INPUT TABLE --
    -----------------------------------------------
    DROP TABLE IF EXISTS tmp_service_contract_i;
    CREATE TEMPORARY TABLE tmp_service_contract_i(
        service_contract_key                TEXT PRIMARY KEY NOT NULL
        ,crm_id                             INTEGER NOT NULL
        ,subject                            TEXT NOT NULL
        ,fk_organization_id_related_to      INTEGER NOT NULL
        ,contract_type                      TEXT
        ,priority                           TEXT
        ,STATUS                             TEXT
        ,fk_date_id_start_date              INTEGER NOT NULL
        ,fk_date_id_due_date                INTEGER NOT NULL
        ,fk_date_id_end_date                INTEGER NOT NULL
        ,fk_date_id_billed_until_date       INTEGER NOT NULL
        ,partner                            TEXT
        ,support_thread                     TEXT
        ,fk_employee_id_assigned_to         INTEGER NOT NULL
        ,fk_employee_id_created_by          INTEGER NOT NULL
        ,fk_employee_id_last_modified_by    INTEGER NOT NULL
        ,created_timestamp                  timestamptz NOT NULL
        ,last_modified_timestamp            timestamptz NOT NULL
        ,tech_insert_function               TEXT NOT NULL
        ,tech_insert_utc_timestamp          BIGINT NOT NULL
        ,tech_deleted_in_source_system      BOOL NOT NULL
        ,tech_row_hash                      TEXT NOT NULL
        ,tech_data_load_utc_timestamp       BIGINT NOT NULL
        ,tech_data_load_uuid                TEXT NOT NULL
     );

    INSERT INTO tmp_service_contract_i (
        service_contract_key
        ,crm_id
        ,subject
        ,fk_organization_id_related_to
        ,contract_type
        ,priority
        ,STATUS
        ,fk_date_id_start_date
        ,fk_date_id_due_date
        ,fk_date_id_end_date
        ,fk_date_id_billed_until_date
        ,partner
        ,support_thread
        ,fk_employee_id_assigned_to
        ,fk_employee_id_created_by
        ,fk_employee_id_last_modified_by
        ,created_timestamp
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        service_contract.contract_no AS service_contract_key
        ,crm.crmid AS crm_id
        ,service_contract.subject
        ,CASE WHEN organization.organization_id IS NULL THEN -1
            ELSE organization.organization_id
        END AS fk_organization_id_related_to
        ,service_contract.contract_type
        ,service_contract.priority
        ,service_contract.contract_status as status
        ,CASE WHEN service_contract.start_date IS NULL THEN -1
            WHEN service_contract.start_date = '' THEN -1
            ELSE replace(service_contract.start_date,'-','')::integer
        END AS fk_date_id_start_date
        ,CASE WHEN service_contract.due_date IS NULL THEN -1
            WHEN service_contract.due_date = '' THEN -1
            ELSE replace(service_contract.due_date,'-','')::integer
        END AS fk_date_id_due_date
        ,CASE WHEN service_contract.end_date IS NULL THEN -1
            WHEN service_contract.end_date = '' THEN -1
            ELSE replace(service_contract.end_date,'-','')::integer
        END AS fk_date_id_end_date
        ,CASE WHEN scf.cf_878 IS NULL THEN -1
            WHEN scf.cf_878 = '' THEN -1
            ELSE replace(scf.cf_878,'-','')::integer
        END AS fk_date_id_billed_until_date
        ,scf.cf_801 AS partner
        ,scf.cf_849 AS support_thread
        ,employee_assigned.employee_id AS fk_employee_id_assigned_to
        ,employee_created.employee_id AS fk_employee_id_created_by
        ,employee_modified.employee_id AS fk_employee_id_last_modified_by
        ,(crm.createdtime || ' ' || user_created.time_zone)::TIMESTAMP WITH TIME ZONE AS created_timestamp
        ,(crm.modifiedtime || ' ' || user_modified.time_zone)::TIMESTAMP WITH TIME ZONE AS last_modified_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,crm.deleted::bool AS tech_deleted_in_source_system
        ,md5(
           COALESCE(service_contract.subject, '')
        || COALESCE(service_contract.contract_type, '')
        || COALESCE(service_contract.priority, '')
        || COALESCE(service_contract.contract_status, '')
        || COALESCE(service_contract.start_date, '')
        || COALESCE(service_contract.due_date, '')
        || COALESCE(service_contract.end_date, '')
        || COALESCE(scf.cf_878, '')
        || COALESCE(scf.cf_801, '')
        || COALESCE(scf.cf_849, '')
        || COALESCE(organization.organization_key, '')
        || employee_created.employee_key
        || employee_assigned.employee_key
        || employee_modified.employee_key
        || crm.modifiedtime
        || crm.deleted
        ) AS tech_row_hash
        ,service_contract.tech_data_load_utc_timestamp
        ,service_contract.tech_data_load_uuid
    FROM stage.vtiger_servicecontracts_i AS service_contract
    JOIN stage.vtiger_servicecontractscf_i AS scf ON scf.servicecontractsid = service_contract.servicecontractsid
    JOIN stage.vtiger_crmentity_i AS crm ON crm.crmid = service_contract.servicecontractsid
    JOIN stage.vtiger_users_i AS user_assigned ON user_assigned.id = crm.smownerid
    JOIN stage.vtiger_users_i AS user_created ON user_created.id = crm.smcreatorid
    JOIN stage.vtiger_users_i AS user_modified ON user_modified.id = crm.modifiedby
    JOIN core.employee_i AS employee_assigned ON employee_assigned.employee_key = user_assigned.user_name
    JOIN core.employee_i AS employee_created ON employee_created.employee_key = user_created.user_name
    JOIN core.employee_i AS employee_modified ON employee_modified.employee_key = user_modified.user_name
    LEFT JOIN core.organization_i AS organization ON organization.crm_id = service_contract.sc_related_to;
    -----------------------------------------
    -- INSERT NEW RECORDS INTO INPUT TABLE --
    -----------------------------------------
    INSERT INTO core.service_contract_i(
        service_contract_key
        ,crm_id
        ,subject
        ,fk_organization_id_related_to
        ,contract_type
        ,priority
        ,STATUS
        ,fk_date_id_start_date
        ,fk_date_id_due_date
        ,fk_date_id_end_date
        ,fk_date_id_billed_until_date
        ,partner
        ,support_thread
        ,fk_employee_id_assigned_to
        ,fk_employee_id_created_by
        ,fk_employee_id_last_modified_by
        ,created_timestamp
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_deleted_in_source_system
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        tmp_service_contract_i.service_contract_key
        ,tmp_service_contract_i.crm_id
        ,tmp_service_contract_i.subject
        ,tmp_service_contract_i.fk_organization_id_related_to
        ,tmp_service_contract_i.contract_type
        ,tmp_service_contract_i.priority
        ,tmp_service_contract_i.STATUS
        ,tmp_service_contract_i.fk_date_id_start_date
        ,tmp_service_contract_i.fk_date_id_due_date
        ,tmp_service_contract_i.fk_date_id_end_date
        ,tmp_service_contract_i.fk_date_id_billed_until_date
        ,tmp_service_contract_i.partner
        ,tmp_service_contract_i.support_thread
        ,tmp_service_contract_i.fk_employee_id_assigned_to
        ,tmp_service_contract_i.fk_employee_id_created_by
        ,tmp_service_contract_i.fk_employee_id_last_modified_by
        ,tmp_service_contract_i.created_timestamp
        ,tmp_service_contract_i.last_modified_timestamp
        ,tmp_service_contract_i.tech_insert_function
        ,tmp_service_contract_i.tech_insert_utc_timestamp
        ,tmp_service_contract_i.tech_deleted_in_source_system
        ,tmp_service_contract_i.tech_row_hash
        ,tmp_service_contract_i.tech_data_load_utc_timestamp
        ,tmp_service_contract_i.tech_data_load_uuid
    FROM tmp_service_contract_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_i_stage_i_to_core_i_uber_transformation" id="Procedure_9ecc2a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_i_stage_i_to_core_i_uber_transformation()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
BEGIN
    ---------------------------------------------------------------------------
    -- Populate Global Code List Tables That Have Generated Data | If Needed --
    ---------------------------------------------------------------------------
    IF (SELECT COUNT(*) FROM core.c_date_g) = 0 THEN
        PERFORM core.tf_g_c_date_g();
    END IF;
    IF (SELECT COUNT(*) FROM core.c_currency_g) = 0 THEN
        PERFORM core.tf_g_c_currency_g();
    END IF;
    IF (SELECT COUNT(*) FROM core.c_null_replacement_g) = 0 THEN
        PERFORM core.tf_g_c_null_replacement_g();
    END IF;
    --------------------------------------------------
    -- Insert New Rows Into Global Code List Tables --
    --------------------------------------------------
    PERFORM core.tf_i_src_cnb_trg_c_exchange_rate_g();
    PERFORM core.tf_g_c_contry_name_map_g();
    -------------------------------
    -- Populate Code List Tables --
    -------------------------------
    PERFORM core.tf_i_src_ocean_trg_c_partner_list_i();
    PERFORM core.tf_i_src_ocean_trg_c_revenue_type_i();
    ---------------------
    -- Reset Sequences --
    ---------------------
    PERFORM setval('core.seq_c_revenue_type_i_revenue_type_id', 1, FALSE);
    PERFORM setval('core.seq_c_partner_list_i_partner_list_id', 1, FALSE);
    PERFORM setval('core.seq_employee_i_employee_id', 1, FALSE);
    PERFORM setval('core.seq_party_i_party_id', 1, FALSE);
    PERFORM setval('core.seq_organization_i_organization_id', 1, FALSE);
    PERFORM setval('core.seq_organization_relation_i_organization_relation_id', 1, FALSE);
    PERFORM setval('core.seq_deal_i_deal_id', 1, FALSE);
    PERFORM setval('core.seq_deal_contact_map_i_deal_contact_map_id', 1, FALSE);
    PERFORM setval('core.seq_contact_i_contact_id', 1, FALSE);
    PERFORM setval('core.seq_project_i_project_id', 1, FALSE);
    PERFORM setval('core.seq_release_i_release_id', 1, FALSE);
    PERFORM setval('core.seq_issue_i_issue_id', 1, FALSE);
    PERFORM setval('core.seq_issue_comment_i_issue_comment_id', 1, FALSE);
    PERFORM setval('core.seq_issue_relation_map_i_issue_relation_map_id', 1, FALSE);
    PERFORM setval('core.seq_worklog_i_worklog_id', 1, FALSE);
    PERFORM setval('core.seq_sale_i_sale_id', 1, FALSE);
    PERFORM setval('core.seq_activity_i_activity_id', 1, FALSE);
    PERFORM setval('core.seq_deal_change_log_i_deal_change_log_id', 1, FALSE);
    PERFORM setval('core.seq_mail_message_i_mail_message_id', 1, FALSE);
    PERFORM setval('core.seq_note_i_note_id', 1, FALSE);
    PERFORM setval('core.seq_email_campaign_report_i', 1, FALSE);
    PERFORM setval('core.seq_email_campaign_recipient_i', 1, FALSE);
    PERFORM setval('core.seq_email_campaign_opened_by_i', 1, FALSE);
    PERFORM setval('core.seq_email_campaign_clicked_url_i', 1, FALSE);
    PERFORM setval('core.seq_email_campaign_bounced_email_i', 1, FALSE);
    PERFORM setval('core.seq_mailing_list_i', 1, FALSE);
    PERFORM setval('core.seq_mailing_list_segment_i', 1, FALSE);
    PERFORM setval('core.seq_mailing_list_member_i', 1, FALSE);
    PERFORM setval('core.seq_list_segment_list_member_map_i', 1, FALSE);
    PERFORM setval('core.seq_iso_3166_country_list_i_iso_3166_country_list_id', 1, FALSE);
    ------------------------
    -- ISO 3166 Countries --
    ------------------------
    PERFORM core.tf_i_src_rest_countries_trg_iso_3166_country_list_i();
    ----------
    -- JIRA --
    ----------
    PERFORM core.tf_i_src_jira_trg_employee_i();
    PERFORM core.tf_i_src_jira_trg_party_i();
    PERFORM core.tf_i_src_jira_trg_project_i();
    PERFORM core.tf_i_src_jira_trg_release_i();
    PERFORM core.tf_i_src_jira_trg_issue_i();
    PERFORM core.tf_i_src_jira_trg_issue_relation_map_i();
    PERFORM core.tf_i_src_jira_trg_worklog_i();
    PERFORM core.tf_i_src_jira_trg_issue_comment_i();
    ---------------
    -- PIPEDRIVE --
    ---------------
    PERFORM core.tf_i_src_pipedrive_trg_employee_i();
    PERFORM core.tf_i_src_pipedrive_trg_party_i();
    PERFORM core.tf_i_src_pipedrive_trg_organization_i();
    PERFORM core.tf_i_src_pipedrive_trg_organization_relation_i();
    PERFORM core.tf_i_src_pipedrive_trg_contact_i();
    PERFORM core.tf_i_src_pipedrive_trg_deal_i();
    PERFORM core.tf_i_src_pipedrive_trg_deal_contact_map_i();
    PERFORM core.tf_i_src_pipedrive_trg_deal_change_log_i();
    PERFORM core.tf_i_src_pipedrive_trg_activity_i();
    PERFORM core.tf_i_src_pipedrive_trg_note_i();
    PERFORM core.tf_i_src_pipedrive_trg_mail_message_i();
    -----------------------
    -- NextCloud / Ocean --
    -----------------------
    PERFORM core.tf_i_src_ocean_trg_sale_i();
    ---------------
    -- Mailchimp --
    ---------------
    PERFORM core.tf_i_src_mailchimp_trg_employee_i();
    PERFORM core.tf_i_src_mailchimp_trg_party_i();
    PERFORM core.tf_i_src_mailchimp_trg_mailing_list_i();
    PERFORM core.tf_i_src_mailchimp_trg_mailing_list_member_i();
    PERFORM core.tf_i_src_mailchimp_trg_mailing_list_segment_i();
    PERFORM core.tf_i_src_mailchimp_trg_list_segment_list_member_map_i();
    PERFORM core.tf_i_src_mailchimp_trg_email_campaign_report_i();
    PERFORM core.tf_i_src_mailchimp_trg_email_campaign_recipient_i();
    PERFORM core.tf_i_src_mailchimp_trg_email_campaign_opened_by_i();
    PERFORM core.tf_i_src_mailchimp_trg_email_campaign_clicked_url_i();
    PERFORM core.tf_i_src_mailchimp_trg_email_campaign_bounced_email_i();
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_activity_t" id="Procedure_4bacd51" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_activity_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:    Insert data from core deal_i input table into core 'today' table activity_t
    AUTHOR:         Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:     2018-11-12 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.activity_t (
        activity_id
        ,activity_key
        ,fk_employee_id_created_by
        ,fk_organization_id
        ,fk_contact_id
        ,fk_deal_id
        ,fk_date_id_due_date
        ,due_timestamp
        ,marked_as_done
        ,fk_date_id_marked_as_done
        ,marked_as_done_timestamp
        ,fk_date_id_created_date
        ,created_timestamp
        ,subject
        ,fk_employee_id_assigned_to
        ,note
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT 
        input_activity.activity_id
        ,input_activity.activity_key
        ,COALESCE(input_employee_created_by.employee_id, -1) AS fk_employee_id_created_by
        ,COALESCE(input_organization.organization_id, -1) AS fk_organization_id
        ,COALESCE(input_contact.contact_id, -1) AS fk_contact_id
        ,COALESCE(input_deal.deal_id, -1) AS fk_deal_id
        ,input_activity.fk_date_id_due_date
        ,input_activity.due_timestamp
        ,input_activity.marked_as_done
        ,input_activity.fk_date_id_marked_as_done
        ,input_activity.marked_as_done_timestamp
        ,input_activity.fk_date_id_created_date
        ,input_activity.created_timestamp
        ,input_activity.subject
        ,input_activity.fk_employee_id_assigned_to
        ,input_activity.note
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_activity.tech_row_hash
        ,input_activity.tech_data_load_utc_timestamp
        ,input_activity.tech_data_load_uuid
    FROM core.activity_i AS input_activity
    LEFT JOIN core.employee_i AS input_employee_created_by ON input_activity.fk_employee_id_created_by = input_employee_created_by.employee_id
        AND input_employee_created_by.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.organization_i AS input_organization ON input_activity.fk_organization_id = input_organization.organization_id
        AND input_organization.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.contact_i AS input_contact ON input_activity.fk_organization_id = input_contact.contact_id
        AND input_contact.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.deal_i AS input_deal ON input_activity.fk_organization_id = input_deal.deal_id
        AND input_deal.tech_deleted_in_source_system IS FALSE
    WHERE input_activity.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_c_partner_list_t" id="Procedure_4778c59" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_c_partner_list_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Copy data from code list talbe partner_list into today table partner_list
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-16 (YYYY-MM-DD)
    NOTE:               
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.c_partner_list_t (
        partner_list_id
        ,partner_name
        ,is_tracked
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_partner_list.partner_list_id
        ,input_partner_list.partner_name
        ,input_partner_list.is_tracked
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_partner_list.tech_row_hash
        ,input_partner_list.tech_data_load_utc_timestamp
        ,input_partner_list.tech_data_load_uuid
    FROM core.c_partner_list_i AS input_partner_list
    WHERE input_partner_list.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_c_revenue_type_t" id="Procedure_80d23b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_c_revenue_type_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Copy data from code list talbe revenue_type into today table revenue_type
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-16 (YYYY-MM-DD)
    NOTE:               
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.c_revenue_type_t (
        revenue_type_id
        ,revenue_type_name
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_revenue_type.revenue_type_id
        ,input_revenue_type.revenue_type_name
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_revenue_type.tech_row_hash
        ,input_revenue_type.tech_data_load_utc_timestamp
        ,input_revenue_type.tech_data_load_uuid
    FROM core.c_revenue_type_i AS input_revenue_type
    WHERE input_revenue_type.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_contact_t" id="Procedure_19f7c8e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_contact_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =================================================================================================================================
    DESCRIPTION:    Insert data from core contact_i input table into core 'today' table contact_t
    AUTHOR:         Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:     2018-05-15 (YYYY-MM-DD)
    NOTE:
    =================================================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.contact_t (
        contact_id
        ,contact_key
        ,fk_organization_id
        ,fk_party_id
        ,fk_date_id_created_date
        ,created_timestamp
        ,phone_number
        ,email_address
        ,location_full
        ,location_city
        ,location_country
        ,location_region
        ,pipedrive_label
        ,fk_employee_id_owner
        ,fk_date_id_last_updated_date
        ,last_updated_timestamp
        ,pipedrive_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        input_contact.contact_id
        ,input_contact.contact_key
        ,input_organization.organization_id AS fk_organization_id
        ,input_party.party_id AS fk_party_id
        ,input_contact.fk_date_id_created_date
        ,input_contact.created_timestamp
        ,input_contact.phone_number
        ,input_contact.email_address
        ,input_contact.location_full
        ,input_contact.location_city
        ,input_contact.location_country
        ,input_contact.location_region
        ,input_contact.pipedrive_label
        ,input_employee_owner.employee_id AS fk_employee_id_owner
        ,input_contact.fk_date_id_last_updated_date
        ,input_contact.last_updated_timestamp
        ,input_contact.pipedrive_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_contact.tech_row_hash
        ,input_contact.tech_data_load_utc_timestamp
        ,input_contact.tech_data_load_uuid
    FROM core.contact_i AS input_contact
    LEFT JOIN core.employee_i AS input_employee_owner ON input_contact.fk_employee_id_owner = input_employee_owner.employee_id
        AND input_employee_owner.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.organization_i AS input_organization ON input_contact.fk_organization_id = input_organization.organization_id
        AND input_organization.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.party_i AS input_party ON input_contact.fk_party_id = input_party.party_id
        AND input_contact.tech_deleted_in_source_system IS FALSE
    WHERE input_contact.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_core_i_to_core_t_uber_transformation" id="Procedure_171baa5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_core_i_to_core_t_uber_transformation()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
BEGIN
    ------------------------
    -- Clear Today Tables --
    ------------------------
    PERFORM core.tf_u_clear_core_t_tables();
    ---------------------
    -- Reset Sequences --
    ---------------------
    PERFORM setval('core.seq_c_revenue_type_t_revenue_type_id', 1, FALSE);
    PERFORM setval('core.seq_c_partner_list_t_partner_list_id', 1, FALSE);
    PERFORM setval('core.seq_employee_t_employee_id', 1, FALSE);
    PERFORM setval('core.seq_party_t_party_id', 1, FALSE);
    PERFORM setval('core.seq_organization_t_organization_id', 1, FALSE);
    PERFORM setval('core.seq_organization_relation_t_organization_relation_id', 1, FALSE);
    PERFORM setval('core.seq_deal_t_deal_id', 1, FALSE);
    PERFORM setval('core.seq_deal_contact_map_t_deal_contact_map_id', 1, FALSE);
    PERFORM setval('core.seq_contact_t_contact_id', 1, FALSE);
    PERFORM setval('core.seq_project_t_project_id', 1, FALSE);
    PERFORM setval('core.seq_release_t_release_id', 1, FALSE);
    PERFORM setval('core.seq_issue_t_issue_id', 1, FALSE);
    PERFORM setval('core.seq_issue_comment_t_issue_comment_id', 1, FALSE);
    PERFORM setval('core.seq_issue_relation_map_t_issue_relation_map_id', 1, FALSE);
    PERFORM setval('core.seq_worklog_t_worklog_id', 1, FALSE);
    PERFORM setval('core.seq_sale_t_sale_id', 1, FALSE);
    PERFORM setval('core.seq_activity_t_activity_id', 1, FALSE);
    PERFORM setval('core.seq_deal_change_log_t_deal_change_log_id', 1, FALSE);
    PERFORM setval('core.seq_mail_message_t_mail_message_id', 1, FALSE);
    PERFORM setval('core.seq_note_t_note_id', 1, FALSE);
    PERFORM setval('core.seq_email_campaign_report_t', 1, FALSE);
    PERFORM setval('core.seq_email_campaign_recipient_t', 1, FALSE);
    PERFORM setval('core.seq_email_campaign_opened_by_t', 1, FALSE);
    PERFORM setval('core.seq_email_campaign_clicked_url_t', 1, FALSE);
    PERFORM setval('core.seq_email_campaign_bounced_email_t', 1, FALSE);
    PERFORM setval('core.seq_mailing_list_t', 1, FALSE);
    PERFORM setval('core.seq_mailing_list_segment_t', 1, FALSE);
    PERFORM setval('core.seq_mailing_list_member_t', 1, FALSE);
    PERFORM setval('core.seq_list_segment_list_member_map_t', 1, FALSE);
    PERFORM setval('core.seq_iso_3166_country_list_t_iso_3166_country_list_id', 1, FALSE);
    ----------------------
    -- CODE LIST TABLES --
    ----------------------
    PERFORM core.tf_t_c_partner_list_t();
    PERFORM core.tf_t_c_revenue_type_t();
    
    ------------------------
    -- ISO 3166 Countries --
    ------------------------
    PERFORM core.tf_t_iso_3166_country_list_t();
    ----------
    -- JIRA --
    ----------
    PERFORM core.tf_t_employee_t();
    PERFORM core.tf_t_party_t();
    PERFORM core.tf_t_project_t();
    PERFORM core.tf_t_release_t();
    PERFORM core.tf_t_issue_t();
    PERFORM core.tf_t_issue_relation_map_t();
    PERFORM core.tf_t_worklog_t();
    PERFORM core.tf_t_issue_comment_t();
    ---------------
    -- PIPEDRIVE --
    ---------------
    PERFORM core.tf_t_organization_t();
    PERFORM core.tf_t_organization_relation_t();
    PERFORM core.tf_t_contact_t();
    PERFORM core.tf_t_deal_t();
    PERFORM core.tf_t_deal_contact_map_t();
    PERFORM core.tf_t_deal_change_log_t();
    PERFORM core.tf_t_activity_t();
    PERFORM core.tf_t_note_t();
    PERFORM core.tf_t_mail_message_t();
    -----------------------
    -- NextCloud / Ocean --
    -----------------------
    PERFORM core.tf_t_sale_t();
    ---------------
    -- Mailchimp --
    ---------------
    PERFORM core.tf_t_mailing_list_t();
    PERFORM core.tf_t_mailing_list_member_t();
    PERFORM core.tf_t_mailing_list_segment_t();
    PERFORM core.tf_t_list_segment_list_member_map_t();
    PERFORM core.tf_t_email_campaign_report_t();
    PERFORM core.tf_t_email_campaign_recipient_t();
    PERFORM core.tf_t_email_campaign_opened_by_t();
    PERFORM core.tf_t_email_campaign_clicked_url_t();
    PERFORM core.tf_t_email_campaign_bounced_email_t();

    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_deal_change_log_t" id="Procedure_15a343d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_deal_change_log_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:    Insert data from core deal_i input table into core 'today' table deal_change_log_t
    AUTHOR:         Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:     2018-11-12 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.deal_change_log_t (
        deal_change_log_id
        ,deal_change_log_key
        ,field
        ,old_value
        ,new_value
        ,fk_deal_id
        ,fk_employee_id
        ,fk_date_id_log_date
        ,log_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT 
        input_deal_change_log.deal_change_log_id
        ,input_deal_change_log.deal_change_log_key
        ,input_deal_change_log.field
        ,input_deal_change_log.old_value
        ,input_deal_change_log.new_value
        ,input_deal.deal_id AS fk_deal_id
        ,input_employee.employee_id AS fk_employee_id
        ,input_deal_change_log.fk_date_id_log_date
        ,input_deal_change_log.log_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_deal_change_log.tech_row_hash
        ,input_deal_change_log.tech_data_load_utc_timestamp
        ,input_deal_change_log.tech_data_load_uuid
    FROM core.deal_change_log_i AS input_deal_change_log
    JOIN core.deal_i AS input_deal ON input_deal_change_log.fk_deal_id = input_deal.deal_id
        AND input_deal.tech_deleted_in_source_system IS FALSE
    JOIN core.employee_i AS input_employee ON input_deal_change_log.fk_employee_id = input_employee.employee_id
        AND input_employee.tech_deleted_in_source_system IS FALSE
    WHERE input_deal_change_log.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_deal_contact_map_t" id="Procedure_2ba2cd2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_deal_contact_map_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:    Insert data from core deal_contact_map_i input table into core 'today' table deal_contact_map_t
    AUTHOR:         Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:     2018-11-06 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.deal_contact_map_t (
        deal_contact_map_id
        ,deal_key
        ,contact_key
        ,fk_deal_id
        ,fk_contact_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_deal_contact_map.deal_contact_map_id
        ,input_deal_contact_map.deal_key
        ,input_deal_contact_map.contact_key
        ,input_deal.deal_id AS fk_deal_id
        ,input_contact.contact_id AS fk_contact_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_deal_contact_map.tech_row_hash
        ,input_deal_contact_map.tech_data_load_utc_timestamp
        ,input_deal_contact_map.tech_data_load_uuid
    FROM core.deal_contact_map_i AS input_deal_contact_map
    JOIN core.deal_i AS input_deal ON input_deal_contact_map.fk_deal_id = input_deal.deal_id
        AND input_deal.tech_deleted_in_source_system IS FALSE
    JOIN core.contact_i AS input_contact ON input_deal_contact_map.fk_contact_id = input_contact.contact_id
        AND input_contact.tech_deleted_in_source_system IS FALSE
    WHERE input_deal_contact_map.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_deal_t" id="Procedure_206376f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_deal_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:    Insert data from core deal_i input table into core 'today' table deal_t
    AUTHOR:         Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:     2018-11-06 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.deal_t (
        deal_id
        ,deal_key
        ,title
        ,stage
        ,usd_value
        ,fk_currency_id_deal_currency
        ,local_currency_value
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_updated_date
        ,last_updated_timestamp
        ,fk_date_id_closed_date
        ,closed_timestamp
        ,pipedrive_id
        ,status
        ,pipeline
        ,fk_date_id_won_date
        ,won_timestamp
        ,fk_date_id_lost_date
        ,lost_timestamp
        ,fk_date_id_expected_close_date
        ,expected_close_date
        ,industry
        ,deal_source
        ,deal_source_detail
        ,region
        ,reason_lost
        ,resulting_state
        ,fk_issue_id
        ,fk_contact_id
        ,fk_organization_id
        ,fk_employee_id_owner
        ,category
        ,country
        ,partner_identified_by
        ,partner_qualified_by
        ,partner_poc_done_by
        ,partner_closed_by
        ,partner_resold_by
        ,partner_owned_by
        ,partner_supported_by
        ,vtiger_key
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_deal.deal_id
        ,input_deal.deal_key
        ,input_deal.title
        ,input_deal.stage
        ,input_deal.usd_value
        ,input_deal.fk_currency_id_deal_currency
        ,input_deal.local_currency_value
        ,input_deal.fk_date_id_created_date
        ,input_deal.created_timestamp
        ,input_deal.fk_date_id_last_updated_date
        ,input_deal.last_updated_timestamp
        ,input_deal.fk_date_id_closed_date
        ,input_deal.closed_timestamp
        ,input_deal.pipedrive_id
        ,input_deal.status
        ,input_deal.pipeline
        ,input_deal.fk_date_id_won_date
        ,input_deal.won_timestamp
        ,input_deal.fk_date_id_lost_date
        ,input_deal.lost_timestamp
        ,input_deal.fk_date_id_expected_close_date
        ,input_deal.expected_close_date
        ,input_deal.industry
        ,input_deal.deal_source
        ,input_deal.deal_source_detail
        ,input_deal.region
        ,input_deal.reason_lost
        ,input_deal.resulting_state
        ,input_issue.issue_id AS fk_issue_id
        ,input_contact.contact_id AS fk_contact_id
        ,input_organization.organization_id AS fk_organization_id
        ,input_employee_owner.employee_id AS fk_employee_id_owner
        ,input_deal.category
        ,input_deal.country
        ,input_deal.partner_identified_by
        ,input_deal.partner_qualified_by
        ,input_deal.partner_poc_done_by
        ,input_deal.partner_closed_by
        ,input_deal.partner_resold_by
        ,input_deal.partner_owned_by
        ,input_deal.partner_supported_by
        ,input_deal.vtiger_key
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_deal.tech_row_hash
        ,input_deal.tech_data_load_utc_timestamp
        ,input_deal.tech_data_load_uuid
    FROM core.deal_i AS input_deal
    LEFT JOIN core.issue_i AS input_issue ON input_deal.fk_issue_id = input_issue.issue_id
        AND input_issue.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.contact_i AS input_contact ON input_deal.fk_contact_id = input_contact.contact_id
        AND input_contact.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.organization_i AS input_organization ON input_deal.fk_organization_id = input_organization.organization_id
        AND input_organization.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.employee_i AS input_employee_owner ON input_deal.fk_employee_id_owner = input_employee_owner.employee_id
        AND input_employee_owner.tech_deleted_in_source_system IS FALSE
    WHERE input_deal.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_email_campaign_bounced_email_t" id="Procedure_2445964" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_email_campaign_bounced_email_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =================================================================================================================================
    DESCRIPTION:        Insert data from core email_campaign_bounced_email_i input table into core 'today' table email_campaign_bounced_email_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-21 (YYYY-MM-DD)
    NOTE:
    =================================================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.email_campaign_bounced_email_t (
        email_campaign_bounced_email_id
        ,email_campaign_bounced_email_key
        ,fk_email_campaign_report_id
        ,bounce_type
        ,email_address
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_email_campaign_bounced_email.email_campaign_bounced_email_id
        ,input_email_campaign_bounced_email.email_campaign_bounced_email_key
        ,input_email_campaign_bounced_email.fk_email_campaign_report_id
        ,input_email_campaign_bounced_email.bounce_type
        ,input_email_campaign_bounced_email.email_address
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_email_campaign_bounced_email.tech_row_hash
        ,input_email_campaign_bounced_email.tech_data_load_utc_timestamp
        ,input_email_campaign_bounced_email.tech_data_load_uuid
    FROM core.email_campaign_bounced_email_i AS input_email_campaign_bounced_email
    WHERE input_email_campaign_bounced_email.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_email_campaign_clicked_url_t" id="Procedure_289c609" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_email_campaign_clicked_url_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =================================================================================================================================
    DESCRIPTION:        Insert data from core email_campaign_clicked_url_i input table into core 'today' table email_campaign_clicked_url_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-21 (YYYY-MM-DD)
    NOTE:
    =================================================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.email_campaign_clicked_url_t (
        email_campaign_clicked_url_id
        ,email_campaign_clicked_url_key
        ,fk_email_campaign_report_id
        ,url
        ,clicks
        ,unique_clicks
        ,percentage_ot_total_clicks
        ,percentage_ot_unique_clicks
        ,last_click_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_email_campaign_clicked_url.email_campaign_clicked_url_id
        ,input_email_campaign_clicked_url.email_campaign_clicked_url_key
        ,input_email_campaign_clicked_url.fk_email_campaign_report_id
        ,input_email_campaign_clicked_url.url
        ,input_email_campaign_clicked_url.clicks
        ,input_email_campaign_clicked_url.unique_clicks
        ,input_email_campaign_clicked_url.percentage_ot_total_clicks
        ,input_email_campaign_clicked_url.percentage_ot_unique_clicks
        ,input_email_campaign_clicked_url.last_click_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_email_campaign_clicked_url.tech_row_hash
        ,input_email_campaign_clicked_url.tech_data_load_utc_timestamp
        ,input_email_campaign_clicked_url.tech_data_load_uuid
    FROM core.email_campaign_clicked_url_i AS input_email_campaign_clicked_url
    WHERE input_email_campaign_clicked_url.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_email_campaign_opened_by_t" id="Procedure_2729c51" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_email_campaign_opened_by_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =================================================================================================================================
    DESCRIPTION:        Insert data from core email_campaign_opened_by_i input table into core 'today' table email_campaign_opened_by_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-15 (YYYY-MM-DD)
    NOTE:
    =================================================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.email_campaign_opened_by_t (
        email_campaign_opened_by_id
        ,email_campaign_opened_by_key
        ,fk_email_campaign_report_id
        ,email_address
        ,opens_count
        ,open_timestamps
        ,first_name
        ,last_name
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        input_email_campaign_opened_by.email_campaign_opened_by_id
        ,input_email_campaign_opened_by.email_campaign_opened_by_key
        ,input_email_campaign_opened_by.fk_email_campaign_report_id
        ,input_email_campaign_opened_by.email_address
        ,input_email_campaign_opened_by.opens_count
        ,input_email_campaign_opened_by.open_timestamps
        ,input_email_campaign_opened_by.first_name
        ,input_email_campaign_opened_by.last_name
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_email_campaign_opened_by.tech_row_hash
        ,input_email_campaign_opened_by.tech_data_load_utc_timestamp
        ,input_email_campaign_opened_by.tech_data_load_uuid
    FROM core.email_campaign_opened_by_i AS input_email_campaign_opened_by
    WHERE input_email_campaign_opened_by.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_email_campaign_recipient_t" id="Procedure_263768" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_email_campaign_recipient_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =================================================================================================================================
    DESCRIPTION:        Insert data from core email_campaign_recipient_i input table into core 'today' table email_campaign_recipient_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-15 (YYYY-MM-DD)
    NOTE:
    =================================================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.email_campaign_recipient_t (
        email_campaign_recipient_id
        ,email_campaign_recipient_key
        ,fk_email_campaign_report_id
        ,email_address
        ,first_name
        ,last_name
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_email_campaign_recipient.email_campaign_recipient_id
        ,input_email_campaign_recipient.email_campaign_recipient_key
        ,input_email_campaign_recipient.fk_email_campaign_report_id
        ,input_email_campaign_recipient.email_address
        ,input_email_campaign_recipient.first_name
        ,input_email_campaign_recipient.last_name
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_email_campaign_recipient.tech_row_hash
        ,input_email_campaign_recipient.tech_data_load_utc_timestamp
        ,input_email_campaign_recipient.tech_data_load_uuid
    FROM core.email_campaign_recipient_i AS input_email_campaign_recipient
    WHERE input_email_campaign_recipient.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_email_campaign_report_t" id="Procedure_2109f29" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_email_campaign_report_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =================================================================================================================================
    DESCRIPTION:        Insert data from core email_campaign_report_i input table into core 'today' table email_campaign_report_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-15 (YYYY-MM-DD)
    NOTE:
    =================================================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.email_campaign_report_t (
        email_campaign_report_id
        ,email_campaign_report_key
        ,mailchimp_id
        ,mailchimp_web_id
        ,campaign_title
        ,campaign_type
        ,sent_to_mailing_list
        ,sent_to_mailing_list_segment_filter
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_send_date
        ,send_timestamp
        ,emails_sent_total
        ,abuse_reports_total
        ,unsubscribed_total
        ,hard_bounces_total
        ,soft_bounces_total
        ,syntax_error_bounce_total
        ,forwards_total
        ,forwards_opens_total
        ,opens_total
        ,unique_opens_total
        ,total_open_to_unique_open_rate
        ,fk_date_id_last_open_date
        ,last_open_timestamp
        ,clicks_total
        ,unique_clicks_total
        ,total_clicks_to_unique_clicks_rate
        ,unique_subscriiber_clicks_total
        ,fk_date_id_last_click_date
        ,last_click_timestamp
        ,industry_type
        ,industry_open_to_unique_open_rate
        ,industry_click_to_unique_click_rate
        ,industry_bounce_rate
        ,industry_unopen_rate
        ,industry_unsub_rate
        ,industry_abuse_rate
        ,was_timewarp_used
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_email_campaign.email_campaign_report_id
        ,input_email_campaign.email_campaign_report_key
        ,input_email_campaign.mailchimp_id
        ,input_email_campaign.mailchimp_web_id
        ,input_email_campaign.campaign_title
        ,input_email_campaign.campaign_type
        ,input_email_campaign.sent_to_mailing_list
        ,input_email_campaign.sent_to_mailing_list_segment_filter
        ,input_email_campaign.fk_date_id_created_date
        ,input_email_campaign.created_timestamp
        ,input_email_campaign.fk_date_id_send_date
        ,input_email_campaign.send_timestamp
        ,input_email_campaign.emails_sent_total
        ,input_email_campaign.abuse_reports_total
        ,input_email_campaign.unsubscribed_total
        ,input_email_campaign.hard_bounces_total
        ,input_email_campaign.soft_bounces_total
        ,input_email_campaign.syntax_error_bounce_total
        ,input_email_campaign.forwards_total
        ,input_email_campaign.forwards_opens_total
        ,input_email_campaign.opens_total
        ,input_email_campaign.unique_opens_total
        ,input_email_campaign.total_open_to_unique_open_rate
        ,input_email_campaign.fk_date_id_last_open_date
        ,input_email_campaign.last_open_timestamp
        ,input_email_campaign.clicks_total
        ,input_email_campaign.unique_clicks_total
        ,input_email_campaign.total_clicks_to_unique_clicks_rate
        ,input_email_campaign.unique_subscriiber_clicks_total
        ,input_email_campaign.fk_date_id_last_click_date
        ,input_email_campaign.last_click_timestamp
        ,input_email_campaign.industry_type
        ,input_email_campaign.industry_open_to_unique_open_rate
        ,input_email_campaign.industry_click_to_unique_click_rate
        ,input_email_campaign.industry_bounce_rate
        ,input_email_campaign.industry_unopen_rate
        ,input_email_campaign.industry_unsub_rate
        ,input_email_campaign.industry_abuse_rate
        ,input_email_campaign.was_timewarp_used
        ,input_email_campaign.tech_insert_function
        ,input_email_campaign.tech_insert_utc_timestamp
        ,input_email_campaign.tech_row_hash
        ,input_email_campaign.tech_data_load_utc_timestamp
        ,input_email_campaign.tech_data_load_uuid
    FROM core.email_campaign_report_i AS input_email_campaign
    WHERE input_email_campaign.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_employee_t" id="Procedure_2688f9a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_employee_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Insert data from core employee_i input table into core 'today' table employee_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.employee_t (
        employee_id
        ,employee_key
        ,full_name
        ,email
        ,secondary_email
        ,phone
        ,mobile_phone
        ,fk_date_id_created_date
        ,created_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
         input_employee.employee_id
        ,input_employee.employee_key
        ,input_employee.full_name
        ,input_employee.email
        ,input_employee.secondary_email
        ,input_employee.phone
        ,input_employee.mobile_phone
        ,input_employee.fk_date_id_created_date
        ,input_employee.created_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_employee.tech_row_hash
        ,input_employee.tech_data_load_utc_timestamp
        ,input_employee.tech_data_load_uuid
    FROM core.employee_i AS input_employee;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_iso_3166_country_list_t" id="Procedure_552e3e0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_iso_3166_country_list_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Insert data from core iso_3166_country_list_i input table into core 'today' table iso_3166_country_list_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-12-07 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.iso_3166_country_list_t (
        iso_3166_country_list_id
        ,iso_3166_country_list_key
        ,country_name
        ,alpha2code
        ,alpha3code
        ,capital
        ,region
        ,subregion
        ,numericcode
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_country_list.iso_3166_country_list_id
        ,input_country_list.iso_3166_country_list_key
        ,input_country_list.country_name
        ,input_country_list.alpha2code
        ,input_country_list.alpha3code
        ,input_country_list.capital
        ,input_country_list.region
        ,input_country_list.subregion
        ,input_country_list.numericcode
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_country_list.tech_row_hash
        ,input_country_list.tech_data_load_utc_timestamp
        ,input_country_list.tech_data_load_uuid
    FROM core.iso_3166_country_list_i AS input_country_list
    WHERE input_country_list.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_issue_comment_t" id="Procedure_1ef9d54" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_issue_comment_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Insert data from core issue_coment_i input table into core 'today' table issue_coment_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.issue_comment_t (
        issue_comment_id
        ,issue_comment_key
        ,body
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_updated_date
        ,last_updated_timestamp
        ,fk_employee_id_created_by
        ,fk_employee_id_updated_by
        ,fk_issue_id
        ,is_public
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_issue_comment.issue_comment_id
        ,input_issue_comment.issue_comment_key
        ,input_issue_comment.body
        ,input_issue_comment.fk_date_id_created_date
        ,input_issue_comment.created_timestamp
        ,input_issue_comment.fk_date_id_last_updated_date
        ,input_issue_comment.last_updated_timestamp
        ,input_employee_created_by.employee_id AS fk_employee_id_created_by
        ,input_employee_updated_by.employee_id AS fk_employee_id_updated_by
        ,input_issue.issue_id AS fk_issue_id
        ,input_issue_comment.is_public
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_issue_comment.tech_row_hash
        ,input_issue_comment.tech_data_load_utc_timestamp
        ,input_issue_comment.tech_data_load_uuid
    FROM core.issue_comment_i AS input_issue_comment
    LEFT JOIN core.employee_i AS input_employee_created_by ON input_issue_comment.fk_employee_id_created_by = input_employee_created_by.employee_id
        AND input_employee_created_by.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.employee_i AS input_employee_updated_by ON input_issue_comment.fk_employee_id_updated_by = input_employee_updated_by.employee_id
        AND input_employee_updated_by.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.issue_i AS input_issue ON input_issue_comment.fk_issue_id = input_issue.issue_id
        AND input_issue.tech_deleted_in_source_system IS FALSE
    WHERE input_issue_comment.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_issue_relation_map_t" id="Procedure_5e504f7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_issue_relation_map_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =================================================================================================================================
    DESCRIPTION:        Insert data from core issue_relation_map_i input table into core 'today' table issue_relation_map_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-15 (YYYY-MM-DD)
    NOTE:
    =================================================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.issue_relation_map_t (
        issue_relation_map_id
        ,issue_key
        ,issue_key_related_issue
        ,fk_issue_id
        ,fk_issue_id_related_issue
        ,relation
        ,relation_direction
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_issue_relation_map.issue_relation_map_id
        ,input_issue_relation_map.issue_key
        ,input_issue_relation_map.issue_key_related_issue
        ,input_issue_relation_map.fk_issue_id
        ,input_issue_relation_map.fk_issue_id_related_issue
        ,input_issue_relation_map.relation
        ,input_issue_relation_map.relation_direction
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_issue_relation_map.tech_row_hash
        ,input_issue_relation_map.tech_data_load_utc_timestamp
        ,input_issue_relation_map.tech_data_load_uuid
    FROM core.issue_relation_map_i AS input_issue_relation_map
    WHERE input_issue_relation_map.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_issue_t" id="Procedure_23e920a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_issue_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Insert data from core issue_i input table into core 'today' table issue_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.issue_t (
        issue_id
        ,issue_key
        ,jira_key
        ,jira_id
        ,account
        ,customer
        ,status
        ,summary
        ,priority
        ,sla_priority
        ,description
        ,issue_type
        ,resolution
        ,deployment
        ,epic_name
        ,epic_jira_key
        ,original_estimate
        ,remaining_estimate
        ,aggregate_original_estimate
        ,aggregate_remaining_estimate
        ,hours_logged_total
        ,days_logged_total
        ,labels
        ,components
        ,fix_versions
        ,affected_versions
        ,inception_to_first_response_days
        ,inception_to_pilot_days
        ,inception_to_sales_days
        ,inception_to_deployment_days
        ,inception_to_resolution_days
        ,inception_to_now_days
        ,first_response_to_resolution_days
        ,activation_to_pilot_days
        ,activation_to_sales_days
        ,activation_to_deployment_days
        ,activation_to_now_days
        ,pilot_to_pilot_finished_days
        ,pilot_to_sales_days
        ,pilot_to_deployment_days
        ,pilot_to_now_days
        ,pilot_finished_to_sales_days
        ,pilot_finished_to_now_days
        ,sales_to_deployment_days
        ,sales_to_now_days
        ,deployment_to_now_days
        ,fk_date_id_activation_date
        ,activation_timestamp
        ,fk_date_id_first_response_date
        ,first_response_timestamp
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_resolution_date
        ,resolution_timestamp
        ,fk_date_id_inception_date
        ,inception_date
        ,fk_date_id_pilot_date
        ,pilot_date
        ,fk_date_id_pilot_finished_date
        ,pilot_finished_date
        ,fk_date_id_sales_date
        ,sales_date
        ,fk_date_id_deployment_date
        ,deployment_date
        ,fk_project_id
        ,fk_party_id_created_by
        ,fk_party_id_reported_by
        ,fk_employee_id_assigned_to
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_issue.issue_id
        ,input_issue.issue_key
        ,input_issue.jira_key
        ,input_issue.jira_id
        ,input_issue.account
        ,input_issue.customer
        ,input_issue.status
        ,input_issue.summary
        ,input_issue.priority
        ,input_issue.sla_priority
        ,input_issue.description
        ,input_issue.issue_type
        ,input_issue.resolution
        ,input_issue.deployment
        ,input_issue.epic_name
        ,input_issue.epic_jira_key
        ,input_issue.original_estimate
        ,input_issue.remaining_estimate
        ,input_issue.aggregate_original_estimate
        ,input_issue.aggregate_remaining_estimate
        ,input_issue.hours_logged_total
        ,input_issue.days_logged_total
        ,input_issue.labels
        ,input_issue.components
        ,input_issue.fix_versions
        ,input_issue.affected_versions
        ,input_issue.inception_to_first_response_days
        ,input_issue.inception_to_pilot_days
        ,input_issue.inception_to_sales_days
        ,input_issue.inception_to_deployment_days
        ,input_issue.inception_to_resolution_days
        ,input_issue.inception_to_now_days
        ,input_issue.first_response_to_resolution_days
        ,input_issue.activation_to_pilot_days
        ,input_issue.activation_to_sales_days
        ,input_issue.activation_to_deployment_days
        ,input_issue.activation_to_now_days
        ,input_issue.pilot_to_pilot_finished_days
        ,input_issue.pilot_to_sales_days
        ,input_issue.pilot_to_deployment_days
        ,input_issue.pilot_to_now_days
        ,input_issue.pilot_finished_to_sales_days
        ,input_issue.pilot_finished_to_now_days
        ,input_issue.sales_to_deployment_days
        ,input_issue.sales_to_now_days
        ,input_issue.deployment_to_now_days
        ,input_issue.fk_date_id_activation_date
        ,input_issue.activation_timestamp
        ,input_issue.fk_date_id_first_response_date
        ,input_issue.first_response_timestamp
        ,input_issue.fk_date_id_created_date
        ,input_issue.created_timestamp
        ,input_issue.fk_date_id_resolution_date
        ,input_issue.resolution_timestamp
        ,input_issue.fk_date_id_inception_date
        ,input_issue.inception_date
        ,input_issue.fk_date_id_pilot_date
        ,input_issue.pilot_date
        ,input_issue.fk_date_id_pilot_finished_date
        ,input_issue.pilot_finished_date
        ,input_issue.fk_date_id_sales_date
        ,input_issue.sales_date
        ,input_issue.fk_date_id_deployment_date
        ,input_issue.deployment_date
        ,input_issue.fk_project_id
        ,party_created.party_id AS fk_party_id_created_by
        ,party_reported.party_id AS fk_party_id_reported_by
        ,employee_assigned.employee_id AS fk_employee_id_assigned_to
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_issue.tech_row_hash
        ,input_issue.tech_data_load_utc_timestamp
        ,input_issue.tech_data_load_uuid
    FROM core.issue_i AS input_issue
    LEFT JOIN core.employee_i AS employee_assigned ON input_issue.fk_employee_id_assigned_to = employee_assigned.employee_id
        AND employee_assigned.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.party_i AS party_reported ON input_issue.fk_party_id_reported_by = party_reported.party_id
        AND party_reported.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.party_i AS party_created ON input_issue.fk_party_id_created_by = party_created.party_id
        AND party_created.tech_deleted_in_source_system IS FALSE
    WHERE input_issue.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_list_segment_list_member_map_t" id="Procedure_302647b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_list_segment_list_member_map_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =================================================================================================================================
    DESCRIPTION:        Insert data from core list_segment_list_member_map_i input table into core 'today' table list_segment_list_member_map_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-21 (YYYY-MM-DD)
    NOTE:
    =================================================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.list_segment_list_member_map_t (
        list_segment_list_member_map_id
        ,list_segment_key
        ,list_member_key
        ,fk_mailing_list_segment_id
        ,fk_mailing_list_member_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_list_segment_list_member_map.list_segment_list_member_map_id
        ,input_list_segment_list_member_map.list_segment_key
        ,input_list_segment_list_member_map.list_member_key
        ,input_list_segment_list_member_map.fk_mailing_list_segment_id
        ,input_list_segment_list_member_map.fk_mailing_list_member_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_list_segment_list_member_map.tech_row_hash
        ,input_list_segment_list_member_map.tech_data_load_utc_timestamp
        ,input_list_segment_list_member_map.tech_data_load_uuid
    FROM core.list_segment_list_member_map_i AS input_list_segment_list_member_map
    WHERE input_list_segment_list_member_map.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_mail_message_t" id="Procedure_45d8d10" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_mail_message_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =================================================================================================================================
    DESCRIPTION:    Insert data from core mail_message_i input table into core 'today' table mail_message_t
    AUTHOR:         Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:     2018-05-21 (YYYY-MM-DD)
    NOTE:
    =================================================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.mail_message_t (
        mail_message_id
        ,mail_message_key
        ,fk_deal_id
        ,fk_date_id_sent_date
        ,sent_timestamp
        ,from_email_address
        ,fk_contact_id_from
        ,to_email_address
        ,fk_contact_id_to
        ,cc_email_address
        ,fk_contact_id_cc
        ,bcc_email_address
        ,fk_contact_id_bcc
        ,body_url
        ,fk_employee_id
        ,subject
        ,body_snippet
        ,read_flag
        ,pipedrive_mail_message_id
        ,pipedrive_mail_thread_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_mail_message.mail_message_id
        ,input_mail_message.mail_message_key
        ,COALESCE(input_deal.deal_id, -1) AS fk_deal_id
        ,input_mail_message.fk_date_id_sent_date
        ,input_mail_message.sent_timestamp
        ,input_mail_message.from_email_address
        ,input_contact_from.contact_id AS fk_contact_id_from
        ,input_mail_message.to_email_address
        ,input_contact_to.contact_id AS fk_contact_id_to
        ,input_mail_message.cc_email_address
        ,input_contact_cc.contact_id AS fk_contact_id_cc
        ,input_mail_message.bcc_email_address
        ,input_contact_bcc.contact_id AS fk_contact_id_bcc
        ,input_mail_message.body_url
        ,COALESCE(input_employee.employee_id, -1) AS fk_employee_id
        ,input_mail_message.subject
        ,input_mail_message.body_snippet
        ,input_mail_message.read_flag
        ,input_mail_message.pipedrive_mail_message_id
        ,input_mail_message.pipedrive_mail_thread_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_mail_message.tech_row_hash
        ,input_mail_message.tech_data_load_utc_timestamp
        ,input_mail_message.tech_data_load_uuid
    FROM core.mail_message_i AS input_mail_message
    LEFT JOIN core.deal_i AS input_deal ON input_mail_message.fk_deal_id = input_deal.deal_id
        AND input_deal.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.contact_i AS input_contact_from ON input_mail_message.fk_contact_id_from = input_contact_from.contact_id
        AND input_contact_from.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.contact_i AS input_contact_to ON input_mail_message.fk_contact_id_to = input_contact_to.contact_id
        AND input_contact_to.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.contact_i AS input_contact_cc ON input_mail_message.fk_contact_id_cc = input_contact_cc.contact_id
        AND input_contact_cc.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.contact_i AS input_contact_bcc ON input_mail_message.fk_contact_id_bcc = input_contact_bcc.contact_id
        AND input_contact_bcc.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.employee_i AS input_employee ON input_mail_message.fk_employee_id = input_employee.employee_id
        AND input_employee.tech_deleted_in_source_system IS FALSE
    WHERE input_mail_message.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_mailing_list_member_t" id="Procedure_3d6f922" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_mailing_list_member_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =================================================================================================================================
    DESCRIPTION:        Insert data from core mailing_list_member_i input table into core 'today' table mailing_list_member_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-21 (YYYY-MM-DD)
    NOTE:
    =================================================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.mailing_list_member_t (
        mailing_list_member_id
        ,mailing_list_member_key
        ,mailchimp_id
        ,email_address
        ,mailchimp_unique_email_id
        ,status
        ,fk_party_id
        ,avg_open_rate
        ,avg_click_rate
        ,ip_address_signup
        ,fk_date_id_signup_date
        ,timestamp_signup
        ,ip_address_opt_in
        ,fk_date_id_opt_in_date
        ,timestamp_opt_in
        ,fk_date_id_last_changed_date
        ,last_changed_timestamp
        ,email_client
        ,location_latitude
        ,location_longitude
        ,location_country_code
        ,fk_mailing_list_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        input_mailing_list_member.mailing_list_member_id
        ,input_mailing_list_member.mailing_list_member_key
        ,input_mailing_list_member.mailchimp_id
        ,input_mailing_list_member.email_address
        ,input_mailing_list_member.mailchimp_unique_email_id
        ,input_mailing_list_member.status
        ,input_mailing_list_member.fk_party_id
        ,input_mailing_list_member.avg_open_rate
        ,input_mailing_list_member.avg_click_rate
        ,input_mailing_list_member.ip_address_signup
        ,input_mailing_list_member.fk_date_id_signup_date
        ,input_mailing_list_member.timestamp_signup
        ,input_mailing_list_member.ip_address_opt_in
        ,input_mailing_list_member.fk_date_id_opt_in_date
        ,input_mailing_list_member.timestamp_opt_in
        ,input_mailing_list_member.fk_date_id_last_changed_date
        ,input_mailing_list_member.last_changed_timestamp
        ,input_mailing_list_member.email_client
        ,input_mailing_list_member.location_latitude
        ,input_mailing_list_member.location_longitude
        ,input_mailing_list_member.location_country_code
        ,input_mailing_list_member.fk_mailing_list_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_mailing_list_member.tech_row_hash
        ,input_mailing_list_member.tech_data_load_utc_timestamp
        ,input_mailing_list_member.tech_data_load_uuid
    FROM core.mailing_list_member_i AS input_mailing_list_member
    WHERE input_mailing_list_member.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_mailing_list_segment_t" id="Procedure_5650b23" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_mailing_list_segment_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =================================================================================================================================
    DESCRIPTION:        Insert data from core mailing_list_segment_i input table into core 'today' table mailing_list_segment_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-21 (YYYY-MM-DD)
    NOTE:
    =================================================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.mailing_list_segment_t (
        mailing_list_segment_id
        ,mailing_list_segment_key
        ,segment_name
        ,mailchimp_id
        ,segment_type
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_updated_date
        ,last_updated_timestamp
        ,segment_filter_options
        ,fk_mailing_list_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_mailing_list_segment.mailing_list_segment_id
        ,input_mailing_list_segment.mailing_list_segment_key
        ,input_mailing_list_segment.segment_name
        ,input_mailing_list_segment.mailchimp_id
        ,input_mailing_list_segment.segment_type
        ,input_mailing_list_segment.fk_date_id_created_date
        ,input_mailing_list_segment.created_timestamp
        ,input_mailing_list_segment.fk_date_id_last_updated_date
        ,input_mailing_list_segment.last_updated_timestamp
        ,input_mailing_list_segment.segment_filter_options
        ,input_mailing_list_segment.fk_mailing_list_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_mailing_list_segment.tech_row_hash
        ,input_mailing_list_segment.tech_data_load_utc_timestamp
        ,input_mailing_list_segment.tech_data_load_uuid
    FROM core.mailing_list_segment_i AS input_mailing_list_segment
    WHERE input_mailing_list_segment.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_mailing_list_t" id="Procedure_1ad8114" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_mailing_list_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =================================================================================================================================
    DESCRIPTION:        Insert data from core mailing_list_i input table into core 'today' table mailing_list_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-21 (YYYY-MM-DD)
    NOTE:
    =================================================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.mailing_list_t (
        mailing_list_id
        ,mailing_list_key
        ,mailchimp_id
        ,mailchimp_id_web_id
        ,mailing_list_name
        ,notify_on_subscribe_email
        ,notify_on_unsubscribe_email
        ,fk_date_id_created_date
        ,created_timestamp
        ,subscribe_url_short
        ,subscribe_url_long
        ,visibility
        ,double_optin
        ,marketing_permissions
        ,member_count
        ,unsubscribe_count
        ,cleaned_count
        ,member_count_since_last_campaign
        ,unsubscribe_count_last_campaign
        ,cleaned_count_last_campaign
        ,campaign_count
        ,fk_date_id_last_sent_date
        ,campaign_last_sent_timestamp
        ,merge_field_count
        ,avg_sub_rate
        ,avg_unsub_rate
        ,target_sub_rate
        ,open_rate
        ,click_rate
        ,fk_date_id_last_sub_date
        ,last_sub_timestamp
        ,fk_date_id_last_unsub_date
        ,last_unsub_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_mailing_list.mailing_list_id
        ,input_mailing_list.mailing_list_key
        ,input_mailing_list.mailchimp_id
        ,input_mailing_list.mailchimp_id_web_id
        ,input_mailing_list.mailing_list_name
        ,input_mailing_list.notify_on_subscribe_email
        ,input_mailing_list.notify_on_unsubscribe_email
        ,input_mailing_list.fk_date_id_created_date
        ,input_mailing_list.created_timestamp
        ,input_mailing_list.subscribe_url_short
        ,input_mailing_list.subscribe_url_long
        ,input_mailing_list.visibility
        ,input_mailing_list.double_optin
        ,input_mailing_list.marketing_permissions
        ,input_mailing_list.member_count
        ,input_mailing_list.unsubscribe_count
        ,input_mailing_list.cleaned_count
        ,input_mailing_list.member_count_since_last_campaign
        ,input_mailing_list.unsubscribe_count_last_campaign
        ,input_mailing_list.cleaned_count_last_campaign
        ,input_mailing_list.campaign_count
        ,input_mailing_list.fk_date_id_last_sent_date
        ,input_mailing_list.campaign_last_sent_timestamp
        ,input_mailing_list.merge_field_count
        ,input_mailing_list.avg_sub_rate
        ,input_mailing_list.avg_unsub_rate
        ,input_mailing_list.target_sub_rate
        ,input_mailing_list.open_rate
        ,input_mailing_list.click_rate
        ,input_mailing_list.fk_date_id_last_sub_date
        ,input_mailing_list.last_sub_timestamp
        ,input_mailing_list.fk_date_id_last_unsub_date
        ,input_mailing_list.last_unsub_timestamp
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_mailing_list.tech_row_hash
        ,input_mailing_list.tech_data_load_utc_timestamp
        ,input_mailing_list.tech_data_load_uuid
    FROM core.mailing_list_i AS input_mailing_list
    WHERE input_mailing_list.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_note_t" id="Procedure_2ae1d7a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_note_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Insert data from core note_i input table into core 'today' table note_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.note_t (
        note_id
        ,note_key
        ,fk_deal_id
        ,fk_contact_id
        ,fk_organization_id
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_modified_date
        ,last_modified_timestamp
        ,pinned_to_deal_flag
        ,pinned_to_person_flag
        ,pinned_to_organization_flag
        ,content
        ,fk_employee_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_note.note_id
        ,input_note.note_key
        ,input_deal.deal_id
        ,input_contact.contact_id
        ,input_organization.organization_id
        ,input_note.fk_date_id_created_date
        ,input_note.created_timestamp
        ,input_note.fk_date_id_last_modified_date
        ,input_note.last_modified_timestamp
        ,input_note.pinned_to_deal_flag
        ,input_note.pinned_to_person_flag
        ,input_note.pinned_to_organization_flag
        ,input_note.content
        ,input_note.fk_employee_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_note.tech_row_hash
        ,input_note.tech_data_load_utc_timestamp
        ,input_note.tech_data_load_uuid
    FROM core.note_i AS input_note
    JOIN core.deal_i AS input_deal ON input_note.fk_deal_id = input_deal.deal_id
        AND input_deal.tech_deleted_in_source_system IS FALSE
    JOIN core.contact_i AS input_contact ON input_note.fk_contact_id = input_contact.contact_id
        AND input_contact.tech_deleted_in_source_system IS FALSE
    JOIN core.organization_i AS input_organization ON input_note.fk_organization_id = input_organization.organization_id
        AND input_organization.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.employee_i AS input_employee ON input_note.fk_employee_id = input_employee.employee_id
        AND input_employee.tech_deleted_in_source_system IS FALSE
    WHERE input_note.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_organization_relation_t" id="Procedure_3556ca0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_organization_relation_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Insert data from core organization_relation_i input table into core 'today' table organization_relation_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
   INSERT INTO core.organization_relation_t (
        organization_relation_id
        ,organization_key
        ,organization_key_related_organization
        ,fk_organization_id
        ,fk_organization_id_related_organization
        ,related_organization_is
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_organization_relation.organization_relation_id
        ,input_organization_relation.organization_key
        ,input_organization_relation.organization_key_related_organization
        ,input_organization_relation.fk_organization_id
        ,input_organization_relation.fk_organization_id_related_organization
        ,input_organization_relation.related_organization_is
        ,input_organization_relation.tech_insert_function
        ,input_organization_relation.tech_insert_utc_timestamp
        ,input_organization_relation.tech_row_hash
        ,input_organization_relation.tech_data_load_utc_timestamp
        ,input_organization_relation.tech_data_load_uuid
    FROM core.organization_relation_i AS input_organization_relation
    LEFT JOIN core.organization_i AS input_organization ON input_organization_relation.fk_organization_id = input_organization.organization_id
        AND input_organization.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.organization_i AS input_organization_related_org ON input_organization_relation.fk_organization_id = input_organization_related_org.organization_id
        AND input_organization_related_org.tech_deleted_in_source_system IS FALSE
    WHERE input_organization_relation.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_organization_t" id="Procedure_3826348" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_organization_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Insert data from core organization_i input table into core 'today' table organization_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.organization_t (
        organization_id
        ,organization_key
        ,address_full
        ,address_city
        ,address_country
        ,address_region
        ,pipedrive_label
        ,fk_party_id
        ,fk_employee_id_owner
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_updated_date
        ,last_updated_timestamp
        ,pipedrive_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_organization.organization_id
        ,input_organization.organization_key
        ,input_organization.address_full
        ,input_organization.address_city
        ,input_organization.address_country
        ,input_organization.address_region
        ,input_organization.pipedrive_label
        ,input_party.party_id AS fk_party_id
        ,input_employee_owner.employee_id AS fk_employee_id_owner
        ,input_organization.fk_date_id_created_date
        ,input_organization.created_timestamp
        ,input_organization.fk_date_id_last_updated_date
        ,input_organization.last_updated_timestamp
        ,input_organization.pipedrive_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_organization.tech_row_hash
        ,input_organization.tech_data_load_utc_timestamp
        ,input_organization.tech_data_load_uuid
    FROM core.organization_i AS input_organization
    LEFT JOIN core.party_i AS input_party ON input_organization.fk_party_id = input_party.party_id
        AND input_party.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.employee_i AS input_employee_owner ON input_organization.fk_employee_id_owner = input_employee_owner.employee_id
        AND input_employee_owner.tech_deleted_in_source_system IS FALSE
    WHERE input_organization.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_party_t" id="Procedure_1bb9e0a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_party_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Insert data from core party_i input table into core 'today' table party_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.party_t (
        party_id
        ,party_key
        ,full_name
        ,short_name
        ,fk_employee_id_last_modified_by
        ,fk_employee_id_created_by
        ,fk_date_id_created_date
        ,created_timestamp
        ,fk_date_id_last_modified_date
        ,last_modified_timestamp
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
        )
    SELECT
        input_party.party_id
        ,input_party.party_key
        ,input_party.full_name
        ,input_party.short_name
        ,input_employee_last_modified.employee_id AS fk_employee_id_last_modified_by
        ,input_employee_created.employee_id AS fk_employee_id_created_by
        ,input_party.fk_date_id_created_date
        ,input_party.created_timestamp
        ,input_party.fk_date_id_last_modified_date
        ,input_party.last_modified_timestamp
        ,input_party.tech_insert_function
        ,input_party.tech_insert_utc_timestamp
        ,input_party.tech_row_hash
        ,input_party.tech_data_load_utc_timestamp
        ,input_party.tech_data_load_uuid
    FROM core.party_i AS input_party
    LEFT JOIN core.employee_i AS input_employee_created ON input_party.fk_employee_id_created_by = input_employee_created.employee_id
        AND input_employee_created.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.employee_i AS input_employee_last_modified ON input_party.fk_employee_id_last_modified_by = input_employee_last_modified.employee_id
        AND input_employee_last_modified.tech_deleted_in_source_system IS FALSE
    WHERE input_party.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_project_t" id="Procedure_2822be7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_project_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Insert data from core project_i input table into core 'today' table project_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.project_t (
        project_id
        ,project_key
        ,jira_id
        ,jira_key
        ,project_name
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_project.project_id
        ,input_project.project_key
        ,input_project.jira_id
        ,input_project.jira_key
        ,input_project.project_name
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_project.tech_row_hash
        ,input_project.tech_data_load_utc_timestamp
        ,input_project.tech_data_load_uuid
    FROM core.project_i AS input_project
    WHERE input_project.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_release_t" id="Procedure_9e7177" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_release_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =============================================================================================================
    DESCRIPTION:        Insert data from core release_i input table into core 'today' table release_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-14 (YYYY-MM-DD)
    NOTE:
    =============================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.release_t (
        release_id
        ,release_key
        ,jira_id
        ,fk_date_id_release_date
        ,release_date
        ,release_name
        ,release_number
        ,fk_date_id_start_date
        ,start_date
        ,fk_project_id
        ,description
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_release.release_id
        ,input_release.release_key
        ,input_release.jira_id
        ,input_release.fk_date_id_release_date
        ,input_release.release_date
        ,input_release.release_name
        ,input_release.release_number
        ,input_release.fk_date_id_start_date
        ,input_release.start_date
        ,input_release.fk_project_id
        ,input_release.description
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_release.tech_row_hash
        ,input_release.tech_data_load_utc_timestamp
        ,input_release.tech_data_load_uuid
    FROM core.release_i AS input_release
    WHERE input_release.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_sale_t" id="Procedure_43ee790" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_sale_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =================================================================================================================================
    DESCRIPTION:        Insert data from core sale_i input table into core 'today' table sale_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-15 (YYYY-MM-DD)
    NOTE:
    =================================================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.sale_t (
        sale_id
        ,sale_key
        ,fk_organization_id_customer
        ,fk_organization_id_reseller
        ,fk_organization_id_seller
        ,fk_party_id_sales_representative
        ,fk_revenue_type_id
        ,fk_date_id_booking_date
        ,booking_date
        ,usd_amount
        ,czk_amount
        ,eur_amount
        ,local_currency_amount
        ,fk_currency_id_local_currency
        ,sale_comment
        ,payment_received
        ,invoice
        ,fk_date_id_revenue_start
        ,revenue_start_date
        ,fk_date_id_revenue_end
        ,revenue_end_date
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_sale.sale_id
        ,input_sale.sale_key
        ,organization_customer.organization_id AS fk_organization_id_customer
        ,organization_reseller.organization_id AS fk_organization_id_reseller
        ,organization_seller.organization_id AS fk_organization_id_seller
        ,input_sale.fk_party_id_sales_representative
        ,input_sale.fk_revenue_type_id
        ,input_sale.fk_date_id_booking_date
        ,input_sale.booking_date
        ,input_sale.usd_amount
        ,input_sale.czk_amount
        ,input_sale.eur_amount
        ,input_sale.local_currency_amount
        ,input_sale.fk_currency_id_local_currency
        ,input_sale.sale_comment
        ,input_sale.payment_received
        ,input_sale.invoice
        ,input_sale.fk_date_id_revenue_start
        ,input_sale.revenue_start_date
        ,input_sale.fk_date_id_revenue_end
        ,input_sale.revenue_end_date
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_sale.tech_row_hash
        ,input_sale.tech_data_load_utc_timestamp
        ,input_sale.tech_data_load_uuid
    FROM core.sale_i AS input_sale
    LEFT JOIN core.organization_i AS organization_customer ON organization_customer.organization_id = input_sale.fk_organization_id_customer
        AND organization_customer.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.organization_i AS organization_seller ON organization_seller.organization_id = input_sale.fk_organization_id_seller
        AND organization_seller.tech_deleted_in_source_system IS FALSE
    LEFT JOIN core.organization_i AS organization_reseller ON organization_reseller.organization_id = input_sale.fk_organization_id_reseller
        AND organization_reseller.tech_deleted_in_source_system IS FALSE
    WHERE input_sale.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_t_worklog_t" id="Procedure_4d17e30" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_t_worklog_t()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    =================================================================================================================================
    DESCRIPTION:        Insert data from core worklog_i input table into core 'today' table worklog_t
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-15 (YYYY-MM-DD)
    NOTE:
    =================================================================================================================================
    */
DECLARE
CURRENT_UTC_TIMESTAMP_AS_BIGINT BIGINT := (SELECT TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYYMMddHH24MISS'))::BIGINT;
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    ----------------------------------------------------
    -- INSERT RECORDS FROM INPUT TABLE TO TODAY TABLE --
    ----------------------------------------------------
    INSERT INTO core.worklog_t (
        worklog_id
        ,worklog_key
        ,fk_issue_id
        ,fk_employee_id_created_by
        ,time_logged
        ,hours_logged
        ,days_logged
        ,worklog_comment
        ,fk_date_id_work_started_date
        ,work_started_at_timestamp
        ,tempo_id
        ,tech_insert_function
        ,tech_insert_utc_timestamp
        ,tech_row_hash
        ,tech_data_load_utc_timestamp
        ,tech_data_load_uuid
    )
    SELECT
        input_worklog.worklog_id
        ,input_worklog.worklog_key
        ,input_worklog.fk_issue_id
        ,input_employee.employee_id AS fk_employee_id_created_by
        ,input_worklog.time_logged
        ,input_worklog.hours_logged
        ,input_worklog.days_logged
        ,input_worklog.worklog_comment
        ,input_worklog.fk_date_id_work_started_date
        ,input_worklog.work_started_at_timestamp
        ,input_worklog.tempo_id
        ,FUNCTION_NAME AS tech_insert_function
        ,CURRENT_UTC_TIMESTAMP_AS_BIGINT AS tech_insert_utc_timestamp
        ,input_worklog.tech_row_hash
        ,input_worklog.tech_data_load_utc_timestamp
        ,input_worklog.tech_data_load_uuid
    FROM core.worklog_i AS input_worklog
    LEFT JOIN core.employee_i AS input_employee ON input_worklog.fk_employee_id_created_by = input_employee.employee_id
        AND input_employee.tech_deleted_in_source_system IS FALSE
    WHERE input_worklog.tech_deleted_in_source_system IS FALSE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_u_clear_core_i_tables" id="Procedure_19ef883" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_u_clear_core_i_tables()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
BEGIN
    DELETE FROM core.iso_3166_country_list_i;
    DELETE FROM core.email_campaign_opened_by_i;
    DELETE FROM core.email_campaign_recipient_i;
    DELETE FROM core.email_campaign_clicked_url_i;
    DELETE FROM core.email_campaign_bounced_email_i;
    DELETE FROM core.email_campaign_report_i;
    DELETE FROM core.list_segment_list_member_map_i;
    DELETE FROM core.mailing_list_member_i;
    DELETE FROM core.mailing_list_segment_i;
    DELETE FROM core.mailing_list_i;
    DELETE FROM core.sale_i;
    DELETE FROM core.c_partner_list_i;
    DELETE FROM core.c_revenue_type_i;
    
    DELETE FROM core.deal_change_log_i;
    DELETE FROM core.activity_i;
    DELETE FROM core.mail_message_i;
    DELETE FROM core.note_i;
    DELETE FROM core.deal_contact_map_i;
    DELETE FROM core.deal_i;
    DELETE FROM core.worklog_i;
    DELETE FROM core.issue_relation_map_i;
    DELETE FROM core.issue_comment_i;
    DELETE FROM core.issue_i;
    DELETE FROM core.release_i;
    DELETE FROM core.project_i;
    DELETE FROM core.contact_i;
    DELETE FROM core.organization_relation_i;
    DELETE FROM core.organization_i;
    DELETE FROM core.party_i;
    DELETE FROM core.employee_i;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_u_clear_core_t_tables" id="Procedure_fbbde0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_u_clear_core_t_tables()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
BEGIN
    DELETE FROM core.iso_3166_country_list_t;
    DELETE FROM core.email_campaign_opened_by_t;
    DELETE FROM core.email_campaign_recipient_t;
    DELETE FROM core.email_campaign_clicked_url_t;
    DELETE FROM core.email_campaign_bounced_email_t;
    DELETE FROM core.email_campaign_report_t;
    DELETE FROM core.list_segment_list_member_map_t;
    DELETE FROM core.mailing_list_member_t;
    DELETE FROM core.mailing_list_segment_t;
    DELETE FROM core.mailing_list_t;
    DELETE FROM core.sale_t;
    DELETE FROM core.c_partner_list_t;
    DELETE FROM core.c_revenue_type_t;
    DELETE FROM core.deal_change_log_t;
    DELETE FROM core.activity_t;
    DELETE FROM core.mail_message_t;
    DELETE FROM core.note_t;
    DELETE FROM core.deal_contact_map_t;
    DELETE FROM core.deal_t;
    DELETE FROM core.worklog_t;
    DELETE FROM core.issue_relation_map_t;
    DELETE FROM core.issue_comment_t;
    DELETE FROM core.issue_t;
    DELETE FROM core.release_t;
    DELETE FROM core.project_t;
    DELETE FROM core.contact_t;
    DELETE FROM core.organization_relation_t;
    DELETE FROM core.organization_t;
    DELETE FROM core.party_t;
    DELETE FROM core.employee_t;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_u_empty_check_core_input_tables" id="Procedure_3553753" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_u_empty_check_core_input_tables(OUT is_empty text)
 RETURNS text
 LANGUAGE plpgsql
AS $function$
BEGIN
    is_empty := (SELECT * FROM tf_u_empty_check('core','_i'));
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_u_generate_vacuum_statements_core_input_tables" id="Procedure_8ec298" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_u_generate_vacuum_statements_core_input_tables()
 RETURNS TABLE(vacuum_statement text)
 LANGUAGE plpgsql
AS $function$
BEGIN
    RETURN QUERY SELECT tf_u_generate_vacuum_statements('core','_i');
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_u_generate_vacuum_statements_core_scd2_historized_tables" id="Procedure_2e6f953" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_u_generate_vacuum_statements_core_scd2_historized_tables()
 RETURNS TABLE(vacuum_statement text)
 LANGUAGE plpgsql
AS $function$
BEGIN
    RETURN QUERY SELECT tf_u_generate_vacuum_statements('core','_ih');
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_u_generate_vacuum_statements_core_today_tables" id="Procedure_2355f4a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION core.tf_u_generate_vacuum_statements_core_today_tables()
 RETURNS TABLE(vacuum_statement text)
 LANGUAGE plpgsql
AS $function$
BEGIN
    RETURN QUERY SELECT tf_u_generate_vacuum_statements('core','_t');
END;$function$
]]></string>
		</procedure>
	</schema>
	<schema name="etl_metadata" catalogname="dwh" schemaname="etl_metadata" >
		<table name="uber_transformation_call" >
			<column name="transformation_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="transformation_call_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
		</table>
	</schema>
	<schema name="information_schema" catalogname="dwh" schemaname="information_schema" />
	<schema name="mart" catalogname="dwh" schemaname="mart" >
		<table name="booking_by_time_report" >
			<column name="revenue_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="01 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2016 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2017 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2018 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2019 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2020 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<index name="pk_booking_by_time_report_revenue_type" unique="PRIMARY_KEY" >
				<column name="revenue_type" />
			</index>
		</table>
		<table name="booking_per_revenue_type_per_month" >
			<column name="booking_month_year" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="revenue_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="booked_usd_amount" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="booking_month" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="booking_quarter" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="booking_year" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_booking_per_revenue_type_per_month" unique="PRIMARY_KEY" >
				<column name="booking_month_year" />
				<column name="revenue_type" />
			</index>
		</table>
		<table name="booking_per_revenue_type_per_quarter" >
			<column name="booking_quarter_year" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="revenue_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="booked_usd_amount" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="booking_quarter" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="booking_year" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_booking_per_revenue_type_per_quartal" unique="PRIMARY_KEY" >
				<column name="booking_quarter_year" />
				<column name="revenue_type" />
			</index>
		</table>
		<table name="booking_per_revenue_type_per_year" >
			<column name="booking_year" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="revenue_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="booked_usd_amount" type="numeric" length="10" decimal="2" jt="2" />
			<index name="pk_booking_per_revenue_type_per_year" unique="PRIMARY_KEY" >
				<column name="booking_year" />
				<column name="revenue_type" />
			</index>
		</table>
		<table name="bugs_created_after_affected_version_release" >
			<column name="affected_version_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="affected_version_number" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="bug_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="bug_summary" type="text" decimal="0" jt="12" />
			<column name="bug_creation_date" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="affected_version_release_date" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
		</table>
		<table name="bugs_created_after_fix_version_release" >
			<column name="fix_version_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fix_version_number" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="bug_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="bug_summary" type="text" decimal="0" jt="12" />
			<column name="bug_creation_date" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="fix_version_release_date" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
		</table>
		<table name="deal" >
			<column name="activity" type="text" decimal="0" jt="12" />
			<column name="pipedrive_link" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="account" type="text" decimal="0" jt="12" />
			<column name="customer" type="text" decimal="0" jt="12" />
			<column name="title" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="category" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="deal_source" type="text" decimal="0" jt="12" />
			<column name="deal_source_detail" type="text" decimal="0" jt="12" />
			<column name="sale_stage" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="deal_stage" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="deal_status" type="text" decimal="0" jt="12" />
			<column name="pipeline" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="sla_priority" type="text" decimal="0" jt="12" />
			<column name="usd_value" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="reason_lost" type="text" decimal="0" jt="12" />
			<column name="resulting_state" type="text" decimal="0" jt="12" />
			<column name="jira_description" type="text" decimal="0" jt="12" />
			<column name="jira_priority" type="text" decimal="0" jt="12" />
			<column name="jira_status" type="text" decimal="0" jt="12" />
			<column name="jira_summary" type="text" decimal="0" jt="12" />
			<column name="next_step" type="text" decimal="0" jt="12" />
			<column name="next_step_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="last_step" type="text" decimal="0" jt="12" />
			<column name="last_step_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="contact_full_name" type="text" decimal="0" jt="12" />
			<column name="contact_email" type="text" decimal="0" jt="12" />
			<column name="contact_phone" type="text" decimal="0" jt="12" />
			<column name="contact_country" type="text" decimal="0" jt="12" />
			<column name="contact_full_address" type="text" decimal="0" jt="12" />
			<column name="deal_country" type="text" decimal="0" jt="12" />
			<column name="deal_region" type="text" decimal="0" jt="12" />
			<column name="organization_name" type="text" decimal="0" jt="12" />
			<column name="organization_country" type="text" decimal="0" jt="12" />
			<column name="organization_full_address" type="text" decimal="0" jt="12" />
			<column name="deal_owner" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_count" type="integer" length="10" decimal="0" jt="4" />
			<column name="partner_identified_by" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="partner_qualified_by" type="text" decimal="0" jt="12" />
			<column name="partner_poc_done_by" type="text" decimal="0" jt="12" />
			<column name="partner_closed_by" type="text" decimal="0" jt="12" />
			<column name="partner_resold_by" type="text" decimal="0" jt="12" />
			<column name="partner_owned_by" type="text" decimal="0" jt="12" />
			<column name="partner_supported_by" type="text" decimal="0" jt="12" />
			<column name="creation_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="creation_to_now_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="creation_to_pilot_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="creation_to_sale_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="creation_to_deployment_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="activation_date" type="date" length="13" decimal="0" jt="91" />
			<column name="activation_to_now_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="activation_to_pilot_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="activation_to_sale_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="activation_to_deployment_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="pilot_date" type="date" length="13" decimal="0" jt="91" />
			<column name="pilot_to_now_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="pilot_to_sale_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="pilot_to_deployment_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="sale_date" type="date" length="13" decimal="0" jt="91" />
			<column name="sale_to_now_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="sale_to_deployment_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="deployment_date" type="date" length="13" decimal="0" jt="91" />
			<column name="deployment_to_now_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="closed_date" type="date" length="13" decimal="0" jt="91" />
			<column name="jira_link" type="text" decimal="0" jt="12" />
			<column name="text_search_vector" type="tsvector" decimal="0" jt="1111" />
			<column name="text_search_include_emails_and_notes_vector" type="tsvector" decimal="0" jt="1111" />
		</table>
		<table name="deal_activity" >
			<column name="source_system_link" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="activity_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="new_value" type="text" decimal="0" jt="12" />
			<column name="previous_value" type="text" decimal="0" jt="12" />
			<column name="activity_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="done_by" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="source_system" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="activity_detail" type="text" decimal="0" jt="12" />
			<column name="pipedrive_deal_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="from_email" type="text" decimal="0" jt="12" />
			<column name="to_email" type="text" decimal="0" jt="12" />
		</table>
		<table name="deal_pipedrive_close_date_differs_from_jira_sale_date" >
			<column name="title" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="pipedrive_link" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="jira_link" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="organization_name" type="text" decimal="0" jt="12" />
			<column name="contact_full_name" type="text" decimal="0" jt="12" />
			<column name="deal_status" type="text" decimal="0" jt="12" />
			<column name="jira_status" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="deal_stage" type="text" decimal="0" jt="12" />
			<column name="deal_owner" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="closed_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="sale_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
		</table>
		<table name="deal_reconnecting" >
			<column name="previous_stage" type="text" decimal="0" jt="12" />
			<column name="stage" type="text" decimal="0" jt="12" />
			<column name="organization" type="text" decimal="0" jt="12" />
			<column name="deal_owner" type="text" decimal="0" jt="12" />
			<column name="deal_link" type="text" decimal="0" jt="12" />
			<column name="changed_to_reconnecting_stage_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="days_in_reconnecting_stage" type="integer" length="10" decimal="0" jt="4" />
			<column name="email_sent_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="days_since_last_reconnecting_email" type="integer" length="10" decimal="0" jt="4" />
			<column name="from_email" type="text" decimal="0" jt="12" />
			<column name="to_email" type="text" decimal="0" jt="12" />
			<column name="cc_email" type="text" decimal="0" jt="12" />
			<column name="email_subject" type="text" decimal="0" jt="12" />
			<column name="email_body_snippet" type="text" decimal="0" jt="12" />
			<column name="emal_body_url" type="text" decimal="0" jt="12" />
			<column name="email_exists" type="integer" length="10" decimal="0" jt="4" />
			<column name="status" type="text" decimal="0" jt="12" />
		</table>
		<table name="deal_to_be_closed_soon" >
			<column name="activity" type="text" decimal="0" jt="12" />
			<column name="pipedrive_link" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="account" type="text" decimal="0" jt="12" />
			<column name="customer" type="text" decimal="0" jt="12" />
			<column name="title" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="category" type="text" decimal="0" jt="12" />
			<column name="deal_source" type="text" decimal="0" jt="12" />
			<column name="deal_source_detail" type="text" decimal="0" jt="12" />
			<column name="sale_stage" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="deal_stage" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="deal_status" type="text" decimal="0" jt="12" />
			<column name="pipeline" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="sla_priority" type="text" decimal="0" jt="12" />
			<column name="usd_value" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="reason_lost" type="text" decimal="0" jt="12" />
			<column name="resulting_state" type="text" decimal="0" jt="12" />
			<column name="jira_description" type="text" decimal="0" jt="12" />
			<column name="jira_priority" type="text" decimal="0" jt="12" />
			<column name="jira_status" type="text" decimal="0" jt="12" />
			<column name="jira_summary" type="text" decimal="0" jt="12" />
			<column name="next_step" type="text" decimal="0" jt="12" />
			<column name="next_step_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="last_step" type="text" decimal="0" jt="12" />
			<column name="last_step_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="contact_full_name" type="text" decimal="0" jt="12" />
			<column name="contact_email" type="text" decimal="0" jt="12" />
			<column name="contact_phone" type="text" decimal="0" jt="12" />
			<column name="contact_country" type="text" decimal="0" jt="12" />
			<column name="contact_full_address" type="text" decimal="0" jt="12" />
			<column name="deal_country" type="text" decimal="0" jt="12" />
			<column name="deal_region" type="text" decimal="0" jt="12" />
			<column name="organization_name" type="text" decimal="0" jt="12" />
			<column name="organization_country" type="text" decimal="0" jt="12" />
			<column name="organization_full_address" type="text" decimal="0" jt="12" />
			<column name="deal_owner" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="partner_identified_by" type="text" decimal="0" jt="12" />
			<column name="partner_qualified_by" type="text" decimal="0" jt="12" />
			<column name="partner_poc_done_by" type="text" decimal="0" jt="12" />
			<column name="partner_closed_by" type="text" decimal="0" jt="12" />
			<column name="partner_resold_by" type="text" decimal="0" jt="12" />
			<column name="partner_owned_by" type="text" decimal="0" jt="12" />
			<column name="partner_supported_by" type="text" decimal="0" jt="12" />
			<column name="creation_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="creation_to_now_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="creation_to_pilot_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="creation_to_sale_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="creation_to_deployment_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="activation_date" type="date" length="13" decimal="0" jt="91" />
			<column name="activation_to_now_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="activation_to_pilot_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="activation_to_sale_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="activation_to_deployment_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="pilot_date" type="date" length="13" decimal="0" jt="91" />
			<column name="pilot_to_now_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="pilot_to_sale_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="pilot_to_deployment_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="sale_date" type="date" length="13" decimal="0" jt="91" />
			<column name="sale_to_now_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="sale_to_deployment_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="deployment_date" type="date" length="13" decimal="0" jt="91" />
			<column name="deployment_to_now_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="closed_date" type="date" length="13" decimal="0" jt="91" />
			<column name="jira_link" type="text" decimal="0" jt="12" />
		</table>
		<table name="duplicate_emails_in_contacts" >
			<column name="email" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="contact_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="organization_name" type="text" decimal="0" jt="12" />
			<column name="pipedrive_link" type="text" decimal="0" jt="12" mandatory="y" />
		</table>
		<table name="emails_in_mailchimp_and_crm" >
			<column name="contact_name" type="text" decimal="0" jt="12" />
			<column name="contact_email" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="pipedrive_link" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="contact_owner" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="mailchimp_link" type="text" decimal="0" jt="12" mandatory="y" />
		</table>
		<table name="jira_account_dates" >
			<column name="account" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="inception_date" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="pilot_date" type="date" length="13" decimal="0" jt="91" />
			<column name="sales_date" type="date" length="13" decimal="0" jt="91" />
			<column name="inception_to_pilot_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="inception_to_sales_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="pilot_to_sales_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="summary" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="pilot_date_exists" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="sales_date_exists" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="activation_date" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="issue_status" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="activation_to_pilot_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="activation_to_sales_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="priority" type="text" decimal="0" jt="12" />
			<column name="jira_issue_key" type="text" decimal="0" jt="12" />
			<column name="inception_to_now_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="activation_to_now_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="pilot_to_now_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="sales_to_now_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="hours_logged" type="numeric" length="10" decimal="2" jt="2" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="deployment_date" type="date" length="13" decimal="0" jt="91" />
			<column name="deployment_date_exists" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="pilot_to_deployment_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="sales_to_deployment_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="customer" type="text" decimal="0" jt="12" />
			<column name="stage" type="text" decimal="0" jt="12" />
			<column name="deal_source" type="text" decimal="0" jt="12" />
			<column name="partner_identified_by" type="text" decimal="0" jt="12" />
			<column name="partner_qualified_by" type="text" decimal="0" jt="12" />
			<column name="partner_poc_done_by" type="text" decimal="0" jt="12" />
			<column name="partner_closed_by" type="text" decimal="0" jt="12" />
			<column name="partner_resold_by" type="text" decimal="0" jt="12" />
			<column name="partner_supported_by" type="text" decimal="0" jt="12" />
			<column name="usd_value" type="integer" length="10" decimal="0" jt="4" />
			<column name="industry" type="text" decimal="0" jt="12" />
			<column name="deal_status" type="text" decimal="0" jt="12" />
			<column name="pilot_finished_date_exists" type="integer" length="10" decimal="0" jt="4" />
			<column name="inception_to_first_response_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="inception_to_deployment_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="inception_to_resolution_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="first_response_to_resolution_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="activation_to_deployment_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="deployment_to_now_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="pilot_finished_to_now_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="pilot_finished_to_sales_days" type="integer" length="10" decimal="0" jt="4" />
			<column name="pilot_to_pilot_finished_days" type="integer" length="10" decimal="0" jt="4" />
		</table>
		<table name="jira_support_issues_not_linked_with_pipedrive" >
			<column name="jira_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="summary" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="status" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="account" type="text" decimal="0" jt="12" />
			<column name="link_to_issue" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="customer" type="text" decimal="0" jt="12" />
		</table>
		<table name="mailchimp_campaign_success_rate" >
			<column name="campaign_title" type="text" decimal="0" jt="12" />
			<column name="campaign_type" type="text" decimal="0" jt="12" />
			<column name="used_timewarp" type="bool" length="1" decimal="0" jt="-7" />
			<column name="total_open_to_unique_open_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="unique_opens_total" type="integer" length="10" decimal="0" jt="4" />
			<column name="opens_total" type="integer" length="10" decimal="0" jt="4" />
			<column name="send_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="sent_to_mailing_list" type="text" decimal="0" jt="12" />
			<column name="optional_mailing_list_segment_filter" type="text" decimal="0" jt="12" />
			<column name="avg_list_open_rate" type="real" length="8" decimal="8" jt="7" />
		</table>
		<table name="mailchimp_emails_not_in_pipedrive" >
			<column name="contact_name" type="text" decimal="0" jt="12" />
			<column name="contact_email" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="mailing_list_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="mailing_list_link" type="text" decimal="0" jt="12" mandatory="y" />
		</table>
		<table name="partner_name_not_recognised" >
			<column name="deal_title" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="deal_stage" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="partner_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="partner_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="pipedrive_link" type="text" decimal="0" jt="12" mandatory="y" />
		</table>
		<table name="pipedrive_emails_not_in_mailchimp" >
			<column name="contact_name" type="text" decimal="0" jt="12" />
			<column name="contact_email" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="pipedrive_link" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="contact_owner" type="text" decimal="0" jt="12" mandatory="y" />
		</table>
		<table name="report_bugs_per_account" >
			<column name="account" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="priority" type="text" decimal="0" jt="12" />
			<column name="sla_priority" type="text" decimal="0" jt="12" />
			<column name="first_response_to_resolution_hours" type="numeric" length="10" decimal="2" jt="2" />
			<column name="created_to_resoluion_hours" type="numeric" length="10" decimal="2" jt="2" />
			<column name="created_to_first_response_hours" type="numeric" length="10" decimal="2" jt="2" />
			<column name="deployment" type="text" decimal="0" jt="12" />
			<column name="created_bugs_number" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="resolved_bugs_number" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="created_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="resolution_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="first_response_timestamp" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="customer" type="text" decimal="0" jt="12" />
		</table>
		<table name="report_bugs_per_component_pre_release" >
			<column name="release_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="component" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="bugs_number" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="bug_created_at" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="bug_resolved_at" type="timestamptz" length="35" decimal="6" jt="93" />
			<column name="project_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="release_number" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
		</table>
		<table name="report_bugs_per_release" >
			<column name="release_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="project_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="bug_number" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="bug_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="bug_summary" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="release_number" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
		</table>
		<table name="report_hours_logged_per_account" >
			<column name="account" type="text" decimal="0" jt="12" />
			<column name="employee" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="hours_logged" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="work_started_at_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="customer" type="text" decimal="0" jt="12" />
		</table>
		<table name="report_hours_logged_per_component" >
			<column name="component" type="text" decimal="0" jt="12" />
			<column name="employee" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="hours_logged" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="work_started_at_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="project_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="project_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="release_name" type="text" decimal="0" jt="12" />
			<column name="release_number" type="integer" length="10" decimal="0" jt="4" />
		</table>
		<table name="report_hours_logged_per_issue" >
			<column name="issue_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="project_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="employee" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="hours_logged" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="work_started_at_timestamp" type="timestamptz" length="35" decimal="6" jt="93" mandatory="y" />
			<column name="issue_summary" type="text" decimal="0" jt="12" />
		</table>
		<table name="revenue_by_time_report" >
			<column name="revenue_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="seller" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="01 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2016 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2017 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2018 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2019 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2020 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<index name="pk_revenue_by_time_report_revenue_type" unique="PRIMARY_KEY" >
				<column name="revenue_type" />
				<column name="seller" />
			</index>
		</table>
		<table name="revenue_per_customer_by_time" >
			<column name="customer" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="01 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2016 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2017 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2018 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Total Revenue" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2019 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2020 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
		</table>
		<table name="revenue_per_month_per_sale" >
			<column name="trade_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="revenue_month_year" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="seller" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="revenue_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="usd_revenue" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="revenue_month" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="revenue_quarter" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="revenue_year" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="revenue_quarter_year" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="seller_code" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="eur_revenue" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="czk_revenue" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<index name="pk_revenue_per_month_per_sale" unique="PRIMARY_KEY" >
				<column name="trade_key" />
				<column name="revenue_month_year" />
				<column name="seller" />
			</index>
		</table>
		<table name="revenue_per_revenue_type_per_month" >
			<column name="revenue_month_year" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="revenue_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="seller" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="usd_revenue" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="revenue_month" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="revenue_quarter" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="revenue_year" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_revenue_per_revenue_type_per_month" unique="PRIMARY_KEY" >
				<column name="revenue_month_year" />
				<column name="revenue_type" />
				<column name="seller" />
			</index>
		</table>
		<table name="revenue_per_revenue_type_per_quarter" >
			<column name="revenue_quarter_year" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="revenue_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="usd_revenue" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="revenue_quarter" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="revenue_year" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<index name="pk_revenue_per_revenue_type_per_quartal_revenue_quartal_year" unique="PRIMARY_KEY" >
				<column name="revenue_quarter_year" />
				<column name="revenue_type" />
			</index>
		</table>
		<table name="revenue_per_revenue_type_per_year" >
			<column name="revenue_year" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="revenue_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="usd_revenue" type="numeric" length="10" decimal="2" jt="2" />
			<index name="pk_revenue_per_revenue_type_per_year" unique="PRIMARY_KEY" >
				<column name="revenue_year" />
				<column name="revenue_type" />
			</index>
		</table>
		<table name="sales_report" >
			<column name="sale_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="customer" type="text" decimal="0" jt="12" />
			<column name="reseller" type="text" decimal="0" jt="12" />
			<column name="sale_type" type="text" decimal="0" jt="12" />
			<column name="seller" type="text" decimal="0" jt="12" />
			<column name="booking_date" type="date" length="13" decimal="0" jt="91" />
			<column name="usd_amount" type="numeric" length="10" decimal="2" jt="2" />
			<column name="sale_comment" type="text" decimal="0" jt="12" />
			<column name="invoice" type="text" decimal="0" jt="12" />
			<column name="local_currency_amount" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="local_currency_code" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="revenue_start" type="date" length="13" decimal="0" jt="91" mandatory="y" />
			<column name="revenue_end" type="date" length="13" decimal="0" jt="91" />
			<column name="sales_representative" type="text" decimal="0" jt="12" />
			<column name="paid" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_sales_report_sale_key" unique="PRIMARY_KEY" >
				<column name="sale_key" />
			</index>
		</table>
		<table name="sales_report_czk_revenue_broken_down_by_time" >
			<column name="sale_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="customer" type="text" decimal="0" jt="12" />
			<column name="reseller" type="text" decimal="0" jt="12" />
			<column name="sale_type" type="text" decimal="0" jt="12" />
			<column name="seller" type="text" decimal="0" jt="12" />
			<column name="booking_date" type="date" length="13" decimal="0" jt="91" />
			<column name="czk_amount" type="numeric" length="10" decimal="2" jt="2" />
			<column name="revenue_start" type="date" length="13" decimal="0" jt="91" />
			<column name="revenue_end" type="date" length="13" decimal="0" jt="91" />
			<column name="sale_comment" type="text" decimal="0" jt="12" />
			<column name="invoice" type="text" decimal="0" jt="12" />
			<column name="local_currency_amount" type="numeric" length="10" decimal="2" jt="2" />
			<column name="local_currency_code" type="text" decimal="0" jt="12" />
			<column name="01 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2016 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2017 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2018 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="sales_representative" type="text" decimal="0" jt="12" />
			<column name="paid" type="text" decimal="0" jt="12" />
			<column name="01 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2019 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2020 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<index name="pk_sales_report_czk_revenue_broken_down_by_time" unique="PRIMARY_KEY" >
				<column name="sale_key" />
			</index>
		</table>
		<table name="sales_report_eur_revenue_broken_down_by_time" >
			<column name="sale_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="customer" type="text" decimal="0" jt="12" />
			<column name="reseller" type="text" decimal="0" jt="12" />
			<column name="sale_type" type="text" decimal="0" jt="12" />
			<column name="seller" type="text" decimal="0" jt="12" />
			<column name="booking_date" type="date" length="13" decimal="0" jt="91" />
			<column name="eur_amount" type="numeric" length="10" decimal="2" jt="2" />
			<column name="revenue_start" type="date" length="13" decimal="0" jt="91" />
			<column name="revenue_end" type="date" length="13" decimal="0" jt="91" />
			<column name="sale_comment" type="text" decimal="0" jt="12" />
			<column name="invoice" type="text" decimal="0" jt="12" />
			<column name="local_currency_amount" type="numeric" length="10" decimal="2" jt="2" />
			<column name="local_currency_code" type="text" decimal="0" jt="12" />
			<column name="01 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2016 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2017 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2018 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="sales_representative" type="text" decimal="0" jt="12" />
			<column name="paid" type="text" decimal="0" jt="12" />
			<column name="01 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2019 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2020 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<index name="pk_sales_report_eur_revenue_broken_down_by_time" unique="PRIMARY_KEY" >
				<column name="sale_key" />
			</index>
		</table>
		<table name="sales_report_extended" >
			<comment><![CDATA[BI-270]]></comment>
			<column name="sale_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="customer" type="text" decimal="0" jt="12" />
			<column name="reseller" type="text" decimal="0" jt="12" />
			<column name="sale_type" type="text" decimal="0" jt="12" />
			<column name="seller" type="text" decimal="0" jt="12" />
			<column name="booking_date" type="date" length="13" decimal="0" jt="91" />
			<column name="usd_amount" type="numeric" length="10" decimal="2" jt="2" />
			<column name="revenue_start" type="date" length="13" decimal="0" jt="91" />
			<column name="revenue_end" type="date" length="13" decimal="0" jt="91" />
			<column name="sale_comment" type="text" decimal="0" jt="12" />
			<column name="invoice" type="text" decimal="0" jt="12" />
			<column name="local_currency_amount" type="numeric" length="10" decimal="2" jt="2" />
			<column name="local_currency_code" type="text" decimal="0" jt="12" />
			<column name="01 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2016 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2017 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2018 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="sales_representative" type="text" decimal="0" jt="12" />
			<column name="paid" type="text" decimal="0" jt="12" />
			<column name="01 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2019 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2020 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<index name="pk_sales_report_extended_sale_key" unique="PRIMARY_KEY" >
				<column name="sale_key" />
			</index>
		</table>
		<table name="sales_report_usd_revenue_broken_down_by_time" >
			<column name="sale_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="customer" type="text" decimal="0" jt="12" />
			<column name="reseller" type="text" decimal="0" jt="12" />
			<column name="sale_type" type="text" decimal="0" jt="12" />
			<column name="seller" type="text" decimal="0" jt="12" />
			<column name="booking_date" type="date" length="13" decimal="0" jt="91" />
			<column name="usd_amount" type="numeric" length="10" decimal="2" jt="2" />
			<column name="revenue_start" type="date" length="13" decimal="0" jt="91" />
			<column name="revenue_end" type="date" length="13" decimal="0" jt="91" />
			<column name="sale_comment" type="text" decimal="0" jt="12" />
			<column name="invoice" type="text" decimal="0" jt="12" />
			<column name="local_currency_amount" type="numeric" length="10" decimal="2" jt="2" />
			<column name="local_currency_code" type="text" decimal="0" jt="12" />
			<column name="01 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2016" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2016 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2017" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2017 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2018" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2018 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="sales_representative" type="text" decimal="0" jt="12" />
			<column name="paid" type="text" decimal="0" jt="12" />
			<column name="01 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2019" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="01 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="02 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="03 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="04 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="05 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="06 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="07 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="08 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="09 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="10 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="11 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="12 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q1 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q2 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q3 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="Q4 2020" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2019 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<column name="2020 Total" type="numeric" length="10" decimal="2" jt="2" mandatory="y" />
			<index name="pk_sales_report_usd_revenue_broken_down_by_time" unique="PRIMARY_KEY" >
				<column name="sale_key" />
			</index>
		</table>
		<procedure name="tf_r_booking_by_time_report" id="Procedure_2eed26c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_booking_by_time_report()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
BEGIN
    WITH
    booking_per_revenue_type_per_year_table AS (
        SELECT *
        FROM crosstab('SELECT
                        revenue_type
                        ,booking_year
                        ,booked_usd_amount
                    FROM mart.booking_per_revenue_type_per_year
                    WHERE booking_year >= 2016
                        AND booking_year <= 2020
                    ORDER BY 1'
                ,
                'SELECT m FROM generate_series(2016,2020) m') AS (
                revenue_type TEXT
                ,"2016 Total" NUMERIC(10, 2)
                ,"2017 Total" NUMERIC(10, 2)
                ,"2018 Total" NUMERIC(10, 2)
                ,"2019 Total" NUMERIC(10, 2)
                ,"2020 Total" NUMERIC(10, 2)
                )
        )
    ,sum_booking_per_year_table AS (
        SELECT *
        FROM crosstab('SELECT
                    ''SUM''
                    ,booking_year
                    ,SUM(booked_usd_amount)
                    FROM mart.booking_per_revenue_type_per_year
                    GROUP BY booking_year'
                ,'SELECT m FROM generate_series(2016,2020) m') AS (
                revenue_type TEXT
                ,"2016 Total" NUMERIC(10, 2)
                ,"2017 Total" NUMERIC(10, 2)
                ,"2018 Total" NUMERIC(10, 2)
                ,"2019 Total" NUMERIC(10, 2)
                ,"2020 Total" NUMERIC(10, 2)
                )
        )
        -- select * from sum_booking_per_year_table
        -- select * from booking_per_revenue_type_per_year_table
    ,booking_per_revenue_type_per_quarter_table AS (
        SELECT *
        FROM crosstab('SELECT
                        revenue_type
                        ,booking_quarter_year
                        ,booked_usd_amount
                    FROM mart.booking_per_revenue_type_per_quarter
                    WHERE booking_year >= 2016
                        AND booking_year <= 2020
                    ORDER BY 1'
                ,
                'SELECT booking_quarter_year FROM (
                        SELECT
                            booking_quarter_year
                            ,dense_rank() OVER (
                                ORDER BY booking_year
                                    ,booking_quarter
                                ) AS rank
                        FROM mart.booking_per_revenue_type_per_quarter m
                        WHERE booking_year >= 2016
                            AND booking_year <= 2020
                ) foo
               group by  booking_quarter_year, rank
               ORDER BY rank') AS (
                revenue_type TEXT
                ,"Q1 2016" NUMERIC(10, 2)
                ,"Q2 2016" NUMERIC(10, 2)
                ,"Q3 2016" NUMERIC(10, 2)
                ,"Q4 2016" NUMERIC(10, 2)
                ,"Q1 2017" NUMERIC(10, 2)
                ,"Q2 2017" NUMERIC(10, 2)
                ,"Q3 2017" NUMERIC(10, 2)
                ,"Q4 2017" NUMERIC(10, 2)
                ,"Q1 2018" NUMERIC(10, 2)
                ,"Q2 2018" NUMERIC(10, 2)
                ,"Q3 2018" NUMERIC(10, 2)
                ,"Q4 2018" NUMERIC(10, 2)
                ,"Q1 2019" NUMERIC(10, 2)
                ,"Q2 2019" NUMERIC(10, 2)
                ,"Q3 2019" NUMERIC(10, 2)
                ,"Q4 2019" NUMERIC(10, 2)
                ,"Q1 2020" NUMERIC(10, 2)
                ,"Q2 2020" NUMERIC(10, 2)
                ,"Q3 2020" NUMERIC(10, 2)
                ,"Q4 2020" NUMERIC(10, 2)
                )
        )
        --select * from booking_per_revenue_type_per_quarter_table
    ,sum_booking_per_quarter_table AS (
        SELECT *
        FROM crosstab('SELECT ''SUM''
                        ,booking_quarter_year
                        ,SUM(booked_usd_amount)
                    FROM mart.booking_per_revenue_type_per_quarter
                    GROUP BY booking_quarter_year'
                ,
                'SELECT booking_quarter_year FROM (
                        SELECT
                            booking_quarter_year
                            ,dense_rank() OVER (
                                ORDER BY booking_year
                                    ,booking_quarter
                                ) AS rank
                        FROM mart.booking_per_revenue_type_per_quarter m
                        WHERE booking_year >= 2016
                            AND booking_year <= 2020
                ) foo
               group by  booking_quarter_year, rank
               ORDER BY rank') AS (
                revenue_type TEXT
                ,"Q1 2016" NUMERIC(10, 2)
                ,"Q2 2016" NUMERIC(10, 2)
                ,"Q3 2016" NUMERIC(10, 2)
                ,"Q4 2016" NUMERIC(10, 2)
                ,"Q1 2017" NUMERIC(10, 2)
                ,"Q2 2017" NUMERIC(10, 2)
                ,"Q3 2017" NUMERIC(10, 2)
                ,"Q4 2017" NUMERIC(10, 2)
                ,"Q1 2018" NUMERIC(10, 2)
                ,"Q2 2018" NUMERIC(10, 2)
                ,"Q3 2018" NUMERIC(10, 2)
                ,"Q4 2018" NUMERIC(10, 2)
                ,"Q1 2019" NUMERIC(10, 2)
                ,"Q2 2019" NUMERIC(10, 2)
                ,"Q3 2019" NUMERIC(10, 2)
                ,"Q4 2019" NUMERIC(10, 2)
                ,"Q1 2020" NUMERIC(10, 2)
                ,"Q2 2020" NUMERIC(10, 2)
                ,"Q3 2020" NUMERIC(10, 2)
                ,"Q4 2020" NUMERIC(10, 2)
                )
        )
        -- select * from sum_booking_per_quarter_table
    ,booking_per_revenue_type_per_month_table AS (
        SELECT *
        FROM crosstab('SELECT
                        revenue_type
                        ,booking_month_year
                        ,booked_usd_amount
                    FROM mart.booking_per_revenue_type_per_month
                    WHERE booking_year >= 2016
                        AND booking_year <= 2020
                    ORDER BY 1'
                , --array_position(array['Licence','Subscription','Support','Services','Other'], revenue_type
                'SELECT
                    to_char(month_number, ''fm00'') || '' '' || year_number AS month_year
                FROM generate_series(2016, 2020) AS year_number
                    ,generate_series(1, 12) AS month_number
                ') AS (
                revenue_type TEXT
                ,"01 2016" NUMERIC(10, 2)
                ,"02 2016" NUMERIC(10, 2)
                ,"03 2016" NUMERIC(10, 2)
                ,"04 2016" NUMERIC(10, 2)
                ,"05 2016" NUMERIC(10, 2)
                ,"06 2016" NUMERIC(10, 2)
                ,"07 2016" NUMERIC(10, 2)
                ,"08 2016" NUMERIC(10, 2)
                ,"09 2016" NUMERIC(10, 2)
                ,"10 2016" NUMERIC(10, 2)
                ,"11 2016" NUMERIC(10, 2)
                ,"12 2016" NUMERIC(10, 2)
                ,"01 2017" NUMERIC(10, 2)
                ,"02 2017" NUMERIC(10, 2)
                ,"03 2017" NUMERIC(10, 2)
                ,"04 2017" NUMERIC(10, 2)
                ,"05 2017" NUMERIC(10, 2)
                ,"06 2017" NUMERIC(10, 2)
                ,"07 2017" NUMERIC(10, 2)
                ,"08 2017" NUMERIC(10, 2)
                ,"09 2017" NUMERIC(10, 2)
                ,"10 2017" NUMERIC(10, 2)
                ,"11 2017" NUMERIC(10, 2)
                ,"12 2017" NUMERIC(10, 2)
                ,"01 2018" NUMERIC(10, 2)
                ,"02 2018" NUMERIC(10, 2)
                ,"03 2018" NUMERIC(10, 2)
                ,"04 2018" NUMERIC(10, 2)
                ,"05 2018" NUMERIC(10, 2)
                ,"06 2018" NUMERIC(10, 2)
                ,"07 2018" NUMERIC(10, 2)
                ,"08 2018" NUMERIC(10, 2)
                ,"09 2018" NUMERIC(10, 2)
                ,"10 2018" NUMERIC(10, 2)
                ,"11 2018" NUMERIC(10, 2)
                ,"12 2018" NUMERIC(10, 2)
                ,"01 2019" NUMERIC(10, 2)
                ,"02 2019" NUMERIC(10, 2)
                ,"03 2019" NUMERIC(10, 2)
                ,"04 2019" NUMERIC(10, 2)
                ,"05 2019" NUMERIC(10, 2)
                ,"06 2019" NUMERIC(10, 2)
                ,"07 2019" NUMERIC(10, 2)
                ,"08 2019" NUMERIC(10, 2)
                ,"09 2019" NUMERIC(10, 2)
                ,"10 2019" NUMERIC(10, 2)
                ,"11 2019" NUMERIC(10, 2)
                ,"12 2019" NUMERIC(10, 2)
                ,"01 2020" NUMERIC(10, 2)
                ,"02 2020" NUMERIC(10, 2)
                ,"03 2020" NUMERIC(10, 2)
                ,"04 2020" NUMERIC(10, 2)
                ,"05 2020" NUMERIC(10, 2)
                ,"06 2020" NUMERIC(10, 2)
                ,"07 2020" NUMERIC(10, 2)
                ,"08 2020" NUMERIC(10, 2)
                ,"09 2020" NUMERIC(10, 2)
                ,"10 2020" NUMERIC(10, 2)
                ,"11 2020" NUMERIC(10, 2)
                ,"12 2020" NUMERIC(10, 2)
                )
        )
        --select * from booking_per_revenue_type_per_month_table
    ,sum_booking_per_month_table AS (
        SELECT *
        FROM crosstab('SELECT ''SUM''
                        ,booking_month_year
                        ,SUM(booked_usd_amount)
                    FROM mart.booking_per_revenue_type_per_month
                    WHERE booking_year >= 2016
                        AND booking_year <= 2020
                    GROUP BY booking_month_year
                    ORDER BY 1'
                , --array_position(array['Licence','Subscription','Support','Services','Other'], revenue_type
                'SELECT
                    to_char(month_number, ''fm00'') || '' '' || year_number AS month_year
                FROM generate_series(2016, 2020) AS year_number
                    ,generate_series(1, 12) AS month_number
                ') AS (
                revenue_type TEXT
                ,"01 2016" NUMERIC(10, 2)
                ,"02 2016" NUMERIC(10, 2)
                ,"03 2016" NUMERIC(10, 2)
                ,"04 2016" NUMERIC(10, 2)
                ,"05 2016" NUMERIC(10, 2)
                ,"06 2016" NUMERIC(10, 2)
                ,"07 2016" NUMERIC(10, 2)
                ,"08 2016" NUMERIC(10, 2)
                ,"09 2016" NUMERIC(10, 2)
                ,"10 2016" NUMERIC(10, 2)
                ,"11 2016" NUMERIC(10, 2)
                ,"12 2016" NUMERIC(10, 2)
                ,"01 2017" NUMERIC(10, 2)
                ,"02 2017" NUMERIC(10, 2)
                ,"03 2017" NUMERIC(10, 2)
                ,"04 2017" NUMERIC(10, 2)
                ,"05 2017" NUMERIC(10, 2)
                ,"06 2017" NUMERIC(10, 2)
                ,"07 2017" NUMERIC(10, 2)
                ,"08 2017" NUMERIC(10, 2)
                ,"09 2017" NUMERIC(10, 2)
                ,"10 2017" NUMERIC(10, 2)
                ,"11 2017" NUMERIC(10, 2)
                ,"12 2017" NUMERIC(10, 2)
                ,"01 2018" NUMERIC(10, 2)
                ,"02 2018" NUMERIC(10, 2)
                ,"03 2018" NUMERIC(10, 2)
                ,"04 2018" NUMERIC(10, 2)
                ,"05 2018" NUMERIC(10, 2)
                ,"06 2018" NUMERIC(10, 2)
                ,"07 2018" NUMERIC(10, 2)
                ,"08 2018" NUMERIC(10, 2)
                ,"09 2018" NUMERIC(10, 2)
                ,"10 2018" NUMERIC(10, 2)
                ,"11 2018" NUMERIC(10, 2)
                ,"12 2018" NUMERIC(10, 2)
                ,"01 2019" NUMERIC(10, 2)
                ,"02 2019" NUMERIC(10, 2)
                ,"03 2019" NUMERIC(10, 2)
                ,"04 2019" NUMERIC(10, 2)
                ,"05 2019" NUMERIC(10, 2)
                ,"06 2019" NUMERIC(10, 2)
                ,"07 2019" NUMERIC(10, 2)
                ,"08 2019" NUMERIC(10, 2)
                ,"09 2019" NUMERIC(10, 2)
                ,"10 2019" NUMERIC(10, 2)
                ,"11 2019" NUMERIC(10, 2)
                ,"12 2019" NUMERIC(10, 2)
                ,"01 2020" NUMERIC(10, 2)
                ,"02 2020" NUMERIC(10, 2)
                ,"03 2020" NUMERIC(10, 2)
                ,"04 2020" NUMERIC(10, 2)
                ,"05 2020" NUMERIC(10, 2)
                ,"06 2020" NUMERIC(10, 2)
                ,"07 2020" NUMERIC(10, 2)
                ,"08 2020" NUMERIC(10, 2)
                ,"09 2020" NUMERIC(10, 2)
                ,"10 2020" NUMERIC(10, 2)
                ,"11 2020" NUMERIC(10, 2)
                ,"12 2020" NUMERIC(10, 2)
                )
        )
    INSERT INTO mart.booking_by_time_report (
        revenue_type
        ,"01 2016"
        ,"02 2016"
        ,"03 2016"
        ,"Q1 2016"
        ,"04 2016"
        ,"05 2016"
        ,"06 2016"
        ,"Q2 2016"
        ,"07 2016"
        ,"08 2016"
        ,"09 2016"
        ,"Q3 2016"
        ,"10 2016"
        ,"11 2016"
        ,"12 2016"
        ,"Q4 2016"
        ,"2016 Total"
        ,"01 2017"
        ,"02 2017"
        ,"03 2017"
        ,"Q1 2017"
        ,"04 2017"
        ,"05 2017"
        ,"06 2017"
        ,"Q2 2017"
        ,"07 2017"
        ,"08 2017"
        ,"09 2017"
        ,"Q3 2017"
        ,"10 2017"
        ,"11 2017"
        ,"12 2017"
        ,"Q4 2017"
        ,"2017 Total"
        ,"01 2018"
        ,"02 2018"
        ,"03 2018"
        ,"Q1 2018"
        ,"04 2018"
        ,"05 2018"
        ,"06 2018"
        ,"Q2 2018"
        ,"07 2018"
        ,"08 2018"
        ,"09 2018"
        ,"Q3 2018"
        ,"10 2018"
        ,"11 2018"
        ,"12 2018"
        ,"Q4 2018"
        ,"2018 Total"
        ,"01 2019"
        ,"02 2019"
        ,"03 2019"
        ,"Q1 2019"
        ,"04 2019"
        ,"05 2019"
        ,"06 2019"
        ,"Q2 2019"
        ,"07 2019"
        ,"08 2019"
        ,"09 2019"
        ,"Q3 2019"
        ,"10 2019"
        ,"11 2019"
        ,"12 2019"
        ,"Q4 2019"
        ,"2019 Total"
        ,"01 2020"
        ,"02 2020"
        ,"03 2020"
        ,"Q1 2020"
        ,"04 2020"
        ,"05 2020"
        ,"06 2020"
        ,"Q2 2020"
        ,"07 2020"
        ,"08 2020"
        ,"09 2020"
        ,"Q3 2020"
        ,"10 2020"
        ,"11 2020"
        ,"12 2020"
        ,"Q4 2020"
        ,"2020 Total"
        )
    SELECT
        revenue_type
        ,COALESCE("01 2016"         , 0)
        ,COALESCE("02 2016"         , 0)
        ,COALESCE("03 2016"         , 0)
        ,COALESCE("Q1 2016"         , 0)
        ,COALESCE("04 2016"         , 0)
        ,COALESCE("05 2016"         , 0)
        ,COALESCE("06 2016"         , 0)
        ,COALESCE("Q2 2016"         , 0)
        ,COALESCE("07 2016"         , 0)
        ,COALESCE("08 2016"         , 0)
        ,COALESCE("09 2016"         , 0)
        ,COALESCE("Q3 2016"         , 0)
        ,COALESCE("10 2016"         , 0)
        ,COALESCE("11 2016"         , 0)
        ,COALESCE("12 2016"         , 0)
        ,COALESCE("Q4 2016"         , 0)
        ,COALESCE("2016 Total"      , 0)
        ,COALESCE("01 2017"         , 0)
        ,COALESCE("02 2017"         , 0)
        ,COALESCE("03 2017"         , 0)
        ,COALESCE("Q1 2017"         , 0)
        ,COALESCE("04 2017"         , 0)
        ,COALESCE("05 2017"         , 0)
        ,COALESCE("06 2017"         , 0)
        ,COALESCE("Q2 2017"         , 0)
        ,COALESCE("07 2017"         , 0)
        ,COALESCE("08 2017"         , 0)
        ,COALESCE("09 2017"         , 0)
        ,COALESCE("Q3 2017"         , 0)
        ,COALESCE("10 2017"         , 0)
        ,COALESCE("11 2017"         , 0)
        ,COALESCE("12 2017"         , 0)
        ,COALESCE("Q4 2017"         , 0)
        ,COALESCE("2017 Total"      , 0)
        ,COALESCE("01 2018"         , 0)
        ,COALESCE("02 2018"         , 0)
        ,COALESCE("03 2018"         , 0)
        ,COALESCE("Q1 2018"         , 0)
        ,COALESCE("04 2018"         , 0)
        ,COALESCE("05 2018"         , 0)
        ,COALESCE("06 2018"         , 0)
        ,COALESCE("Q2 2018"         , 0)
        ,COALESCE("07 2018"         , 0)
        ,COALESCE("08 2018"         , 0)
        ,COALESCE("09 2018"         , 0)
        ,COALESCE("Q3 2018"         , 0)
        ,COALESCE("10 2018"         , 0)
        ,COALESCE("11 2018"         , 0)
        ,COALESCE("12 2018"         , 0)
        ,COALESCE("Q4 2018"         , 0)
        ,COALESCE("2018 Total"      , 0)
        ,COALESCE("01 2019"         , 0)
        ,COALESCE("02 2019"         , 0)
        ,COALESCE("03 2019"         , 0)
        ,COALESCE("Q1 2019"         , 0)
        ,COALESCE("04 2019"         , 0)
        ,COALESCE("05 2019"         , 0)
        ,COALESCE("06 2019"         , 0)
        ,COALESCE("Q2 2019"         , 0)
        ,COALESCE("07 2019"         , 0)
        ,COALESCE("08 2019"         , 0)
        ,COALESCE("09 2019"         , 0)
        ,COALESCE("Q3 2019"         , 0)
        ,COALESCE("10 2019"         , 0)
        ,COALESCE("11 2019"         , 0)
        ,COALESCE("12 2019"         , 0)
        ,COALESCE("Q4 2019"         , 0)
        ,COALESCE("2019 Total"      , 0)
        ,COALESCE("01 2020"         , 0)
        ,COALESCE("02 2020"         , 0)
        ,COALESCE("03 2020"         , 0)
        ,COALESCE("Q1 2020"         , 0)
        ,COALESCE("04 2020"         , 0)
        ,COALESCE("05 2020"         , 0)
        ,COALESCE("06 2020"         , 0)
        ,COALESCE("Q2 2020"         , 0)
        ,COALESCE("07 2020"         , 0)
        ,COALESCE("08 2020"         , 0)
        ,COALESCE("09 2020"         , 0)
        ,COALESCE("Q3 2020"         , 0)
        ,COALESCE("10 2020"         , 0)
        ,COALESCE("11 2020"         , 0)
        ,COALESCE("12 2020"         , 0)
        ,COALESCE("Q4 2020"         , 0)
        ,COALESCE("2020 Total"      , 0)
    FROM (
        SELECT booking_per_revenue_type_per_quarter_table.revenue_type
            ,"01 2016"
            ,"02 2016"
            ,"03 2016"
            ,"Q1 2016"
            ,"04 2016"
            ,"05 2016"
            ,"06 2016"
            ,"Q2 2016"
            ,"07 2016"
            ,"08 2016"
            ,"09 2016"
            ,"Q3 2016"
            ,"10 2016"
            ,"11 2016"
            ,"12 2016"
            ,"Q4 2016"
            ,"2016 Total"
            ,"01 2017"
            ,"02 2017"
            ,"03 2017"
            ,"Q1 2017"
            ,"04 2017"
            ,"05 2017"
            ,"06 2017"
            ,"Q2 2017"
            ,"07 2017"
            ,"08 2017"
            ,"09 2017"
            ,"Q3 2017"
            ,"10 2017"
            ,"11 2017"
            ,"12 2017"
            ,"Q4 2017"
            ,"2017 Total"
            ,"01 2018"
            ,"02 2018"
            ,"03 2018"
            ,"Q1 2018"
            ,"04 2018"
            ,"05 2018"
            ,"06 2018"
            ,"Q2 2018"
            ,"07 2018"
            ,"08 2018"
            ,"09 2018"
            ,"Q3 2018"
            ,"10 2018"
            ,"11 2018"
            ,"12 2018"
            ,"Q4 2018"
            ,"2018 Total"
            ,"01 2019"
            ,"02 2019"
            ,"03 2019"
            ,"Q1 2019"
            ,"04 2019"
            ,"05 2019"
            ,"06 2019"
            ,"Q2 2019"
            ,"07 2019"
            ,"08 2019"
            ,"09 2019"
            ,"Q3 2019"
            ,"10 2019"
            ,"11 2019"
            ,"12 2019"
            ,"Q4 2019"
            ,"2019 Total"
            ,"01 2020"
            ,"02 2020"
            ,"03 2020"
            ,"Q1 2020"
            ,"04 2020"
            ,"05 2020"
            ,"06 2020"
            ,"Q2 2020"
            ,"07 2020"
            ,"08 2020"
            ,"09 2020"
            ,"Q3 2020"
            ,"10 2020"
            ,"11 2020"
            ,"12 2020"
            ,"Q4 2020"
            ,"2020 Total"
        FROM booking_per_revenue_type_per_quarter_table
        JOIN booking_per_revenue_type_per_year_table ON booking_per_revenue_type_per_year_table.revenue_type = booking_per_revenue_type_per_quarter_table.revenue_type
        JOIN booking_per_revenue_type_per_month_table ON booking_per_revenue_type_per_month_table.revenue_type = booking_per_revenue_type_per_quarter_table.revenue_type
        UNION ALL
        SELECT sum_booking_per_year_table.revenue_type
            ,"01 2016"
            ,"02 2016"
            ,"03 2016"
            ,"Q1 2016"
            ,"04 2016"
            ,"05 2016"
            ,"06 2016"
            ,"Q2 2016"
            ,"07 2016"
            ,"08 2016"
            ,"09 2016"
            ,"Q3 2016"
            ,"10 2016"
            ,"11 2016"
            ,"12 2016"
            ,"Q4 2016"
            ,"2016 Total"
            ,"01 2017"
            ,"02 2017"
            ,"03 2017"
            ,"Q1 2017"
            ,"04 2017"
            ,"05 2017"
            ,"06 2017"
            ,"Q2 2017"
            ,"07 2017"
            ,"08 2017"
            ,"09 2017"
            ,"Q3 2017"
            ,"10 2017"
            ,"11 2017"
            ,"12 2017"
            ,"Q4 2017"
            ,"2017 Total"
            ,"01 2018"
            ,"02 2018"
            ,"03 2018"
            ,"Q1 2018"
            ,"04 2018"
            ,"05 2018"
            ,"06 2018"
            ,"Q2 2018"
            ,"07 2018"
            ,"08 2018"
            ,"09 2018"
            ,"Q3 2018"
            ,"10 2018"
            ,"11 2018"
            ,"12 2018"
            ,"Q4 2018"
            ,"2018 Total"
            ,"01 2019"
            ,"02 2019"
            ,"03 2019"
            ,"Q1 2019"
            ,"04 2019"
            ,"05 2019"
            ,"06 2019"
            ,"Q2 2019"
            ,"07 2019"
            ,"08 2019"
            ,"09 2019"
            ,"Q3 2019"
            ,"10 2019"
            ,"11 2019"
            ,"12 2019"
            ,"Q4 2019"
            ,"2019 Total"
            ,"01 2020"
            ,"02 2020"
            ,"03 2020"
            ,"Q1 2020"
            ,"04 2020"
            ,"05 2020"
            ,"06 2020"
            ,"Q2 2020"
            ,"07 2020"
            ,"08 2020"
            ,"09 2020"
            ,"Q3 2020"
            ,"10 2020"
            ,"11 2020"
            ,"12 2020"
            ,"Q4 2020"
            ,"2020 Total"
        FROM sum_booking_per_year_table
        JOIN sum_booking_per_quarter_table ON sum_booking_per_quarter_table.revenue_type = sum_booking_per_year_table.revenue_type
        JOIN sum_booking_per_month_table ON sum_booking_per_month_table.revenue_type = sum_booking_per_quarter_table.revenue_type
        ) AS foo
    ORDER BY array_position(array ['Licence','Subscription','Support','Services','Other', 'Intercompany'], revenue_type);
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_booking_per_revenue_type_per_month" id="Procedure_4667483" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_booking_per_revenue_type_per_month()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
BEGIN
    WITH
    series_base_dates AS (
        SELECT *
        FROM generate_series('2012-01-01'::DATE, '2020-12-31'::DATE, '1 months') AS series
        )
    ,formated_series AS (
        SELECT series::DATE AS date_series_date
            ,extract('month' FROM series)::INTEGER AS date_series_month
            ,extract('quarter' FROM series)::INTEGER AS date_series_quarter
            ,extract('year' FROM series)::INTEGER AS date_series_year
            ,revenue_type_name
        FROM series_base_dates
            ,core.c_revenue_type_t
        WHERE revenue_type_name != 'Intercompany'
        )
    ,booking_base_report AS (
        SELECT
            sale.sale_key
            ,party_org_customer.full_name AS customer
            ,party_org_reseller.full_name AS reseller
            ,revenue_type.revenue_type_name
            ,party_org_seller.full_name AS seller
            ,sale.booking_date
            ,sale.usd_amount
            ,sale.local_currency_amount
            ,local_currency.alphabetical_code AS local_currency_code
            ,extract('month' FROM booking_date)::INTEGER AS booking_month
            ,extract('quarter' FROM booking_date)::INTEGER AS booking_quarter
            ,extract('year' FROM booking_date)::INTEGER AS booking_year
            ,sale.sale_comment
            ,sale.invoice
        FROM core.sale_t AS sale
        JOIN core.c_revenue_type_t AS revenue_type ON revenue_type.revenue_type_id = sale.fk_revenue_type_id
        JOIN core.organization_t AS org_customer ON org_customer.organization_id = sale.fk_organization_id_customer
        JOIN core.party_t AS party_org_customer ON party_org_customer.party_id = org_customer.fk_party_id
        JOIN core.party_t AS party_sales_representative ON party_sales_representative.party_id = sale.fk_party_id_sales_representative
        LEFT JOIN core.organization_t AS org_reseller ON org_reseller.organization_id = sale.fk_organization_id_reseller
        LEFT JOIN core.party_t AS party_org_reseller ON party_org_reseller.party_id = org_reseller.fk_party_id
        JOIN core.organization_t AS org_seller ON org_seller.organization_id = sale.fk_organization_id_seller
        JOIN core.party_t AS party_org_seller ON party_org_seller.party_id = org_seller.fk_party_id
        JOIN core.c_currency_g AS local_currency ON local_currency.currency_id = sale.fk_currency_id_local_currency
        WHERE revenue_type.revenue_type_name != 'Intercompany'
        )
    ,booking_report_including_0_booking_months AS (
        SELECT sale_key
            ,customer
            ,reseller
            ,formated_series.revenue_type_name AS revenue_type
            ,seller
            ,formated_series.date_series_date
            ,CASE WHEN usd_amount IS NULL THEN 0 ELSE usd_amount END AS booked_usd_amount
            ,CASE WHEN local_currency_amount IS NULL THEN 0 ELSE local_currency_amount END AS booked_local_currency_amount
            ,local_currency_code
            ,formated_series.date_series_date AS booking_date
            ,formated_series.date_series_month AS booking_month
            ,formated_series.date_series_quarter AS booking_quarter
            ,formated_series.date_series_year AS booking_year
            ,sale_comment
            ,invoice
        FROM formated_series
        LEFT JOIN booking_base_report ON booking_base_report.booking_month = formated_series.date_series_month
            AND booking_base_report.booking_quarter = formated_series.date_series_quarter
            AND booking_base_report.booking_year = formated_series.date_series_year
            AND booking_base_report.revenue_type_name = formated_series.revenue_type_name
        ORDER BY formated_series.date_series_year
            ,formated_series.date_series_quarter
            ,formated_series.date_series_month
        )
    ,booking_per_revenue_type_per_month AS (
        SELECT revenue_type
            ,to_char(booking_month, 'fm00') || ' ' || booking_year AS booking_month_year
            ,booking_month
            ,booking_quarter
            ,booking_year
            ,sum(booked_usd_amount) AS booked_usd_amount
        FROM booking_report_including_0_booking_months
        GROUP BY revenue_type
            ,booking_month
            ,booking_quarter
            ,booking_year
        )
    INSERT INTO mart.booking_per_revenue_type_per_month (
        booking_month_year
        ,revenue_type
        ,booked_usd_amount
        ,booking_month
        ,booking_quarter
        ,booking_year
        )
    SELECT booking_month_year
        ,revenue_type
        ,booked_usd_amount
        ,booking_month
        ,booking_quarter
        ,booking_year
    FROM booking_per_revenue_type_per_month;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_booking_per_revenue_type_per_quarter" id="Procedure_4ddaf28" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_booking_per_revenue_type_per_quarter()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
BEGIN
    INSERT INTO mart.booking_per_revenue_type_per_quarter (
        booking_quarter_year
        ,revenue_type
        ,booked_usd_amount
        ,booking_quarter
        ,booking_year
        )
    SELECT
        'Q' || booking_quarter::TEXT || ' ' || booking_year AS booking_quarter_year
        ,revenue_type
        ,sum(booked_usd_amount) AS booked_usd_amount
        ,booking_quarter
        ,booking_year
    FROM mart.booking_per_revenue_type_per_month
    GROUP BY revenue_type
        ,booking_quarter
        ,booking_year;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_booking_per_revenue_type_per_year" id="Procedure_467623c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_booking_per_revenue_type_per_year()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
BEGIN
    INSERT INTO mart.booking_per_revenue_type_per_year (
        booking_year
        ,revenue_type
        ,booked_usd_amount
    )
    SELECT
        booking_year
        ,revenue_type
        ,sum(booked_usd_amount) AS booked_usd_amount
    FROM mart.booking_per_revenue_type_per_quarter
    GROUP BY booking_year
        ,revenue_type;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_bugs_created_after_affected_version_release" id="Procedure_5b33656" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_bugs_created_after_affected_version_release()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
BUG_ISSUE_FLAG TEXT := 'Bug';
BEGIN
    WITH bugs AS (
        SELECT
            issue.jira_key AS jira_key
            ,unnest(issue.affected_versions) AS affected_version
            ,issue.summary
            ,issue.created_timestamp
        FROM core.issue_t AS issue
        WHERE issue.issue_type = BUG_ISSUE_FLAG
        )
    INSERT INTO mart.bugs_created_after_affected_version_release (
        affected_version_name
        ,affected_version_number
        ,bug_key
        ,bug_summary
        ,bug_creation_date
        ,affected_version_release_date
        )
    SELECT
        released_versions.release_name AS fix_version_name
        ,released_versions.release_number AS fix_version_number
        ,bugs.jira_key AS bug_key
        ,bugs.summary AS bug_summary
        ,bugs.created_timestamp AS bug_creation_date
        ,released_versions.release_date
    FROM bugs
    JOIN core.release_t AS released_versions ON released_versions.release_name = bugs.affected_version
        AND released_versions.fk_date_id_release_date != - 1
    WHERE bugs.created_timestamp > released_versions.release_date;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_bugs_created_after_fix_version_release" id="Procedure_42e3b56" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_bugs_created_after_fix_version_release()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
BUG_ISSUE_FLAG TEXT := 'Bug';
BEGIN
    WITH bugs AS (
        SELECT
            issue.jira_key AS jira_key
            ,unnest(issue.fix_versions) AS fix_version
            ,issue.summary
            ,issue.created_timestamp
        FROM core.issue_t AS issue
        WHERE issue.issue_type = BUG_ISSUE_FLAG
        )
    INSERT INTO mart.bugs_created_after_fix_version_release (
        fix_version_name
        ,fix_version_number
        ,bug_key
        ,bug_summary
        ,bug_creation_date
        ,fix_version_release_date
        )
    SELECT
        released_versions.release_name AS fix_version_name
        ,released_versions.release_number AS fix_version_number
        ,bugs.jira_key AS bug_key
        ,bugs.summary AS bug_summary
        ,bugs.created_timestamp AS bug_creation_date
        ,released_versions.release_date
    FROM bugs
    JOIN core.release_t AS released_versions ON released_versions.release_name = bugs.fix_version
        AND released_versions.fk_date_id_release_date != - 1
    WHERE bugs.created_timestamp > released_versions.release_date;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_bugs_per_account" id="Procedure_4998104" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_bugs_per_account()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
NO_COMPONENT_FLAG TEXT[] := '{Common}';
NO_ACCOUNT_FLAG TEXT := 'Common';
NO_CUSTOMER_FLAG TEXT := 'Common';
NONE_TEXT TEXT := 'None';
UNDEFINED_TEXT TEXT := 'Undefined';
NO_SLA_PRIORITY_FLAG TEXT := 'NO_SLA';
NO_PRIORITY_FLAG TEXT := 'NO_PRIORITY';
BUSINESS_INTELLIGENCE_PROJECT_KEY TEXT := 'BI';
HELP_DESK_PROJECT_KEY TEXT := 'HD';
DEVELOPMENT_PROJECT_KEY TEXT := 'DEV';
SUPPORT_ISSUE_FLAG TEXT := 'Support';
FEATURE_ISSUE_FLAG TEXT := 'Feature';
ACTIVITY_ISSUE_FLAG TEXT := 'Activity';
TASK_ISSUE_FLAG TEXT := 'Task';
BUG_ISSUE_FLAG TEXT := 'Bug';
STATUS_RESOLVED TEXT := 'Resolved';
STATUS_CLOSED TEXT := 'Closed';
BEGIN
    WITH resolved_bugs AS (
        SELECT
            issue.account
            ,issue.customer
            ,issue.priority
            ,issue.sla_priority
            ,issue.deployment
            ,1 AS created_bugs_number
            ,CASE 
                WHEN issue.status = STATUS_RESOLVED OR status = STATUS_CLOSED THEN 1
                ELSE 0 
            END AS resolved_bugs_number
            ,CASE WHEN issue.inception_to_resolution_days = -1 THEN NULL ELSE issue.inception_to_resolution_days END AS inception_to_resolution_days
            ,CASE WHEN issue.first_response_to_resolution_days = -1 THEN NULL ELSE issue.first_response_to_resolution_days END AS first_response_to_resolution_days
            ,CASE WHEN issue.inception_to_first_response_days = -1 THEN NULL ELSE issue.inception_to_first_response_days END AS inception_to_first_response_days
            ,CASE WHEN issue.first_response_timestamp = TIMESTAMP_NEVER THEN NULL ELSE issue.first_response_timestamp END AS first_response_timestamp
            ,CASE WHEN issue.created_timestamp = TIMESTAMP_NEVER THEN NULL ELSE issue.created_timestamp END AS created_timestamp
            ,CASE WHEN issue.resolution_timestamp = TIMESTAMP_NEVER THEN NULL ELSE issue.resolution_timestamp END AS resolution_timestamp
        FROM core.issue_t AS issue
        JOIN core.project_t AS project ON project.project_id = issue.fk_project_id
        WHERE project.jira_key = HELP_DESK_PROJECT_KEY
            AND issue_type = BUG_ISSUE_FLAG
        )
    INSERT INTO mart.report_bugs_per_account (
        account
        ,customer
        ,priority
        ,sla_priority
        ,deployment
        ,created_bugs_number
        ,resolved_bugs_number
        ,created_to_resoluion_hours
        ,first_response_to_resolution_hours
        ,created_to_first_response_hours
        ,first_response_timestamp
        ,created_timestamp
        ,resolution_timestamp
        )
    SELECT
        account
        ,customer
        ,priority
        ,sla_priority
        ,deployment
        ,created_bugs_number
        ,resolved_bugs_number
        ,inception_to_resolution_days*24 AS inception_to_resoluion_hours
        ,first_response_to_resolution_days*24 AS first_response_to_resolution_hours
        ,inception_to_first_response_days*24 AS inception_to_first_response_hours
        ,first_response_timestamp
        ,created_timestamp
        ,resolution_timestamp
    FROM resolved_bugs;
    
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_bugs_per_component_per_release" id="Procedure_371f09d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_bugs_per_component_per_release()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
COMMON_COMPONENT_FLAG TEXT[] := '{Common}';
BUSINESS_INTELLIGENCE_PROJECT_KEY TEXT := 'BI';
HELP_DESK_PROJECT_KEY TEXT := 'HD';
DEVELOPMENT_PROJECT_KEY TEXT := 'DEV';
SUPPORT_ISSUE_FLAG TEXT := 'Support';
FEATURE_ISSUE_FLAG TEXT := 'Feature';
ACTIVITY_ISSUE_FLAG TEXT := 'Activity';
TASK_ISSUE_FLAG TEXT := 'Task';
BUG_ISSUE_FLAG TEXT := 'Bug';
BEGIN
    WITH issue AS (
        SELECT
            CASE
                WHEN issue.components = TEXT_ARRAY_NULL THEN COMMON_COMPONENT_FLAG
                ELSE issue.components
            END AS components
            ,issue.fix_versions
            ,project.project_name AS project_name
            ,project.jira_key AS project_jira_key
            ,created_timestamp
            ,resolution_timestamp
        FROM core.issue_t AS issue
        JOIN core.project_t AS project ON project.project_id = issue.fk_project_id
        WHERE issue.issue_type = BUG_ISSUE_FLAG
            AND project.jira_key = DEVELOPMENT_PROJECT_KEY
            AND NOT issue.fix_versions = TEXT_ARRAY_NULL
    )
    ,unnested_components AS (
        SELECT
            unnest(components) AS component
            ,fix_versions
            ,project_jira_key
            ,project_name
            ,1 AS bugs_number
            ,created_timestamp
            ,resolution_timestamp
        FROM issue
    )
    ,unnested_components_and_versions AS (
        SELECT 
            component
            ,unnest(fix_versions) AS fix_version
            ,project_jira_key
            ,project_name
            ,1 AS bugs_number
            ,created_timestamp
            ,resolution_timestamp
        FROM unnested_components
    )
    INSERT INTO mart.report_bugs_per_component_pre_release (
        project_key
        ,release_name
        ,release_number
        ,component
        ,bugs_number
        ,bug_created_at
        ,bug_resolved_at
        )
    SELECT
        project_jira_key
        ,fix_version AS release_name
        ,SUBSTRING(fix_version from 2 )::INTEGER AS release_number
        ,component
        ,bugs_number
        ,created_timestamp
        ,resolution_timestamp
    FROM unnested_components_and_versions;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_bugs_per_release" id="Procedure_536c1be" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_bugs_per_release()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
BEGIN
    INSERT INTO mart.report_bugs_per_release (
        project_key
        ,release_name
        ,release_number
        ,bug_key
        ,bug_summary
        ,bug_number
        )
    SELECT
        project.jira_key AS project_jira_key
        ,release.release_name AS release_name
        ,release.release_number AS release_number
        ,related_issue.jira_key AS bug_key
        ,related_issue.summary AS bug_summary
        ,1 AS bug_number    
    FROM core.project_t AS project
    JOIN core.release_t AS release ON release.fk_project_id = project.project_id
    JOIN core.issue_t AS issue ON issue.fk_project_id = project.project_id
        AND issue.fix_versions [1] = release.release_name
    JOIN core.issue_relation_map_t AS issue_relation_map ON issue_relation_map.fk_issue_id = issue.issue_id
    JOIN core.issue_t AS related_issue ON related_issue.issue_id = issue_relation_map.fk_issue_id_related_issue
    WHERE issue.summary LIKE 'Kvalifikační testování%' 
        AND related_issue.issue_type = 'Bug';
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_deal" id="Procedure_58c1017" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_deal()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
DATE_NEVER DATE := (SELECT date_never FROM core.c_null_replacement_g);
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
BEGIN
    WITH
    deal_aggregate_duplicate_emails AS (
        SELECT
            deal.deal_id
            ,COUNT(deal_email.mail_message_id) AS email_count
        FROM core.deal_t AS deal
        LEFT JOIN core.mail_message_t AS deal_email ON deal_email.fk_deal_id = deal.deal_id
        GROUP BY deal.deal_id
            ,deal_email.pipedrive_mail_message_id
    )
    ,deal_email_count AS (
        SELECT
            deal_aggregate_duplicate_emails.deal_id
            ,SUM(deal_aggregate_duplicate_emails.email_count) AS email_count
        FROM deal_aggregate_duplicate_emails
        GROUP BY deal_id
    )
    ,aggregated_deal_email_content AS (
      SELECT
        deal.deal_id
        ,string_agg(COALESCE(deal_email.body_snippet, ''), ' ') AS agg_body_snippet
      FROM core.deal_t AS deal
      LEFT JOIN core.mail_message_t AS deal_email ON deal_email.fk_deal_id = deal.deal_id
      GROUP BY deal.deal_id
    )
    ,aggregated_deal_note_content AS (
        SELECT
            deal.deal_id
            ,string_agg(COALESCE(deal_note.content, ''), ' ') AS agg_content
        FROM core.deal_t AS deal
        LEFT JOIN core.note_t AS deal_note ON deal_note.fk_deal_id = deal.deal_id
        GROUP BY deal.deal_id
    )
    ,deal_text_search_include_emails_and_notes_vector AS (
        SELECT
            deal.deal_id
            ,to_tsvector(
                unaccent(
                    deal_issue.account                  ::TEXT
                    || deal_issue.customer              ::TEXT
                    || deal.title                       ::TEXT
                    || deal.category                    ::TEXT
                    || deal.deal_source                 ::TEXT
                    || deal.deal_source_detail          ::TEXT
                    || deal.stage                       ::TEXT
                    || deal.status                      ::TEXT
                    || deal.reason_lost                 ::TEXT
                    || deal.resulting_state             ::TEXT
                    || deal_issue.description           ::TEXT
                    || deal_issue.priority              ::TEXT
                    || deal_issue.status                ::TEXT
                    || deal_issue.summary               ::TEXT
                    || party_contact.full_name          ::TEXT
                    || main_contact.email_address       ::TEXT
                    || main_contact.location_country    ::TEXT
                    || deal.country                     ::TEXT
                    || deal.region                      ::TEXT
                    || party_organization.full_name     ::TEXT
                    || deal.partner_identified_by       ::TEXT
                    || deal.partner_qualified_by        ::TEXT
                    || deal.partner_poc_done_by         ::TEXT
                    || deal.partner_closed_by           ::TEXT
                    || deal.partner_resold_by           ::TEXT
                    || deal.partner_owned_by            ::TEXT
                    || deal_note.agg_content            ::TEXT
                    || deal_email.agg_body_snippet      ::TEXT
                )
            ) AS text_search_vector
    FROM core.deal_t AS deal
    JOIN aggregated_deal_note_content AS deal_note ON deal_note.deal_id = deal.deal_id
    JOIN aggregated_deal_email_content AS deal_email ON deal_email.deal_id = deal.deal_id
    JOIN core.issue_t AS deal_issue ON deal.fk_issue_id = deal_issue.issue_id
    JOIN core.contact_t AS main_contact ON deal.fk_contact_id = main_contact.contact_id
    JOIN core.party_t AS party_contact ON main_contact.fk_party_id = party_contact.party_id
    JOIN core.organization_t AS organization ON deal.fk_organization_id = organization.organization_id
    JOIN core.party_t AS party_organization ON organization.fk_party_id = party_organization.party_id
    WHERE deal.deal_id != -1
    )
    ,deal_text_search_vector AS (
    SELECT
        deal.deal_id
        ,to_tsvector(
            unaccent(
                deal_issue.account                  ::TEXT
                || deal_issue.customer              ::TEXT
                || deal.title                       ::TEXT
                || deal.category                    ::TEXT
                || deal.deal_source                 ::TEXT
                || deal.deal_source_detail          ::TEXT
                || deal.stage                       ::TEXT
                || deal.status                      ::TEXT
                || deal.reason_lost                 ::TEXT
                || deal.resulting_state             ::TEXT
                || deal_issue.description           ::TEXT
                || deal_issue.priority              ::TEXT
                || deal_issue.status                ::TEXT
                || deal_issue.summary               ::TEXT
                || party_contact.full_name          ::TEXT
                || main_contact.email_address       ::TEXT
                || main_contact.location_country    ::TEXT
                || deal.country                     ::TEXT
                || deal.region                      ::TEXT
                || party_organization.full_name     ::TEXT
                || deal.partner_identified_by       ::TEXT
                || deal.partner_qualified_by        ::TEXT
                || deal.partner_poc_done_by         ::TEXT
                || deal.partner_closed_by           ::TEXT
                || deal.partner_resold_by           ::TEXT
                || deal.partner_owned_by            ::TEXT
            )
        ) AS text_search_vector
    FROM core.deal_t AS deal
    JOIN core.issue_t AS deal_issue ON deal.fk_issue_id = deal_issue.issue_id
    JOIN core.contact_t AS main_contact ON deal.fk_contact_id = main_contact.contact_id
    JOIN core.party_t AS party_contact ON main_contact.fk_party_id = party_contact.party_id
    JOIN core.organization_t AS organization ON deal.fk_organization_id = organization.organization_id
    JOIN core.party_t AS party_organization ON organization.fk_party_id = party_organization.party_id
    WHERE deal.deal_id != -1
    )
    INSERT INTO mart.deal (
        activity
        ,pipedrive_link
        ,account
        ,customer
        ,title
        ,category
        ,deal_source
        ,deal_source_detail
        ,sale_stage
        ,deal_stage
        ,deal_status
        ,pipeline
        ,sla_priority
        ,usd_value
        ,reason_lost
        ,resulting_state
        ,jira_description
        ,jira_priority
        ,jira_status
        ,jira_summary
        ,contact_full_name
        ,contact_email
        ,contact_phone
        ,contact_country
        ,contact_full_address
        ,deal_country
        ,deal_region
        ,organization_name
        ,organization_country
        ,organization_full_address
        ,deal_owner
        ,partner_identified_by
        ,partner_qualified_by
        ,partner_poc_done_by
        ,partner_closed_by
        ,partner_resold_by
        ,partner_owned_by
        ,partner_supported_by
        ,creation_date
        ,creation_to_now_days
        ,creation_to_pilot_days
        ,creation_to_sale_days
        ,creation_to_deployment_days
        ,activation_date
        ,activation_to_now_days
        ,activation_to_pilot_days
        ,activation_to_sale_days
        ,activation_to_deployment_days
        ,pilot_date
        ,pilot_to_now_days
        ,pilot_to_sale_days
        ,pilot_to_deployment_days
        ,sale_date
        ,sale_to_now_days
        ,sale_to_deployment_days
        ,deployment_date
        ,deployment_to_now_days
        ,closed_date
        ,jira_link
        ,email_count
        ,text_search_vector
        ,text_search_include_emails_and_notes_vector
    )
    SELECT
        'http://METABASE/question/438' || '?' || 'pipedrive_deal_id' || '=' || deal.pipedrive_id AS activity
        ,'https://YOUR_PIPEDRIVE_HOST/deal/' || deal.pipedrive_id AS pipedrive_link
        ,deal_issue.account
        ,deal_issue.customer
        ,deal.title
        ,deal.category
        ,deal.deal_source
        ,deal.deal_source_detail
        ,CASE
            WHEN deal.lost_timestamp != TIMESTAMP_NEVER THEN 'Lost'
            WHEN deal_issue.sales_date != DATE_NEVER OR deal.won_timestamp != TIMESTAMP_NEVER THEN 'Sold'
            WHEN deal_issue.deployment_date != DATE_NEVER THEN 'Deployed'
            WHEN deal_issue.pilot_finished_date != DATE_NEVER THEN 'Pilot Finished'
            WHEN deal_issue.pilot_date != DATE_NEVER THEN 'Pilot'
            WHEN deal_issue.activation_timestamp != TIMESTAMP_NEVER THEN 'Activated'
            ELSE 'Inception'
        END AS sale_stage
        ,deal.stage deal_stage
        ,deal.status AS deal_status
        ,deal.pipeline
        ,deal_issue.sla_priority
        ,deal.usd_value
        ,deal.reason_lost
        ,deal.resulting_state
        ,deal_issue.description AS jira_description
        ,deal_issue.priority jira_priority
        ,deal_issue.status jira_status
        ,deal_issue.summary AS jira_summary
        ,party_contact.full_name AS contact_full_name
        ,main_contact.email_address AS contact_email
        ,main_contact.phone_number AS contact_phone
        ,main_contact.location_country AS contact_country
        ,main_contact.location_full AS contact_full_address
        ,organization.address_country AS deal_country
        ,organization.address_region AS deal_region
        ,party_organization.full_name AS organization_name
        ,organization.address_country AS organization_country
        ,organization.address_full AS organization_full_address
        ,employee_owner.full_name AS deal_owner
        ,deal.partner_identified_by
        ,deal.partner_qualified_by
        ,deal.partner_poc_done_by
        ,deal.partner_closed_by
        ,deal.partner_resold_by
        ,deal.partner_owned_by
        ,deal.partner_supported_by
        ,deal.created_timestamp::DATE AS creation_date
        ,deal_issue.inception_to_pilot_days
        ,deal_issue.inception_to_sales_days
        ,deal_issue.inception_to_deployment_days
        ,deal_issue.inception_to_now_days
        ,deal_issue.activation_timestamp::DATE AS activation_date
        ,CASE WHEN deal_issue.activation_to_now_days = -1 THEN NULL ELSE deal_issue.activation_to_now_days END AS activation_to_now_days
        ,CASE WHEN deal_issue.activation_to_pilot_days = -1 THEN NULL ELSE deal_issue.activation_to_pilot_days END AS activation_to_pilot_days
        ,CASE WHEN deal_issue.activation_to_sales_days = -1 THEN NULL ELSE deal_issue.activation_to_sales_days END AS activation_to_sales_days
        ,CASE WHEN deal_issue.activation_to_deployment_days = -1 THEN NULL ELSE deal_issue.activation_to_deployment_days END AS activation_to_deployment_days
        ,CASE WHEN deal_issue.pilot_date = DATE_NEVER THEN NULL ELSE deal_issue.pilot_date END AS pilot_date
        ,CASE WHEN deal_issue.pilot_to_now_days = -1 THEN NULL ELSE deal_issue.pilot_to_now_days END AS pilot_to_now_days
        ,CASE WHEN deal_issue.pilot_to_sales_days = -1 THEN NULL ELSE deal_issue.pilot_to_sales_days END AS pilot_to_sales_days
        ,CASE WHEN deal_issue.pilot_to_deployment_days = -1 THEN NULL ELSE deal_issue.pilot_to_deployment_days END AS pilot_to_deployment_days
        ,CASE WHEN deal_issue.sales_date = DATE_NEVER THEN NULL ELSE deal_issue.sales_date END AS sale_date
        ,CASE WHEN deal_issue.sales_to_now_days = -1 THEN NULL ELSE deal_issue.sales_to_now_days END AS sales_to_now_days
        ,CASE WHEN deal_issue.sales_to_deployment_days = -1 THEN NULL ELSE deal_issue.sales_to_deployment_days END AS sales_to_deployment_days
        ,CASE WHEN deal_issue.deployment_date = DATE_NEVER THEN NULL ELSE deal_issue.deployment_date END AS deployment_date
        ,CASE WHEN deal_issue.deployment_to_now_days = -1 THEN NULL ELSE deal_issue.deployment_to_now_days END AS deployment_to_now_days
        ,CASE WHEN deal.closed_timestamp = TIMESTAMP_NEVER THEN NULL ELSE deal.closed_timestamp::DATE END AS closed_date
        ,CASE WHEN deal_issue.jira_key = TEXT_NULL THEN TEXT_NULL
            ELSE 'https://JIRA/'::TEXT || deal_issue.jira_key
        END AS jira_link
        ,deal_email_count.email_count
        ,deal_text_search_vector.text_search_vector AS text_search_vector
        ,deal_text_search_include_emails_and_notes_vector.text_search_vector AS text_search_include_emails_and_notes_vector
    FROM core.deal_t AS deal
    JOIN deal_text_search_include_emails_and_notes_vector ON deal_text_search_include_emails_and_notes_vector.deal_id = deal.deal_id
    JOIN deal_text_search_vector ON deal_text_search_vector.deal_id = deal.deal_id
    JOIN deal_email_count ON deal_email_count.deal_id = deal.deal_id
    JOIN core.issue_t AS deal_issue ON deal.fk_issue_id = deal_issue.issue_id
    JOIN core.contact_t AS main_contact ON deal.fk_contact_id = main_contact.contact_id
    JOIN core.party_t AS party_contact ON main_contact.fk_party_id = party_contact.party_id
    JOIN core.organization_t AS organization ON deal.fk_organization_id = organization.organization_id
    JOIN core.party_t AS party_organization ON organization.fk_party_id = party_organization.party_id
    JOIN core.employee_t AS employee_owner ON deal.fk_employee_id_owner = employee_owner.employee_id
    WHERE deal.deal_id != -1;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_deal_activity" id="Procedure_48e4f6d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_deal_activity()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
BEGIN
    WITH
    aggregated_emails AS (
        SELECT
            fk_deal_id
            ,subject
            ,sent_timestamp
            ,string_agg(DISTINCT from_email_address, ', ') AS from_email
            ,string_agg(DISTINCT to_email_address, ', ') AS to_email
            ,string_agg(DISTINCT cc_email_address, ', ') AS cc_email
            ,body_snippet
            ,body_url
            ,pipedrive_mail_message_id
            ,pipedrive_mail_thread_id
            ,read_flag
            ,fk_employee_id
        FROM core.mail_message_t
        WHERE fk_deal_id != - 1
        GROUP BY fk_deal_id
            ,subject
            ,sent_timestamp
            ,body_snippet
            ,body_url
            ,pipedrive_mail_message_id
            ,pipedrive_mail_thread_id
            ,read_flag
            ,fk_employee_id
        )
    INSERT INTO mart.deal_activity (
        source_system_link
        ,source_system
        ,activity_type
        ,activity_detail
        ,new_value
        ,previous_value
        ,activity_timestamp
        ,done_by
        ,from_email
        ,to_email
        ,pipedrive_deal_id
        )
    SELECT
        'https://YOUR_PIPEDRIVE_HOST/deal/'::TEXT || deal.pipedrive_id AS source_system_link
        ,'Pipedrive'::TEXT AS source_system
        ,'Deal Update'::TEXT AS activity_type
        ,change_log.field AS activity_detail
        ,change_log.new_value AS new_value
        ,change_log.old_value AS previous_value
        ,change_log.log_timestamp AS activity_timestamp
        ,employee.full_name AS done_by
        ,TEXT_NULL AS from_email
        ,TEXT_NULL AS to_email
        ,deal.pipedrive_id AS pipedrive_deal_id
    FROM core.deal_change_log_t AS change_log
    JOIN core.deal_t AS deal ON change_log.fk_deal_id = deal.deal_id
    JOIN core.employee_t AS employee ON change_log.fk_employee_id = employee.employee_id
    WHERE deal.deal_id != - 1
    UNION ALL
    SELECT
        'https://YOUR_PIPEDRIVE_HOST/deal/'::TEXT || deal.pipedrive_id AS source_system_link
        ,'Pipedrive'::TEXT AS source_system
        ,'Deal Email'::TEXT AS activity_type
        ,deal_mail_message.body_snippet AS activity_detail
        ,TEXT_NULL AS new_value
        ,TEXT_NULL AS previous_value
        ,deal_mail_message.sent_timestamp AS activity_timestamp
        ,employee.full_name AS done_by
        ,deal_mail_message.from_email
        ,deal_mail_message.to_email
        ,deal.pipedrive_id AS pipedrive_deal_id
    FROM aggregated_emails AS deal_mail_message
    JOIN core.deal_t AS deal ON deal_mail_message.fk_deal_id = deal.deal_id
    JOIN core.employee_t AS employee ON deal_mail_message.fk_employee_id = employee.employee_id
    WHERE deal.deal_id != - 1
    UNION ALL
    SELECT
        'https://YOUR_PIPEDRIVE_HOST/deal/'::TEXT || deal.pipedrive_id AS source_system_link
        ,'Pipedrive'::TEXT AS source_system
        ,'Deal Note'::TEXT AS activity_type
        ,deal_note.content AS activity_detail
        ,TEXT_NULL AS new_value
        ,TEXT_NULL AS previous_value
        ,deal_note.last_modified_timestamp AS activity_timestamp
        ,employee.full_name AS done_by
        ,TEXT_NULL AS from_email
        ,TEXT_NULL AS to_email
        ,deal.pipedrive_id AS pipedrive_deal_id
    FROM core.note_t AS deal_note
    JOIN core.deal_t AS deal ON deal_note.fk_deal_id = deal.deal_id
    JOIN core.employee_t AS employee ON deal_note.fk_employee_id = employee.employee_id
    WHERE deal.deal_id != - 1
    UNION ALL
    SELECT
        'https://YOUR_JIRA_HOST/browse/' || jira_issue.jira_key || '?focusedCommentId=' || jira_comment.issue_comment_key || '&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-' || jira_comment.issue_comment_key AS source_system_link
        ,'JIRA'::TEXT AS source_system
        ,'JIRA Comment'::TEXT AS activity_type
        ,jira_comment.body AS activity_detail
        ,TEXT_NULL AS new_value
        ,TEXT_NULL AS previous_value
        ,jira_comment.last_updated_timestamp AS activity_timestamp
        ,comment_creator.full_name AS done_by
        ,TEXT_NULL AS from_email
        ,TEXT_NULL AS to_email
        ,deal.pipedrive_id AS pipedrive_deal_id
    FROM core.deal_t AS deal
    JOIN core.issue_t AS jira_issue ON deal.fk_issue_id = jira_issue.issue_id
    JOIN core.issue_comment_t AS jira_comment ON jira_comment.fk_issue_id = jira_issue.issue_id
    JOIN core.employee_t AS comment_creator ON comment_creator.employee_id = jira_comment.fk_employee_id_updated_by
    WHERE deal.deal_id != - 1;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_deal_pipedrive_close_date_differs_from_jira_sale_date" id="Procedure_2a99e1e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_deal_pipedrive_close_date_differs_from_jira_sale_date()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
BEGIN
    INSERT INTO mart.deal_pipedrive_close_date_differs_from_jira_sale_date (
        title
        ,pipedrive_link
        ,jira_link
        ,organization_name
        ,contact_full_name
        ,deal_status
        ,jira_status
        ,deal_stage
        ,deal_owner
        ,closed_date
        ,sale_date
        )
    SELECT
        title
        ,pipedrive_link
        ,jira_link
        ,organization_name
        ,contact_full_name
        ,deal_status
        ,jira_status
        ,deal_stage
        ,deal_owner
        ,closed_date
        ,sale_date
    FROM mart.deal
    WHERE closed_date != sale_date;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_deal_reconnecting" id="Procedure_4b5c19c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_deal_reconnecting()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
BEGIN
    WITH
    deal_switched_to_reconnecting AS (
        SELECT
            today_deal.deal_id
            ,today_deal.pipedrive_id
            ,today_deal.title
            ,today_deal.fk_organization_id
            ,today_deal.fk_employee_id_owner
            ,hist_deal.previous_stage
            ,hist_deal.stage
            ,hist_deal.status
            ,hist_deal.last_updated_timestamp AS changed_to_reconnecting_stage_timestamp
            ,rank() OVER (
                PARTITION BY hist_deal.deal_key ORDER BY hist_deal.last_updated_timestamp DESC
                )
        FROM core.deal_t AS today_deal
        JOIN core.deal_ih AS hist_deal ON today_deal.deal_key = hist_deal.deal_key
        WHERE today_deal.stage = 'Reconnecting'
            AND COALESCE(hist_deal.previous_stage, '') != hist_deal.stage
        ORDER BY hist_deal.pipedrive_id
            ,hist_deal.last_updated_timestamp
        )
    ,aggregated_emails AS (
        SELECT
            fk_deal_id
            ,subject
            ,sent_timestamp
            ,string_agg(DISTINCT from_email_address, ', ') AS from_email
            ,string_agg(DISTINCT to_email_address, ', ') AS to_email
            ,string_agg(DISTINCT cc_email_address, ', ') AS cc_email
            ,body_snippet
            ,body_url
            ,pipedrive_mail_message_id
            ,pipedrive_mail_thread_id
            ,read_flag
        FROM core.mail_message_t
        WHERE fk_deal_id != - 1
        GROUP BY fk_deal_id
            ,subject
            ,sent_timestamp
            ,body_snippet
            ,body_url
            ,pipedrive_mail_message_id
            ,pipedrive_mail_thread_id
            ,read_flag
        )
    INSERT INTO mart.deal_reconnecting (
        previous_stage
        ,stage
        ,status
        ,organization
        ,deal_owner
        ,deal_link
        ,changed_to_reconnecting_stage_timestamp
        ,days_in_reconnecting_stage
        ,email_sent_timestamp
        ,days_since_last_reconnecting_email
        ,from_email
        ,to_email
        ,cc_email
        ,email_subject
        ,email_body_snippet
        ,emal_body_url
        ,email_exists
        )
    SELECT
        deal_switched_to_reconnecting.previous_stage
        ,deal_switched_to_reconnecting.stage
        ,deal_switched_to_reconnecting.status
        ,deal_organization_party.full_name AS organziation
        ,deal_owner.full_name AS deal_owner
        ,'https://YOUR_PIPEDRIVEHOST/deal/' || deal_switched_to_reconnecting.pipedrive_id AS deal_link
        ,deal_switched_to_reconnecting.changed_to_reconnecting_stage_timestamp
        ,tf_u_days_diff_between_dates(now()::DATE, deal_switched_to_reconnecting.changed_to_reconnecting_stage_timestamp::DATE) AS days_in_reconnecting_stage
        ,aggregated_emails.sent_timestamp AS email_sent_timestamp
        ,tf_u_days_diff_between_dates(now()::DATE, aggregated_emails.sent_timestamp::DATE) AS days_since_last_reconnecting_email
        ,aggregated_emails.from_email
        ,aggregated_emails.to_email
        ,aggregated_emails.cc_email
        ,aggregated_emails.subject AS email_subject
        ,aggregated_emails.body_snippet AS email_body_snippet
        ,aggregated_emails.body_url AS emal_body_url
        ,CASE 
            WHEN aggregated_emails.subject IS NULL
                THEN 0
            ELSE 1
        END AS email_exists
    FROM deal_switched_to_reconnecting
    JOIN core.employee_t AS deal_owner ON deal_owner.employee_id = deal_switched_to_reconnecting.fk_employee_id_owner
    LEFT JOIN core.organization_t AS deal_organization ON deal_organization.organization_id = deal_switched_to_reconnecting.fk_organization_id
        AND organization_id != - 1
    LEFT JOIN core.party_t AS deal_organization_party ON deal_organization_party.party_id = deal_organization.fk_party_id
    LEFT JOIN aggregated_emails ON deal_switched_to_reconnecting.deal_id = aggregated_emails.fk_deal_id
        AND aggregated_emails.sent_timestamp >= deal_switched_to_reconnecting.changed_to_reconnecting_stage_timestamp
    WHERE rank = 1;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_deal_to_be_closed_soon" id="Procedure_df75c2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_deal_to_be_closed_soon()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
DATE_NEVER DATE := (SELECT date_never FROM core.c_null_replacement_g);
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
TIMESTAMP_NEVER TIMESTAMP WITH TIME ZONE := (SELECT timestamp_never FROM core.c_null_replacement_g);
BEGIN
    INSERT INTO mart.deal_to_be_closed_soon (
        activity
        ,pipedrive_link
        ,account
        ,customer
        ,title
        ,category
        ,deal_source
        ,deal_source_detail
        ,sale_stage
        ,deal_stage
        ,deal_status
        ,pipeline
        ,sla_priority
        ,usd_value
        ,reason_lost
        ,resulting_state
        ,jira_description
        ,jira_priority
        ,jira_status
        ,jira_summary
        ,contact_full_name
        ,contact_email
        ,contact_phone
        ,contact_country
        ,contact_full_address
        ,deal_country
        ,deal_region
        ,organization_name
        ,organization_country
        ,organization_full_address
        ,deal_owner
        ,partner_identified_by
        ,partner_qualified_by
        ,partner_poc_done_by
        ,partner_closed_by
        ,partner_resold_by
        ,partner_owned_by
        ,partner_supported_by
        ,creation_date
        ,creation_to_pilot_days
        ,creation_to_sale_days
        ,creation_to_deployment_days
        ,creation_to_now_days
        ,activation_date
        ,activation_to_now_days
        ,activation_to_pilot_days
        ,activation_to_sale_days
        ,activation_to_deployment_days
        ,pilot_date
        ,pilot_to_now_days
        ,pilot_to_sale_days
        ,pilot_to_deployment_days
        ,sale_date
        ,sale_to_now_days
        ,sale_to_deployment_days
        ,deployment_date
        ,deployment_to_now_days
        ,closed_date
        ,jira_link
    )
    SELECT
        'http://METABASE/question/438' || '?' || 'pipedrive_deal_id' || '=' || deal.pipedrive_id AS activity
        ,'https://PIPEDRIVE/deal/' || deal.pipedrive_id AS pipedrive_link
        ,deal_issue.account AS account
        ,deal_issue.customer AS customer
        ,deal.title
        ,deal.category
        ,deal.deal_source
        ,deal.deal_source_detail
        ,CASE
            WHEN deal.lost_timestamp != TIMESTAMP_NEVER THEN 'Lost'
            WHEN deal_issue.sales_date != DATE_NEVER OR deal.won_timestamp != TIMESTAMP_NEVER THEN 'Sold'
            WHEN deal_issue.deployment_date != DATE_NEVER THEN 'Deployed'
            WHEN deal_issue.pilot_finished_date != DATE_NEVER THEN 'Pilot Finished'
            WHEN deal_issue.pilot_date != DATE_NEVER THEN 'Pilot'
            WHEN deal_issue.activation_timestamp != TIMESTAMP_NEVER THEN 'Activated'
            ELSE 'Inception'
        END AS sale_stage
        ,deal.stage deal_stage
        ,deal.status AS deal_status
        ,deal.pipeline
        ,deal_issue.sla_priority
        ,deal.usd_value
        ,deal.reason_lost
        ,deal.resulting_state
        ,deal_issue.description AS jira_description
        ,deal_issue.priority jira_priority
        ,deal_issue.status jira_status
        ,deal_issue.summary AS jira_summary
        ,party_contact.full_name AS contact_full_name
        ,main_contact.email_address AS contact_email
        ,main_contact.phone_number AS contact_phone
        ,main_contact.location_country AS contact_country
        ,main_contact.location_full AS contact_full_address
        ,deal.country AS deal_country
        ,deal.region AS deal_region
        ,party_organization.full_name AS organization_name
        ,organization.address_country AS organization_country
        ,organization.address_full AS organization_full_address
        ,employee_owner.full_name AS deal_owner
        ,deal.partner_identified_by
        ,deal.partner_qualified_by
        ,deal.partner_poc_done_by
        ,deal.partner_closed_by
        ,deal.partner_resold_by
        ,deal.partner_owned_by
        ,deal.partner_supported_by
        ,deal.created_timestamp::DATE AS creation_date
        ,CASE WHEN deal_issue.inception_to_pilot_days = -1 THEN NULL ELSE deal_issue.inception_to_pilot_days END AS inception_to_pilot_days
        ,CASE WHEN deal_issue.inception_to_sales_days = -1 THEN NULL ELSE deal_issue.inception_to_sales_days END AS inception_to_sales_days
        ,CASE WHEN deal_issue.inception_to_deployment_days = -1 THEN NULL ELSE deal_issue.inception_to_deployment_days END AS inception_to_deployment_days
        ,CASE WHEN deal_issue.inception_to_now_days = -1 THEN NULL ELSE deal_issue.inception_to_now_days END AS inception_to_now_days
        ,deal_issue.activation_timestamp::DATE AS activation_date
        ,CASE WHEN deal_issue.activation_to_now_days = -1 THEN NULL ELSE deal_issue.activation_to_now_days END AS activation_to_now_days
        ,CASE WHEN deal_issue.activation_to_pilot_days = -1 THEN NULL ELSE deal_issue.activation_to_pilot_days END AS activation_to_pilot_days
        ,CASE WHEN deal_issue.activation_to_sales_days = -1 THEN NULL ELSE deal_issue.activation_to_sales_days END AS activation_to_sales_days
        ,CASE WHEN deal_issue.activation_to_deployment_days = -1 THEN NULL ELSE deal_issue.activation_to_deployment_days END AS activation_to_deployment_days
        ,CASE WHEN deal_issue.pilot_date = DATE_NEVER THEN NULL ELSE deal_issue.pilot_date END AS pilot_date
        ,CASE WHEN deal_issue.pilot_to_now_days = -1 THEN NULL ELSE deal_issue.pilot_to_now_days END AS pilot_to_now_days
        ,CASE WHEN deal_issue.pilot_to_sales_days = -1 THEN NULL ELSE deal_issue.pilot_to_sales_days END AS pilot_to_sales_days
        ,CASE WHEN deal_issue.pilot_to_deployment_days = -1 THEN NULL ELSE deal_issue.pilot_to_deployment_days END AS pilot_to_deployment_days
        ,CASE WHEN deal_issue.sales_date = DATE_NEVER THEN NULL ELSE deal_issue.sales_date END AS sale_date
        ,CASE WHEN deal_issue.sales_to_now_days = -1 THEN NULL ELSE deal_issue.sales_to_now_days END AS sales_to_now_days
        ,CASE WHEN deal_issue.sales_to_deployment_days = -1 THEN NULL ELSE deal_issue.sales_to_deployment_days END AS sales_to_deployment_days
        ,CASE WHEN deal_issue.deployment_date = DATE_NEVER THEN NULL ELSE deal_issue.deployment_date END AS deployment_date
        ,CASE WHEN deal_issue.deployment_to_now_days = -1 THEN NULL ELSE deal_issue.deployment_to_now_days END AS deployment_to_now_days
        ,CASE WHEN deal.closed_timestamp = TIMESTAMP_NEVER THEN NULL ELSE deal.closed_timestamp::DATE END AS closed_date
        ,'https://JIRA/browse/'::TEXT || deal_issue.jira_key AS jira_link
    FROM core.deal_t AS deal
    JOIN core.issue_t AS deal_issue ON deal.fk_issue_id = deal_issue.issue_id
    JOIN core.contact_t AS main_contact ON deal.fk_contact_id = main_contact.contact_id
    JOIN core.party_t AS party_contact ON main_contact.fk_party_id = party_contact.party_id
    JOIN core.organization_t AS organization ON deal.fk_organization_id = organization.organization_id
    JOIN core.party_t AS party_organization ON organization.fk_party_id = party_organization.party_id
    JOIN core.employee_t AS employee_owner ON deal.fk_employee_id_owner = employee_owner.employee_id
    WHERE (
            deal_issue.pilot_date != DATE_NEVER
            AND deal.stage in ('Hot','Qualified','Defined','Verified','Selected')
            AND deal_issue.status != 'Terminated'
            )
        OR (
            deal_issue.pilot_date = DATE_NEVER
            AND deal.stage in ('Hot','Qualified','Defined','Verified','Selected')
            AND deal.created_timestamp <= (now() - '1 month'::interval)
            AND deal.partner_owned_by != TEXT_NULL
            AND deal_issue.status != 'Terminated'
    )
    AND deal.deal_id != -1
    AND deal.status = 'open';
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_duplicate_emails_in_contacts" id="Procedure_39a2af1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_duplicate_emails_in_contacts()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
BEGIN
    WITH duplicate_contacts
    AS (
        SELECT
            contact.email_address
            ,unnest(array_agg(contact.contact_id)) AS contact_id
        FROM core.contact_t AS contact
        WHERE contact.email_address != TEXT_NULL
        GROUP BY contact.email_address
        HAVING count(contact.email_address) > 1
        )
    INSERT INTO mart.duplicate_emails_in_contacts (
        email
        ,contact_name
        ,organization_name
        ,pipedrive_link
    )
    SELECT
        duplicate_contacts.email_address
        ,contact_party.full_name AS contact_name
        ,organization_party.full_name AS organization_name
        ,'https://PIPEDRIVE/person/' || contact.pipedrive_id AS pipedrive_link
    FROM duplicate_contacts
    JOIN core.contact_t AS contact ON contact.contact_id = duplicate_contacts.contact_id
    JOIN core.party_t AS contact_party ON contact_party.party_id = contact.fk_party_id
    LEFT JOIN core.organization_t AS organization ON organization.organization_id = contact.fk_organization_id
    LEFT JOIN core.party_t AS organization_party ON organization_party.party_id = organization.fk_party_id;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_hours_logged_per_account" id="Procedure_57aeda2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_hours_logged_per_account()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
NO_ACCOUNT_FLAG TEXT := 'Common';
NO_CUSTOMER_FLAG TEXT := 'Common';
HELP_DESK_PROJECT_KEY TEXT := 'HD';
DEVELOPMENT_PROJECT_KEY TEXT := 'DEV';
PRESALE_PROJECT_KEY TEXT := 'PRS';
SUPPORT_ISSUE_FLAG TEXT := 'Support';
FEATURE_ISSUE_FLAG TEXT := 'Feature';
ACTIVITY_ISSUE_FLAG TEXT := 'Activity';
TASK_ISSUE_FLAG TEXT := 'Task';
BUG_ISSUE_FLAG TEXT := 'Bug';
stack text;
FUNCTION_NAME text;
BEGIN
    WITH
    hd_worklogs AS (
        SELECT
            account
            ,customer
            ,employee.full_name AS employee    
            ,worklog.hours_logged
            ,worklog.work_started_at_timestamp
        FROM core.issue_t AS issue
        JOIN core.project_t AS project ON project.project_id = issue.fk_project_id 
        JOIN core.worklog_t AS worklog ON worklog.fk_issue_id = issue.issue_id
        JOIN core.employee_t AS employee ON employee.employee_id = worklog.fk_employee_id_created_by
        WHERE project.jira_key = HELP_DESK_PROJECT_KEY
    )
    ,prs_worklogs AS (
        SELECT
            issue.account
            ,issue.customer
            ,employee.full_name AS employee    
            ,worklog.hours_logged
            ,worklog.work_started_at_timestamp
        FROM core.issue_t AS issue
        JOIN core.project_t AS project ON project.project_id = issue.fk_project_id 
        JOIN core.worklog_t AS worklog ON worklog.fk_issue_id = issue.issue_id
        JOIN core.employee_t AS employee ON employee.employee_id = worklog.fk_employee_id_created_by
        WHERE project.jira_key = PRESALE_PROJECT_KEY
    )
    ,dev_support_worklogs AS (
        SELECT
            issue.account
            ,issue.customer
            ,employee.full_name AS employee    
            ,worklog.hours_logged
            ,worklog.work_started_at_timestamp
        FROM core.issue_t AS issue
        JOIN core.project_t AS project ON project.project_id = issue.fk_project_id 
        JOIN core.worklog_t AS worklog ON worklog.fk_issue_id = issue.issue_id
        JOIN core.employee_t AS employee ON employee.employee_id = worklog.fk_employee_id_created_by
        WHERE project.jira_key = DEVELOPMENT_PROJECT_KEY
        AND issue.issue_type = SUPPORT_ISSUE_FLAG
    )
    ,dev_other_worklogs AS (
        SELECT
            issue.account
            ,issue.customer
            ,employee.full_name AS employee    
            ,worklog.hours_logged
            ,worklog.work_started_at_timestamp
        FROM core.issue_t AS issue
        JOIN core.project_t AS project ON project.project_id = issue.fk_project_id 
        JOIN core.worklog_t AS worklog ON worklog.fk_issue_id = issue.issue_id
        JOIN core.employee_t AS employee ON employee.employee_id = worklog.fk_employee_id_created_by
        WHERE project.jira_key = DEVELOPMENT_PROJECT_KEY AND issue.account IS NOT NULL
        AND issue.issue_type IN (FEATURE_ISSUE_FLAG, ACTIVITY_ISSUE_FLAG, TASK_ISSUE_FLAG, BUG_ISSUE_FLAG)
    )
    INSERT INTO mart.report_hours_logged_per_account (
        account
        ,customer
        ,employee
        ,hours_logged
        ,work_started_at_timestamp
    ) 
    SELECT
        account
        ,customer
        ,employee
        ,hours_logged
        ,work_started_at_timestamp
    FROM hd_worklogs
    
    UNION
    
    SELECT
        account
        ,customer
        ,employee
        ,hours_logged
        ,work_started_at_timestamp
    FROM dev_support_worklogs
    
    UNION
    
    SELECT
        account
        ,customer
        ,employee
        ,hours_logged
        ,work_started_at_timestamp
    FROM dev_other_worklogs
    UNION 
    
    SELECT
        account
        ,customer
        ,employee
        ,hours_logged
        ,work_started_at_timestamp
    FROM prs_worklogs;
    
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_hours_logged_per_component" id="Procedure_47f5413" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_hours_logged_per_component()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
TEXT_ARRAY_NULL TEXT[] := (SELECT text_array_null FROM core.c_null_replacement_g);
NO_COMPONENT_FLAG TEXT[] := '{Common}';
BUSINESS_INTELLIGENCE_PROJECT_KEY TEXT := 'BI';
HELP_DESK_PROJECT_KEY TEXT := 'HD';
DEVELOPMENT_PROJECT_KEY TEXT := 'DEV';
PRESALE_PROJECT_KEY TEXT := 'PRS';
SUPPORT_ISSUE_FLAG TEXT := 'Support';
FEATURE_ISSUE_FLAG TEXT := 'Feature';
ACTIVITY_ISSUE_FLAG TEXT := 'Activity';
TASK_ISSUE_FLAG TEXT := 'Task';
BUG_ISSUE_FLAG TEXT := 'Bug';
BEGIN
    WITH worklogs AS (
        WITH dev_worklogs AS (
                SELECT
                    CASE WHEN issue.components = TEXT_ARRAY_NULL THEN NO_COMPONENT_FLAG
                        ELSE issue.components
                    END AS components
                    ,project.project_name
                    ,project.jira_key AS project_jira_key
                    ,employee.full_name AS employee
                    ,worklog.hours_logged
                    ,array_length(issue.components, 1) AS number_of_components
                    ,worklog.work_started_at_timestamp
                FROM core.issue_t AS issue
                JOIN core.project_t AS project ON project.project_id = issue.fk_project_id
                JOIN core.worklog_t AS worklog ON worklog.fk_issue_id = issue.issue_id
                JOIN core.employee_t AS employee ON employee.employee_id = worklog.fk_employee_id_created_by
                WHERE issue.issue_type IN (FEATURE_ISSUE_FLAG, ACTIVITY_ISSUE_FLAG, TASK_ISSUE_FLAG, BUG_ISSUE_FLAG)
                    AND project.jira_key = DEVELOPMENT_PROJECT_KEY
            ),bi_worklogs AS (
             SELECT
                    CASE WHEN issue.components = TEXT_ARRAY_NULL THEN NO_COMPONENT_FLAG
                        ELSE issue.components
                    END AS components
                    ,project.project_name
                    ,project.jira_key AS project_jira_key
                    ,employee.full_name AS employee
                    ,worklog.hours_logged
                    ,array_length(issue.components, 1) AS number_of_components
                    ,worklog.work_started_at_timestamp
                FROM core.issue_t AS issue
                JOIN core.project_t AS project ON project.project_id = issue.fk_project_id
                JOIN core.worklog_t AS worklog ON worklog.fk_issue_id = issue.issue_id
                JOIN core.employee_t AS employee ON employee.employee_id = worklog.fk_employee_id_created_by
                WHERE project.jira_key = BUSINESS_INTELLIGENCE_PROJECT_KEY
        ), presale_worklogs AS (
                SELECT
                    CASE WHEN issue.components = TEXT_ARRAY_NULL THEN NO_COMPONENT_FLAG
                        ELSE issue.components
                    END AS components
                    ,project.project_name
                    ,project.jira_key AS project_jira_key
                    ,employee.full_name AS employee
                    ,worklog.hours_logged
                    ,array_length(issue.components, 1) AS number_of_components
                    ,worklog.work_started_at_timestamp
                FROM core.issue_t AS issue
                JOIN core.project_t AS project ON project.project_id = issue.fk_project_id
                JOIN core.worklog_t AS worklog ON worklog.fk_issue_id = issue.issue_id
                JOIN core.employee_t AS employee ON employee.employee_id = worklog.fk_employee_id_created_by
                WHERE project.jira_key = PRESALE_PROJECT_KEY
            )
        SELECT
            unnest(components) AS component
            ,project_jira_key AS project_key
            ,project_name AS project_name
            ,employee AS employee
            ,hours_logged / number_of_components AS hours_logged
            ,work_started_at_timestamp
        FROM dev_worklogs
        UNION ALL
        SELECT
            unnest(components) AS component
            ,project_jira_key AS project_key
            ,project_name AS project_name
            ,employee AS employee
            ,hours_logged / number_of_components AS hours_logged
            ,work_started_at_timestamp
        FROM bi_worklogs
        UNION ALL
        SELECT
            unnest(components) AS component
            ,project_jira_key AS project_key
            ,project_name AS project_name
            ,employee AS employee
            ,hours_logged / number_of_components AS hours_logged
            ,work_started_at_timestamp
        FROM presale_worklogs
    )
    ,releases AS (
        SELECT
            release.release_name
            ,release.release_number
            ,CASE WHEN release.fk_date_id_start_date = -1 THEN NULL ELSE release.start_date END AS start_date
            ,CASE WHEN release.fk_date_id_release_date = -1 THEN NULL ELSE release.release_date END AS release_date
        FROM core.release_t AS release
    )
    INSERT INTO mart.report_hours_logged_per_component (
        component
        ,project_key
        ,project_name
        ,employee
        ,hours_logged
        ,work_started_at_timestamp
        ,release_name
        ,release_number
    )
    SELECT
        worklogs.component
        ,worklogs.project_key
        ,worklogs.project_name
        ,worklogs.employee
        ,worklogs.hours_logged
        ,worklogs.work_started_at_timestamp
        ,releases.release_name
        ,releases.release_number
    FROM worklogs
    LEFT JOIN releases ON worklogs.work_started_at_timestamp >= releases.start_date
        AND worklogs.work_started_at_timestamp < releases.release_date + interval '1 day';
RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_hours_logged_per_issue" id="Procedure_4539b1d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_hours_logged_per_issue()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
BEGIN
    INSERT INTO mart.report_hours_logged_per_issue (
        issue_key
        ,issue_summary
        ,project_key
        ,employee
        ,hours_logged
        ,work_started_at_timestamp
        )
    SELECT
        issue.jira_key AS issue_key
        ,issue.summary AS issue_summary
        ,project.jira_key AS project_key
        ,employee.full_name AS employee
        ,worklog.hours_logged
        ,worklog.work_started_at_timestamp
    FROM core.issue_t AS issue
    JOIN core.worklog_t AS worklog ON worklog.fk_issue_id = issue.issue_id
    JOIN core.employee_t AS employee ON employee.employee_id = worklog.fk_employee_id_created_by
    JOIN core.project_t AS project ON project.project_id = issue.fk_project_id;
    
	RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_jira_account_dates" id="Procedure_4556eaa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_jira_account_dates()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
DEVELOPMENT_PROJECT_KEY TEXT := 'DEV';
SUPPORT_ISSUE_FLAG TEXT := 'Support';
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g);
BEGIN
    INSERT INTO mart.jira_account_dates (
        jira_issue_key
        ,account
        ,customer
        ,summary
        ,issue_status
        ,priority
        ,inception_date
        ,activation_date
        ,pilot_date
        ,sales_date
        ,deployment_date
        ,pilot_date_exists
        ,pilot_finished_date_exists
        ,sales_date_exists
        ,deployment_date_exists
        ,inception_to_first_response_days
        ,inception_to_pilot_days
        ,inception_to_sales_days
        ,inception_to_deployment_days
        ,inception_to_resolution_days
        ,inception_to_now_days
        ,first_response_to_resolution_days
        ,activation_to_pilot_days
        ,activation_to_sales_days
        ,activation_to_deployment_days
        ,activation_to_now_days
        ,pilot_to_pilot_finished_days
        ,pilot_to_sales_days
        ,pilot_to_deployment_days
        ,pilot_to_now_days
        ,pilot_finished_to_sales_days
        ,pilot_finished_to_now_days
        ,sales_to_deployment_days
        ,deployment_to_now_days
        ,sales_to_now_days
        ,hours_logged
        ,deal_source
        ,deal_status
        ,stage
        ,usd_value
        ,industry
        ,partner_identified_by
        ,partner_qualified_by
        ,partner_poc_done_by
        ,partner_closed_by
        ,partner_resold_by
        ,partner_supported_by
    )
    SELECT 
        issue.jira_key AS jira_issue_key
        ,issue.account
        ,issue.customer
        ,issue.summary
        ,issue.status AS issue_status
        ,issue.priority
        ,CASE WHEN issue.fk_date_id_inception_date = -1 THEN NULL ELSE issue.inception_date END AS inception_date
        ,CASE WHEN issue.fk_date_id_activation_date = -1 THEN NULL ELSE issue.activation_timestamp::DATE END AS activation_date
        ,CASE WHEN issue.fk_date_id_pilot_date = -1 THEN NULL ELSE issue.pilot_date END AS pilot_date
        ,CASE WHEN issue.fk_date_id_sales_date = -1 THEN NULL ELSE issue.sales_date END AS sales_date
        ,CASE WHEN issue.fk_date_id_deployment_date = -1 THEN NULL ELSE issue.deployment_date END AS deployment_date
        ,CASE WHEN issue.fk_date_id_pilot_date = -1 THEN 0 ELSE 1 END AS pilot_date_exists
        ,CASE WHEN issue.fk_date_id_pilot_finished_date = -1 THEN 0 ELSE 1 END AS pilot_finished_date_exists
        ,CASE WHEN issue.fk_date_id_sales_date = -1 THEN 0 ELSE 1 END AS sales_date_exists
        ,CASE WHEN issue.fk_date_id_deployment_date = -1 THEN 0 ELSE 1 END AS deployment_date_exists
        
        ,CASE WHEN issue.inception_to_first_response_days   = -1 THEN NULL ELSE issue.inception_to_first_response_days  END AS inception_to_first_response_days
        ,CASE WHEN issue.inception_to_pilot_days            = -1 THEN NULL ELSE issue.inception_to_pilot_days           END AS inception_to_pilot_days
        ,CASE WHEN issue.inception_to_sales_days            = -1 THEN NULL ELSE issue.inception_to_sales_days           END AS inception_to_sales_days
        ,CASE WHEN issue.inception_to_deployment_days       = -1 THEN NULL ELSE issue.inception_to_deployment_days      END AS inception_to_deployment_days
        ,CASE WHEN issue.inception_to_resolution_days       = -1 THEN NULL ELSE issue.inception_to_resolution_days      END AS inception_to_resolution_days
        ,CASE WHEN issue.inception_to_now_days              = -1 THEN NULL ELSE issue.inception_to_now_days             END AS inception_to_now_days
        ,CASE WHEN issue.first_response_to_resolution_days  = -1 THEN NULL ELSE issue.first_response_to_resolution_days END AS first_response_to_resolution_days
        ,CASE WHEN issue.activation_to_pilot_days           = -1 THEN NULL ELSE issue.activation_to_pilot_days          END AS activation_to_pilot_days
        ,CASE WHEN issue.activation_to_sales_days           = -1 THEN NULL ELSE issue.activation_to_sales_days          END AS activation_to_sales_days
        ,CASE WHEN issue.activation_to_deployment_days      = -1 THEN NULL ELSE issue.activation_to_deployment_days     END AS activation_to_deployment_days
        ,CASE WHEN issue.activation_to_now_days             = -1 THEN NULL ELSE issue.activation_to_now_days            END AS activation_to_now_days
        ,CASE WHEN issue.pilot_to_pilot_finished_days       = -1 THEN NULL ELSE issue.pilot_to_pilot_finished_days      END AS pilot_to_pilot_finished_days
        ,CASE WHEN issue.pilot_to_sales_days                = -1 THEN NULL ELSE issue.pilot_to_sales_days               END AS pilot_to_sales_days
        ,CASE WHEN issue.pilot_to_deployment_days           = -1 THEN NULL ELSE issue.pilot_to_deployment_days          END AS pilot_to_deployment_days
        ,CASE WHEN issue.pilot_to_now_days                  = -1 THEN NULL ELSE issue.pilot_to_now_days                 END AS pilot_to_now_days
        ,CASE WHEN issue.pilot_finished_to_sales_days       = -1 THEN NULL ELSE issue.pilot_finished_to_sales_days      END AS pilot_finished_to_sales_days
        ,CASE WHEN issue.pilot_finished_to_now_days         = -1 THEN NULL ELSE issue.pilot_finished_to_now_days        END AS pilot_finished_to_now_days
        ,CASE WHEN issue.sales_to_deployment_days           = -1 THEN NULL ELSE issue.sales_to_deployment_days          END AS sales_to_deployment_days
        ,CASE WHEN issue.sales_to_now_days                  = -1 THEN NULL ELSE issue.sales_to_now_days                 END AS sales_to_now_days
        ,CASE WHEN issue.deployment_to_now_days             = -1 THEN NULL ELSE issue.deployment_to_now_days            END AS deployment_to_now_days
        ,CASE WHEN issue.hours_logged_total                 = -1 THEN 0    ELSE issue.hours_logged_total    END AS hours_logged
        ,COALESCE(deal.deal_source, TEXT_NULL) AS deal_source
        ,COALESCE(deal.status, TEXT_NULL) AS deal_status
        ,COALESCE(deal.stage,TEXT_NULL) AS stage
        ,COALESCE(deal.usd_value, 0) AS usd_value
        ,COALESCE(deal.industry, TEXT_NULL) AS industry
        ,COALESCE(deal.partner_identified_by, TEXT_NULL) AS partner_identified_by
        ,COALESCE(deal.partner_qualified_by, TEXT_NULL) AS partner_qualified_by
        ,COALESCE(deal.partner_poc_done_by, TEXT_NULL) AS partner_poc_done_by
        ,COALESCE(deal.partner_closed_by, TEXT_NULL) AS partner_closed_by
        ,COALESCE(deal.partner_resold_by, TEXT_NULL) AS partner_resold_by
        ,COALESCE(deal.partner_supported_by, TEXT_NULL) AS partner_supported_by
    FROM core.issue_t AS issue
    JOIN core.project_t AS project ON project.project_id = issue.fk_project_id
    LEFT JOIN core.deal_t AS deal ON deal.fk_issue_id = issue.issue_id
    WHERE project.jira_key = DEVELOPMENT_PROJECT_KEY
        AND issue.issue_type = SUPPORT_ISSUE_FLAG
        AND issue.issue_id != -1;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_jira_support_issues_not_linked_with_pipedrive" id="Procedure_3e9a4ca" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_jira_support_issues_not_linked_with_pipedrive()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
ISSUE_TYPE_SUPPORT TEXT := 'Support';
BEGIN
    INSERT INTO mart.jira_support_issues_not_linked_with_pipedrive (
        jira_key
        ,summary
        ,status
        ,account
        ,customer
        ,link_to_issue
        )
    SELECT
        issue.jira_key
        ,issue.summary
        ,issue.status
        ,issue.account
        ,issue.customer
        ,'https://JIRA/browse/' || issue.jira_key AS link_to_issue
    FROM core.issue_t AS issue
    WHERE issue.issue_type = ISSUE_TYPE_SUPPORT
        AND issue.jira_key NOT IN (
            SELECT
                DISTINCT issue.jira_key
            FROM core.deal_t AS deal
            JOIN core.issue_t AS issue ON deal.fk_issue_id = issue.issue_id
            WHERE issue.issue_type = ISSUE_TYPE_SUPPORT
            );
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_mailchimp_campaign_success_rate" id="Procedure_5682da" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_mailchimp_campaign_success_rate()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
BEGIN
    INSERT INTO mart.mailchimp_campaign_success_rate (
        campaign_title
        ,campaign_type
        ,used_timewarp
        ,total_open_to_unique_open_rate
        ,unique_opens_total
        ,opens_total
        ,send_timestamp
        ,sent_to_mailing_list
        ,optional_mailing_list_segment_filter
        ,avg_list_open_rate
        )
    SELECT
        campaign_report.campaign_title
        ,campaign_report.campaign_type
        ,campaign_report.was_timewarp_used AS used_timewarp
        ,campaign_report.total_open_to_unique_open_rate
        ,campaign_report.unique_opens_total
        ,campaign_report.opens_total
        ,campaign_report.send_timestamp
        ,campaign_report.sent_to_mailing_list
        ,campaign_report.sent_to_mailing_list_segment_filter AS optional_mailing_list_segment_filter
        ,list.open_rate AS avg_list_open_rate        
    FROM core.email_campaign_report_t AS campaign_report
    LEFT JOIN core.mailing_list_t AS list ON list.mailing_list_name = sent_to_mailing_list;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_mailchimp_emails_not_in_pipedrive" id="Procedure_54f724" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_mailchimp_emails_not_in_pipedrive()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
BEGIN
    INSERT INTO mart.mailchimp_emails_not_in_pipedrive (
        contact_name
        ,contact_email
        ,mailing_list_name
        ,mailing_list_link
    )
    SELECT
        contact_party.full_name AS contact_name
        ,mailing_list_member.email_address AS contact_email
        ,mailing_list.mailing_list_name
        ,'https://MAILCHIMP/lists/members/?id='::TEXT || mailing_list.mailchimp_id_web_id AS mailing_list_link
    FROM core.mailing_list_member_t AS mailing_list_member
    JOIN core.party_t AS contact_party ON contact_party.party_id = mailing_list_member.fk_party_id     
    JOIN core.mailing_list_t AS mailing_list ON mailing_list.mailing_list_id = mailing_list_member.fk_mailing_list_id
    WHERE mailing_list_member.email_address NOT IN (
        SELECT DISTINCT email_address FROM core.contact_t
    )
    AND mailing_list_member.mailing_list_member_id != -1;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_partner_name_not_recognised" id="Procedure_83c94a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_partner_name_not_recognised()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g); 
BEGIN
    INSERT INTO mart.partner_name_not_recognised (
        deal_title
        ,deal_stage
        ,partner_name
        ,partner_type
        ,pipedrive_link
    )
    -- Partner - Identified By 
    SELECT
        deal.title AS deal_title
        ,deal.stage AS deal_stage
        ,deal.partner_identified_by AS partner_name
        ,'Identified By'::TEXT AS partner_type
        ,'https://PIPEDRIVE/deal/' || deal.pipedrive_id AS pipedrive_link
    FROM core.deal_t AS deal
    WHERE (SELECT CASE
        WHEN position(' - ' IN deal.partner_identified_by) != 0
            THEN SUBSTRING(deal.partner_identified_by FROM 0 FOR position(' - ' IN deal.partner_identified_by))
        ELSE deal.partner_identified_by
    END AS referring_partner) NOT IN (SELECT partner_name FROM core.c_partner_list_t)
    UNION ALL
    -- Partner - Qualified By
    SELECT
        deal.title AS deal_title
        ,deal.stage AS deal_stage
        ,deal.partner_qualified_by AS partner_name
        ,'Qualified By'::TEXT AS partner_type
        ,'https://PIPEDRIVE/deal/' || deal.pipedrive_id AS pipedrive_link
    FROM core.deal_t AS deal
    WHERE (SELECT CASE
        WHEN position(' - ' IN deal.partner_qualified_by) != 0
            THEN SUBSTRING(deal.partner_qualified_by FROM 0 FOR position(' - ' IN deal.partner_qualified_by))
        ELSE deal.partner_qualified_by
    END AS referring_partner) NOT IN (SELECT partner_name FROM core.c_partner_list_t)
    UNION ALL
    -- Partner - Poc Done By
    SELECT
        deal.title AS deal_title
        ,deal.stage AS deal_stage
        ,deal.partner_poc_done_by AS partner_name
        ,'Poc Done By'::TEXT AS partner_type
        ,'https://PIPEDRIVE/deal/' || deal.pipedrive_id AS pipedrive_link
    FROM core.deal_t AS deal
    WHERE (SELECT CASE
        WHEN position(' - ' IN deal.partner_poc_done_by) != 0
            THEN SUBSTRING(deal.partner_poc_done_by FROM 0 FOR position(' - ' IN deal.partner_poc_done_by))
        ELSE deal.partner_poc_done_by
    END AS referring_partner) NOT IN (SELECT partner_name FROM core.c_partner_list_t)
    UNION ALL
    -- Partner - Closed By
    SELECT
        deal.title AS deal_title
        ,deal.stage AS deal_stage
        ,deal.partner_closed_by AS partner_name
        ,'Closed By'::TEXT AS partner_type
        ,'https://PIPEDRIVE/deal/' || deal.pipedrive_id AS pipedrive_link
    FROM core.deal_t AS deal
    WHERE (SELECT CASE
        WHEN position(' - ' IN deal.partner_closed_by) != 0
            THEN SUBSTRING(deal.partner_closed_by FROM 0 FOR position(' - ' IN deal.partner_closed_by))
        ELSE deal.partner_closed_by
    END AS referring_partner) NOT IN (SELECT partner_name FROM core.c_partner_list_t)
    UNION ALL
    -- Partner - Resold By
    SELECT
        deal.title AS deal_title
        ,deal.stage AS deal_stage
        ,deal.partner_resold_by AS partner_name
        ,'Resold By'::TEXT AS partner_type
        ,'https://PIPEDRIVE/deal/' || deal.pipedrive_id AS pipedrive_link
    FROM core.deal_t AS deal
    WHERE (SELECT CASE
        WHEN position(' - ' IN deal.partner_resold_by) != 0
            THEN SUBSTRING(deal.partner_resold_by FROM 0 FOR position(' - ' IN deal.partner_resold_by))
        ELSE deal.partner_resold_by
    END AS referring_partner) NOT IN (SELECT partner_name FROM core.c_partner_list_t)
    UNION ALL
    -- Partner - Owned By
    SELECT
        deal.title AS deal_title
        ,deal.stage AS deal_stage
        ,deal.partner_owned_by AS partner_name
        ,'Owned By'::TEXT AS partner_type
        ,'https://PIPEDRIVE/deal/' || deal.pipedrive_id AS pipedrive_link
    FROM core.deal_t AS deal
    WHERE (SELECT CASE
        WHEN position(' - ' IN deal.partner_owned_by) != 0
            THEN SUBSTRING(deal.partner_owned_by FROM 0 FOR position(' - ' IN deal.partner_owned_by))
        ELSE deal.partner_owned_by
    END AS referring_partner) NOT IN (SELECT partner_name FROM core.c_partner_list_t)
    UNION ALL
    -- Partner - Supported By
    SELECT
        deal.title AS deal_title
        ,deal.stage AS deal_stage
        ,deal.partner_supported_by AS partner_name
        ,'Supported By'::TEXT AS partner_type
        ,'https://PIPEDRIVE/deal/' || deal.pipedrive_id AS pipedrive_link
    FROM core.deal_t AS deal
    WHERE (SELECT CASE
        WHEN position(' - ' IN deal.partner_supported_by) != 0
            THEN SUBSTRING(deal.partner_supported_by FROM 0 FOR position(' - ' IN deal.partner_supported_by))
        ELSE deal.partner_supported_by
    END AS referring_partner) NOT IN (SELECT partner_name FROM core.c_partner_list_t);
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_pipedrive_emails_not_in_mailchimp" id="Procedure_80bfb6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_pipedrive_emails_not_in_mailchimp()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
TEXT_NULL TEXT := (SELECT text_null FROM core.c_null_replacement_g); 
BEGIN
    INSERT INTO mart.pipedrive_emails_not_in_mailchimp (
        contact_name
        ,contact_email
        ,pipedrive_link
        ,contact_owner
    )
    SELECT
        contact_party.full_name
        ,contact.email_address
        ,'https://PIPEDRIVE/person/'::TEXT || contact.pipedrive_id AS pipedrive_link
        ,employee_owner.full_name AS contact_owner
    FROM core.contact_t AS contact
    JOIN core.party_t AS contact_party ON contact_party.party_id = contact.fk_party_id 
    JOIN core.employee_t AS employee_owner ON employee_owner.employee_id = contact.fk_employee_id_owner
    WHERE contact.email_address NOT IN (
        SELECT DISTINCT email_address FROM core.mailing_list_member_t
    )
    AND contact.email_address != TEXT_NULL
    AND contact.contact_id != -1;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_report_uber_transformation" id="Procedure_378d401" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_report_uber_transformation()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
stack text;
FUNCTION_NAME text;
BEGIN
    -------------------------
    -- GET FUNCTION'S NAME --
    -------------------------
    GET DIAGNOSTICS stack = PG_CONTEXT;
    FUNCTION_NAME = substring(stack from 'function (.*?) line')::text;
    --  *** Clear all tables ***
    PERFORM mart.tf_u_clear_mart_tables();
    --  *** Sales ***
    PERFORM mart.tf_r_deal();
    PERFORM mart.tf_r_deal_to_be_closed_soon();
    PERFORM mart.tf_r_deal_activity();
    --  *** Development_And_Support ***
    PERFORM mart.tf_r_jira_account_dates();
    PERFORM mart.tf_r_bugs_per_account();
    PERFORM mart.tf_r_bugs_per_release(); 
    PERFORM mart.tf_r_hours_logged_per_account();
    PERFORM mart.tf_r_hours_logged_per_component();
    PERFORM mart.tf_r_hours_logged_per_issue();
    PERFORM mart.tf_r_bugs_per_component_per_release();	
    PERFORM mart.tf_r_bugs_created_after_affected_version_release();
    PERFORM mart.tf_r_bugs_created_after_fix_version_release();
    --  *** Finance ***
    PERFORM mart.tf_r_sales_report();
    PERFORM mart.tf_r_revenue_per_month_per_sale();
    PERFORM mart.tf_r_sales_report_extended();
    PERFORM mart.tf_r_sales_report_usd_revenue_broken_down_by_time();
    PERFORM mart.tf_r_sales_report_czk_revenue_broken_down_by_time();
    PERFORM mart.tf_r_sales_report_eur_revenue_broken_down_by_time();
    PERFORM mart.tf_r_revenue_by_time_report();
    PERFORM mart.tf_r_revenue_per_customer_by_time();
    PERFORM mart.tf_r_booking_per_revenue_type_per_month();
    PERFORM mart.tf_r_booking_per_revenue_type_per_quarter();
    PERFORM mart.tf_r_booking_per_revenue_type_per_year();
    PERFORM mart.tf_r_booking_by_time_report();
    --  *** Marketing ***
    PERFORM mart.tf_r_deal_reconnecting();
    PERFORM mart.tf_r_mailchimp_campaign_success_rate();
    --  *** Data Quality ***
    PERFORM mart.tf_r_partner_name_not_recognised();
    PERFORM mart.tf_r_duplicate_emails_in_contacts();
    PERFORM mart.tf_r_pipedrive_emails_not_in_mailchimp();
    PERFORM mart.tf_r_mailchimp_emails_not_in_pipedrive();
    PERFORM mart.tf_r_jira_support_issues_not_linked_with_pipedrive();
    PERFORM mart.tf_r_deal_pipedrive_close_date_differs_from_jira_sale_date();
    
    INSERT INTO etl_metadata.uber_transformation_call (
        transformation_name
        ,transformation_call_timestamp
        )
    VALUES (
        FUNCTION_NAME
        ,NOW()
	);
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_revenue_by_time_report" id="Procedure_281055e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_revenue_by_time_report()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
-- TODO: rewrite those variables
YOUR_COMPANY_IN_PIPEDRIVE TEXT := E'\'PIPEDRIVE_ORGANIZATION_XYZ\'';
BEGIN
    WITH
    ------------------------------------
    -- Yearly Revene Per Revenue Type --
    ------------------------------------
    revenue_per_revenue_type_per_year_table AS (
        SELECT *
        FROM crosstab('SELECT
                    revenue_type
                    ,seller
                    ,revenue_year
                    ,sum(usd_revenue) AS usd_revenue
                FROM mart.revenue_per_month_per_sale
                WHERE revenue_year >= 2016
                    AND revenue_year <= 2020
                    AND seller_code = ' || YOUR_COMPANY_IN_PIPEDRIVE || '
                GROUP BY
                    revenue_year
                    ,revenue_type
                    ,seller
                ORDER BY 1'
                ,
                'SELECT year_series
                FROM generate_series(2016, 2020) AS year_series
                ') AS (
                revenue_type TEXT
                ,seller TEXT
                ,"2016 Total" NUMERIC(10, 2)
                ,"2017 Total" NUMERIC(10, 2)
                ,"2018 Total" NUMERIC(10, 2)
                ,"2019 Total" NUMERIC(10, 2)
                ,"2020 Total" NUMERIC(10, 2)
                )
        
    )
    -----------------------
    -- Yearly Revene SUM --
    -----------------------
    ,sum_revenue_per_year_table AS (
        SELECT *
        FROM crosstab('SELECT
                    ''SUM'' AS revenue_type
                    ,seller
                    ,revenue_year
                    ,sum(usd_revenue) AS usd_revenue
                FROM mart.revenue_per_month_per_sale
                WHERE revenue_year >= 2016
                    AND revenue_year <= 2020
                    AND seller_code = ' || YOUR_COMPANY_IN_PIPEDRIVE || '
                GROUP BY
                    revenue_year
                    ,seller
                ORDER BY 1'
                ,
                'SELECT year_series
                FROM generate_series(2016, 2020) AS year_series
                ') AS (
                revenue_type TEXT
                ,seller TEXT
                ,"2016 Total" NUMERIC(10, 2)
                ,"2017 Total" NUMERIC(10, 2)
                ,"2018 Total" NUMERIC(10, 2)
                ,"2019 Total" NUMERIC(10, 2)
                ,"2020 Total" NUMERIC(10, 2)
                )
    )
    ---------------------------------------
    -- Quarterly Revene Per Revenue Type --
    ---------------------------------------
    ,revenue_per_revenue_type_per_quarter_table AS (
        SELECT *
        FROM crosstab('SELECT
                    revenue_type
                    ,seller
                    ,revenue_quarter_year
                    ,sum(usd_revenue) AS usd_revenue
                FROM mart.revenue_per_month_per_sale
                WHERE revenue_year >= 2016
                    AND revenue_year <= 2020
                    AND seller_code = ' || YOUR_COMPANY_IN_PIPEDRIVE || '
                GROUP BY revenue_quarter_year
                    ,revenue_type
                    ,seller
                ORDER BY 1'
                ,
                'SELECT ''Q'' || quartal_series || '' '' || year__series
                FROM generate_series(2016, 2020) year__series
                    ,generate_series(1, 4) quartal_series
                ') AS (
                revenue_type TEXT
                ,seller TEXT
                ,"Q1 2016" NUMERIC(10, 2)
                ,"Q2 2016" NUMERIC(10, 2)
                ,"Q3 2016" NUMERIC(10, 2)
                ,"Q4 2016" NUMERIC(10, 2)
                ,"Q1 2017" NUMERIC(10, 2)
                ,"Q2 2017" NUMERIC(10, 2)
                ,"Q3 2017" NUMERIC(10, 2)
                ,"Q4 2017" NUMERIC(10, 2)
                ,"Q1 2018" NUMERIC(10, 2)
                ,"Q2 2018" NUMERIC(10, 2)
                ,"Q3 2018" NUMERIC(10, 2)
                ,"Q4 2018" NUMERIC(10, 2)
                ,"Q1 2019" NUMERIC(10, 2)
                ,"Q2 2019" NUMERIC(10, 2)
                ,"Q3 2019" NUMERIC(10, 2)
                ,"Q4 2019" NUMERIC(10, 2)
                ,"Q1 2020" NUMERIC(10, 2)
                ,"Q2 2020" NUMERIC(10, 2)
                ,"Q3 2020" NUMERIC(10, 2)
                ,"Q4 2020" NUMERIC(10, 2)
                )
    )
    --------------------------
    -- Quarterly Revene SUM --
    --------------------------
    ,sum_revenue_per_quarter_table AS (
        SELECT *
        FROM crosstab('SELECT
                        ''SUM''
                        ,seller
                        ,revenue_quarter_year
                        ,sum(usd_revenue) AS usd_revenue
                    FROM mart.revenue_per_month_per_sale
                    WHERE revenue_year >= 2016
                        AND revenue_year <= 2020
                        AND seller_code = ' || YOUR_COMPANY_IN_PIPEDRIVE || '
                    GROUP BY
                        revenue_quarter_year
                        ,seller
                    ORDER BY 1'
                    ,
                'SELECT ''Q'' || quartal_series || '' '' || year__series
                FROM generate_series(2016, 2020) year__series
                    ,generate_series(1, 4) quartal_series
                ') AS (
                revenue_type TEXT
                ,seller TEXT
                ,"Q1 2016" NUMERIC(10, 2)
                ,"Q2 2016" NUMERIC(10, 2)
                ,"Q3 2016" NUMERIC(10, 2)
                ,"Q4 2016" NUMERIC(10, 2)
                ,"Q1 2017" NUMERIC(10, 2)
                ,"Q2 2017" NUMERIC(10, 2)
                ,"Q3 2017" NUMERIC(10, 2)
                ,"Q4 2017" NUMERIC(10, 2)
                ,"Q1 2018" NUMERIC(10, 2)
                ,"Q2 2018" NUMERIC(10, 2)
                ,"Q3 2018" NUMERIC(10, 2)
                ,"Q4 2018" NUMERIC(10, 2)
                ,"Q1 2019" NUMERIC(10, 2)
                ,"Q2 2019" NUMERIC(10, 2)
                ,"Q3 2019" NUMERIC(10, 2)
                ,"Q4 2019" NUMERIC(10, 2)
                ,"Q1 2020" NUMERIC(10, 2)
                ,"Q2 2020" NUMERIC(10, 2)
                ,"Q3 2020" NUMERIC(10, 2)
                ,"Q4 2020" NUMERIC(10, 2)
                )
    )
    -------------------------------------
    -- Monthly Revene Per Revenue Type --
    -------------------------------------
    ,revenue_per_revenue_type_per_month_table AS (
        SELECT *
        FROM crosstab('SELECT
                        revenue_type
                        ,seller
                        ,revenue_month_year
                        ,sum(usd_revenue) AS usd_revenue
                    FROM mart.revenue_per_month_per_sale
                    WHERE revenue_year >= 2016
                        AND revenue_year <= 2020
                        AND seller_code = ' || YOUR_COMPANY_IN_PIPEDRIVE || '
                    GROUP BY
                        revenue_month_year
                        ,revenue_type
                        ,seller
                    ORDER BY 1'
                    ,
                    'SELECT to_char(month_series, ''fm00'') || '' '' || year__series
                    FROM generate_series(2016, 2020) AS year__series
                        ,generate_series(1, 12) AS month_series
                    ') AS (
                revenue_type TEXT
                ,seller TEXT
                ,"01 2016" NUMERIC(10, 2)
                ,"02 2016" NUMERIC(10, 2)
                ,"03 2016" NUMERIC(10, 2)
                ,"04 2016" NUMERIC(10, 2)
                ,"05 2016" NUMERIC(10, 2)
                ,"06 2016" NUMERIC(10, 2)
                ,"07 2016" NUMERIC(10, 2)
                ,"08 2016" NUMERIC(10, 2)
                ,"09 2016" NUMERIC(10, 2)
                ,"10 2016" NUMERIC(10, 2)
                ,"11 2016" NUMERIC(10, 2)
                ,"12 2016" NUMERIC(10, 2)
                ,"01 2017" NUMERIC(10, 2)
                ,"02 2017" NUMERIC(10, 2)
                ,"03 2017" NUMERIC(10, 2)
                ,"04 2017" NUMERIC(10, 2)
                ,"05 2017" NUMERIC(10, 2)
                ,"06 2017" NUMERIC(10, 2)
                ,"07 2017" NUMERIC(10, 2)
                ,"08 2017" NUMERIC(10, 2)
                ,"09 2017" NUMERIC(10, 2)
                ,"10 2017" NUMERIC(10, 2)
                ,"11 2017" NUMERIC(10, 2)
                ,"12 2017" NUMERIC(10, 2)
                ,"01 2018" NUMERIC(10, 2)
                ,"02 2018" NUMERIC(10, 2)
                ,"03 2018" NUMERIC(10, 2)
                ,"04 2018" NUMERIC(10, 2)
                ,"05 2018" NUMERIC(10, 2)
                ,"06 2018" NUMERIC(10, 2)
                ,"07 2018" NUMERIC(10, 2)
                ,"08 2018" NUMERIC(10, 2)
                ,"09 2018" NUMERIC(10, 2)
                ,"10 2018" NUMERIC(10, 2)
                ,"11 2018" NUMERIC(10, 2)
                ,"12 2018" NUMERIC(10, 2)
                ,"01 2019" NUMERIC(10, 2)
                ,"02 2019" NUMERIC(10, 2)
                ,"03 2019" NUMERIC(10, 2)
                ,"04 2019" NUMERIC(10, 2)
                ,"05 2019" NUMERIC(10, 2)
                ,"06 2019" NUMERIC(10, 2)
                ,"07 2019" NUMERIC(10, 2)
                ,"08 2019" NUMERIC(10, 2)
                ,"09 2019" NUMERIC(10, 2)
                ,"10 2019" NUMERIC(10, 2)
                ,"11 2019" NUMERIC(10, 2)
                ,"12 2019" NUMERIC(10, 2)
                ,"01 2020" NUMERIC(10, 2)
                ,"02 2020" NUMERIC(10, 2)
                ,"03 2020" NUMERIC(10, 2)
                ,"04 2020" NUMERIC(10, 2)
                ,"05 2020" NUMERIC(10, 2)
                ,"06 2020" NUMERIC(10, 2)
                ,"07 2020" NUMERIC(10, 2)
                ,"08 2020" NUMERIC(10, 2)
                ,"09 2020" NUMERIC(10, 2)
                ,"10 2020" NUMERIC(10, 2)
                ,"11 2020" NUMERIC(10, 2)
                ,"12 2020" NUMERIC(10, 2)
                )
    )
    -----------------------
    -- Monthly Revene SUM --
    -----------------------
    ,sum_revenue_per_month_table AS (
        SELECT *
        FROM crosstab('SELECT
                        ''SUM''
                        ,seller
                        ,revenue_month_year
                        ,sum(usd_revenue) AS usd_revenue
                    FROM mart.revenue_per_month_per_sale
                    WHERE revenue_year >= 2015
                        AND revenue_year <= 2020
                        AND seller_code = ' || YOUR_COMPANY_IN_PIPEDRIVE || '
                    GROUP BY
                        revenue_month_year
                        ,seller
                    ORDER BY 1'
                    ,
                    'SELECT to_char(month_series, ''fm00'') || '' '' || year__series
                    FROM generate_series(2016, 2020) AS year__series
                        ,generate_series(1, 12) AS month_series
                    ') AS (
                revenue_type TEXT
                ,seller TEXT
                ,"01 2016" NUMERIC(10, 2)
                ,"02 2016" NUMERIC(10, 2)
                ,"03 2016" NUMERIC(10, 2)
                ,"04 2016" NUMERIC(10, 2)
                ,"05 2016" NUMERIC(10, 2)
                ,"06 2016" NUMERIC(10, 2)
                ,"07 2016" NUMERIC(10, 2)
                ,"08 2016" NUMERIC(10, 2)
                ,"09 2016" NUMERIC(10, 2)
                ,"10 2016" NUMERIC(10, 2)
                ,"11 2016" NUMERIC(10, 2)
                ,"12 2016" NUMERIC(10, 2)
                ,"01 2017" NUMERIC(10, 2)
                ,"02 2017" NUMERIC(10, 2)
                ,"03 2017" NUMERIC(10, 2)
                ,"04 2017" NUMERIC(10, 2)
                ,"05 2017" NUMERIC(10, 2)
                ,"06 2017" NUMERIC(10, 2)
                ,"07 2017" NUMERIC(10, 2)
                ,"08 2017" NUMERIC(10, 2)
                ,"09 2017" NUMERIC(10, 2)
                ,"10 2017" NUMERIC(10, 2)
                ,"11 2017" NUMERIC(10, 2)
                ,"12 2017" NUMERIC(10, 2)
                ,"01 2018" NUMERIC(10, 2)
                ,"02 2018" NUMERIC(10, 2)
                ,"03 2018" NUMERIC(10, 2)
                ,"04 2018" NUMERIC(10, 2)
                ,"05 2018" NUMERIC(10, 2)
                ,"06 2018" NUMERIC(10, 2)
                ,"07 2018" NUMERIC(10, 2)
                ,"08 2018" NUMERIC(10, 2)
                ,"09 2018" NUMERIC(10, 2)
                ,"10 2018" NUMERIC(10, 2)
                ,"11 2018" NUMERIC(10, 2)
                ,"12 2018" NUMERIC(10, 2)
                ,"01 2019" NUMERIC(10, 2)
                ,"02 2019" NUMERIC(10, 2)
                ,"03 2019" NUMERIC(10, 2)
                ,"04 2019" NUMERIC(10, 2)
                ,"05 2019" NUMERIC(10, 2)
                ,"06 2019" NUMERIC(10, 2)
                ,"07 2019" NUMERIC(10, 2)
                ,"08 2019" NUMERIC(10, 2)
                ,"09 2019" NUMERIC(10, 2)
                ,"10 2019" NUMERIC(10, 2)
                ,"11 2019" NUMERIC(10, 2)
                ,"12 2019" NUMERIC(10, 2)
                ,"01 2020" NUMERIC(10, 2)
                ,"02 2020" NUMERIC(10, 2)
                ,"03 2020" NUMERIC(10, 2)
                ,"04 2020" NUMERIC(10, 2)
                ,"05 2020" NUMERIC(10, 2)
                ,"06 2020" NUMERIC(10, 2)
                ,"07 2020" NUMERIC(10, 2)
                ,"08 2020" NUMERIC(10, 2)
                ,"09 2020" NUMERIC(10, 2)
                ,"10 2020" NUMERIC(10, 2)
                ,"11 2020" NUMERIC(10, 2)
                ,"12 2020" NUMERIC(10, 2)
                )
    )
    INSERT INTO mart.revenue_by_time_report (
        revenue_type
        ,seller
        ,"01 2016"
        ,"02 2016"
        ,"03 2016"
        ,"Q1 2016"
        ,"04 2016"
        ,"05 2016"
        ,"06 2016"
        ,"Q2 2016"
        ,"07 2016"
        ,"08 2016"
        ,"09 2016"
        ,"Q3 2016"
        ,"10 2016"
        ,"11 2016"
        ,"12 2016"
        ,"Q4 2016"
        ,"2016 Total"
        ,"01 2017"
        ,"02 2017"
        ,"03 2017"
        ,"Q1 2017"
        ,"04 2017"
        ,"05 2017"
        ,"06 2017"
        ,"Q2 2017"
        ,"07 2017"
        ,"08 2017"
        ,"09 2017"
        ,"Q3 2017"
        ,"10 2017"
        ,"11 2017"
        ,"12 2017"
        ,"Q4 2017"
        ,"2017 Total"
        ,"01 2018"
        ,"02 2018"
        ,"03 2018"
        ,"Q1 2018"
        ,"04 2018"
        ,"05 2018"
        ,"06 2018"
        ,"Q2 2018"
        ,"07 2018"
        ,"08 2018"
        ,"09 2018"
        ,"Q3 2018"
        ,"10 2018"
        ,"11 2018"
        ,"12 2018"
        ,"Q4 2018"
        ,"2018 Total"
        ,"01 2019"
        ,"02 2019"
        ,"03 2019"
        ,"Q1 2019"
        ,"04 2019"
        ,"05 2019"
        ,"06 2019"
        ,"Q2 2019"
        ,"07 2019"
        ,"08 2019"
        ,"09 2019"
        ,"Q3 2019"
        ,"10 2019"
        ,"11 2019"
        ,"12 2019"
        ,"Q4 2019"
        ,"2019 Total"
        ,"01 2020"
        ,"02 2020"
        ,"03 2020"
        ,"Q1 2020"
        ,"04 2020"
        ,"05 2020"
        ,"06 2020"
        ,"Q2 2020"
        ,"07 2020"
        ,"08 2020"
        ,"09 2020"
        ,"Q3 2020"
        ,"10 2020"
        ,"11 2020"
        ,"12 2020"
        ,"Q4 2020"
        ,"2020 Total"
        )
    SELECT
        revenue_type
        ,seller
        ,COALESCE("01 2016", 0)      AS "01 2016"
        ,COALESCE("02 2016", 0)      AS "02 2016"
        ,COALESCE("03 2016", 0)      AS "03 2016"
        ,COALESCE("Q1 2016", 0)      AS "Q1 2016"
        ,COALESCE("04 2016", 0)      AS "04 2016"
        ,COALESCE("05 2016", 0)      AS "05 2016"
        ,COALESCE("06 2016", 0)      AS "06 2016"
        ,COALESCE("Q2 2016", 0)      AS "Q2 2016"
        ,COALESCE("07 2016", 0)      AS "07 2016"
        ,COALESCE("08 2016", 0)      AS "08 2016"
        ,COALESCE("09 2016", 0)      AS "09 2016"
        ,COALESCE("Q3 2016", 0)      AS "Q3 2016"
        ,COALESCE("10 2016", 0)      AS "10 2016"
        ,COALESCE("11 2016", 0)      AS "11 2016"
        ,COALESCE("12 2016", 0)      AS "12 2016"
        ,COALESCE("Q4 2016", 0)      AS "Q4 2016"
        ,COALESCE("2016 Total", 0)   AS "2016 Total"
        ,COALESCE("01 2017", 0)      AS "01 2017"
        ,COALESCE("02 2017", 0)      AS "02 2017"
        ,COALESCE("03 2017", 0)      AS "03 2017"
        ,COALESCE("Q1 2017", 0)      AS "Q1 2017"
        ,COALESCE("04 2017", 0)      AS "04 2017"
        ,COALESCE("05 2017", 0)      AS "05 2017"
        ,COALESCE("06 2017", 0)      AS "06 2017"
        ,COALESCE("Q2 2017", 0)      AS "Q2 2017"
        ,COALESCE("07 2017", 0)      AS "07 2017"
        ,COALESCE("08 2017", 0)      AS "08 2017"
        ,COALESCE("09 2017", 0)      AS "09 2017"
        ,COALESCE("Q3 2017", 0)      AS "Q3 2017"
        ,COALESCE("10 2017", 0)      AS "10 2017"
        ,COALESCE("11 2017", 0)      AS "11 2017"
        ,COALESCE("12 2017", 0)      AS "12 2017"
        ,COALESCE("Q4 2017", 0)      AS "Q4 2017"
        ,COALESCE("2017 Total", 0)   AS "2017 Total"
        ,COALESCE("01 2018", 0)      AS "01 2018"
        ,COALESCE("02 2018", 0)      AS "02 2018"
        ,COALESCE("03 2018", 0)      AS "03 2018"
        ,COALESCE("Q1 2018", 0)      AS "Q1 2018"
        ,COALESCE("04 2018", 0)      AS "04 2018"
        ,COALESCE("05 2018", 0)      AS "05 2018"
        ,COALESCE("06 2018", 0)      AS "06 2018"
        ,COALESCE("Q2 2018", 0)      AS "Q2 2018"
        ,COALESCE("07 2018", 0)      AS "07 2018"
        ,COALESCE("08 2018", 0)      AS "08 2018"
        ,COALESCE("09 2018", 0)      AS "09 2018"
        ,COALESCE("Q3 2018", 0)      AS "Q3 2018"
        ,COALESCE("10 2018", 0)      AS "10 2018"
        ,COALESCE("11 2018", 0)      AS "11 2018"
        ,COALESCE("12 2018", 0)      AS "12 2018"
        ,COALESCE("Q4 2018", 0)      AS "Q4 2018"
        ,COALESCE("2018 Total", 0)   AS "2018 Total"
        ,COALESCE("01 2019", 0)      AS "01 2019"
        ,COALESCE("02 2019", 0)      AS "02 2019"
        ,COALESCE("03 2019", 0)      AS "03 2019"
        ,COALESCE("Q1 2019", 0)      AS "Q1 2019"
        ,COALESCE("04 2019", 0)      AS "04 2019"
        ,COALESCE("05 2019", 0)      AS "05 2019"
        ,COALESCE("06 2019", 0)      AS "06 2019"
        ,COALESCE("Q2 2019", 0)      AS "Q2 2019"
        ,COALESCE("07 2019", 0)      AS "07 2019"
        ,COALESCE("08 2019", 0)      AS "08 2019"
        ,COALESCE("09 2019", 0)      AS "09 2019"
        ,COALESCE("Q3 2019", 0)      AS "Q3 2019"
        ,COALESCE("10 2019", 0)      AS "10 2019"
        ,COALESCE("11 2019", 0)      AS "11 2019"
        ,COALESCE("12 2019", 0)      AS "12 2019"
        ,COALESCE("Q4 2019", 0)      AS "Q4 2019"
        ,COALESCE("2019 Total", 0)   AS "2019 Total"
        ,COALESCE("01 2020", 0)      AS "01 2020"
        ,COALESCE("02 2020", 0)      AS "02 2020"
        ,COALESCE("03 2020", 0)      AS "03 2020"
        ,COALESCE("Q1 2020", 0)      AS "Q1 2020"
        ,COALESCE("04 2020", 0)      AS "04 2020"
        ,COALESCE("05 2020", 0)      AS "05 2020"
        ,COALESCE("06 2020", 0)      AS "06 2020"
        ,COALESCE("Q2 2020", 0)      AS "Q2 2020"
        ,COALESCE("07 2020", 0)      AS "07 2020"
        ,COALESCE("08 2020", 0)      AS "08 2020"
        ,COALESCE("09 2020", 0)      AS "09 2020"
        ,COALESCE("Q3 2020", 0)      AS "Q3 2020"
        ,COALESCE("10 2020", 0)      AS "10 2020"
        ,COALESCE("11 2020", 0)      AS "11 2020"
        ,COALESCE("12 2020", 0)      AS "12 2020"
        ,COALESCE("Q4 2020", 0)      AS "Q4 2020"
        ,COALESCE("2020 Total", 0)   AS "2020 Total"
        FROM (
        SELECT
            revenue_per_revenue_type_per_year_table.revenue_type
            ,revenue_per_revenue_type_per_year_table.seller
            ,"01 2016"
            ,"02 2016"
            ,"03 2016"
            ,"Q1 2016"
            ,"04 2016"
            ,"05 2016"
            ,"06 2016"
            ,"Q2 2016"
            ,"07 2016"
            ,"08 2016"
            ,"09 2016"
            ,"Q3 2016"
            ,"10 2016"
            ,"11 2016"
            ,"12 2016"
            ,"Q4 2016"
            ,"2016 Total"
            ,"01 2017"
            ,"02 2017"
            ,"03 2017"
            ,"Q1 2017"
            ,"04 2017"
            ,"05 2017"
            ,"06 2017"
            ,"Q2 2017"
            ,"07 2017"
            ,"08 2017"
            ,"09 2017"
            ,"Q3 2017"
            ,"10 2017"
            ,"11 2017"
            ,"12 2017"
            ,"Q4 2017"
            ,"2017 Total"
            ,"01 2018"
            ,"02 2018"
            ,"03 2018"
            ,"Q1 2018"
            ,"04 2018"
            ,"05 2018"
            ,"06 2018"
            ,"Q2 2018"
            ,"07 2018"
            ,"08 2018"
            ,"09 2018"
            ,"Q3 2018"
            ,"10 2018"
            ,"11 2018"
            ,"12 2018"
            ,"Q4 2018"
            ,"2018 Total"
            ,"01 2019"
            ,"02 2019"
            ,"03 2019"
            ,"Q1 2019"
            ,"04 2019"
            ,"05 2019"
            ,"06 2019"
            ,"Q2 2019"
            ,"07 2019"
            ,"08 2019"
            ,"09 2019"
            ,"Q3 2019"
            ,"10 2019"
            ,"11 2019"
            ,"12 2019"
            ,"Q4 2019"
            ,"2019 Total"
            ,"01 2020"
            ,"02 2020"
            ,"03 2020"
            ,"Q1 2020"
            ,"04 2020"
            ,"05 2020"
            ,"06 2020"
            ,"Q2 2020"
            ,"07 2020"
            ,"08 2020"
            ,"09 2020"
            ,"Q3 2020"
            ,"10 2020"
            ,"11 2020"
            ,"12 2020"
            ,"Q4 2020"
            ,"2020 Total"
        FROM revenue_per_revenue_type_per_year_table
        JOIN revenue_per_revenue_type_per_quarter_table ON revenue_per_revenue_type_per_quarter_table.revenue_type = revenue_per_revenue_type_per_year_table.revenue_type
        AND revenue_per_revenue_type_per_quarter_table.seller = revenue_per_revenue_type_per_year_table.seller
        JOIN revenue_per_revenue_type_per_month_table ON revenue_per_revenue_type_per_month_table.revenue_type = revenue_per_revenue_type_per_year_table.revenue_type
        AND revenue_per_revenue_type_per_month_table.seller = revenue_per_revenue_type_per_year_table.seller
        UNION ALL
        SELECT
            sum_revenue_per_year_table.revenue_type
            ,sum_revenue_per_year_table.seller
            ,"01 2016"
            ,"02 2016"
            ,"03 2016"
            ,"Q1 2016"
            ,"04 2016"
            ,"05 2016"
            ,"06 2016"
            ,"Q2 2016"
            ,"07 2016"
            ,"08 2016"
            ,"09 2016"
            ,"Q3 2016"
            ,"10 2016"
            ,"11 2016"
            ,"12 2016"
            ,"Q4 2016"
            ,"2016 Total"
            ,"01 2017"
            ,"02 2017"
            ,"03 2017"
            ,"Q1 2017"
            ,"04 2017"
            ,"05 2017"
            ,"06 2017"
            ,"Q2 2017"
            ,"07 2017"
            ,"08 2017"
            ,"09 2017"
            ,"Q3 2017"
            ,"10 2017"
            ,"11 2017"
            ,"12 2017"
            ,"Q4 2017"
            ,"2017 Total"
            ,"01 2018"
            ,"02 2018"
            ,"03 2018"
            ,"Q1 2018"
            ,"04 2018"
            ,"05 2018"
            ,"06 2018"
            ,"Q2 2018"
            ,"07 2018"
            ,"08 2018"
            ,"09 2018"
            ,"Q3 2018"
            ,"10 2018"
            ,"11 2018"
            ,"12 2018"
            ,"Q4 2018"
            ,"2018 Total"
            ,"01 2019"
            ,"02 2019"
            ,"03 2019"
            ,"Q1 2019"
            ,"04 2019"
            ,"05 2019"
            ,"06 2019"
            ,"Q2 2019"
            ,"07 2019"
            ,"08 2019"
            ,"09 2019"
            ,"Q3 2019"
            ,"10 2019"
            ,"11 2019"
            ,"12 2019"
            ,"Q4 2019"
            ,"2019 Total"
            ,"01 2020"
            ,"02 2020"
            ,"03 2020"
            ,"Q1 2020"
            ,"04 2020"
            ,"05 2020"
            ,"06 2020"
            ,"Q2 2020"
            ,"07 2020"
            ,"08 2020"
            ,"09 2020"
            ,"Q3 2020"
            ,"10 2020"
            ,"11 2020"
            ,"12 2020"
            ,"Q4 2020"
            ,"2020 Total"
        FROM sum_revenue_per_year_table
        JOIN sum_revenue_per_quarter_table ON sum_revenue_per_quarter_table.revenue_type = sum_revenue_per_year_table.revenue_type
            AND sum_revenue_per_quarter_table.seller = sum_revenue_per_year_table.seller
        JOIN sum_revenue_per_month_table ON sum_revenue_per_month_table.revenue_type = sum_revenue_per_quarter_table.revenue_type
            AND sum_revenue_per_month_table.seller = sum_revenue_per_quarter_table.seller
        ) AS foo
    ORDER BY array_position(array ['Licence','Subscription','Support','Services','Other'], revenue_type);
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_revenue_per_customer_by_time" id="Procedure_41b4627" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_revenue_per_customer_by_time()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
BEGIN
    INSERT INTO mart.revenue_per_customer_by_time (
        customer
        ,"01 2016"
        ,"02 2016"
        ,"03 2016"
        ,"Q1 2016"
        ,"04 2016"
        ,"05 2016"
        ,"06 2016"
        ,"Q2 2016"
        ,"07 2016"
        ,"08 2016"
        ,"09 2016"
        ,"Q3 2016"
        ,"10 2016"
        ,"11 2016"
        ,"12 2016"
        ,"Q4 2016"
        ,"2016 Total"
        ,"01 2017"
        ,"02 2017"
        ,"03 2017"
        ,"Q1 2017"
        ,"04 2017"
        ,"05 2017"
        ,"06 2017"
        ,"Q2 2017"
        ,"07 2017"
        ,"08 2017"
        ,"09 2017"
        ,"Q3 2017"
        ,"10 2017"
        ,"11 2017"
        ,"12 2017"
        ,"Q4 2017"
        ,"2017 Total"
        ,"01 2018"
        ,"02 2018"
        ,"03 2018"
        ,"Q1 2018"
        ,"04 2018"
        ,"05 2018"
        ,"06 2018"
        ,"Q2 2018"
        ,"07 2018"
        ,"08 2018"
        ,"09 2018"
        ,"Q3 2018"
        ,"10 2018"
        ,"11 2018"
        ,"12 2018"
        ,"Q4 2018"
        ,"2018 Total"
        ,"01 2019"
        ,"02 2019"
        ,"03 2019"
        ,"Q1 2019"
        ,"04 2019"
        ,"05 2019"
        ,"06 2019"
        ,"Q2 2019"
        ,"07 2019"
        ,"08 2019"
        ,"09 2019"
        ,"Q3 2019"
        ,"10 2019"
        ,"11 2019"
        ,"12 2019"
        ,"Q4 2019"
        ,"2019 Total"
        ,"01 2020"
        ,"02 2020"
        ,"03 2020"
        ,"Q1 2020"
        ,"04 2020"
        ,"05 2020"
        ,"06 2020"
        ,"Q2 2020"
        ,"07 2020"
        ,"08 2020"
        ,"09 2020"
        ,"Q3 2020"
        ,"10 2020"
        ,"11 2020"
        ,"12 2020"
        ,"Q4 2020"
        ,"2020 Total"
        ,"Total Revenue"
    )
    SELECT
        customer
        ,sum("01 2016") AS "01 2016"
        ,sum("02 2016") AS "02 2016"
        ,sum("03 2016") AS "03 2016"
        ,sum("Q1 2016") AS "Q1 2016"
        ,sum("04 2016") AS "04 2016"
        ,sum("05 2016") AS "05 2016"
        ,sum("06 2016") AS "06 2016"
        ,sum("Q2 2016") AS "Q2 2016"
        ,sum("07 2016") AS "07 2016"
        ,sum("08 2016") AS "08 2016"
        ,sum("09 2016") AS "09 2016"
        ,sum("Q3 2016") AS "Q3 2016"
        ,sum("10 2016") AS "10 2016"
        ,sum("11 2016") AS "11 2016"
        ,sum("12 2016") AS "12 2016"
        ,sum("Q4 2016") AS "Q4 2016"
        ,sum("2016 Total") AS "2016 Total"
        ,sum("01 2017") AS "01 2017"
        ,sum("02 2017") AS "02 2017"
        ,sum("03 2017") AS "03 2017"
        ,sum("Q1 2017") AS "Q1 2017"
        ,sum("04 2017") AS "04 2017"
        ,sum("05 2017") AS "05 2017"
        ,sum("06 2017") AS "06 2017"
        ,sum("Q2 2017") AS "Q2 2017"
        ,sum("07 2017") AS "07 2017"
        ,sum("08 2017") AS "08 2017"
        ,sum("Q3 2017") AS "Q3 2017"
        ,sum("09 2017") AS "09 2017"
        ,sum("10 2017") AS "10 2017"
        ,sum("11 2017") AS "11 2017"
        ,sum("12 2017") AS "12 2017"
        ,sum("Q4 2017") AS "Q4 2017"
        ,sum("2017 Total") AS "2017 Total"
        ,sum("01 2018") AS "01 2018"
        ,sum("02 2018") AS "02 2018"
        ,sum("03 2018") AS "03 2018"
        ,sum("Q1 2018") AS "Q1 2018"
        ,sum("04 2018") AS "04 2018"
        ,sum("05 2018") AS "05 2018"
        ,sum("06 2018") AS "06 2018"
        ,sum("Q2 2018") AS "Q2 2018"
        ,sum("07 2018") AS "07 2018"
        ,sum("08 2018") AS "08 2018"
        ,sum("09 2018") AS "09 2018"
        ,sum("Q3 2018") AS "Q3 2018"
        ,sum("10 2018") AS "10 2018"
        ,sum("11 2018") AS "11 2018"
        ,sum("12 2018") AS "12 2018"
        ,sum("Q4 2018") AS "Q4 2018"
        ,sum("2018 Total" ) AS "2018 Total"
        ,sum("01 2019") AS "01 2019"
        ,sum("02 2019") AS "02 2019"
        ,sum("03 2019") AS "03 2019"
        ,sum("Q1 2019") AS "Q1 2019"
        ,sum("04 2019") AS "04 2019"
        ,sum("05 2019") AS "05 2019"
        ,sum("06 2019") AS "06 2019"
        ,sum("Q2 2019") AS "Q2 2019"
        ,sum("07 2019") AS "07 2019"
        ,sum("08 2019") AS "08 2019"
        ,sum("09 2019") AS "09 2019"
        ,sum("Q3 2019") AS "Q3 2019"
        ,sum("10 2019") AS "10 2019"
        ,sum("11 2019") AS "11 2019"
        ,sum("12 2019") AS "12 2019"
        ,sum("Q4 2019") AS "Q4 2019"
        ,sum("2019 Total" ) AS "2019 Total"
        ,sum("01 2020") AS "01 2020"
        ,sum("02 2020") AS "02 2020"
        ,sum("03 2020") AS "03 2020"
        ,sum("Q1 2020") AS "Q1 2020"
        ,sum("04 2020") AS "04 2020"
        ,sum("05 2020") AS "05 2020"
        ,sum("06 2020") AS "06 2020"
        ,sum("Q2 2020") AS "Q2 2020"
        ,sum("07 2020") AS "07 2020"
        ,sum("08 2020") AS "08 2020"
        ,sum("09 2020") AS "09 2020"
        ,sum("Q3 2020") AS "Q3 2020"
        ,sum("10 2020") AS "10 2020"
        ,sum("11 2020") AS "11 2020"
        ,sum("12 2020") AS "12 2020"
        ,sum("Q4 2020") AS "Q4 2020"
        ,sum("2020 Total" ) AS "2020 Total"
        ,SUM(usd_amount) AS "Total Revenue"
    FROM mart.sales_report_extended
    WHERE customer IS NOT NULL
    GROUP BY customer;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_revenue_per_month_per_sale" id="Procedure_1a7af05" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_revenue_per_month_per_sale()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
REVENUE_TYPE_INTERCOMPANY TEXT := 'Intercompany';
DATE_ID_FORMAT TEXT := 'YYYYMMDD';
BEGIN
    WITH
    series_base_dates AS (
        SELECT
            series
        FROM generate_series('2012-01-01'::DATE, '2050-12-31'::DATE, '1 months') AS series
        )
    ,formated_series AS (
        SELECT
            series::DATE AS date_series_date
            ,extract('month' FROM series)::INTEGER AS date_series_month
            ,extract('quarter' FROM series)::INTEGER AS date_series_quarter
            ,extract('year' FROM series)::INTEGER AS date_series_year
            ,revenue_type_name AS revenue_type
        FROM series_base_dates
            ,core.c_revenue_type_t
        WHERE revenue_type_name != REVENUE_TYPE_INTERCOMPANY
        )
    ,base_report AS (
        -- revenue_start_day_01 And revenue_end_day_01 simplfy the process of calculating number of months between revenue_start and revenue_end dates.
        -- revenue_start_day_01 And revenue_end_day_01 are dates with the same year and month as their prents but with the day is the first day of the month (1.)
        SELECT
            sale.sale_key
            ,revenue_start_date
            ,revenue_end_date
            ,TO_DATE(SUBSTRING(sale.fk_date_id_revenue_start::TEXT FROM 1 FOR 6) || '01', DATE_ID_FORMAT) AS revenue_start_day_01
            ,TO_DATE(SUBSTRING(sale.fk_date_id_revenue_end::TEXT FROM 1 FOR 6) || '01', DATE_ID_FORMAT) + interval '1 month' AS revenue_end_day_01
            ,generate_series(TO_DATE(SUBSTRING(sale.fk_date_id_revenue_start::TEXT FROM 1 FOR 6) || '01', DATE_ID_FORMAT), TO_DATE(SUBSTRING(sale.fk_date_id_revenue_end::TEXT FROM 1 FOR 6) || '01', DATE_ID_FORMAT), interval '1 month')::DATE AS date_series
            ,CASE 
                WHEN SUBSTRING(sale.fk_date_id_revenue_start::TEXT FROM 7 FOR 2) = '01'
                    AND SUBSTRING(sale.fk_date_id_revenue_end::TEXT FROM 7 FOR 2)::INTEGER = (
                        SELECT extract(day FROM TO_DATE(SUBSTRING(sale.fk_date_id_revenue_end::TEXT FROM 1 FOR 6) || '01', DATE_ID_FORMAT) + '1 month'::interval - '1 day'::interval)
                        )::INTEGER
                    THEN TRUE
                ELSE FALSE
            END AS is_end_date_day_the_last_day_in_month
            ,sale.usd_amount
            ,sale.czk_amount
            ,sale.eur_amount
            ,local_currency.alphabetical_code AS local_currency_code
            ,sale.local_currency_amount
        FROM core.sale_t AS sale
        JOIN core.c_revenue_type_t AS revenue_type ON revenue_type.revenue_type_id = sale.fk_revenue_type_id
        JOIN core.c_currency_g AS local_currency ON local_currency.currency_id = sale.fk_currency_id_local_currency
        WHERE sale.fk_date_id_revenue_end != - 1
            AND revenue_type.revenue_type_name != REVENUE_TYPE_INTERCOMPANY
            AND sale.sale_id != -1
        )
    ,start_and_end_days_info AS (
        SELECT
            base_report.sale_key
            ,base_report.date_series
            ,base_report.usd_amount
            ,base_report.czk_amount
            ,base_report.eur_amount
            ,base_report.local_currency_code
            ,base_report.local_currency_amount
            ,EXTRACT(month FROM age(base_report.revenue_end_day_01, base_report.revenue_start_day_01))::INT + 12 * extract(year FROM age(base_report.revenue_end_day_01, base_report.revenue_start_day_01))::INT AS months
            ,EXTRACT(day FROM (DATE_TRUNC('month', base_report.revenue_start_date) + INTERVAL '1 MONTH') - base_report.revenue_start_date)::INT AS days_until_end_of_month
            ,EXTRACT(day FROM (base_report.revenue_end_date))::INT AS days_from_month_start
            ,base_report.is_end_date_day_the_last_day_in_month
            ,rank() OVER (
                PARTITION BY base_report.sale_key ORDER BY date_series
                ) AS rank
        FROM base_report
        )
    ,revenue_per_sale_per_month AS (
        SELECT
            start_and_end_days_info.sale_key
            ,start_and_end_days_info.date_series AS revenue_date
            ,CASE 
                WHEN start_and_end_days_info.is_end_date_day_the_last_day_in_month
                    THEN start_and_end_days_info.usd_amount / start_and_end_days_info.months
                WHEN rank != 1
                    AND rank != start_and_end_days_info.months
                    THEN usd_amount / (start_and_end_days_info.months - 1)
                WHEN rank = 1                    
                    THEN usd_amount / (start_and_end_days_info.months - 1) * (start_and_end_days_info.days_until_end_of_month / (start_and_end_days_info.days_from_month_start + start_and_end_days_info.days_until_end_of_month)::NUMERIC(10, 2))
                WHEN rank = start_and_end_days_info.months
                    THEN usd_amount / (start_and_end_days_info.months - 1) * (start_and_end_days_info.days_from_month_start / (start_and_end_days_info.days_from_month_start + start_and_end_days_info.days_until_end_of_month)::NUMERIC(10, 2))
            ELSE
                NULL
            END AS usd_revenue_per_month
            ,CASE
                WHEN start_and_end_days_info.is_end_date_day_the_last_day_in_month
                    THEN start_and_end_days_info.czk_amount / start_and_end_days_info.months
                WHEN rank != 1
                    AND rank != start_and_end_days_info.months
                    THEN czk_amount / (start_and_end_days_info.months - 1)
                WHEN rank = 1                    
                    THEN czk_amount / (start_and_end_days_info.months - 1) * (start_and_end_days_info.days_until_end_of_month / (start_and_end_days_info.days_from_month_start + start_and_end_days_info.days_until_end_of_month)::NUMERIC(10, 2))
                WHEN rank = start_and_end_days_info.months
                    THEN czk_amount / (start_and_end_days_info.months - 1) * (start_and_end_days_info.days_from_month_start / (start_and_end_days_info.days_from_month_start + start_and_end_days_info.days_until_end_of_month)::NUMERIC(10, 2))
                ELSE
                    NULL
            END AS czk_revenue_per_month
            ,CASE
                WHEN start_and_end_days_info.is_end_date_day_the_last_day_in_month
                    THEN start_and_end_days_info.eur_amount / start_and_end_days_info.months
                WHEN rank != 1
                    AND rank != start_and_end_days_info.months
                    THEN eur_amount / (start_and_end_days_info.months - 1)
                WHEN rank = 1                    
                    THEN eur_amount / (start_and_end_days_info.months - 1) * (start_and_end_days_info.days_until_end_of_month / (start_and_end_days_info.days_from_month_start + start_and_end_days_info.days_until_end_of_month)::NUMERIC(10, 2))
                WHEN rank = start_and_end_days_info.months
                    THEN eur_amount / (start_and_end_days_info.months - 1) * (start_and_end_days_info.days_from_month_start / (start_and_end_days_info.days_from_month_start + start_and_end_days_info.days_until_end_of_month)::NUMERIC(10, 2))
                ELSE 
                    NULL
            END AS eur_revenue_per_month
            ,CASE
                WHEN start_and_end_days_info.is_end_date_day_the_last_day_in_month
                    THEN start_and_end_days_info.usd_amount / start_and_end_days_info.months
                WHEN rank != 1
                    AND rank != start_and_end_days_info.months
                    THEN start_and_end_days_info.local_currency_amount / (start_and_end_days_info.months - 1)
                WHEN rank = 1
                    THEN start_and_end_days_info.local_currency_amount / (start_and_end_days_info.months - 1) * (start_and_end_days_info.days_until_end_of_month / (start_and_end_days_info.days_from_month_start + start_and_end_days_info.days_until_end_of_month)::NUMERIC(10, 2))
                WHEN rank = start_and_end_days_info.months
                     THEN start_and_end_days_info.local_currency_amount / (start_and_end_days_info.months - 1) * (start_and_end_days_info.days_from_month_start / (start_and_end_days_info.days_from_month_start + start_and_end_days_info.days_until_end_of_month)::NUMERIC(10, 2))           
                ELSE
                    NULL
                END AS local_currency_revenue_per_month
            ,start_and_end_days_info.local_currency_code
        FROM start_and_end_days_info
        )
    ,revenue_base_report AS (
        -- Spport,Substription,etc  sales / sales who's revenue is speard linear from revenue_start to revenue_end dates    
        SELECT
            revenue_per_sale_per_month.sale_key
            ,party_org_customer.full_name AS customer
            ,party_org_reseller.full_name AS reseller
            ,revenue_type.revenue_type_name AS sale_type
            ,party_org_seller.full_name AS seller
            ,org_seller.organization_key AS seller_code
            ,sale.booking_date
            ,revenue_per_sale_per_month.usd_revenue_per_month
            ,revenue_per_sale_per_month.czk_revenue_per_month
            ,revenue_per_sale_per_month.eur_revenue_per_month
            ,revenue_per_sale_per_month.local_currency_revenue_per_month
            ,revenue_per_sale_per_month.local_currency_code
            ,revenue_per_sale_per_month.revenue_date
            ,EXTRACT('month' FROM revenue_per_sale_per_month.revenue_date)::INTEGER AS revenue_month
            ,EXTRACT('quarter' FROM revenue_per_sale_per_month.revenue_date)::INTEGER AS revenue_quarter
            ,EXTRACT('year' FROM revenue_per_sale_per_month.revenue_date)::INTEGER AS revenue_year
            ,sale.sale_comment
            ,sale.invoice
        FROM revenue_per_sale_per_month
        JOIN core.sale_t AS sale ON sale.sale_key = revenue_per_sale_per_month.sale_key
        JOIN core.c_revenue_type_t AS revenue_type ON revenue_type.revenue_type_id = sale.fk_revenue_type_id
        JOIN core.organization_t AS org_customer ON org_customer.organization_id = sale.fk_organization_id_customer
        JOIN core.party_t AS party_org_customer ON party_org_customer.party_id = org_customer.fk_party_id
        JOIN core.party_t AS party_sales_representative ON party_sales_representative.party_id = sale.fk_party_id_sales_representative
        LEFT JOIN core.organization_t AS org_reseller ON org_reseller.organization_id = sale.fk_organization_id_reseller
        LEFT JOIN core.party_t AS party_org_reseller ON party_org_reseller.party_id = org_reseller.fk_party_id
        JOIN core.organization_t AS org_seller ON org_seller.organization_id = sale.fk_organization_id_seller
        JOIN core.party_t AS party_org_seller ON party_org_seller.party_id = org_seller.fk_party_id
        JOIN core.c_currency_g AS local_currency ON local_currency.currency_id = sale.fk_currency_id_local_currency
        
        UNION ALL
        
        -- licence sales / single transaction sales / sales without revenue_end 
        SELECT
            sale.sale_key
            ,party_org_customer.full_name AS customer
            ,party_org_reseller.full_name AS reseller
            ,revenue_type.revenue_type_name AS sale_type
            ,party_org_seller.full_name AS seller
            ,org_seller.organization_key AS seller_code
            ,sale.booking_date
            ,sale.usd_amount
            ,sale.czk_amount
            ,sale.eur_amount
            ,sale.local_currency_amount
            ,local_currency.alphabetical_code AS local_currency_code
            ,sale.revenue_start_date AS revenue_date
            ,EXTRACT('month' FROM sale.revenue_start_date)::INTEGER AS revenue_month
            ,EXTRACT('quarter' FROM sale.revenue_start_date)::INTEGER AS revenue_quarter
            ,EXTRACT('year' FROM sale.revenue_start_date)::INTEGER AS revenue_year
            ,sale.sale_comment
            ,sale.invoice
        FROM core.sale_t AS sale
        JOIN core.c_revenue_type_t AS revenue_type ON revenue_type.revenue_type_id = sale.fk_revenue_type_id
        JOIN core.organization_t AS org_customer ON org_customer.organization_id = sale.fk_organization_id_customer
        JOIN core.party_t AS party_org_customer ON party_org_customer.party_id = org_customer.fk_party_id
        JOIN core.party_t AS party_sales_representative ON party_sales_representative.party_id = sale.fk_party_id_sales_representative
        LEFT JOIN core.organization_t AS org_reseller ON org_reseller.organization_id = sale.fk_organization_id_reseller
        LEFT JOIN core.party_t AS party_org_reseller ON party_org_reseller.party_id = org_reseller.fk_party_id
        JOIN core.organization_t AS org_seller ON org_seller.organization_id = sale.fk_organization_id_seller
        JOIN core.party_t AS party_org_seller ON party_org_seller.party_id = org_seller.fk_party_id
        JOIN core.c_currency_g AS local_currency ON local_currency.currency_id = sale.fk_currency_id_local_currency
        WHERE sale.fk_date_id_revenue_end = -1
            AND revenue_type.revenue_type_name != REVENUE_TYPE_INTERCOMPANY
            AND sale.sale_id != -1
        )
    INSERT INTO mart.revenue_per_month_per_sale (
        revenue_month_year
        ,revenue_quarter_year
        ,seller
        ,seller_code
        ,trade_key
        ,revenue_type
        ,usd_revenue
        ,czk_revenue
        ,eur_revenue
        ,revenue_month
        ,revenue_quarter
        ,revenue_year
        )
    SELECT
        TO_CHAR(revenue_month, 'fm00') || ' ' || revenue_year AS revenue_month_year
        ,'Q' || revenue_quarter || ' ' || revenue_year AS revenue_quarter_year
        ,seller
        ,seller_code
        ,sale_key
        ,sale_type
        ,usd_revenue_per_month
        ,czk_revenue_per_month
        ,eur_revenue_per_month
        ,revenue_month
        ,revenue_quarter
        ,revenue_year
    FROM revenue_base_report;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_sales_report" id="Procedure_3cd9750" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_sales_report()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
DATE_NEVER DATE := (SELECT date_never FROM core.c_null_replacement_g);
BEGIN
    INSERT INTO mart.sales_report (
        sale_key
        ,customer
        ,reseller
        ,sale_type
        ,seller
        ,usd_amount
        ,local_currency_amount
        ,local_currency_code
        ,booking_date
        ,revenue_start
        ,revenue_end
        ,sale_comment
        ,invoice
        ,paid
        ,sales_representative
        )
    SELECT
        sale.sale_key
        ,party_org_customer.full_name AS customer
        ,party_org_reseller.full_name AS reseller
        ,revenue_type.revenue_type_name AS sale_type
        ,party_org_seller.full_name AS seller
        ,sale.usd_amount
        ,sale.local_currency_amount
        ,local_currency.alphabetical_code AS local_currency_code
        ,CASE WHEN sale.booking_date = DATE_NEVER THEN NULL ELSE sale.booking_date END AS booking_date
        ,CASE WHEN sale.revenue_start_date = DATE_NEVER THEN NULL ELSE sale.revenue_start_date END AS revenue_start
        ,CASE WHEN sale.revenue_end_date = DATE_NEVER THEN NULL ELSE sale.revenue_end_date END AS revenue_end
        ,sale.sale_comment
        ,sale.invoice
        ,CASE
            WHEN sale.payment_received = TRUE THEN 'YES'
            WHEN sale.payment_received = FALSE THEN 'NO'
        END AS paid
        ,party_sales_representative.full_name AS sales_representative
    FROM core.sale_t AS sale
    JOIN core.c_revenue_type_t AS revenue_type ON revenue_type.revenue_type_id = sale.fk_revenue_type_id
    JOIN core.organization_t AS org_customer ON org_customer.organization_id = sale.fk_organization_id_customer
    JOIN core.party_t AS party_org_customer ON party_org_customer.party_id = org_customer.fk_party_id
    JOIN core.party_t AS party_sales_representative ON party_sales_representative.party_id = sale.fk_party_id_sales_representative
    LEFT JOIN core.organization_t AS org_reseller ON org_reseller.organization_id = sale.fk_organization_id_reseller
    LEFT JOIN core.party_t AS party_org_reseller ON party_org_reseller.party_id = org_reseller.fk_party_id
    JOIN core.organization_t AS org_seller ON org_seller.organization_id = sale.fk_organization_id_seller
    JOIN core.party_t AS party_org_seller ON party_org_seller.party_id = org_seller.fk_party_id
    JOIN core.c_currency_g AS local_currency ON local_currency.currency_id = sale.fk_currency_id_local_currency
    WHERE sale.sale_id != -1;
    RETURN 0;
    
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_sales_report_czk_revenue_broken_down_by_time" id="Procedure_3632699" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_sales_report_czk_revenue_broken_down_by_time()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
DATE_NEVER DATE := (SELECT date_never FROM core.c_null_replacement_g);
BEGIN
    WITH
    base_report AS (
        SELECT
            sale.sale_key
            ,party_org_customer.full_name AS customer
            ,party_org_reseller.full_name AS reseller
            ,revenue_type.revenue_type_name AS sale_type
            ,party_org_seller.full_name AS seller
            ,sale.czk_amount
            ,sale.local_currency_amount
            ,local_currency.alphabetical_code AS local_currency_code
            ,CASE WHEN sale.booking_date = DATE_NEVER THEN NULL ELSE sale.booking_date END AS booking_date
            ,CASE WHEN sale.revenue_start_date = DATE_NEVER THEN NULL ELSE sale.revenue_start_date END AS revenue_start
            ,CASE WHEN sale.revenue_end_date = DATE_NEVER THEN NULL ELSE sale.revenue_end_date END AS revenue_end
            ,sale.sale_comment
            ,sale.invoice
            ,CASE
                WHEN sale.payment_received = TRUE THEN 'YES'
                WHEN sale.payment_received = FALSE THEN 'NO'
            END AS paid
            ,party_sales_representative.full_name AS sales_representative
        FROM core.sale_t AS sale
        JOIN core.c_revenue_type_t AS revenue_type ON revenue_type.revenue_type_id = sale.fk_revenue_type_id
        JOIN core.organization_t AS org_customer ON org_customer.organization_id = sale.fk_organization_id_customer
        JOIN core.party_t AS party_org_customer ON party_org_customer.party_id = org_customer.fk_party_id
        JOIN core.party_t AS party_sales_representative ON party_sales_representative.party_id = sale.fk_party_id_sales_representative
        LEFT JOIN core.organization_t AS org_reseller ON org_reseller.organization_id = sale.fk_organization_id_reseller
        LEFT JOIN core.party_t AS party_org_reseller ON party_org_reseller.party_id = org_reseller.fk_party_id
        JOIN core.organization_t AS org_seller ON org_seller.organization_id = sale.fk_organization_id_seller
        JOIN core.party_t AS party_org_seller ON party_org_seller.party_id = org_seller.fk_party_id
        JOIN core.c_currency_g AS local_currency ON local_currency.currency_id = sale.fk_currency_id_local_currency
        WHERE sale.sale_id != -1
    )
    ,revenue_per_trade_key_per_year_table AS (
        SELECT *
        FROM crosstab('SELECT
                            trade_key
                            ,revenue_year
                            ,SUM(czk_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_year
                            ,trade_key
                        ORDER BY 1'::TEXT
                ,'SELECT
                    year_series
                FROM generate_series(2016, 2020) AS year_series'::TEXT) AS (
                trade_key TEXT
                ,"2016 Total" NUMERIC(10, 2)
                ,"2017 Total" NUMERIC(10, 2)
                ,"2018 Total" NUMERIC(10, 2)
                ,"2019 Total" NUMERIC(10, 2)
                ,"2020 Total" NUMERIC(10, 2)
                )
        )
    ,sum_revenue_per_year_table AS (
        SELECT *
        FROM crosstab('SELECT
                            ''SUM''
                            ,revenue_year
                            ,SUM(czk_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_year
                        ORDER BY 1'::TEXT
                        , 'SELECT
                            year_series
                        FROM generate_series(2016, 2020) AS year_series'::TEXT) AS (
                trade_key TEXT
                ,"2016 Total" NUMERIC(10, 2)
                ,"2017 Total" NUMERIC(10, 2)
                ,"2018 Total" NUMERIC(10, 2)
                ,"2019 Total" NUMERIC(10, 2)
                ,"2020 Total" NUMERIC(10, 2)
                )
        )
    ,revenue_per_trade_key_per_quarter_table AS (
        SELECT *
        FROM crosstab('SELECT
                            trade_key
                            ,revenue_quarter_year
                            ,SUM(czk_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_quarter_year
                            ,trade_key
                        ORDER BY 1'::TEXT
                        ,'SELECT
                            ''Q'' || quartal_series || '' '' || year_series
                        FROM generate_series(2016, 2020) year_series
                            ,generate_series(1, 4) quartal_series'::TEXT) AS (
                trade_key TEXT
                ,"Q1 2016" NUMERIC(10, 2)
                ,"Q2 2016" NUMERIC(10, 2)
                ,"Q3 2016" NUMERIC(10, 2)
                ,"Q4 2016" NUMERIC(10, 2)
                ,"Q1 2017" NUMERIC(10, 2)
                ,"Q2 2017" NUMERIC(10, 2)
                ,"Q3 2017" NUMERIC(10, 2)
                ,"Q4 2017" NUMERIC(10, 2)
                ,"Q1 2018" NUMERIC(10, 2)
                ,"Q2 2018" NUMERIC(10, 2)
                ,"Q3 2018" NUMERIC(10, 2)
                ,"Q4 2018" NUMERIC(10, 2)
                ,"Q1 2019" NUMERIC(10, 2)
                ,"Q2 2019" NUMERIC(10, 2)
                ,"Q3 2019" NUMERIC(10, 2)
                ,"Q4 2019" NUMERIC(10, 2)
                ,"Q1 2020" NUMERIC(10, 2)
                ,"Q2 2020" NUMERIC(10, 2)
                ,"Q3 2020" NUMERIC(10, 2)
                ,"Q4 2020" NUMERIC(10, 2)
                )
        )
    ,sum_revenue_per_quarter_table AS (
        SELECT *
        FROM crosstab('SELECT ''SUM''
                            ,revenue_quarter_year
                            ,SUM(czk_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_quarter_year
                        ORDER BY 1'::TEXT
                        ,'SELECT
                            ''Q'' || quartal_series || '' '' || year_series
                        FROM generate_series(2016, 2020) year_series
                            ,generate_series(1, 4) quartal_series'::TEXT) AS (
                trade_key TEXT
                ,"Q1 2016" NUMERIC(10, 2)
                ,"Q2 2016" NUMERIC(10, 2)
                ,"Q3 2016" NUMERIC(10, 2)
                ,"Q4 2016" NUMERIC(10, 2)
                ,"Q1 2017" NUMERIC(10, 2)
                ,"Q2 2017" NUMERIC(10, 2)
                ,"Q3 2017" NUMERIC(10, 2)
                ,"Q4 2017" NUMERIC(10, 2)
                ,"Q1 2018" NUMERIC(10, 2)
                ,"Q2 2018" NUMERIC(10, 2)
                ,"Q3 2018" NUMERIC(10, 2)
                ,"Q4 2018" NUMERIC(10, 2)
                ,"Q1 2019" NUMERIC(10, 2)
                ,"Q2 2019" NUMERIC(10, 2)
                ,"Q3 2019" NUMERIC(10, 2)
                ,"Q4 2019" NUMERIC(10, 2)
                ,"Q1 2020" NUMERIC(10, 2)
                ,"Q2 2020" NUMERIC(10, 2)
                ,"Q3 2020" NUMERIC(10, 2)
                ,"Q4 2020" NUMERIC(10, 2)
                )
        )
    ,revenue_per_trade_key_per_month_table AS (
        SELECT *
        FROM crosstab('SELECT
                            trade_key
                            ,revenue_month_year
                            ,SUM(czk_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_month_year
                            ,trade_key
                        ORDER BY 1'::TEXT
                        ,'SELECT
                            to_char(month_series, ''fm00'') || '' '' || year_series
                        FROM generate_series(2016, 2020) AS year_series
                            ,generate_series(1, 12) AS month_series'::TEXT) AS (
                trade_key TEXT
                ,"01 2016" NUMERIC(10, 2)
                ,"02 2016" NUMERIC(10, 2)
                ,"03 2016" NUMERIC(10, 2)
                ,"04 2016" NUMERIC(10, 2)
                ,"05 2016" NUMERIC(10, 2)
                ,"06 2016" NUMERIC(10, 2)
                ,"07 2016" NUMERIC(10, 2)
                ,"08 2016" NUMERIC(10, 2)
                ,"09 2016" NUMERIC(10, 2)
                ,"10 2016" NUMERIC(10, 2)
                ,"11 2016" NUMERIC(10, 2)
                ,"12 2016" NUMERIC(10, 2)
                ,"01 2017" NUMERIC(10, 2)
                ,"02 2017" NUMERIC(10, 2)
                ,"03 2017" NUMERIC(10, 2)
                ,"04 2017" NUMERIC(10, 2)
                ,"05 2017" NUMERIC(10, 2)
                ,"06 2017" NUMERIC(10, 2)
                ,"07 2017" NUMERIC(10, 2)
                ,"08 2017" NUMERIC(10, 2)
                ,"09 2017" NUMERIC(10, 2)
                ,"10 2017" NUMERIC(10, 2)
                ,"11 2017" NUMERIC(10, 2)
                ,"12 2017" NUMERIC(10, 2)
                ,"01 2018" NUMERIC(10, 2)
                ,"02 2018" NUMERIC(10, 2)
                ,"03 2018" NUMERIC(10, 2)
                ,"04 2018" NUMERIC(10, 2)
                ,"05 2018" NUMERIC(10, 2)
                ,"06 2018" NUMERIC(10, 2)
                ,"07 2018" NUMERIC(10, 2)
                ,"08 2018" NUMERIC(10, 2)
                ,"09 2018" NUMERIC(10, 2)
                ,"10 2018" NUMERIC(10, 2)
                ,"11 2018" NUMERIC(10, 2)
                ,"12 2018" NUMERIC(10, 2)
                ,"01 2019" NUMERIC(10, 2)
                ,"02 2019" NUMERIC(10, 2)
                ,"03 2019" NUMERIC(10, 2)
                ,"04 2019" NUMERIC(10, 2)
                ,"05 2019" NUMERIC(10, 2)
                ,"06 2019" NUMERIC(10, 2)
                ,"07 2019" NUMERIC(10, 2)
                ,"08 2019" NUMERIC(10, 2)
                ,"09 2019" NUMERIC(10, 2)
                ,"10 2019" NUMERIC(10, 2)
                ,"11 2019" NUMERIC(10, 2)
                ,"12 2019" NUMERIC(10, 2)
                ,"01 2020" NUMERIC(10, 2)
                ,"02 2020" NUMERIC(10, 2)
                ,"03 2020" NUMERIC(10, 2)
                ,"04 2020" NUMERIC(10, 2)
                ,"05 2020" NUMERIC(10, 2)
                ,"06 2020" NUMERIC(10, 2)
                ,"07 2020" NUMERIC(10, 2)
                ,"08 2020" NUMERIC(10, 2)
                ,"09 2020" NUMERIC(10, 2)
                ,"10 2020" NUMERIC(10, 2)
                ,"11 2020" NUMERIC(10, 2)
                ,"12 2020" NUMERIC(10, 2)
                )
        )
    ,sum_revenue_per_month_table AS (
        SELECT *
        FROM crosstab('SELECT ''SUM''
                            ,revenue_month_year
                            ,SUM(czk_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_month_year
                        ORDER BY 1'::TEXT
                        ,'SELECT
                            to_char(month_series, ''fm00'') || '' '' || year_series
                        FROM generate_series(2016, 2020) AS year_series
                            ,generate_series(1, 12) AS month_series'::TEXT) AS (
                trade_key TEXT
                ,"01 2016" NUMERIC(10, 2)
                ,"02 2016" NUMERIC(10, 2)
                ,"03 2016" NUMERIC(10, 2)
                ,"04 2016" NUMERIC(10, 2)
                ,"05 2016" NUMERIC(10, 2)
                ,"06 2016" NUMERIC(10, 2)
                ,"07 2016" NUMERIC(10, 2)
                ,"08 2016" NUMERIC(10, 2)
                ,"09 2016" NUMERIC(10, 2)
                ,"10 2016" NUMERIC(10, 2)
                ,"11 2016" NUMERIC(10, 2)
                ,"12 2016" NUMERIC(10, 2)
                ,"01 2017" NUMERIC(10, 2)
                ,"02 2017" NUMERIC(10, 2)
                ,"03 2017" NUMERIC(10, 2)
                ,"04 2017" NUMERIC(10, 2)
                ,"05 2017" NUMERIC(10, 2)
                ,"06 2017" NUMERIC(10, 2)
                ,"07 2017" NUMERIC(10, 2)
                ,"08 2017" NUMERIC(10, 2)
                ,"09 2017" NUMERIC(10, 2)
                ,"10 2017" NUMERIC(10, 2)
                ,"11 2017" NUMERIC(10, 2)
                ,"12 2017" NUMERIC(10, 2)
                ,"01 2018" NUMERIC(10, 2)
                ,"02 2018" NUMERIC(10, 2)
                ,"03 2018" NUMERIC(10, 2)
                ,"04 2018" NUMERIC(10, 2)
                ,"05 2018" NUMERIC(10, 2)
                ,"06 2018" NUMERIC(10, 2)
                ,"07 2018" NUMERIC(10, 2)
                ,"08 2018" NUMERIC(10, 2)
                ,"09 2018" NUMERIC(10, 2)
                ,"10 2018" NUMERIC(10, 2)
                ,"11 2018" NUMERIC(10, 2)
                ,"12 2018" NUMERIC(10, 2)
                ,"01 2019" NUMERIC(10, 2)
                ,"02 2019" NUMERIC(10, 2)
                ,"03 2019" NUMERIC(10, 2)
                ,"04 2019" NUMERIC(10, 2)
                ,"05 2019" NUMERIC(10, 2)
                ,"06 2019" NUMERIC(10, 2)
                ,"07 2019" NUMERIC(10, 2)
                ,"08 2019" NUMERIC(10, 2)
                ,"09 2019" NUMERIC(10, 2)
                ,"10 2019" NUMERIC(10, 2)
                ,"11 2019" NUMERIC(10, 2)
                ,"12 2019" NUMERIC(10, 2)
                ,"01 2020" NUMERIC(10, 2)
                ,"02 2020" NUMERIC(10, 2)
                ,"03 2020" NUMERIC(10, 2)
                ,"04 2020" NUMERIC(10, 2)
                ,"05 2020" NUMERIC(10, 2)
                ,"06 2020" NUMERIC(10, 2)
                ,"07 2020" NUMERIC(10, 2)
                ,"08 2020" NUMERIC(10, 2)
                ,"09 2020" NUMERIC(10, 2)
                ,"10 2020" NUMERIC(10, 2)
                ,"11 2020" NUMERIC(10, 2)
                ,"12 2020" NUMERIC(10, 2)
                )
        )
    INSERT INTO mart.sales_report_czk_revenue_broken_down_by_time (
        sale_key
        ,customer
        ,reseller
        ,sale_type
        ,seller
        ,sales_representative
        ,booking_date
        ,revenue_start
        ,revenue_end
        ,paid
        ,czk_amount
        ,sale_comment
        ,invoice
        ,local_currency_amount
        ,local_currency_code
        ,"01 2016"
        ,"02 2016"
        ,"03 2016"
        ,"Q1 2016"
        ,"04 2016"
        ,"05 2016"
        ,"06 2016"
        ,"Q2 2016"
        ,"07 2016"
        ,"08 2016"
        ,"09 2016"
        ,"Q3 2016"
        ,"10 2016"
        ,"11 2016"
        ,"12 2016"
        ,"Q4 2016"
        ,"2016 Total"
        ,"01 2017"
        ,"02 2017"
        ,"03 2017"
        ,"Q1 2017"
        ,"04 2017"
        ,"05 2017"
        ,"06 2017"
        ,"Q2 2017"
        ,"07 2017"
        ,"08 2017"
        ,"09 2017"
        ,"Q3 2017"
        ,"10 2017"
        ,"11 2017"
        ,"12 2017"
        ,"Q4 2017"
        ,"2017 Total"
        ,"01 2018"
        ,"02 2018"
        ,"03 2018"
        ,"Q1 2018"
        ,"04 2018"
        ,"05 2018"
        ,"06 2018"
        ,"Q2 2018"
        ,"07 2018"
        ,"08 2018"
        ,"09 2018"
        ,"Q3 2018"
        ,"10 2018"
        ,"11 2018"
        ,"12 2018"
        ,"Q4 2018"
        ,"2018 Total"
        ,"01 2019"
        ,"02 2019"
        ,"03 2019"
        ,"Q1 2019"
        ,"04 2019"
        ,"05 2019"
        ,"06 2019"
        ,"Q2 2019"
        ,"07 2019"
        ,"08 2019"
        ,"09 2019"
        ,"Q3 2019"
        ,"10 2019"
        ,"11 2019"
        ,"12 2019"
        ,"Q4 2019"
        ,"2019 Total"
        ,"01 2020"
        ,"02 2020"
        ,"03 2020"
        ,"Q1 2020"
        ,"04 2020"
        ,"05 2020"
        ,"06 2020"
        ,"Q2 2020"
        ,"07 2020"
        ,"08 2020"
        ,"09 2020"
        ,"Q3 2020"
        ,"10 2020"
        ,"11 2020"
        ,"12 2020"
        ,"Q4 2020"
        ,"2020 Total"
        )
    SELECT
        trade_key
        ,base_report.customer
        ,base_report.reseller
        ,base_report.sale_type
        ,base_report.seller
        ,base_report.sales_representative
        ,base_report.booking_date
        ,base_report.revenue_start
        ,base_report.revenue_end
        ,base_report.paid
        ,base_report.czk_amount
        ,base_report.sale_comment
        ,base_report.invoice
        ,base_report.local_currency_amount
        ,base_report.local_currency_code
        ,COALESCE("01 2016"         , 0)
        ,COALESCE("02 2016"         , 0)
        ,COALESCE("03 2016"         , 0)
        ,COALESCE("Q1 2016"         , 0)
        ,COALESCE("04 2016"         , 0)
        ,COALESCE("05 2016"         , 0)
        ,COALESCE("06 2016"         , 0)
        ,COALESCE("Q2 2016"         , 0)
        ,COALESCE("07 2016"         , 0)
        ,COALESCE("08 2016"         , 0)
        ,COALESCE("09 2016"         , 0)
        ,COALESCE("Q3 2016"         , 0)
        ,COALESCE("10 2016"         , 0)
        ,COALESCE("11 2016"         , 0)
        ,COALESCE("12 2016"         , 0)
        ,COALESCE("Q4 2016"         , 0)
        ,COALESCE("2016 Total"      , 0)
        ,COALESCE("01 2017"         , 0)
        ,COALESCE("02 2017"         , 0)
        ,COALESCE("03 2017"         , 0)
        ,COALESCE("Q1 2017"         , 0)
        ,COALESCE("04 2017"         , 0)
        ,COALESCE("05 2017"         , 0)
        ,COALESCE("06 2017"         , 0)
        ,COALESCE("Q2 2017"         , 0)
        ,COALESCE("07 2017"         , 0)
        ,COALESCE("08 2017"         , 0)
        ,COALESCE("09 2017"         , 0)
        ,COALESCE("Q3 2017"         , 0)
        ,COALESCE("10 2017"         , 0)
        ,COALESCE("11 2017"         , 0)
        ,COALESCE("12 2017"         , 0)
        ,COALESCE("Q4 2017"         , 0)
        ,COALESCE("2017 Total"      , 0)
        ,COALESCE("01 2018"         , 0)
        ,COALESCE("02 2018"         , 0)
        ,COALESCE("03 2018"         , 0)
        ,COALESCE("Q1 2018"         , 0)
        ,COALESCE("04 2018"         , 0)
        ,COALESCE("05 2018"         , 0)
        ,COALESCE("06 2018"         , 0)
        ,COALESCE("Q2 2018"         , 0)
        ,COALESCE("07 2018"         , 0)
        ,COALESCE("08 2018"         , 0)
        ,COALESCE("09 2018"         , 0)
        ,COALESCE("Q3 2018"         , 0)
        ,COALESCE("10 2018"         , 0)
        ,COALESCE("11 2018"         , 0)
        ,COALESCE("12 2018"         , 0)
        ,COALESCE("Q4 2018"         , 0)
        ,COALESCE("2018 Total"      , 0)
        ,COALESCE("01 2019"         , 0)
        ,COALESCE("02 2019"         , 0)
        ,COALESCE("03 2019"         , 0)
        ,COALESCE("Q1 2019"         , 0)
        ,COALESCE("04 2019"         , 0)
        ,COALESCE("05 2019"         , 0)
        ,COALESCE("06 2019"         , 0)
        ,COALESCE("Q2 2019"         , 0)
        ,COALESCE("07 2019"         , 0)
        ,COALESCE("08 2019"         , 0)
        ,COALESCE("09 2019"         , 0)
        ,COALESCE("Q3 2019"         , 0)
        ,COALESCE("10 2019"         , 0)
        ,COALESCE("11 2019"         , 0)
        ,COALESCE("12 2019"         , 0)
        ,COALESCE("Q4 2019"         , 0)
        ,COALESCE("2019 Total"      , 0)
        ,COALESCE("01 2020"         , 0)
        ,COALESCE("02 2020"         , 0)
        ,COALESCE("03 2020"         , 0)
        ,COALESCE("Q1 2020"         , 0)
        ,COALESCE("04 2020"         , 0)
        ,COALESCE("05 2020"         , 0)
        ,COALESCE("06 2020"         , 0)
        ,COALESCE("Q2 2020"         , 0)
        ,COALESCE("07 2020"         , 0)
        ,COALESCE("08 2020"         , 0)
        ,COALESCE("09 2020"         , 0)
        ,COALESCE("Q3 2020"         , 0)
        ,COALESCE("10 2020"         , 0)
        ,COALESCE("11 2020"         , 0)
        ,COALESCE("12 2020"         , 0)
        ,COALESCE("Q4 2020"         , 0)
        ,COALESCE("2020 Total"      , 0)
    FROM (
        SELECT revenue_per_trade_key_per_month_table.trade_key
            ,"01 2016"
            ,"02 2016"
            ,"03 2016"
            ,"Q1 2016"
            ,"04 2016"
            ,"05 2016"
            ,"06 2016"
            ,"Q2 2016"
            ,"07 2016"
            ,"08 2016"
            ,"09 2016"
            ,"Q3 2016"
            ,"10 2016"
            ,"11 2016"
            ,"12 2016"
            ,"Q4 2016"
            ,"2016 Total"
            ,"01 2017"
            ,"02 2017"
            ,"03 2017"
            ,"Q1 2017"
            ,"04 2017"
            ,"05 2017"
            ,"06 2017"
            ,"Q2 2017"
            ,"07 2017"
            ,"08 2017"
            ,"09 2017"
            ,"Q3 2017"
            ,"10 2017"
            ,"11 2017"
            ,"12 2017"
            ,"Q4 2017"
            ,"2017 Total"
            ,"01 2018"
            ,"02 2018"
            ,"03 2018"
            ,"Q1 2018"
            ,"04 2018"
            ,"05 2018"
            ,"06 2018"
            ,"Q2 2018"
            ,"07 2018"
            ,"08 2018"
            ,"09 2018"
            ,"Q3 2018"
            ,"10 2018"
            ,"11 2018"
            ,"12 2018"
            ,"Q4 2018"
            ,"2018 Total"
            ,"01 2019"
            ,"02 2019"
            ,"03 2019"
            ,"Q1 2019"
            ,"04 2019"
            ,"05 2019"
            ,"06 2019"
            ,"Q2 2019"
            ,"07 2019"
            ,"08 2019"
            ,"09 2019"
            ,"Q3 2019"
            ,"10 2019"
            ,"11 2019"
            ,"12 2019"
            ,"Q4 2019"
            ,"2019 Total"
            ,"01 2020"
            ,"02 2020"
            ,"03 2020"
            ,"Q1 2020"
            ,"04 2020"
            ,"05 2020"
            ,"06 2020"
            ,"Q2 2020"
            ,"07 2020"
            ,"08 2020"
            ,"09 2020"
            ,"Q3 2020"
            ,"10 2020"
            ,"11 2020"
            ,"12 2020"
            ,"Q4 2020"
            ,"2020 Total"
        FROM revenue_per_trade_key_per_month_table
        JOIN revenue_per_trade_key_per_quarter_table ON revenue_per_trade_key_per_quarter_table.trade_key = revenue_per_trade_key_per_month_table.trade_key
        JOIN revenue_per_trade_key_per_year_table ON revenue_per_trade_key_per_year_table.trade_key = revenue_per_trade_key_per_month_table.trade_key
        UNION ALL
        SELECT sum_revenue_per_month_table.trade_key
            ,"01 2016"
            ,"02 2016"
            ,"03 2016"
            ,"Q1 2016"
            ,"04 2016"
            ,"05 2016"
            ,"06 2016"
            ,"Q2 2016"
            ,"07 2016"
            ,"08 2016"
            ,"09 2016"
            ,"Q3 2016"
            ,"10 2016"
            ,"11 2016"
            ,"12 2016"
            ,"Q4 2016"
            ,"2016 Total"
            ,"01 2017"
            ,"02 2017"
            ,"03 2017"
            ,"Q1 2017"
            ,"04 2017"
            ,"05 2017"
            ,"06 2017"
            ,"Q2 2017"
            ,"07 2017"
            ,"08 2017"
            ,"09 2017"
            ,"Q3 2017"
            ,"10 2017"
            ,"11 2017"
            ,"12 2017"
            ,"Q4 2017"
            ,"2017 Total"
            ,"01 2018"
            ,"02 2018"
            ,"03 2018"
            ,"Q1 2018"
            ,"04 2018"
            ,"05 2018"
            ,"06 2018"
            ,"Q2 2018"
            ,"07 2018"
            ,"08 2018"
            ,"09 2018"
            ,"Q3 2018"
            ,"10 2018"
            ,"11 2018"
            ,"12 2018"
            ,"Q4 2018"
            ,"2018 Total"
            ,"01 2019"
            ,"02 2019"
            ,"03 2019"
            ,"Q1 2019"
            ,"04 2019"
            ,"05 2019"
            ,"06 2019"
            ,"Q2 2019"
            ,"07 2019"
            ,"08 2019"
            ,"09 2019"
            ,"Q3 2019"
            ,"10 2019"
            ,"11 2019"
            ,"12 2019"
            ,"Q4 2019"
            ,"2019 Total"
            ,"01 2020"
            ,"02 2020"
            ,"03 2020"
            ,"Q1 2020"
            ,"04 2020"
            ,"05 2020"
            ,"06 2020"
            ,"Q2 2020"
            ,"07 2020"
            ,"08 2020"
            ,"09 2020"
            ,"Q3 2020"
            ,"10 2020"
            ,"11 2020"
            ,"12 2020"
            ,"Q4 2020"
            ,"2020 Total"
        FROM sum_revenue_per_month_table
        JOIN sum_revenue_per_quarter_table ON sum_revenue_per_quarter_table.trade_key = sum_revenue_per_month_table.trade_key
        JOIN sum_revenue_per_year_table ON sum_revenue_per_month_table.trade_key = sum_revenue_per_month_table.trade_key
        ) AS foo
    LEFT JOIN base_report ON base_report.sale_key = foo.trade_key;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_sales_report_eur_revenue_broken_down_by_time" id="Procedure_15b0343" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_sales_report_eur_revenue_broken_down_by_time()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
DATE_NEVER DATE := (SELECT date_never FROM core.c_null_replacement_g);
BEGIN
    WITH
    base_report AS (
        SELECT
            sale.sale_key
            ,party_org_customer.full_name AS customer
            ,party_org_reseller.full_name AS reseller
            ,revenue_type.revenue_type_name AS sale_type
            ,party_org_seller.full_name AS seller
            ,sale.eur_amount
            ,sale.local_currency_amount
            ,local_currency.alphabetical_code AS local_currency_code
            ,CASE WHEN sale.booking_date = DATE_NEVER THEN NULL ELSE sale.booking_date END AS booking_date
            ,CASE WHEN sale.revenue_start_date = DATE_NEVER THEN NULL ELSE sale.revenue_start_date END AS revenue_start
            ,CASE WHEN sale.revenue_end_date = DATE_NEVER THEN NULL ELSE sale.revenue_end_date END AS revenue_end
            ,sale.sale_comment
            ,sale.invoice
            ,CASE
                WHEN sale.payment_received = TRUE THEN 'YES'
                WHEN sale.payment_received = FALSE THEN 'NO'
            END AS paid
            ,party_sales_representative.full_name AS sales_representative
        FROM core.sale_t AS sale
        JOIN core.c_revenue_type_t AS revenue_type ON revenue_type.revenue_type_id = sale.fk_revenue_type_id
        JOIN core.organization_t AS org_customer ON org_customer.organization_id = sale.fk_organization_id_customer
        JOIN core.party_t AS party_org_customer ON party_org_customer.party_id = org_customer.fk_party_id
        JOIN core.party_t AS party_sales_representative ON party_sales_representative.party_id = sale.fk_party_id_sales_representative
        LEFT JOIN core.organization_t AS org_reseller ON org_reseller.organization_id = sale.fk_organization_id_reseller
        LEFT JOIN core.party_t AS party_org_reseller ON party_org_reseller.party_id = org_reseller.fk_party_id
        JOIN core.organization_t AS org_seller ON org_seller.organization_id = sale.fk_organization_id_seller
        JOIN core.party_t AS party_org_seller ON party_org_seller.party_id = org_seller.fk_party_id
        JOIN core.c_currency_g AS local_currency ON local_currency.currency_id = sale.fk_currency_id_local_currency
        WHERE sale.sale_id != -1
    )
    ,revenue_per_trade_key_per_year_table AS (
        SELECT *
        FROM crosstab('SELECT
                            trade_key
                            ,revenue_year
                            ,SUM(eur_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_year
                            ,trade_key
                        ORDER BY 1'::TEXT
                ,'SELECT 
                    year_series 
                FROM generate_series(2016, 2020) AS year_series'::TEXT) AS (
                trade_key TEXT
                ,"2016 Total" NUMERIC(10, 2)
                ,"2017 Total" NUMERIC(10, 2)
                ,"2018 Total" NUMERIC(10, 2)
                ,"2019 Total" NUMERIC(10, 2)
                ,"2020 Total" NUMERIC(10, 2)
                )
        )
    ,sum_revenue_per_year_table AS (
        SELECT *
        FROM crosstab('SELECT 
                            ''SUM''
                            ,revenue_year
                            ,SUM(eur_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_year
                        ORDER BY 1'::TEXT
                        , 'SELECT 
                            year_series
                        FROM generate_series(2016, 2020) AS year_series'::TEXT) AS (
                trade_key TEXT
                ,"2016 Total" NUMERIC(10, 2)
                ,"2017 Total" NUMERIC(10, 2)
                ,"2018 Total" NUMERIC(10, 2)
                ,"2019 Total" NUMERIC(10, 2)
                ,"2020 Total" NUMERIC(10, 2)
                )
        )
    ,revenue_per_trade_key_per_quarter_table AS (
        SELECT *
        FROM crosstab('SELECT 
                            trade_key
                            ,revenue_quarter_year
                            ,SUM(eur_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_quarter_year
                            ,trade_key
                        ORDER BY 1'::TEXT
                        ,'SELECT 
                            ''Q'' || quartal_series || '' '' || year_series
                        FROM generate_series(2016, 2020) year_series
                            ,generate_series(1, 4) quartal_series'::TEXT) AS (
                trade_key TEXT
                ,"Q1 2016" NUMERIC(10, 2)
                ,"Q2 2016" NUMERIC(10, 2)
                ,"Q3 2016" NUMERIC(10, 2)
                ,"Q4 2016" NUMERIC(10, 2)
                ,"Q1 2017" NUMERIC(10, 2)
                ,"Q2 2017" NUMERIC(10, 2)
                ,"Q3 2017" NUMERIC(10, 2)
                ,"Q4 2017" NUMERIC(10, 2)
                ,"Q1 2018" NUMERIC(10, 2)
                ,"Q2 2018" NUMERIC(10, 2)
                ,"Q3 2018" NUMERIC(10, 2)
                ,"Q4 2018" NUMERIC(10, 2)
                ,"Q1 2019" NUMERIC(10, 2)
                ,"Q2 2019" NUMERIC(10, 2)
                ,"Q3 2019" NUMERIC(10, 2)
                ,"Q4 2019" NUMERIC(10, 2)
                ,"Q1 2020" NUMERIC(10, 2)
                ,"Q2 2020" NUMERIC(10, 2)
                ,"Q3 2020" NUMERIC(10, 2)
                ,"Q4 2020" NUMERIC(10, 2)
                )
        )
    ,sum_revenue_per_quarter_table AS (
        SELECT *
        FROM crosstab('SELECT ''SUM''
                            ,revenue_quarter_year
                            ,SUM(eur_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_quarter_year
                        ORDER BY 1'::TEXT
                        ,'SELECT 
                            ''Q'' || quartal_series || '' '' || year_series
                        FROM generate_series(2016, 2020) year_series
                            ,generate_series(1, 4) quartal_series'::TEXT) AS (
                trade_key TEXT
                ,"Q1 2016" NUMERIC(10, 2)
                ,"Q2 2016" NUMERIC(10, 2)
                ,"Q3 2016" NUMERIC(10, 2)
                ,"Q4 2016" NUMERIC(10, 2)
                ,"Q1 2017" NUMERIC(10, 2)
                ,"Q2 2017" NUMERIC(10, 2)
                ,"Q3 2017" NUMERIC(10, 2)
                ,"Q4 2017" NUMERIC(10, 2)
                ,"Q1 2018" NUMERIC(10, 2)
                ,"Q2 2018" NUMERIC(10, 2)
                ,"Q3 2018" NUMERIC(10, 2)
                ,"Q4 2018" NUMERIC(10, 2)
                ,"Q1 2019" NUMERIC(10, 2)
                ,"Q2 2019" NUMERIC(10, 2)
                ,"Q3 2019" NUMERIC(10, 2)
                ,"Q4 2019" NUMERIC(10, 2)
                ,"Q1 2020" NUMERIC(10, 2)
                ,"Q2 2020" NUMERIC(10, 2)
                ,"Q3 2020" NUMERIC(10, 2)
                ,"Q4 2020" NUMERIC(10, 2)
                )
        )
    ,revenue_per_trade_key_per_month_table AS (
        SELECT *
        FROM crosstab('SELECT 
                            trade_key
                            ,revenue_month_year
                            ,SUM(eur_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_month_year
                            ,trade_key
                        ORDER BY 1'::TEXT
                        ,'SELECT 
                            to_char(month_series, ''fm00'') || '' '' || year_series
                        FROM generate_series(2016, 2020) AS year_series
                            ,generate_series(1, 12) AS month_series'::TEXT) AS (
                trade_key TEXT
                ,"01 2016" NUMERIC(10, 2)
                ,"02 2016" NUMERIC(10, 2)
                ,"03 2016" NUMERIC(10, 2)
                ,"04 2016" NUMERIC(10, 2)
                ,"05 2016" NUMERIC(10, 2)
                ,"06 2016" NUMERIC(10, 2)
                ,"07 2016" NUMERIC(10, 2)
                ,"08 2016" NUMERIC(10, 2)
                ,"09 2016" NUMERIC(10, 2)
                ,"10 2016" NUMERIC(10, 2)
                ,"11 2016" NUMERIC(10, 2)
                ,"12 2016" NUMERIC(10, 2)
                ,"01 2017" NUMERIC(10, 2)
                ,"02 2017" NUMERIC(10, 2)
                ,"03 2017" NUMERIC(10, 2)
                ,"04 2017" NUMERIC(10, 2)
                ,"05 2017" NUMERIC(10, 2)
                ,"06 2017" NUMERIC(10, 2)
                ,"07 2017" NUMERIC(10, 2)
                ,"08 2017" NUMERIC(10, 2)
                ,"09 2017" NUMERIC(10, 2)
                ,"10 2017" NUMERIC(10, 2)
                ,"11 2017" NUMERIC(10, 2)
                ,"12 2017" NUMERIC(10, 2)
                ,"01 2018" NUMERIC(10, 2)
                ,"02 2018" NUMERIC(10, 2)
                ,"03 2018" NUMERIC(10, 2)
                ,"04 2018" NUMERIC(10, 2)
                ,"05 2018" NUMERIC(10, 2)
                ,"06 2018" NUMERIC(10, 2)
                ,"07 2018" NUMERIC(10, 2)
                ,"08 2018" NUMERIC(10, 2)
                ,"09 2018" NUMERIC(10, 2)
                ,"10 2018" NUMERIC(10, 2)
                ,"11 2018" NUMERIC(10, 2)
                ,"12 2018" NUMERIC(10, 2)
                ,"01 2019" NUMERIC(10, 2)
                ,"02 2019" NUMERIC(10, 2)
                ,"03 2019" NUMERIC(10, 2)
                ,"04 2019" NUMERIC(10, 2)
                ,"05 2019" NUMERIC(10, 2)
                ,"06 2019" NUMERIC(10, 2)
                ,"07 2019" NUMERIC(10, 2)
                ,"08 2019" NUMERIC(10, 2)
                ,"09 2019" NUMERIC(10, 2)
                ,"10 2019" NUMERIC(10, 2)
                ,"11 2019" NUMERIC(10, 2)
                ,"12 2019" NUMERIC(10, 2)
                ,"01 2020" NUMERIC(10, 2)
                ,"02 2020" NUMERIC(10, 2)
                ,"03 2020" NUMERIC(10, 2)
                ,"04 2020" NUMERIC(10, 2)
                ,"05 2020" NUMERIC(10, 2)
                ,"06 2020" NUMERIC(10, 2)
                ,"07 2020" NUMERIC(10, 2)
                ,"08 2020" NUMERIC(10, 2)
                ,"09 2020" NUMERIC(10, 2)
                ,"10 2020" NUMERIC(10, 2)
                ,"11 2020" NUMERIC(10, 2)
                ,"12 2020" NUMERIC(10, 2)
                )
        )
    ,sum_revenue_per_month_table AS (
        SELECT *
        FROM crosstab('SELECT ''SUM''
                            ,revenue_month_year
                            ,SUM(eur_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_month_year
                        ORDER BY 1'::TEXT
                        ,'SELECT 
                            to_char(month_series, ''fm00'') || '' '' || year_series
                        FROM generate_series(2016, 2020) AS year_series
                            ,generate_series(1, 12) AS month_series'::TEXT) AS (
                trade_key TEXT
                ,"01 2016" NUMERIC(10, 2)
                ,"02 2016" NUMERIC(10, 2)
                ,"03 2016" NUMERIC(10, 2)
                ,"04 2016" NUMERIC(10, 2)
                ,"05 2016" NUMERIC(10, 2)
                ,"06 2016" NUMERIC(10, 2)
                ,"07 2016" NUMERIC(10, 2)
                ,"08 2016" NUMERIC(10, 2)
                ,"09 2016" NUMERIC(10, 2)
                ,"10 2016" NUMERIC(10, 2)
                ,"11 2016" NUMERIC(10, 2)
                ,"12 2016" NUMERIC(10, 2)
                ,"01 2017" NUMERIC(10, 2)
                ,"02 2017" NUMERIC(10, 2)
                ,"03 2017" NUMERIC(10, 2)
                ,"04 2017" NUMERIC(10, 2)
                ,"05 2017" NUMERIC(10, 2)
                ,"06 2017" NUMERIC(10, 2)
                ,"07 2017" NUMERIC(10, 2)
                ,"08 2017" NUMERIC(10, 2)
                ,"09 2017" NUMERIC(10, 2)
                ,"10 2017" NUMERIC(10, 2)
                ,"11 2017" NUMERIC(10, 2)
                ,"12 2017" NUMERIC(10, 2)
                ,"01 2018" NUMERIC(10, 2)
                ,"02 2018" NUMERIC(10, 2)
                ,"03 2018" NUMERIC(10, 2)
                ,"04 2018" NUMERIC(10, 2)
                ,"05 2018" NUMERIC(10, 2)
                ,"06 2018" NUMERIC(10, 2)
                ,"07 2018" NUMERIC(10, 2)
                ,"08 2018" NUMERIC(10, 2)
                ,"09 2018" NUMERIC(10, 2)
                ,"10 2018" NUMERIC(10, 2)
                ,"11 2018" NUMERIC(10, 2)
                ,"12 2018" NUMERIC(10, 2)
                ,"01 2019" NUMERIC(10, 2)
                ,"02 2019" NUMERIC(10, 2)
                ,"03 2019" NUMERIC(10, 2)
                ,"04 2019" NUMERIC(10, 2)
                ,"05 2019" NUMERIC(10, 2)
                ,"06 2019" NUMERIC(10, 2)
                ,"07 2019" NUMERIC(10, 2)
                ,"08 2019" NUMERIC(10, 2)
                ,"09 2019" NUMERIC(10, 2)
                ,"10 2019" NUMERIC(10, 2)
                ,"11 2019" NUMERIC(10, 2)
                ,"12 2019" NUMERIC(10, 2)
                ,"01 2020" NUMERIC(10, 2)
                ,"02 2020" NUMERIC(10, 2)
                ,"03 2020" NUMERIC(10, 2)
                ,"04 2020" NUMERIC(10, 2)
                ,"05 2020" NUMERIC(10, 2)
                ,"06 2020" NUMERIC(10, 2)
                ,"07 2020" NUMERIC(10, 2)
                ,"08 2020" NUMERIC(10, 2)
                ,"09 2020" NUMERIC(10, 2)
                ,"10 2020" NUMERIC(10, 2)
                ,"11 2020" NUMERIC(10, 2)
                ,"12 2020" NUMERIC(10, 2)
                )
        )
    INSERT INTO mart.sales_report_eur_revenue_broken_down_by_time (
        sale_key
        ,customer
        ,reseller
        ,sale_type
        ,seller
        ,sales_representative
        ,booking_date
        ,revenue_start
        ,revenue_end
        ,paid
        ,eur_amount
        ,sale_comment
        ,invoice
        ,local_currency_amount
        ,local_currency_code
        ,"01 2016"
        ,"02 2016"
        ,"03 2016"
        ,"Q1 2016"
        ,"04 2016"
        ,"05 2016"
        ,"06 2016"
        ,"Q2 2016"
        ,"07 2016"
        ,"08 2016"
        ,"09 2016"
        ,"Q3 2016"
        ,"10 2016"
        ,"11 2016"
        ,"12 2016"
        ,"Q4 2016"
        ,"2016 Total"
        ,"01 2017"
        ,"02 2017"
        ,"03 2017"
        ,"Q1 2017"
        ,"04 2017"
        ,"05 2017"
        ,"06 2017"
        ,"Q2 2017"
        ,"07 2017"
        ,"08 2017"
        ,"09 2017"
        ,"Q3 2017"
        ,"10 2017"
        ,"11 2017"
        ,"12 2017"
        ,"Q4 2017"
        ,"2017 Total"
        ,"01 2018"
        ,"02 2018"
        ,"03 2018"
        ,"Q1 2018"
        ,"04 2018"
        ,"05 2018"
        ,"06 2018"
        ,"Q2 2018"
        ,"07 2018"
        ,"08 2018"
        ,"09 2018"
        ,"Q3 2018"
        ,"10 2018"
        ,"11 2018"
        ,"12 2018"
        ,"Q4 2018"
        ,"2018 Total"
        ,"01 2019"
        ,"02 2019"
        ,"03 2019"
        ,"Q1 2019"
        ,"04 2019"
        ,"05 2019"
        ,"06 2019"
        ,"Q2 2019"
        ,"07 2019"
        ,"08 2019"
        ,"09 2019"
        ,"Q3 2019"
        ,"10 2019"
        ,"11 2019"
        ,"12 2019"
        ,"Q4 2019"
        ,"2019 Total"
        ,"01 2020"
        ,"02 2020"
        ,"03 2020"
        ,"Q1 2020"
        ,"04 2020"
        ,"05 2020"
        ,"06 2020"
        ,"Q2 2020"
        ,"07 2020"
        ,"08 2020"
        ,"09 2020"
        ,"Q3 2020"
        ,"10 2020"
        ,"11 2020"
        ,"12 2020"
        ,"Q4 2020"
        ,"2020 Total"
        )
    SELECT
        trade_key
        ,base_report.customer
        ,base_report.reseller
        ,base_report.sale_type
        ,base_report.seller
        ,base_report.sales_representative
        ,base_report.booking_date
        ,base_report.revenue_start
        ,base_report.revenue_end
        ,base_report.paid
        ,base_report.eur_amount
        ,base_report.sale_comment
        ,base_report.invoice
        ,base_report.local_currency_amount
        ,base_report.local_currency_code
        ,COALESCE("01 2016"			, 0)
        ,COALESCE("02 2016"         , 0)
        ,COALESCE("03 2016"         , 0)
        ,COALESCE("Q1 2016"         , 0)
        ,COALESCE("04 2016"         , 0)
        ,COALESCE("05 2016"         , 0)
        ,COALESCE("06 2016"         , 0)
        ,COALESCE("Q2 2016"         , 0)
        ,COALESCE("07 2016"         , 0)
        ,COALESCE("08 2016"         , 0)
        ,COALESCE("09 2016"         , 0)
        ,COALESCE("Q3 2016"         , 0)
        ,COALESCE("10 2016"         , 0)
        ,COALESCE("11 2016"         , 0)
        ,COALESCE("12 2016"         , 0)
        ,COALESCE("Q4 2016"         , 0)
        ,COALESCE("2016 Total"      , 0)
        ,COALESCE("01 2017"         , 0)
        ,COALESCE("02 2017"         , 0)
        ,COALESCE("03 2017"         , 0)
        ,COALESCE("Q1 2017"         , 0)
        ,COALESCE("04 2017"         , 0)
        ,COALESCE("05 2017"         , 0)
        ,COALESCE("06 2017"         , 0)
        ,COALESCE("Q2 2017"         , 0)
        ,COALESCE("07 2017"         , 0)
        ,COALESCE("08 2017"         , 0)
        ,COALESCE("09 2017"         , 0)
        ,COALESCE("Q3 2017"         , 0)
        ,COALESCE("10 2017"         , 0)
        ,COALESCE("11 2017"         , 0)
        ,COALESCE("12 2017"         , 0)
        ,COALESCE("Q4 2017"         , 0)
        ,COALESCE("2017 Total"      , 0)
        ,COALESCE("01 2018"         , 0)
        ,COALESCE("02 2018"         , 0)
        ,COALESCE("03 2018"         , 0)
        ,COALESCE("Q1 2018"         , 0)
        ,COALESCE("04 2018"         , 0)
        ,COALESCE("05 2018"         , 0)
        ,COALESCE("06 2018"         , 0)
        ,COALESCE("Q2 2018"         , 0)
        ,COALESCE("07 2018"         , 0)
        ,COALESCE("08 2018"         , 0)
        ,COALESCE("09 2018"         , 0)
        ,COALESCE("Q3 2018"         , 0)
        ,COALESCE("10 2018"         , 0)
        ,COALESCE("11 2018"         , 0)
        ,COALESCE("12 2018"         , 0)
        ,COALESCE("Q4 2018"         , 0)
        ,COALESCE("2018 Total"      , 0)
        ,COALESCE("01 2019"         , 0)
        ,COALESCE("02 2019"         , 0)
        ,COALESCE("03 2019"         , 0)
        ,COALESCE("Q1 2019"         , 0)
        ,COALESCE("04 2019"         , 0)
        ,COALESCE("05 2019"         , 0)
        ,COALESCE("06 2019"         , 0)
        ,COALESCE("Q2 2019"         , 0)
        ,COALESCE("07 2019"         , 0)
        ,COALESCE("08 2019"         , 0)
        ,COALESCE("09 2019"         , 0)
        ,COALESCE("Q3 2019"         , 0)
        ,COALESCE("10 2019"         , 0)
        ,COALESCE("11 2019"         , 0)
        ,COALESCE("12 2019"         , 0)
        ,COALESCE("Q4 2019"         , 0)
        ,COALESCE("2019 Total"      , 0)
        ,COALESCE("01 2020"         , 0)
        ,COALESCE("02 2020"         , 0)
        ,COALESCE("03 2020"         , 0)
        ,COALESCE("Q1 2020"         , 0)
        ,COALESCE("04 2020"         , 0)
        ,COALESCE("05 2020"         , 0)
        ,COALESCE("06 2020"         , 0)
        ,COALESCE("Q2 2020"         , 0)
        ,COALESCE("07 2020"         , 0)
        ,COALESCE("08 2020"         , 0)
        ,COALESCE("09 2020"         , 0)
        ,COALESCE("Q3 2020"         , 0)
        ,COALESCE("10 2020"         , 0)
        ,COALESCE("11 2020"         , 0)
        ,COALESCE("12 2020"         , 0)
        ,COALESCE("Q4 2020"         , 0)
        ,COALESCE("2020 Total"      , 0)
    FROM (
        SELECT revenue_per_trade_key_per_month_table.trade_key
            ,"01 2016"
            ,"02 2016"
            ,"03 2016"
            ,"Q1 2016"
            ,"04 2016"
            ,"05 2016"
            ,"06 2016"
            ,"Q2 2016"
            ,"07 2016"
            ,"08 2016"
            ,"09 2016"
            ,"Q3 2016"
            ,"10 2016"
            ,"11 2016"
            ,"12 2016"
            ,"Q4 2016"
            ,"2016 Total"
            ,"01 2017"
            ,"02 2017"
            ,"03 2017"
            ,"Q1 2017"
            ,"04 2017"
            ,"05 2017"
            ,"06 2017"
            ,"Q2 2017"
            ,"07 2017"
            ,"08 2017"
            ,"09 2017"
            ,"Q3 2017"
            ,"10 2017"
            ,"11 2017"
            ,"12 2017"
            ,"Q4 2017"
            ,"2017 Total"
            ,"01 2018"
            ,"02 2018"
            ,"03 2018"
            ,"Q1 2018"
            ,"04 2018"
            ,"05 2018"
            ,"06 2018"
            ,"Q2 2018"
            ,"07 2018"
            ,"08 2018"
            ,"09 2018"
            ,"Q3 2018"
            ,"10 2018"
            ,"11 2018"
            ,"12 2018"
            ,"Q4 2018"
            ,"2018 Total"
            ,"01 2019"
            ,"02 2019"
            ,"03 2019"
            ,"Q1 2019"
            ,"04 2019"
            ,"05 2019"
            ,"06 2019"
            ,"Q2 2019"
            ,"07 2019"
            ,"08 2019"
            ,"09 2019"
            ,"Q3 2019"
            ,"10 2019"
            ,"11 2019"
            ,"12 2019"
            ,"Q4 2019"
            ,"2019 Total"
            ,"01 2020"
            ,"02 2020"
            ,"03 2020"
            ,"Q1 2020"
            ,"04 2020"
            ,"05 2020"
            ,"06 2020"
            ,"Q2 2020"
            ,"07 2020"
            ,"08 2020"
            ,"09 2020"
            ,"Q3 2020"
            ,"10 2020"
            ,"11 2020"
            ,"12 2020"
            ,"Q4 2020"
            ,"2020 Total"
        FROM revenue_per_trade_key_per_month_table
        JOIN revenue_per_trade_key_per_quarter_table ON revenue_per_trade_key_per_quarter_table.trade_key = revenue_per_trade_key_per_month_table.trade_key
        JOIN revenue_per_trade_key_per_year_table ON revenue_per_trade_key_per_year_table.trade_key = revenue_per_trade_key_per_month_table.trade_key
        
        UNION ALL
        
        SELECT sum_revenue_per_month_table.trade_key
            ,"01 2016"
            ,"02 2016"
            ,"03 2016"
            ,"Q1 2016"
            ,"04 2016"
            ,"05 2016"
            ,"06 2016"
            ,"Q2 2016"
            ,"07 2016"
            ,"08 2016"
            ,"09 2016"
            ,"Q3 2016"
            ,"10 2016"
            ,"11 2016"
            ,"12 2016"
            ,"Q4 2016"
            ,"2016 Total"
            ,"01 2017"
            ,"02 2017"
            ,"03 2017"
            ,"Q1 2017"
            ,"04 2017"
            ,"05 2017"
            ,"06 2017"
            ,"Q2 2017"
            ,"07 2017"
            ,"08 2017"
            ,"09 2017"
            ,"Q3 2017"
            ,"10 2017"
            ,"11 2017"
            ,"12 2017"
            ,"Q4 2017"
            ,"2017 Total"
            ,"01 2018"
            ,"02 2018"
            ,"03 2018"
            ,"Q1 2018"
            ,"04 2018"
            ,"05 2018"
            ,"06 2018"
            ,"Q2 2018"
            ,"07 2018"
            ,"08 2018"
            ,"09 2018"
            ,"Q3 2018"
            ,"10 2018"
            ,"11 2018"
            ,"12 2018"
            ,"Q4 2018"
            ,"2018 Total"
            ,"01 2019"
            ,"02 2019"
            ,"03 2019"
            ,"Q1 2019"
            ,"04 2019"
            ,"05 2019"
            ,"06 2019"
            ,"Q2 2019"
            ,"07 2019"
            ,"08 2019"
            ,"09 2019"
            ,"Q3 2019"
            ,"10 2019"
            ,"11 2019"
            ,"12 2019"
            ,"Q4 2019"
            ,"2019 Total"
            ,"01 2020"
            ,"02 2020"
            ,"03 2020"
            ,"Q1 2020"
            ,"04 2020"
            ,"05 2020"
            ,"06 2020"
            ,"Q2 2020"
            ,"07 2020"
            ,"08 2020"
            ,"09 2020"
            ,"Q3 2020"
            ,"10 2020"
            ,"11 2020"
            ,"12 2020"
            ,"Q4 2020"
            ,"2020 Total"
        FROM sum_revenue_per_month_table
        JOIN sum_revenue_per_quarter_table ON sum_revenue_per_quarter_table.trade_key = sum_revenue_per_month_table.trade_key
        JOIN sum_revenue_per_year_table ON sum_revenue_per_month_table.trade_key = sum_revenue_per_month_table.trade_key
        ) AS foo
    LEFT JOIN base_report ON base_report.sale_key = foo.trade_key;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_sales_report_extended" id="Procedure_4d4b948" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_sales_report_extended()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
DATE_NEVER DATE := (SELECT date_never FROM core.c_null_replacement_g);
BEGIN
    WITH
    base_report AS (
        SELECT
            sale.sale_key
            ,party_org_customer.full_name AS customer
            ,party_org_reseller.full_name AS reseller
            ,revenue_type.revenue_type_name AS sale_type
            ,party_org_seller.full_name AS seller
            ,sale.usd_amount
            ,sale.local_currency_amount
            ,local_currency.alphabetical_code AS local_currency_code
            ,CASE WHEN sale.booking_date = DATE_NEVER THEN NULL ELSE sale.booking_date END AS booking_date
            ,CASE WHEN sale.revenue_start_date = DATE_NEVER THEN NULL ELSE sale.revenue_start_date END AS revenue_start
            ,CASE WHEN sale.revenue_end_date = DATE_NEVER THEN NULL ELSE sale.revenue_end_date END AS revenue_end
            ,sale.sale_comment
            ,sale.invoice
            ,CASE
                WHEN sale.payment_received = TRUE THEN 'YES'
                WHEN sale.payment_received = FALSE THEN 'NO'
            END AS paid
            ,party_sales_representative.full_name AS sales_representative
        FROM core.sale_t AS sale
        JOIN core.c_revenue_type_t AS revenue_type ON revenue_type.revenue_type_id = sale.fk_revenue_type_id
        JOIN core.organization_t AS org_customer ON org_customer.organization_id = sale.fk_organization_id_customer
        JOIN core.party_t AS party_org_customer ON party_org_customer.party_id = org_customer.fk_party_id
        JOIN core.party_t AS party_sales_representative ON party_sales_representative.party_id = sale.fk_party_id_sales_representative
        LEFT JOIN core.organization_t AS org_reseller ON org_reseller.organization_id = sale.fk_organization_id_reseller
        LEFT JOIN core.party_t AS party_org_reseller ON party_org_reseller.party_id = org_reseller.fk_party_id
        JOIN core.organization_t AS org_seller ON org_seller.organization_id = sale.fk_organization_id_seller
        JOIN core.party_t AS party_org_seller ON party_org_seller.party_id = org_seller.fk_party_id
        JOIN core.c_currency_g AS local_currency ON local_currency.currency_id = sale.fk_currency_id_local_currency
        WHERE sale.sale_id != -1
    )
    ,revenue_per_trade_key_per_year_table AS (
        SELECT *
        FROM crosstab('SELECT
                            trade_key
                            ,revenue_year
                            ,sum(usd_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_year
                            ,trade_key
                        ORDER BY 1'::TEXT
                ,'SELECT
                    year_series
                FROM generate_series(2016, 2020) AS year_series'::TEXT) AS (
                trade_key TEXT
                ,"2016 Total" NUMERIC(10, 2)
                ,"2017 Total" NUMERIC(10, 2)
                ,"2018 Total" NUMERIC(10, 2)
                ,"2019 Total" NUMERIC(10, 2)
                ,"2020 Total" NUMERIC(10, 2)
                )
        )
    ,sum_revenue_per_year_table AS (
        SELECT *
        FROM crosstab('SELECT
                            ''SUM''
                            ,revenue_year
                            ,sum(usd_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_year
                        ORDER BY 1'::TEXT
                        , 'SELECT
                            year_series
                        FROM generate_series(2016, 2020) AS year_series'::TEXT) AS (
                trade_key TEXT
                ,"2016 Total" NUMERIC(10, 2)
                ,"2017 Total" NUMERIC(10, 2)
                ,"2018 Total" NUMERIC(10, 2)
                ,"2019 Total" NUMERIC(10, 2)
                ,"2020 Total" NUMERIC(10, 2)
                )
        )
    ,revenue_per_trade_key_per_quarter_table AS (
        SELECT *
        FROM crosstab('SELECT
                            trade_key
                            ,revenue_quarter_year
                            ,sum(usd_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_quarter_year
                            ,trade_key
                        ORDER BY 1'::TEXT
                        ,'SELECT
                            ''Q'' || quartal_series || '' '' || year_series
                        FROM generate_series(2016, 2020) year_series
                            ,generate_series(1, 4) quartal_series'::TEXT) AS (
                trade_key TEXT
                ,"Q1 2016" NUMERIC(10, 2)
                ,"Q2 2016" NUMERIC(10, 2)
                ,"Q3 2016" NUMERIC(10, 2)
                ,"Q4 2016" NUMERIC(10, 2)
                ,"Q1 2017" NUMERIC(10, 2)
                ,"Q2 2017" NUMERIC(10, 2)
                ,"Q3 2017" NUMERIC(10, 2)
                ,"Q4 2017" NUMERIC(10, 2)
                ,"Q1 2018" NUMERIC(10, 2)
                ,"Q2 2018" NUMERIC(10, 2)
                ,"Q3 2018" NUMERIC(10, 2)
                ,"Q4 2018" NUMERIC(10, 2)
                ,"Q1 2019" NUMERIC(10, 2)
                ,"Q2 2019" NUMERIC(10, 2)
                ,"Q3 2019" NUMERIC(10, 2)
                ,"Q4 2019" NUMERIC(10, 2)
                ,"Q1 2020" NUMERIC(10, 2)
                ,"Q2 2020" NUMERIC(10, 2)
                ,"Q3 2020" NUMERIC(10, 2)
                ,"Q4 2020" NUMERIC(10, 2)
                )
        )
    ,sum_revenue_per_quarter_table AS (
        SELECT *
        FROM crosstab('SELECT ''SUM''
                            ,revenue_quarter_year
                            ,sum(usd_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_quarter_year
                        ORDER BY 1'::TEXT
                        ,'SELECT
                            ''Q'' || quartal_series || '' '' || year_series
                        FROM generate_series(2016, 2020) year_series
                            ,generate_series(1, 4) quartal_series'::TEXT) AS (
                trade_key TEXT
                ,"Q1 2016" NUMERIC(10, 2)
                ,"Q2 2016" NUMERIC(10, 2)
                ,"Q3 2016" NUMERIC(10, 2)
                ,"Q4 2016" NUMERIC(10, 2)
                ,"Q1 2017" NUMERIC(10, 2)
                ,"Q2 2017" NUMERIC(10, 2)
                ,"Q3 2017" NUMERIC(10, 2)
                ,"Q4 2017" NUMERIC(10, 2)
                ,"Q1 2018" NUMERIC(10, 2)
                ,"Q2 2018" NUMERIC(10, 2)
                ,"Q3 2018" NUMERIC(10, 2)
                ,"Q4 2018" NUMERIC(10, 2)
                ,"Q1 2019" NUMERIC(10, 2)
                ,"Q2 2019" NUMERIC(10, 2)
                ,"Q3 2019" NUMERIC(10, 2)
                ,"Q4 2019" NUMERIC(10, 2)
                ,"Q1 2020" NUMERIC(10, 2)
                ,"Q2 2020" NUMERIC(10, 2)
                ,"Q3 2020" NUMERIC(10, 2)
                ,"Q4 2020" NUMERIC(10, 2)
                )
        )
    ,revenue_per_trade_key_per_month_table AS (
        SELECT *
        FROM crosstab('SELECT
                            trade_key
                            ,revenue_month_year
                            ,sum(usd_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_month_year
                            ,trade_key
                        ORDER BY 1'::TEXT
                        ,'SELECT
                            to_char(month_series, ''fm00'') || '' '' || year_series
                        FROM generate_series(2016, 2020) AS year_series
                            ,generate_series(1, 12) AS month_series'::TEXT) AS (
                trade_key TEXT
                ,"01 2016" NUMERIC(10, 2)
                ,"02 2016" NUMERIC(10, 2)
                ,"03 2016" NUMERIC(10, 2)
                ,"04 2016" NUMERIC(10, 2)
                ,"05 2016" NUMERIC(10, 2)
                ,"06 2016" NUMERIC(10, 2)
                ,"07 2016" NUMERIC(10, 2)
                ,"08 2016" NUMERIC(10, 2)
                ,"09 2016" NUMERIC(10, 2)
                ,"10 2016" NUMERIC(10, 2)
                ,"11 2016" NUMERIC(10, 2)
                ,"12 2016" NUMERIC(10, 2)
                ,"01 2017" NUMERIC(10, 2)
                ,"02 2017" NUMERIC(10, 2)
                ,"03 2017" NUMERIC(10, 2)
                ,"04 2017" NUMERIC(10, 2)
                ,"05 2017" NUMERIC(10, 2)
                ,"06 2017" NUMERIC(10, 2)
                ,"07 2017" NUMERIC(10, 2)
                ,"08 2017" NUMERIC(10, 2)
                ,"09 2017" NUMERIC(10, 2)
                ,"10 2017" NUMERIC(10, 2)
                ,"11 2017" NUMERIC(10, 2)
                ,"12 2017" NUMERIC(10, 2)
                ,"01 2018" NUMERIC(10, 2)
                ,"02 2018" NUMERIC(10, 2)
                ,"03 2018" NUMERIC(10, 2)
                ,"04 2018" NUMERIC(10, 2)
                ,"05 2018" NUMERIC(10, 2)
                ,"06 2018" NUMERIC(10, 2)
                ,"07 2018" NUMERIC(10, 2)
                ,"08 2018" NUMERIC(10, 2)
                ,"09 2018" NUMERIC(10, 2)
                ,"10 2018" NUMERIC(10, 2)
                ,"11 2018" NUMERIC(10, 2)
                ,"12 2018" NUMERIC(10, 2)
                ,"01 2019" NUMERIC(10, 2)
                ,"02 2019" NUMERIC(10, 2)
                ,"03 2019" NUMERIC(10, 2)
                ,"04 2019" NUMERIC(10, 2)
                ,"05 2019" NUMERIC(10, 2)
                ,"06 2019" NUMERIC(10, 2)
                ,"07 2019" NUMERIC(10, 2)
                ,"08 2019" NUMERIC(10, 2)
                ,"09 2019" NUMERIC(10, 2)
                ,"10 2019" NUMERIC(10, 2)
                ,"11 2019" NUMERIC(10, 2)
                ,"12 2019" NUMERIC(10, 2)
                ,"01 2020" NUMERIC(10, 2)
                ,"02 2020" NUMERIC(10, 2)
                ,"03 2020" NUMERIC(10, 2)
                ,"04 2020" NUMERIC(10, 2)
                ,"05 2020" NUMERIC(10, 2)
                ,"06 2020" NUMERIC(10, 2)
                ,"07 2020" NUMERIC(10, 2)
                ,"08 2020" NUMERIC(10, 2)
                ,"09 2020" NUMERIC(10, 2)
                ,"10 2020" NUMERIC(10, 2)
                ,"11 2020" NUMERIC(10, 2)
                ,"12 2020" NUMERIC(10, 2)
                )
        )
    ,sum_revenue_per_month_table AS (
        SELECT *
        FROM crosstab('SELECT ''SUM''
                            ,revenue_month_year
                            ,sum(usd_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_month_year
                        ORDER BY 1'::TEXT
                        ,'SELECT
                            to_char(month_series, ''fm00'') || '' '' || year_series
                        FROM generate_series(2016, 2020) AS year_series
                            ,generate_series(1, 12) AS month_series'::TEXT) AS (
                trade_key TEXT
                ,"01 2016" NUMERIC(10, 2)
                ,"02 2016" NUMERIC(10, 2)
                ,"03 2016" NUMERIC(10, 2)
                ,"04 2016" NUMERIC(10, 2)
                ,"05 2016" NUMERIC(10, 2)
                ,"06 2016" NUMERIC(10, 2)
                ,"07 2016" NUMERIC(10, 2)
                ,"08 2016" NUMERIC(10, 2)
                ,"09 2016" NUMERIC(10, 2)
                ,"10 2016" NUMERIC(10, 2)
                ,"11 2016" NUMERIC(10, 2)
                ,"12 2016" NUMERIC(10, 2)
                ,"01 2017" NUMERIC(10, 2)
                ,"02 2017" NUMERIC(10, 2)
                ,"03 2017" NUMERIC(10, 2)
                ,"04 2017" NUMERIC(10, 2)
                ,"05 2017" NUMERIC(10, 2)
                ,"06 2017" NUMERIC(10, 2)
                ,"07 2017" NUMERIC(10, 2)
                ,"08 2017" NUMERIC(10, 2)
                ,"09 2017" NUMERIC(10, 2)
                ,"10 2017" NUMERIC(10, 2)
                ,"11 2017" NUMERIC(10, 2)
                ,"12 2017" NUMERIC(10, 2)
                ,"01 2018" NUMERIC(10, 2)
                ,"02 2018" NUMERIC(10, 2)
                ,"03 2018" NUMERIC(10, 2)
                ,"04 2018" NUMERIC(10, 2)
                ,"05 2018" NUMERIC(10, 2)
                ,"06 2018" NUMERIC(10, 2)
                ,"07 2018" NUMERIC(10, 2)
                ,"08 2018" NUMERIC(10, 2)
                ,"09 2018" NUMERIC(10, 2)
                ,"10 2018" NUMERIC(10, 2)
                ,"11 2018" NUMERIC(10, 2)
                ,"12 2018" NUMERIC(10, 2)
                ,"01 2019" NUMERIC(10, 2)
                ,"02 2019" NUMERIC(10, 2)
                ,"03 2019" NUMERIC(10, 2)
                ,"04 2019" NUMERIC(10, 2)
                ,"05 2019" NUMERIC(10, 2)
                ,"06 2019" NUMERIC(10, 2)
                ,"07 2019" NUMERIC(10, 2)
                ,"08 2019" NUMERIC(10, 2)
                ,"09 2019" NUMERIC(10, 2)
                ,"10 2019" NUMERIC(10, 2)
                ,"11 2019" NUMERIC(10, 2)
                ,"12 2019" NUMERIC(10, 2)
                ,"01 2020" NUMERIC(10, 2)
                ,"02 2020" NUMERIC(10, 2)
                ,"03 2020" NUMERIC(10, 2)
                ,"04 2020" NUMERIC(10, 2)
                ,"05 2020" NUMERIC(10, 2)
                ,"06 2020" NUMERIC(10, 2)
                ,"07 2020" NUMERIC(10, 2)
                ,"08 2020" NUMERIC(10, 2)
                ,"09 2020" NUMERIC(10, 2)
                ,"10 2020" NUMERIC(10, 2)
                ,"11 2020" NUMERIC(10, 2)
                ,"12 2020" NUMERIC(10, 2)
                )
        )
    INSERT INTO mart.sales_report_extended (
        sale_key
        ,customer
        ,reseller
        ,sale_type
        ,seller
        ,sales_representative
        ,booking_date
        ,revenue_start
        ,revenue_end
        ,paid
        ,usd_amount
        ,sale_comment
        ,invoice
        ,local_currency_amount
        ,local_currency_code
        ,"01 2016"
        ,"02 2016"
        ,"03 2016"
        ,"Q1 2016"
        ,"04 2016"
        ,"05 2016"
        ,"06 2016"
        ,"Q2 2016"
        ,"07 2016"
        ,"08 2016"
        ,"09 2016"
        ,"Q3 2016"
        ,"10 2016"
        ,"11 2016"
        ,"12 2016"
        ,"Q4 2016"
        ,"2016 Total"
        ,"01 2017"
        ,"02 2017"
        ,"03 2017"
        ,"Q1 2017"
        ,"04 2017"
        ,"05 2017"
        ,"06 2017"
        ,"Q2 2017"
        ,"07 2017"
        ,"08 2017"
        ,"09 2017"
        ,"Q3 2017"
        ,"10 2017"
        ,"11 2017"
        ,"12 2017"
        ,"Q4 2017"
        ,"2017 Total"
        ,"01 2018"
        ,"02 2018"
        ,"03 2018"
        ,"Q1 2018"
        ,"04 2018"
        ,"05 2018"
        ,"06 2018"
        ,"Q2 2018"
        ,"07 2018"
        ,"08 2018"
        ,"09 2018"
        ,"Q3 2018"
        ,"10 2018"
        ,"11 2018"
        ,"12 2018"
        ,"Q4 2018"
        ,"2018 Total"
        ,"01 2019"
        ,"02 2019"
        ,"03 2019"
        ,"Q1 2019"
        ,"04 2019"
        ,"05 2019"
        ,"06 2019"
        ,"Q2 2019"
        ,"07 2019"
        ,"08 2019"
        ,"09 2019"
        ,"Q3 2019"
        ,"10 2019"
        ,"11 2019"
        ,"12 2019"
        ,"Q4 2019"
        ,"2019 Total"
        ,"01 2020"
        ,"02 2020"
        ,"03 2020"
        ,"Q1 2020"
        ,"04 2020"
        ,"05 2020"
        ,"06 2020"
        ,"Q2 2020"
        ,"07 2020"
        ,"08 2020"
        ,"09 2020"
        ,"Q3 2020"
        ,"10 2020"
        ,"11 2020"
        ,"12 2020"
        ,"Q4 2020"
        ,"2020 Total"
        )
    SELECT
        trade_key
        ,base_report.customer
        ,base_report.reseller
        ,base_report.sale_type
        ,base_report.seller
        ,base_report.sales_representative
        ,base_report.booking_date
        ,base_report.revenue_start
        ,base_report.revenue_end
        ,base_report.paid
        ,base_report.usd_amount
        ,base_report.sale_comment
        ,base_report.invoice
        ,base_report.local_currency_amount
        ,base_report.local_currency_code
        ,COALESCE("01 2016"         , 0)
        ,COALESCE("02 2016"         , 0)
        ,COALESCE("03 2016"         , 0)
        ,COALESCE("Q1 2016"         , 0)
        ,COALESCE("04 2016"         , 0)
        ,COALESCE("05 2016"         , 0)
        ,COALESCE("06 2016"         , 0)
        ,COALESCE("Q2 2016"         , 0)
        ,COALESCE("07 2016"         , 0)
        ,COALESCE("08 2016"         , 0)
        ,COALESCE("09 2016"         , 0)
        ,COALESCE("Q3 2016"         , 0)
        ,COALESCE("10 2016"         , 0)
        ,COALESCE("11 2016"         , 0)
        ,COALESCE("12 2016"         , 0)
        ,COALESCE("Q4 2016"         , 0)
        ,COALESCE("2016 Total"      , 0)
        ,COALESCE("01 2017"         , 0)
        ,COALESCE("02 2017"         , 0)
        ,COALESCE("03 2017"         , 0)
        ,COALESCE("Q1 2017"         , 0)
        ,COALESCE("04 2017"         , 0)
        ,COALESCE("05 2017"         , 0)
        ,COALESCE("06 2017"         , 0)
        ,COALESCE("Q2 2017"         , 0)
        ,COALESCE("07 2017"         , 0)
        ,COALESCE("08 2017"         , 0)
        ,COALESCE("09 2017"         , 0)
        ,COALESCE("Q3 2017"         , 0)
        ,COALESCE("10 2017"         , 0)
        ,COALESCE("11 2017"         , 0)
        ,COALESCE("12 2017"         , 0)
        ,COALESCE("Q4 2017"         , 0)
        ,COALESCE("2017 Total"      , 0)
        ,COALESCE("01 2018"         , 0)
        ,COALESCE("02 2018"         , 0)
        ,COALESCE("03 2018"         , 0)
        ,COALESCE("Q1 2018"         , 0)
        ,COALESCE("04 2018"         , 0)
        ,COALESCE("05 2018"         , 0)
        ,COALESCE("06 2018"         , 0)
        ,COALESCE("Q2 2018"         , 0)
        ,COALESCE("07 2018"         , 0)
        ,COALESCE("08 2018"         , 0)
        ,COALESCE("09 2018"         , 0)
        ,COALESCE("Q3 2018"         , 0)
        ,COALESCE("10 2018"         , 0)
        ,COALESCE("11 2018"         , 0)
        ,COALESCE("12 2018"         , 0)
        ,COALESCE("Q4 2018"         , 0)
        ,COALESCE("2018 Total"      , 0)
        ,COALESCE("01 2019"         , 0)
        ,COALESCE("02 2019"         , 0)
        ,COALESCE("03 2019"         , 0)
        ,COALESCE("Q1 2019"         , 0)
        ,COALESCE("04 2019"         , 0)
        ,COALESCE("05 2019"         , 0)
        ,COALESCE("06 2019"         , 0)
        ,COALESCE("Q2 2019"         , 0)
        ,COALESCE("07 2019"         , 0)
        ,COALESCE("08 2019"         , 0)
        ,COALESCE("09 2019"         , 0)
        ,COALESCE("Q3 2019"         , 0)
        ,COALESCE("10 2019"         , 0)
        ,COALESCE("11 2019"         , 0)
        ,COALESCE("12 2019"         , 0)
        ,COALESCE("Q4 2019"         , 0)
        ,COALESCE("2019 Total"      , 0)
        ,COALESCE("01 2020"         , 0)
        ,COALESCE("02 2020"         , 0)
        ,COALESCE("03 2020"         , 0)
        ,COALESCE("Q1 2020"         , 0)
        ,COALESCE("04 2020"         , 0)
        ,COALESCE("05 2020"         , 0)
        ,COALESCE("06 2020"         , 0)
        ,COALESCE("Q2 2020"         , 0)
        ,COALESCE("07 2020"         , 0)
        ,COALESCE("08 2020"         , 0)
        ,COALESCE("09 2020"         , 0)
        ,COALESCE("Q3 2020"         , 0)
        ,COALESCE("10 2020"         , 0)
        ,COALESCE("11 2020"         , 0)
        ,COALESCE("12 2020"         , 0)
        ,COALESCE("Q4 2020"         , 0)
        ,COALESCE("2020 Total"      , 0)
    FROM (
        SELECT revenue_per_trade_key_per_month_table.trade_key
            ,"01 2016"
            ,"02 2016"
            ,"03 2016"
            ,"Q1 2016"
            ,"04 2016"
            ,"05 2016"
            ,"06 2016"
            ,"Q2 2016"
            ,"07 2016"
            ,"08 2016"
            ,"09 2016"
            ,"Q3 2016"
            ,"10 2016"
            ,"11 2016"
            ,"12 2016"
            ,"Q4 2016"
            ,"2016 Total"
            ,"01 2017"
            ,"02 2017"
            ,"03 2017"
            ,"Q1 2017"
            ,"04 2017"
            ,"05 2017"
            ,"06 2017"
            ,"Q2 2017"
            ,"07 2017"
            ,"08 2017"
            ,"09 2017"
            ,"Q3 2017"
            ,"10 2017"
            ,"11 2017"
            ,"12 2017"
            ,"Q4 2017"
            ,"2017 Total"
            ,"01 2018"
            ,"02 2018"
            ,"03 2018"
            ,"Q1 2018"
            ,"04 2018"
            ,"05 2018"
            ,"06 2018"
            ,"Q2 2018"
            ,"07 2018"
            ,"08 2018"
            ,"09 2018"
            ,"Q3 2018"
            ,"10 2018"
            ,"11 2018"
            ,"12 2018"
            ,"Q4 2018"
            ,"2018 Total"
            ,"01 2019"
            ,"02 2019"
            ,"03 2019"
            ,"Q1 2019"
            ,"04 2019"
            ,"05 2019"
            ,"06 2019"
            ,"Q2 2019"
            ,"07 2019"
            ,"08 2019"
            ,"09 2019"
            ,"Q3 2019"
            ,"10 2019"
            ,"11 2019"
            ,"12 2019"
            ,"Q4 2019"
            ,"2019 Total"
            ,"01 2020"
            ,"02 2020"
            ,"03 2020"
            ,"Q1 2020"
            ,"04 2020"
            ,"05 2020"
            ,"06 2020"
            ,"Q2 2020"
            ,"07 2020"
            ,"08 2020"
            ,"09 2020"
            ,"Q3 2020"
            ,"10 2020"
            ,"11 2020"
            ,"12 2020"
            ,"Q4 2020"
            ,"2020 Total"
        FROM revenue_per_trade_key_per_month_table
        JOIN revenue_per_trade_key_per_quarter_table ON revenue_per_trade_key_per_quarter_table.trade_key = revenue_per_trade_key_per_month_table.trade_key
        JOIN revenue_per_trade_key_per_year_table ON revenue_per_trade_key_per_year_table.trade_key = revenue_per_trade_key_per_month_table.trade_key
        UNION ALL
        SELECT sum_revenue_per_month_table.trade_key
            ,"01 2016"
            ,"02 2016"
            ,"03 2016"
            ,"Q1 2016"
            ,"04 2016"
            ,"05 2016"
            ,"06 2016"
            ,"Q2 2016"
            ,"07 2016"
            ,"08 2016"
            ,"09 2016"
            ,"Q3 2016"
            ,"10 2016"
            ,"11 2016"
            ,"12 2016"
            ,"Q4 2016"
            ,"2016 Total"
            ,"01 2017"
            ,"02 2017"
            ,"03 2017"
            ,"Q1 2017"
            ,"04 2017"
            ,"05 2017"
            ,"06 2017"
            ,"Q2 2017"
            ,"07 2017"
            ,"08 2017"
            ,"09 2017"
            ,"Q3 2017"
            ,"10 2017"
            ,"11 2017"
            ,"12 2017"
            ,"Q4 2017"
            ,"2017 Total"
            ,"01 2018"
            ,"02 2018"
            ,"03 2018"
            ,"Q1 2018"
            ,"04 2018"
            ,"05 2018"
            ,"06 2018"
            ,"Q2 2018"
            ,"07 2018"
            ,"08 2018"
            ,"09 2018"
            ,"Q3 2018"
            ,"10 2018"
            ,"11 2018"
            ,"12 2018"
            ,"Q4 2018"
            ,"2018 Total"
            ,"01 2019"
            ,"02 2019"
            ,"03 2019"
            ,"Q1 2019"
            ,"04 2019"
            ,"05 2019"
            ,"06 2019"
            ,"Q2 2019"
            ,"07 2019"
            ,"08 2019"
            ,"09 2019"
            ,"Q3 2019"
            ,"10 2019"
            ,"11 2019"
            ,"12 2019"
            ,"Q4 2019"
            ,"2019 Total"
            ,"01 2020"
            ,"02 2020"
            ,"03 2020"
            ,"Q1 2020"
            ,"04 2020"
            ,"05 2020"
            ,"06 2020"
            ,"Q2 2020"
            ,"07 2020"
            ,"08 2020"
            ,"09 2020"
            ,"Q3 2020"
            ,"10 2020"
            ,"11 2020"
            ,"12 2020"
            ,"Q4 2020"
            ,"2020 Total"
        FROM sum_revenue_per_month_table
        JOIN sum_revenue_per_quarter_table ON sum_revenue_per_quarter_table.trade_key = sum_revenue_per_month_table.trade_key
        JOIN sum_revenue_per_year_table ON sum_revenue_per_month_table.trade_key = sum_revenue_per_month_table.trade_key
        ) AS foo
    LEFT JOIN base_report ON base_report.sale_key = foo.trade_key;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_r_sales_report_usd_revenue_broken_down_by_time" id="Procedure_1e690af" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_r_sales_report_usd_revenue_broken_down_by_time()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
DATE_NEVER DATE := (SELECT date_never FROM core.c_null_replacement_g);
BEGIN
    WITH
    base_report AS (
        SELECT
            sale.sale_key
            ,party_org_customer.full_name AS customer
            ,party_org_reseller.full_name AS reseller
            ,revenue_type.revenue_type_name AS sale_type
            ,party_org_seller.full_name AS seller
            ,sale.usd_amount
            ,sale.local_currency_amount
            ,local_currency.alphabetical_code AS local_currency_code
            ,CASE WHEN sale.booking_date = DATE_NEVER THEN NULL ELSE sale.booking_date END AS booking_date
            ,CASE WHEN sale.revenue_start_date = DATE_NEVER THEN NULL ELSE sale.revenue_start_date END AS revenue_start
            ,CASE WHEN sale.revenue_end_date = DATE_NEVER THEN NULL ELSE sale.revenue_end_date END AS revenue_end
            ,sale.sale_comment
            ,sale.invoice
            ,CASE
                WHEN sale.payment_received = TRUE THEN 'YES'
                WHEN sale.payment_received = FALSE THEN 'NO'
            END AS paid
            ,party_sales_representative.full_name AS sales_representative
        FROM core.sale_t AS sale
        JOIN core.c_revenue_type_t AS revenue_type ON revenue_type.revenue_type_id = sale.fk_revenue_type_id
        JOIN core.organization_t AS org_customer ON org_customer.organization_id = sale.fk_organization_id_customer
        JOIN core.party_t AS party_org_customer ON party_org_customer.party_id = org_customer.fk_party_id
        JOIN core.party_t AS party_sales_representative ON party_sales_representative.party_id = sale.fk_party_id_sales_representative
        LEFT JOIN core.organization_t AS org_reseller ON org_reseller.organization_id = sale.fk_organization_id_reseller
        LEFT JOIN core.party_t AS party_org_reseller ON party_org_reseller.party_id = org_reseller.fk_party_id
        JOIN core.organization_t AS org_seller ON org_seller.organization_id = sale.fk_organization_id_seller
        JOIN core.party_t AS party_org_seller ON party_org_seller.party_id = org_seller.fk_party_id
        JOIN core.c_currency_g AS local_currency ON local_currency.currency_id = sale.fk_currency_id_local_currency
        WHERE sale.sale_id != -1
    )
    ,revenue_per_trade_key_per_year_table AS (
        SELECT *
        FROM crosstab('SELECT
                            trade_key
                            ,revenue_year
                            ,sum(usd_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_year
                            ,trade_key
                        ORDER BY 1'::TEXT
                ,'SELECT
                    year_series
                FROM generate_series(2016, 2020) AS year_series'::TEXT) AS (
                trade_key TEXT
                ,"2016 Total" NUMERIC(10, 2)
                ,"2017 Total" NUMERIC(10, 2)
                ,"2018 Total" NUMERIC(10, 2)
                ,"2019 Total" NUMERIC(10, 2)
                ,"2020 Total" NUMERIC(10, 2)
                )
        )
    ,sum_revenue_per_year_table AS (
        SELECT *
        FROM crosstab('SELECT
                            ''SUM''
                            ,revenue_year
                            ,sum(usd_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_year
                        ORDER BY 1'::TEXT
                        , 'SELECT
                            year_series
                        FROM generate_series(2016, 2020) AS year_series'::TEXT) AS (
                trade_key TEXT
                ,"2016 Total" NUMERIC(10, 2)
                ,"2017 Total" NUMERIC(10, 2)
                ,"2018 Total" NUMERIC(10, 2)
                ,"2019 Total" NUMERIC(10, 2)
                ,"2020 Total" NUMERIC(10, 2)
                )
        )
    ,revenue_per_trade_key_per_quarter_table AS (
        SELECT *
        FROM crosstab('SELECT
                            trade_key
                            ,revenue_quarter_year
                            ,sum(usd_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_quarter_year
                            ,trade_key
                        ORDER BY 1'::TEXT
                        ,'SELECT
                            ''Q'' || quartal_series || '' '' || year_series
                        FROM generate_series(2016, 2020) year_series
                            ,generate_series(1, 4) quartal_series'::TEXT) AS (
                trade_key TEXT
                ,"Q1 2016" NUMERIC(10, 2)
                ,"Q2 2016" NUMERIC(10, 2)
                ,"Q3 2016" NUMERIC(10, 2)
                ,"Q4 2016" NUMERIC(10, 2)
                ,"Q1 2017" NUMERIC(10, 2)
                ,"Q2 2017" NUMERIC(10, 2)
                ,"Q3 2017" NUMERIC(10, 2)
                ,"Q4 2017" NUMERIC(10, 2)
                ,"Q1 2018" NUMERIC(10, 2)
                ,"Q2 2018" NUMERIC(10, 2)
                ,"Q3 2018" NUMERIC(10, 2)
                ,"Q4 2018" NUMERIC(10, 2)
                ,"Q1 2019" NUMERIC(10, 2)
                ,"Q2 2019" NUMERIC(10, 2)
                ,"Q3 2019" NUMERIC(10, 2)
                ,"Q4 2019" NUMERIC(10, 2)
                ,"Q1 2020" NUMERIC(10, 2)
                ,"Q2 2020" NUMERIC(10, 2)
                ,"Q3 2020" NUMERIC(10, 2)
                ,"Q4 2020" NUMERIC(10, 2)
                )
        )
    ,sum_revenue_per_quarter_table AS (
        SELECT *
        FROM crosstab('SELECT ''SUM''
                            ,revenue_quarter_year
                            ,sum(usd_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_quarter_year
                        ORDER BY 1'::TEXT
                        ,'SELECT
                            ''Q'' || quartal_series || '' '' || year_series
                        FROM generate_series(2016, 2020) year_series
                            ,generate_series(1, 4) quartal_series'::TEXT) AS (
                trade_key TEXT
                ,"Q1 2016" NUMERIC(10, 2)
                ,"Q2 2016" NUMERIC(10, 2)
                ,"Q3 2016" NUMERIC(10, 2)
                ,"Q4 2016" NUMERIC(10, 2)
                ,"Q1 2017" NUMERIC(10, 2)
                ,"Q2 2017" NUMERIC(10, 2)
                ,"Q3 2017" NUMERIC(10, 2)
                ,"Q4 2017" NUMERIC(10, 2)
                ,"Q1 2018" NUMERIC(10, 2)
                ,"Q2 2018" NUMERIC(10, 2)
                ,"Q3 2018" NUMERIC(10, 2)
                ,"Q4 2018" NUMERIC(10, 2)
                ,"Q1 2019" NUMERIC(10, 2)
                ,"Q2 2019" NUMERIC(10, 2)
                ,"Q3 2019" NUMERIC(10, 2)
                ,"Q4 2019" NUMERIC(10, 2)
                ,"Q1 2020" NUMERIC(10, 2)
                ,"Q2 2020" NUMERIC(10, 2)
                ,"Q3 2020" NUMERIC(10, 2)
                ,"Q4 2020" NUMERIC(10, 2)
                )
        )
    ,revenue_per_trade_key_per_month_table AS (
        SELECT *
        FROM crosstab('SELECT
                            trade_key
                            ,revenue_month_year
                            ,sum(usd_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_month_year
                            ,trade_key
                        ORDER BY 1'::TEXT
                        ,'SELECT
                            to_char(month_series, ''fm00'') || '' '' || year_series
                        FROM generate_series(2016, 2020) AS year_series
                            ,generate_series(1, 12) AS month_series'::TEXT) AS (
                trade_key TEXT
                ,"01 2016" NUMERIC(10, 2)
                ,"02 2016" NUMERIC(10, 2)
                ,"03 2016" NUMERIC(10, 2)
                ,"04 2016" NUMERIC(10, 2)
                ,"05 2016" NUMERIC(10, 2)
                ,"06 2016" NUMERIC(10, 2)
                ,"07 2016" NUMERIC(10, 2)
                ,"08 2016" NUMERIC(10, 2)
                ,"09 2016" NUMERIC(10, 2)
                ,"10 2016" NUMERIC(10, 2)
                ,"11 2016" NUMERIC(10, 2)
                ,"12 2016" NUMERIC(10, 2)
                ,"01 2017" NUMERIC(10, 2)
                ,"02 2017" NUMERIC(10, 2)
                ,"03 2017" NUMERIC(10, 2)
                ,"04 2017" NUMERIC(10, 2)
                ,"05 2017" NUMERIC(10, 2)
                ,"06 2017" NUMERIC(10, 2)
                ,"07 2017" NUMERIC(10, 2)
                ,"08 2017" NUMERIC(10, 2)
                ,"09 2017" NUMERIC(10, 2)
                ,"10 2017" NUMERIC(10, 2)
                ,"11 2017" NUMERIC(10, 2)
                ,"12 2017" NUMERIC(10, 2)
                ,"01 2018" NUMERIC(10, 2)
                ,"02 2018" NUMERIC(10, 2)
                ,"03 2018" NUMERIC(10, 2)
                ,"04 2018" NUMERIC(10, 2)
                ,"05 2018" NUMERIC(10, 2)
                ,"06 2018" NUMERIC(10, 2)
                ,"07 2018" NUMERIC(10, 2)
                ,"08 2018" NUMERIC(10, 2)
                ,"09 2018" NUMERIC(10, 2)
                ,"10 2018" NUMERIC(10, 2)
                ,"11 2018" NUMERIC(10, 2)
                ,"12 2018" NUMERIC(10, 2)
                ,"01 2019" NUMERIC(10, 2)
                ,"02 2019" NUMERIC(10, 2)
                ,"03 2019" NUMERIC(10, 2)
                ,"04 2019" NUMERIC(10, 2)
                ,"05 2019" NUMERIC(10, 2)
                ,"06 2019" NUMERIC(10, 2)
                ,"07 2019" NUMERIC(10, 2)
                ,"08 2019" NUMERIC(10, 2)
                ,"09 2019" NUMERIC(10, 2)
                ,"10 2019" NUMERIC(10, 2)
                ,"11 2019" NUMERIC(10, 2)
                ,"12 2019" NUMERIC(10, 2)
                ,"01 2020" NUMERIC(10, 2)
                ,"02 2020" NUMERIC(10, 2)
                ,"03 2020" NUMERIC(10, 2)
                ,"04 2020" NUMERIC(10, 2)
                ,"05 2020" NUMERIC(10, 2)
                ,"06 2020" NUMERIC(10, 2)
                ,"07 2020" NUMERIC(10, 2)
                ,"08 2020" NUMERIC(10, 2)
                ,"09 2020" NUMERIC(10, 2)
                ,"10 2020" NUMERIC(10, 2)
                ,"11 2020" NUMERIC(10, 2)
                ,"12 2020" NUMERIC(10, 2)
                )
        )
    ,sum_revenue_per_month_table AS (
        SELECT *
        FROM crosstab('SELECT ''SUM''
                            ,revenue_month_year
                            ,sum(usd_revenue) AS usd_revenue
                        FROM mart.revenue_per_month_per_sale
                        WHERE revenue_year >= 2016
                            AND revenue_year <= 2020
                        GROUP BY revenue_month_year
                        ORDER BY 1'::TEXT
                        ,'SELECT
                            to_char(month_series, ''fm00'') || '' '' || year_series
                        FROM generate_series(2016, 2020) AS year_series
                            ,generate_series(1, 12) AS month_series'::TEXT) AS (
                trade_key TEXT
                ,"01 2016" NUMERIC(10, 2)
                ,"02 2016" NUMERIC(10, 2)
                ,"03 2016" NUMERIC(10, 2)
                ,"04 2016" NUMERIC(10, 2)
                ,"05 2016" NUMERIC(10, 2)
                ,"06 2016" NUMERIC(10, 2)
                ,"07 2016" NUMERIC(10, 2)
                ,"08 2016" NUMERIC(10, 2)
                ,"09 2016" NUMERIC(10, 2)
                ,"10 2016" NUMERIC(10, 2)
                ,"11 2016" NUMERIC(10, 2)
                ,"12 2016" NUMERIC(10, 2)
                ,"01 2017" NUMERIC(10, 2)
                ,"02 2017" NUMERIC(10, 2)
                ,"03 2017" NUMERIC(10, 2)
                ,"04 2017" NUMERIC(10, 2)
                ,"05 2017" NUMERIC(10, 2)
                ,"06 2017" NUMERIC(10, 2)
                ,"07 2017" NUMERIC(10, 2)
                ,"08 2017" NUMERIC(10, 2)
                ,"09 2017" NUMERIC(10, 2)
                ,"10 2017" NUMERIC(10, 2)
                ,"11 2017" NUMERIC(10, 2)
                ,"12 2017" NUMERIC(10, 2)
                ,"01 2018" NUMERIC(10, 2)
                ,"02 2018" NUMERIC(10, 2)
                ,"03 2018" NUMERIC(10, 2)
                ,"04 2018" NUMERIC(10, 2)
                ,"05 2018" NUMERIC(10, 2)
                ,"06 2018" NUMERIC(10, 2)
                ,"07 2018" NUMERIC(10, 2)
                ,"08 2018" NUMERIC(10, 2)
                ,"09 2018" NUMERIC(10, 2)
                ,"10 2018" NUMERIC(10, 2)
                ,"11 2018" NUMERIC(10, 2)
                ,"12 2018" NUMERIC(10, 2)
                ,"01 2019" NUMERIC(10, 2)
                ,"02 2019" NUMERIC(10, 2)
                ,"03 2019" NUMERIC(10, 2)
                ,"04 2019" NUMERIC(10, 2)
                ,"05 2019" NUMERIC(10, 2)
                ,"06 2019" NUMERIC(10, 2)
                ,"07 2019" NUMERIC(10, 2)
                ,"08 2019" NUMERIC(10, 2)
                ,"09 2019" NUMERIC(10, 2)
                ,"10 2019" NUMERIC(10, 2)
                ,"11 2019" NUMERIC(10, 2)
                ,"12 2019" NUMERIC(10, 2)
                ,"01 2020" NUMERIC(10, 2)
                ,"02 2020" NUMERIC(10, 2)
                ,"03 2020" NUMERIC(10, 2)
                ,"04 2020" NUMERIC(10, 2)
                ,"05 2020" NUMERIC(10, 2)
                ,"06 2020" NUMERIC(10, 2)
                ,"07 2020" NUMERIC(10, 2)
                ,"08 2020" NUMERIC(10, 2)
                ,"09 2020" NUMERIC(10, 2)
                ,"10 2020" NUMERIC(10, 2)
                ,"11 2020" NUMERIC(10, 2)
                ,"12 2020" NUMERIC(10, 2)
                )
        )
    INSERT INTO mart.sales_report_usd_revenue_broken_down_by_time (
        sale_key
        ,customer
        ,reseller
        ,sale_type
        ,seller
        ,sales_representative
        ,booking_date
        ,revenue_start
        ,revenue_end
        ,paid
        ,usd_amount
        ,sale_comment
        ,invoice
        ,local_currency_amount
        ,local_currency_code
        ,"01 2016"
        ,"02 2016"
        ,"03 2016"
        ,"Q1 2016"
        ,"04 2016"
        ,"05 2016"
        ,"06 2016"
        ,"Q2 2016"
        ,"07 2016"
        ,"08 2016"
        ,"09 2016"
        ,"Q3 2016"
        ,"10 2016"
        ,"11 2016"
        ,"12 2016"
        ,"Q4 2016"
        ,"2016 Total"
        ,"01 2017"
        ,"02 2017"
        ,"03 2017"
        ,"Q1 2017"
        ,"04 2017"
        ,"05 2017"
        ,"06 2017"
        ,"Q2 2017"
        ,"07 2017"
        ,"08 2017"
        ,"09 2017"
        ,"Q3 2017"
        ,"10 2017"
        ,"11 2017"
        ,"12 2017"
        ,"Q4 2017"
        ,"2017 Total"
        ,"01 2018"
        ,"02 2018"
        ,"03 2018"
        ,"Q1 2018"
        ,"04 2018"
        ,"05 2018"
        ,"06 2018"
        ,"Q2 2018"
        ,"07 2018"
        ,"08 2018"
        ,"09 2018"
        ,"Q3 2018"
        ,"10 2018"
        ,"11 2018"
        ,"12 2018"
        ,"Q4 2018"
        ,"2018 Total"
        ,"01 2019"
        ,"02 2019"
        ,"03 2019"
        ,"Q1 2019"
        ,"04 2019"
        ,"05 2019"
        ,"06 2019"
        ,"Q2 2019"
        ,"07 2019"
        ,"08 2019"
        ,"09 2019"
        ,"Q3 2019"
        ,"10 2019"
        ,"11 2019"
        ,"12 2019"
        ,"Q4 2019"
        ,"2019 Total"
        ,"01 2020"
        ,"02 2020"
        ,"03 2020"
        ,"Q1 2020"
        ,"04 2020"
        ,"05 2020"
        ,"06 2020"
        ,"Q2 2020"
        ,"07 2020"
        ,"08 2020"
        ,"09 2020"
        ,"Q3 2020"
        ,"10 2020"
        ,"11 2020"
        ,"12 2020"
        ,"Q4 2020"
        ,"2020 Total"
        )
    SELECT
        trade_key
        ,base_report.customer
        ,base_report.reseller
        ,base_report.sale_type
        ,base_report.seller
        ,base_report.sales_representative
        ,base_report.booking_date
        ,base_report.revenue_start
        ,base_report.revenue_end
        ,base_report.paid
        ,base_report.usd_amount
        ,base_report.sale_comment
        ,base_report.invoice
        ,base_report.local_currency_amount
        ,base_report.local_currency_code
        ,COALESCE("01 2016"         , 0)
        ,COALESCE("02 2016"         , 0)
        ,COALESCE("03 2016"         , 0)
        ,COALESCE("Q1 2016"         , 0)
        ,COALESCE("04 2016"         , 0)
        ,COALESCE("05 2016"         , 0)
        ,COALESCE("06 2016"         , 0)
        ,COALESCE("Q2 2016"         , 0)
        ,COALESCE("07 2016"         , 0)
        ,COALESCE("08 2016"         , 0)
        ,COALESCE("09 2016"         , 0)
        ,COALESCE("Q3 2016"         , 0)
        ,COALESCE("10 2016"         , 0)
        ,COALESCE("11 2016"         , 0)
        ,COALESCE("12 2016"         , 0)
        ,COALESCE("Q4 2016"         , 0)
        ,COALESCE("2016 Total"      , 0)
        ,COALESCE("01 2017"         , 0)
        ,COALESCE("02 2017"         , 0)
        ,COALESCE("03 2017"         , 0)
        ,COALESCE("Q1 2017"         , 0)
        ,COALESCE("04 2017"         , 0)
        ,COALESCE("05 2017"         , 0)
        ,COALESCE("06 2017"         , 0)
        ,COALESCE("Q2 2017"         , 0)
        ,COALESCE("07 2017"         , 0)
        ,COALESCE("08 2017"         , 0)
        ,COALESCE("09 2017"         , 0)
        ,COALESCE("Q3 2017"         , 0)
        ,COALESCE("10 2017"         , 0)
        ,COALESCE("11 2017"         , 0)
        ,COALESCE("12 2017"         , 0)
        ,COALESCE("Q4 2017"         , 0)
        ,COALESCE("2017 Total"      , 0)
        ,COALESCE("01 2018"         , 0)
        ,COALESCE("02 2018"         , 0)
        ,COALESCE("03 2018"         , 0)
        ,COALESCE("Q1 2018"         , 0)
        ,COALESCE("04 2018"         , 0)
        ,COALESCE("05 2018"         , 0)
        ,COALESCE("06 2018"         , 0)
        ,COALESCE("Q2 2018"         , 0)
        ,COALESCE("07 2018"         , 0)
        ,COALESCE("08 2018"         , 0)
        ,COALESCE("09 2018"         , 0)
        ,COALESCE("Q3 2018"         , 0)
        ,COALESCE("10 2018"         , 0)
        ,COALESCE("11 2018"         , 0)
        ,COALESCE("12 2018"         , 0)
        ,COALESCE("Q4 2018"         , 0)
        ,COALESCE("2018 Total"      , 0)
        ,COALESCE("01 2019"         , 0)
        ,COALESCE("02 2019"         , 0)
        ,COALESCE("03 2019"         , 0)
        ,COALESCE("Q1 2019"         , 0)
        ,COALESCE("04 2019"         , 0)
        ,COALESCE("05 2019"         , 0)
        ,COALESCE("06 2019"         , 0)
        ,COALESCE("Q2 2019"         , 0)
        ,COALESCE("07 2019"         , 0)
        ,COALESCE("08 2019"         , 0)
        ,COALESCE("09 2019"         , 0)
        ,COALESCE("Q3 2019"         , 0)
        ,COALESCE("10 2019"         , 0)
        ,COALESCE("11 2019"         , 0)
        ,COALESCE("12 2019"         , 0)
        ,COALESCE("Q4 2019"         , 0)
        ,COALESCE("2019 Total"      , 0)
        ,COALESCE("01 2020"         , 0)
        ,COALESCE("02 2020"         , 0)
        ,COALESCE("03 2020"         , 0)
        ,COALESCE("Q1 2020"         , 0)
        ,COALESCE("04 2020"         , 0)
        ,COALESCE("05 2020"         , 0)
        ,COALESCE("06 2020"         , 0)
        ,COALESCE("Q2 2020"         , 0)
        ,COALESCE("07 2020"         , 0)
        ,COALESCE("08 2020"         , 0)
        ,COALESCE("09 2020"         , 0)
        ,COALESCE("Q3 2020"         , 0)
        ,COALESCE("10 2020"         , 0)
        ,COALESCE("11 2020"         , 0)
        ,COALESCE("12 2020"         , 0)
        ,COALESCE("Q4 2020"         , 0)
        ,COALESCE("2020 Total"      , 0)
    FROM (
        SELECT revenue_per_trade_key_per_month_table.trade_key
            ,"01 2016"
            ,"02 2016"
            ,"03 2016"
            ,"Q1 2016"
            ,"04 2016"
            ,"05 2016"
            ,"06 2016"
            ,"Q2 2016"
            ,"07 2016"
            ,"08 2016"
            ,"09 2016"
            ,"Q3 2016"
            ,"10 2016"
            ,"11 2016"
            ,"12 2016"
            ,"Q4 2016"
            ,"2016 Total"
            ,"01 2017"
            ,"02 2017"
            ,"03 2017"
            ,"Q1 2017"
            ,"04 2017"
            ,"05 2017"
            ,"06 2017"
            ,"Q2 2017"
            ,"07 2017"
            ,"08 2017"
            ,"09 2017"
            ,"Q3 2017"
            ,"10 2017"
            ,"11 2017"
            ,"12 2017"
            ,"Q4 2017"
            ,"2017 Total"
            ,"01 2018"
            ,"02 2018"
            ,"03 2018"
            ,"Q1 2018"
            ,"04 2018"
            ,"05 2018"
            ,"06 2018"
            ,"Q2 2018"
            ,"07 2018"
            ,"08 2018"
            ,"09 2018"
            ,"Q3 2018"
            ,"10 2018"
            ,"11 2018"
            ,"12 2018"
            ,"Q4 2018"
            ,"2018 Total"
            ,"01 2019"
            ,"02 2019"
            ,"03 2019"
            ,"Q1 2019"
            ,"04 2019"
            ,"05 2019"
            ,"06 2019"
            ,"Q2 2019"
            ,"07 2019"
            ,"08 2019"
            ,"09 2019"
            ,"Q3 2019"
            ,"10 2019"
            ,"11 2019"
            ,"12 2019"
            ,"Q4 2019"
            ,"2019 Total"
            ,"01 2020"
            ,"02 2020"
            ,"03 2020"
            ,"Q1 2020"
            ,"04 2020"
            ,"05 2020"
            ,"06 2020"
            ,"Q2 2020"
            ,"07 2020"
            ,"08 2020"
            ,"09 2020"
            ,"Q3 2020"
            ,"10 2020"
            ,"11 2020"
            ,"12 2020"
            ,"Q4 2020"
            ,"2020 Total"
        FROM revenue_per_trade_key_per_month_table
        JOIN revenue_per_trade_key_per_quarter_table ON revenue_per_trade_key_per_quarter_table.trade_key = revenue_per_trade_key_per_month_table.trade_key
        JOIN revenue_per_trade_key_per_year_table ON revenue_per_trade_key_per_year_table.trade_key = revenue_per_trade_key_per_month_table.trade_key
        UNION ALL
        SELECT sum_revenue_per_month_table.trade_key
            ,"01 2016"
            ,"02 2016"
            ,"03 2016"
            ,"Q1 2016"
            ,"04 2016"
            ,"05 2016"
            ,"06 2016"
            ,"Q2 2016"
            ,"07 2016"
            ,"08 2016"
            ,"09 2016"
            ,"Q3 2016"
            ,"10 2016"
            ,"11 2016"
            ,"12 2016"
            ,"Q4 2016"
            ,"2016 Total"
            ,"01 2017"
            ,"02 2017"
            ,"03 2017"
            ,"Q1 2017"
            ,"04 2017"
            ,"05 2017"
            ,"06 2017"
            ,"Q2 2017"
            ,"07 2017"
            ,"08 2017"
            ,"09 2017"
            ,"Q3 2017"
            ,"10 2017"
            ,"11 2017"
            ,"12 2017"
            ,"Q4 2017"
            ,"2017 Total"
            ,"01 2018"
            ,"02 2018"
            ,"03 2018"
            ,"Q1 2018"
            ,"04 2018"
            ,"05 2018"
            ,"06 2018"
            ,"Q2 2018"
            ,"07 2018"
            ,"08 2018"
            ,"09 2018"
            ,"Q3 2018"
            ,"10 2018"
            ,"11 2018"
            ,"12 2018"
            ,"Q4 2018"
            ,"2018 Total"
            ,"01 2019"
            ,"02 2019"
            ,"03 2019"
            ,"Q1 2019"
            ,"04 2019"
            ,"05 2019"
            ,"06 2019"
            ,"Q2 2019"
            ,"07 2019"
            ,"08 2019"
            ,"09 2019"
            ,"Q3 2019"
            ,"10 2019"
            ,"11 2019"
            ,"12 2019"
            ,"Q4 2019"
            ,"2019 Total"
            ,"01 2020"
            ,"02 2020"
            ,"03 2020"
            ,"Q1 2020"
            ,"04 2020"
            ,"05 2020"
            ,"06 2020"
            ,"Q2 2020"
            ,"07 2020"
            ,"08 2020"
            ,"09 2020"
            ,"Q3 2020"
            ,"10 2020"
            ,"11 2020"
            ,"12 2020"
            ,"Q4 2020"
            ,"2020 Total"
        FROM sum_revenue_per_month_table
        JOIN sum_revenue_per_quarter_table ON sum_revenue_per_quarter_table.trade_key = sum_revenue_per_month_table.trade_key
        JOIN sum_revenue_per_year_table ON sum_revenue_per_month_table.trade_key = sum_revenue_per_month_table.trade_key
        ) AS foo
    LEFT JOIN base_report ON base_report.sale_key = foo.trade_key;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_u_clear_mart_tables" id="Procedure_21ee6d7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_u_clear_mart_tables()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
SCHEMA_NAME text := 'mart';
tables CURSOR
FOR
SELECT tablename
FROM pg_tables
WHERE tablename NOT LIKE 'pg_%'
    AND schemaname = SCHEMA_NAME;
BEGIN
    FOR table_record IN tables LOOP        
        EXECUTE
            'DELETE FROM' || ' ' || SCHEMA_NAME || '.' || table_record.tablename;
    END LOOP;
RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_u_generate_vacuum_statements_mart_tables" id="Procedure_3172749" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION mart.tf_u_generate_vacuum_statements_mart_tables()
 RETURNS TABLE(vacuum_statement text)
 LANGUAGE plpgsql
AS $function$

BEGIN
    RETURN QUERY SELECT tf_u_generate_vacuum_statements('mart');
END;$function$
]]></string>
		</procedure>
	</schema>
	<schema name="public" catalogname="dwh" schemaname="public" >
		<procedure name="connectby" id="Procedure_5b812e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.connectby(text, text, text, text, integer, text)
 RETURNS SETOF record
 LANGUAGE c
 STABLE STRICT
AS '$libdir/tablefunc', $function$connectby_text$function$
]]></string>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<input_param name="$4" jt="12" type="text" />
			<input_param name="$5" jt="4" type="int4" />
			<input_param name="$6" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="record" />
		</procedure>
		<procedure name="connectby" id="Procedure_1088b4d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.connectby(text, text, text, text, integer)
 RETURNS SETOF record
 LANGUAGE c
 STABLE STRICT
AS '$libdir/tablefunc', $function$connectby_text$function$
]]></string>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<input_param name="$4" jt="12" type="text" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="record" />
		</procedure>
		<procedure name="connectby" id="Procedure_36d7a94" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.connectby(text, text, text, text, text, integer, text)
 RETURNS SETOF record
 LANGUAGE c
 STABLE STRICT
AS '$libdir/tablefunc', $function$connectby_text_serial$function$
]]></string>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<input_param name="$4" jt="12" type="text" />
			<input_param name="$5" jt="12" type="text" />
			<input_param name="$6" jt="4" type="int4" />
			<input_param name="$7" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="record" />
		</procedure>
		<procedure name="connectby" id="Procedure_441ea70" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.connectby(text, text, text, text, text, integer)
 RETURNS SETOF record
 LANGUAGE c
 STABLE STRICT
AS '$libdir/tablefunc', $function$connectby_text_serial$function$
]]></string>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<input_param name="$4" jt="12" type="text" />
			<input_param name="$5" jt="12" type="text" />
			<input_param name="$6" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="record" />
		</procedure>
		<procedure name="crosstab" id="Procedure_ae45b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.crosstab(text)
 RETURNS SETOF record
 LANGUAGE c
 STABLE STRICT
AS '$libdir/tablefunc', $function$crosstab$function$
]]></string>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="record" />
		</procedure>
		<procedure name="crosstab" id="Procedure_43e09a8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.crosstab(text, integer)
 RETURNS SETOF record
 LANGUAGE c
 STABLE STRICT
AS '$libdir/tablefunc', $function$crosstab$function$
]]></string>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="record" />
		</procedure>
		<procedure name="crosstab" id="Procedure_1c6754" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.crosstab(text, text)
 RETURNS SETOF record
 LANGUAGE c
 STABLE STRICT
AS '$libdir/tablefunc', $function$crosstab_hash$function$
]]></string>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="record" />
		</procedure>
		<procedure name="crosstab2" id="Procedure_5f27a07" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.crosstab2(text)
 RETURNS SETOF tablefunc_crosstab_2
 LANGUAGE c
 STABLE STRICT
AS '$libdir/tablefunc', $function$crosstab$function$
]]></string>
			<input_param name="row_name" jt="12" type="text" />
			<input_param name="category_1" jt="12" type="text" />
			<input_param name="category_2" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
		</procedure>
		<procedure name="crosstab3" id="Procedure_1a5c300" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.crosstab3(text)
 RETURNS SETOF tablefunc_crosstab_3
 LANGUAGE c
 STABLE STRICT
AS '$libdir/tablefunc', $function$crosstab$function$
]]></string>
			<input_param name="row_name" jt="12" type="text" />
			<input_param name="category_1" jt="12" type="text" />
			<input_param name="category_2" jt="12" type="text" />
			<input_param name="category_3" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
		</procedure>
		<procedure name="crosstab4" id="Procedure_5e3b414" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.crosstab4(text)
 RETURNS SETOF tablefunc_crosstab_4
 LANGUAGE c
 STABLE STRICT
AS '$libdir/tablefunc', $function$crosstab$function$
]]></string>
			<input_param name="row_name" jt="12" type="text" />
			<input_param name="category_1" jt="12" type="text" />
			<input_param name="category_2" jt="12" type="text" />
			<input_param name="category_3" jt="12" type="text" />
			<input_param name="category_4" jt="12" type="text" />
			<input_param name="$1" jt="12" type="text" />
		</procedure>
		<procedure name="normal_rand" id="Procedure_40b851a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.normal_rand(integer, double precision, double precision)
 RETURNS SETOF double precision
 LANGUAGE c
 STRICT
AS '$libdir/tablefunc', $function$normal_rand$function$
]]></string>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="8" type="float8" />
			<input_param name="$3" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="tf_u_convert_date_to_yyyymmdd_integer" id="Procedure_22c63a9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.tf_u_convert_date_to_yyyymmdd_integer(in_date_to_convert date, OUT date_as_integer integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    
    ------------------------------------------------------------------------------------------------------------------------------------------------
    -- Description  : Parses DATE in formats into integer in format YYYYMM
    --                Returns:
                            -- NULL - if in_date_to_convert is NULL
                            -- Date - intger in format YYYYMMDD if in_date_to_convert is not null
    -- Author       : Martin Vrabel (https://github.com/mvrabel)
    -- Created On   : 2018-12-19
    ------------------------------------------------------------------------------------------------------------------------------------------------
DECLARE    
BEGIN
       
    date_as_integer := (SELECT TO_CHAR(in_date_to_convert, 'YYYYMMDD')::INTEGER);
END;
$function$
]]></string>
			<input_param name="in_date_to_convert" jt="91" type="date" />
			<input_param name="date_as_integer" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="tf_u_convert_interval_to_days" id="Procedure_10844c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.tf_u_convert_interval_to_days(interval_to_convert interval, OUT days_in_interval numeric)
 RETURNS numeric
 LANGUAGE plpgsql
AS $function$
    
    ------------------------------------------------------------------------------------------------------------------------------------------------
    -- Description  : Converts Interval to days
    -- Author       : Martin Vrabel (https://github.com/mvrabel)
    -- Created On   : 2018-12-16
    ------------------------------------------------------------------------------------------------------------------------------------------------
DECLARE
SECONDS_IN_A_DAY INTEGER := 86400;
BEGIN
       
    days_in_interval := (
        SELECT
            CASE
                WHEN interval_to_convert IS NULL THEN NULL
                ELSE (EXTRACT(epoch FROM interval_to_convert)/ SECONDS_IN_A_DAY)::NUMERIC(10, 5)
            END AS days
    );
END;
$function$
]]></string>
			<input_param name="interval_to_convert" jt="1111" type="interval" />
			<input_param name="days_in_interval" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="tf_u_convert_interval_to_hours" id="Procedure_53c95c1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.tf_u_convert_interval_to_hours(interval_to_convert interval, OUT hours_in_interval numeric)
 RETURNS numeric
 LANGUAGE plpgsql
AS $function$
    
    ------------------------------------------------------------------------------------------------------------------------------------------------
    -- Description  : Converts Interval to hours
    -- Author       : Martin Vrabel (https://github.com/mvrabel)
    -- Created On   : 2018-12-16
    ------------------------------------------------------------------------------------------------------------------------------------------------
DECLARE
SECONDS_IN_A_HOUR INTEGER := 3600;
BEGIN
       
    hours_in_interval := (
        SELECT
            CASE
                WHEN interval_to_convert IS NULL THEN NULL
                ELSE (EXTRACT(epoch FROM interval_to_convert)/ SECONDS_IN_A_HOUR)::NUMERIC(10, 5)
            END AS hours
    );
END;
$function$
]]></string>
			<input_param name="interval_to_convert" jt="1111" type="interval" />
			<input_param name="hours_in_interval" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="tf_u_convert_interval_to_minutes" id="Procedure_38b9d4f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.tf_u_convert_interval_to_minutes(interval_to_convert interval, OUT minutes_in_interval numeric)
 RETURNS numeric
 LANGUAGE plpgsql
AS $function$
    
    ------------------------------------------------------------------------------------------------------------------------------------------------
    -- Description  : Converts Interval to minutes
    -- Author       : Martin Vrabel (https://github.com/mvrabel)
    -- Created On   : 2018-12-16
    ------------------------------------------------------------------------------------------------------------------------------------------------
DECLARE
SECONDS_IN_A_MINUTE INTEGER := 60;
BEGIN
       
    minutes_in_interval := (
        SELECT
            CASE
                WHEN interval_to_convert IS NULL THEN NULL
                ELSE (EXTRACT(epoch FROM interval_to_convert)/ SECONDS_IN_A_MINUTE)::NUMERIC(10, 5)
            END AS minutes
    );
END;
$function$
]]></string>
			<input_param name="interval_to_convert" jt="1111" type="interval" />
			<input_param name="minutes_in_interval" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="tf_u_convert_interval_to_seconds" id="Procedure_343ba4d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.tf_u_convert_interval_to_seconds(interval_to_convert interval, OUT seconds_in_interval integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    
    ------------------------------------------------------------------------------------------------------------------------------------------------
    -- Description  : Converts Interval to seconds
    -- Author       : Martin Vrabel (https://github.com/mvrabel)
    -- Created On   : 2018-12-16
    ------------------------------------------------------------------------------------------------------------------------------------------------
DECLARE
BEGIN
       
    seconds_in_interval := (
        SELECT
            CASE
                WHEN interval_to_convert IS NULL THEN NULL
                ELSE EXTRACT(epoch FROM interval_to_convert)
            END AS seconds
    );
END;
$function$
]]></string>
			<input_param name="interval_to_convert" jt="1111" type="interval" />
			<input_param name="seconds_in_interval" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="tf_u_convert_iso_8601_to_date" id="Procedure_1adb8a1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.tf_u_convert_iso_8601_to_date(in_text_date text, OUT out_date date)
 RETURNS date
 LANGUAGE plpgsql
AS $function$
    
    ------------------------------------------------------------------------------------------------------------------------------------------------
    -- Description  : Parses TEXT DATE in formats 'YYYY-MM-DD HH:MI:SS+TT' AND 'YYYY-MM-DDTHH:MI:SS+TT'. 
    --                Returns:
    --                  NULL - if in_text_date is not in valid format
    --                  NULL - if in_text_date is NULL
    --                  Date - date
    -- Author       : Martin Vrabel (https://github.com/mvrabel)
    -- Created On   : 2018-12-16
    ------------------------------------------------------------------------------------------------------------------------------------------------
DECLARE
    ISO_8601_DATE_FORMAT_REGEX TEXT                         := '^[0-9]{4}-[0-9]{2}-[0-9]{2}$';
    ISO_8601_DATE_AND_TIME_FORMAT_REGEX TEXT                := '^[0-9]{4}-[0-9]{2}-[0-9]{2}[T,\ ]{1}[0-9]{2}:[0-9]{2}:[0-9]{2}$';
    ISO_8601_DATE_AND_TIME_AND_TIMEZONE_FORMAT_REGEX TEXT   := '^[0-9]{4}-[0-9]{2}-[0-9]{2}[T,\ ]{1}[0-9]{2}:[0-9]{2}:[0-9]{2}\+[0-9]{2}:[0-9]{2}$';
    
    IS_DATE_EXTRACT BOOLEAN:= (SELECT EXISTS (SELECT regexp_matches(in_text_date, ISO_8601_DATE_FORMAT_REGEX)));
    IS_DATE_TIME_EXTRACT BOOLEAN:= (SELECT EXISTS (SELECT regexp_matches(in_text_date, ISO_8601_DATE_AND_TIME_FORMAT_REGEX)));
    IS_DATE_TIME_TIMEZONE_EXTRACT BOOLEAN:= (SELECT EXISTS (SELECT regexp_matches(in_text_date, ISO_8601_DATE_AND_TIME_AND_TIMEZONE_FORMAT_REGEX)));
    
BEGIN
       
    out_date := (
    SELECT
        CASE
            WHEN 
                IS_DATE_EXTRACT
                OR IS_DATE_TIME_EXTRACT 
                OR IS_DATE_TIME_TIMEZONE_EXTRACT 
                THEN SUBSTRING(in_text_date FROM 1 FOR 10)::DATE
            ELSE NULL            
        END AS extracted_date
    );
END;
$function$
]]></string>
			<input_param name="in_text_date" jt="12" type="text" />
			<input_param name="out_date" jt="91" type="date" />
			<result_param name="returnValue" jt="91" type="date" />
		</procedure>
		<procedure name="tf_u_convert_iso_8601_to_yyyymmdd_integer" id="Procedure_42c7e6e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.tf_u_convert_iso_8601_to_yyyymmdd_integer(in_text_date text, OUT date_as_integer integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    
    ------------------------------------------------------------------------------------------------------------------------------------------------
    -- Description  : Parses TEXT DATE in formats 'YYYY-MM-DD HH:MI:SS' AND 'YYYY-MM-DDTHH:MI:SS'. 
    --                Returns:
                            -- NULL - if in_text_date is not in valid format
                            -- NULL - if in_text_date is NULL
                            -- Date - intger in format YYYYMMDD if in_text_date is in valid ISO 8601 format
    -- Author       : Martin Vrabel (https://github.com/mvrabel)
    -- Created On   : 2018-12-16
    ------------------------------------------------------------------------------------------------------------------------------------------------
DECLARE
    ISO_8601_DATE_FORMAT_REGEX TEXT                         := '^[0-9]{4}-[0-9]{2}-[0-9]{2}$';
    ISO_8601_DATE_AND_TIME_FORMAT_REGEX TEXT                := '^[0-9]{4}-[0-9]{2}-[0-9]{2}[T,\ ]{1}[0-9]{2}:[0-9]{2}:[0-9]{2}$';
    ISO_8601_DATE_AND_TIME_AND_TIMEZONE_FORMAT_REGEX TEXT   := '^[0-9]{4}-[0-9]{2}-[0-9]{2}[T,\ ]{1}[0-9]{2}:[0-9]{2}:[0-9]{2}\+[0-9]{2}:[0-9]{2}$';
    
    IS_DATE_EXTRACT BOOLEAN:= (SELECT EXISTS (SELECT regexp_matches(in_text_date, ISO_8601_DATE_FORMAT_REGEX)));
    IS_DATE_TIME_EXTRACT BOOLEAN:= (SELECT EXISTS (SELECT regexp_matches(in_text_date, ISO_8601_DATE_AND_TIME_FORMAT_REGEX)));
    IS_DATE_TIME_TIMEZONE_EXTRACT BOOLEAN:= (SELECT EXISTS (SELECT regexp_matches(in_text_date, ISO_8601_DATE_AND_TIME_AND_TIMEZONE_FORMAT_REGEX)));
    
BEGIN
       
    date_as_integer := (
    SELECT
        CASE
            WHEN 
                IS_DATE_EXTRACT
                OR IS_DATE_TIME_EXTRACT 
                OR IS_DATE_TIME_TIMEZONE_EXTRACT                 
                THEN REPLACE(SUBSTRING(in_text_date FROM 1 FOR 10), '-', '')::INTEGER
            ELSE NULL            
        END AS extracted_date
    );
END;
$function$
]]></string>
			<input_param name="in_text_date" jt="12" type="text" />
			<input_param name="date_as_integer" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="tf_u_convert_text_to_integer" id="Procedure_13d4226" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.tf_u_convert_text_to_integer(v_input text)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE v_int_value INTEGER DEFAULT NULL;
BEGIN
    BEGIN
        v_int_value := v_input::INTEGER;
    EXCEPTION WHEN OTHERS THEN
        RAISE NOTICE 'Invalid integer value: "%".  Returning NULL.', v_input;
        RETURN NULL;
    END;
RETURN v_int_value;
END;
$function$
]]></string>
			<input_param name="v_input" jt="12" type="text" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="tf_u_days_diff_between_dates" id="Procedure_181c86" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.tf_u_days_diff_between_dates(start_date date, end_date date, OUT days_diff integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
SECONDS_IN_A_DAY INTEGER := 86400;
BEGIN
    days_diff := (
    SELECT
        CASE
            WHEN start_date IS NULL OR end_date IS NULL THEN NULL
            ELSE (EXTRACT(epoch FROM age(start_date, end_date)) / SECONDS_IN_A_DAY)::INTEGER
        END AS diff
    );

END;$function$
]]></string>
			<input_param name="start_date" jt="91" type="date" />
			<input_param name="end_date" jt="91" type="date" />
			<input_param name="days_diff" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="tf_u_empty_check" id="Procedure_3e0e923" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.tf_u_empty_check(schema_name text, table_postfix text, OUT is_empty text)
 RETURNS text
 LANGUAGE plpgsql
AS $function$
BEGIN
    is_empty := (
        SELECT CASE 
                WHEN SUM(pg_stat_user_tables.n_live_tup) = 0
                    THEN 'EMPTY'
                ELSE 'NOT_EMPTY'
                END AS not_empty_flag
        FROM pg_stat_user_tables
        WHERE pg_stat_user_tables.schemaname = schema_name
            AND pg_stat_user_tables.relname LIKE '%' || table_postfix
        GROUP BY pg_stat_user_tables.schemaname
        );
END;$function$
]]></string>
			<input_param name="schema_name" jt="12" type="text" />
			<input_param name="table_postfix" jt="12" type="text" />
			<input_param name="is_empty" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="tf_u_generate_vacuum_statements" id="Procedure_1ecbd34" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.tf_u_generate_vacuum_statements(schema_name text, table_postfix text DEFAULT NULL::text)
 RETURNS TABLE(vacuum_statement text)
 LANGUAGE plpgsql
AS $function$
BEGIN
    IF table_postfix IS NOT NULL THEN
        RETURN QUERY SELECT 
                         'VACUUM ANALYZE ' 
                         || pg_stat_user_tables.schemaname
                         || '.'
                         || pg_stat_user_tables.relname
                         || ';'
                     FROM pg_stat_user_tables
                     WHERE pg_stat_user_tables.schemaname = schema_name
                     AND pg_stat_user_tables.relname LIKE '%' || table_postfix;
    ELSE
        RETURN QUERY SELECT 
                         'VACUUM ANALYZE ' 
                         || pg_stat_user_tables.schemaname
                         || '.'
                         || pg_stat_user_tables.relname
                         || ';'
                     FROM pg_stat_user_tables
                     WHERE pg_stat_user_tables.schemaname = schema_name;
    END IF;
END;$function$
]]></string>
			<input_param name="schema_name" jt="12" type="text" />
			<input_param name="table_postfix" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
			<result_param name="vacuum_statement" jt="12" type="text" />
		</procedure>
		<procedure name="tf_u_remove_old_stage_d_records" id="Procedure_19cfc36" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.tf_u_remove_old_stage_d_records(days integer)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
    tables CURSOR FOR
        SELECT tablename
        FROM pg_tables
        WHERE tablename NOT LIKE 'pg_%' and schemaname = 'stage' and tablename like '%_d';
BEGIN
    FOR table_record IN tables LOOP        
        EXECUTE
			'DELETE FROM stage.'
			|| table_record.tablename
			|| ' '
			|| 'WHERE tech_snapshot_utc_timestamp < to_char((now() AT TIME ZONE ''UTC'' - interval'''
			|| ' '
			|| days::text
			|| ' '
			|| 'day''), ''YYYYMMDDHH24MISS'')::bigint;';
    END LOOP;
RETURN 0;
END;$function$
]]></string>
			<input_param name="days" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="tf_u_replace_empty_string_with_null_flag" id="Procedure_497af87" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.tf_u_replace_empty_string_with_null_flag(input_string text, OUT return_text text)
 RETURNS text
 LANGUAGE plpgsql
AS $function$
DECLARE
NULL_FLAG TEXT := (SELECT text_null FROM core.c_null_replacement_g);
BEGIN
    
    return_text := (
        SELECT 
            CASE
                WHEN regexp_replace(COALESCE(input_string,''), '\s', '', 'g') = '' THEN NULL_FLAG
                ELSE input_string
            END AS return_text
        );
END;$function$
]]></string>
			<input_param name="input_string" jt="12" type="text" />
			<input_param name="return_text" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="unaccent" id="Procedure_ad214b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.unaccent(regdictionary, text)
 RETURNS text
 LANGUAGE c
 STABLE PARALLEL SAFE STRICT
AS '$libdir/unaccent', $function$unaccent_dict$function$
]]></string>
			<input_param name="$1" jt="1111" type="regdictionary" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="unaccent" id="Procedure_3d39493" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.unaccent(text)
 RETURNS text
 LANGUAGE c
 STABLE PARALLEL SAFE STRICT
AS '$libdir/unaccent', $function$unaccent_dict$function$
]]></string>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="unaccent_init" id="Procedure_3c894e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.unaccent_init(internal)
 RETURNS internal
 LANGUAGE c
 PARALLEL SAFE
AS '$libdir/unaccent', $function$unaccent_init$function$
]]></string>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="unaccent_lexize" id="Procedure_31fbc31" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.unaccent_lexize(internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE c
 PARALLEL SAFE
AS '$libdir/unaccent', $function$unaccent_lexize$function$
]]></string>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="uuid_generate_v1" id="Procedure_3f039ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_generate_v1()
 RETURNS uuid
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_generate_v1$function$
]]></string>
			<result_param name="returnValue" jt="1111" type="uuid" />
		</procedure>
		<procedure name="uuid_generate_v1mc" id="Procedure_2d5992f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_generate_v1mc()
 RETURNS uuid
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_generate_v1mc$function$
]]></string>
			<result_param name="returnValue" jt="1111" type="uuid" />
		</procedure>
		<procedure name="uuid_generate_v3" id="Procedure_1d5007" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_generate_v3(namespace uuid, name text)
 RETURNS uuid
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_generate_v3$function$
]]></string>
			<input_param name="namespace" jt="1111" type="uuid" />
			<input_param name="name" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="uuid" />
		</procedure>
		<procedure name="uuid_generate_v4" id="Procedure_5795b92" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_generate_v4()
 RETURNS uuid
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_generate_v4$function$
]]></string>
			<result_param name="returnValue" jt="1111" type="uuid" />
		</procedure>
		<procedure name="uuid_generate_v5" id="Procedure_950196" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_generate_v5(namespace uuid, name text)
 RETURNS uuid
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_generate_v5$function$
]]></string>
			<input_param name="namespace" jt="1111" type="uuid" />
			<input_param name="name" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="uuid" />
		</procedure>
		<procedure name="uuid_nil" id="Procedure_546ae6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_nil()
 RETURNS uuid
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_nil$function$
]]></string>
			<result_param name="returnValue" jt="1111" type="uuid" />
		</procedure>
		<procedure name="uuid_ns_dns" id="Procedure_13683ca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_ns_dns()
 RETURNS uuid
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_ns_dns$function$
]]></string>
			<result_param name="returnValue" jt="1111" type="uuid" />
		</procedure>
		<procedure name="uuid_ns_oid" id="Procedure_417f4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_ns_oid()
 RETURNS uuid
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_ns_oid$function$
]]></string>
			<result_param name="returnValue" jt="1111" type="uuid" />
		</procedure>
		<procedure name="uuid_ns_url" id="Procedure_2218eed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_ns_url()
 RETURNS uuid
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_ns_url$function$
]]></string>
			<result_param name="returnValue" jt="1111" type="uuid" />
		</procedure>
		<procedure name="uuid_ns_x500" id="Procedure_33db92c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION public.uuid_ns_x500()
 RETURNS uuid
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/uuid-ossp', $function$uuid_ns_x500$function$
]]></string>
			<result_param name="returnValue" jt="1111" type="uuid" />
		</procedure>
	</schema>
	<schema name="stage" catalogname="dwh" schemaname="stage" >
		<table name="cnb_exchange_rate_counter_currency_czk_d" >
			<column name="datum" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="usd_1" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="eur_1" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="cnb_exchange_rate_counter_currency_czk_i" >
			<column name="datum" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="usd_1" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="eur_1" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_czech_national_bank__exchange_rate_counter_currency_czk_i" unique="PRIMARY_KEY" >
				<column name="datum" />
				<column name="usd_1" />
				<column name="eur_1" />
			</index>
		</table>
		<table name="jira_issue_comment_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="author_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="body" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="update_author_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="created" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="updated" type="text" decimal="0" jt="12" />
			<column name="jsdpublic" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="issue_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="author_account_id" type="text" decimal="0" jt="12" />
			<column name="update_author_account_id" type="text" decimal="0" jt="12" />
		</table>
		<table name="jira_issue_comment_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="author_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="body" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="update_author_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="created" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="updated" type="text" decimal="0" jt="12" />
			<column name="jsdpublic" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="issue_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="author_account_id" type="text" decimal="0" jt="12" />
			<column name="update_author_account_id" type="text" decimal="0" jt="12" />
			<index name="pk_jira_issue_comment_i" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="jira_issue_d" >
			<column name="issue_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="issue_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="status" type="text" decimal="0" jt="12" />
			<column name="summary" type="text" decimal="0" jt="12" />
			<column name="priority" type="text" decimal="0" jt="12" />
			<column name="sla_priority" type="text" decimal="0" jt="12" />
			<column name="description" type="text" decimal="0" jt="12" />
			<column name="issue_type" type="text" decimal="0" jt="12" />
			<column name="resolution" type="text" decimal="0" jt="12" />
			<column name="deployment" type="text" decimal="0" jt="12" />
			<column name="epic" type="text" decimal="0" jt="12" />
			<column name="original_estimate_seconds" type="text" decimal="0" jt="12" />
			<column name="remaining_estimate_seconds" type="text" decimal="0" jt="12" />
			<column name="aggregate_original_estimate_seconds" type="text" decimal="0" jt="12" />
			<column name="aggregate_remaining_estimate_seconds" type="text" decimal="0" jt="12" />
			<column name="labels" type="text" decimal="0" jt="12" />
			<column name="components" type="text" decimal="0" jt="12" />
			<column name="fix_versions" type="text" decimal="0" jt="12" />
			<column name="affected_versions" type="text" decimal="0" jt="12" />
			<column name="project_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="creator_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="reporter_key" type="text" decimal="0" jt="12" />
			<column name="assignee_key" type="text" decimal="0" jt="12" />
			<column name="account_name" type="text" decimal="0" jt="12" />
			<column name="pilot_date" type="text" decimal="0" jt="12" />
			<column name="sales_date" type="text" decimal="0" jt="12" />
			<column name="first_response_timestamp" type="text" decimal="0" jt="12" />
			<column name="created_timestamp" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="resolution_timestamp" type="text" decimal="0" jt="12" />
			<column name="inception_date" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="deployment_date" type="text" decimal="0" jt="12" />
			<column name="account_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="pilot_finished_date" type="text" decimal="0" jt="12" />
			<column name="assignee_account_id" type="text" decimal="0" jt="12" />
			<column name="creator_account_id" type="text" decimal="0" jt="12" />
			<column name="reporter_account_id" type="text" decimal="0" jt="12" />
		</table>
		<table name="jira_issue_i" >
			<column name="issue_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="issue_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="status" type="text" decimal="0" jt="12" />
			<column name="summary" type="text" decimal="0" jt="12" />
			<column name="priority" type="text" decimal="0" jt="12" />
			<column name="sla_priority" type="text" decimal="0" jt="12" />
			<column name="description" type="text" decimal="0" jt="12" />
			<column name="issue_type" type="text" decimal="0" jt="12" />
			<column name="resolution" type="text" decimal="0" jt="12" />
			<column name="deployment" type="text" decimal="0" jt="12" />
			<column name="epic" type="text" decimal="0" jt="12" />
			<column name="original_estimate_seconds" type="text" decimal="0" jt="12" />
			<column name="remaining_estimate_seconds" type="text" decimal="0" jt="12" />
			<column name="aggregate_original_estimate_seconds" type="text" decimal="0" jt="12" />
			<column name="aggregate_remaining_estimate_seconds" type="text" decimal="0" jt="12" />
			<column name="labels" type="text" decimal="0" jt="12" />
			<column name="components" type="text" decimal="0" jt="12" />
			<column name="fix_versions" type="text" decimal="0" jt="12" />
			<column name="affected_versions" type="text" decimal="0" jt="12" />
			<column name="project_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="creator_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="reporter_key" type="text" decimal="0" jt="12" />
			<column name="assignee_key" type="text" decimal="0" jt="12" />
			<column name="account_name" type="text" decimal="0" jt="12" />
			<column name="pilot_date" type="text" decimal="0" jt="12" />
			<column name="sales_date" type="text" decimal="0" jt="12" />
			<column name="first_response_timestamp" type="text" decimal="0" jt="12" />
			<column name="created_timestamp" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="resolution_timestamp" type="text" decimal="0" jt="12" />
			<column name="inception_date" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="deployment_date" type="text" decimal="0" jt="12" />
			<column name="account_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="pilot_finished_date" type="text" decimal="0" jt="12" />
			<column name="assignee_account_id" type="text" decimal="0" jt="12" />
			<column name="creator_account_id" type="text" decimal="0" jt="12" />
			<column name="reporter_account_id" type="text" decimal="0" jt="12" />
		</table>
		<table name="jira_issue_relation_d" >
			<column name="issue_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="issue_key_related_issue" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="relation" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="relation_direction" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="issue_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="issue_id_related_issue" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="jira_issue_relation_i" >
			<column name="issue_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="issue_key_related_issue" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="relation" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="relation_direction" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="issue_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="full_issue_json_response" type="text" decimal="0" jt="12" />
			<column name="issue_id_related_issue" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_jira_issue_relation_i" unique="PRIMARY_KEY" >
				<column name="issue_key" />
				<column name="issue_key_related_issue" />
				<column name="relation" />
				<column name="relation_direction" />
			</index>
		</table>
		<table name="jira_project_d" >
			<column name="project_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="project_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="jira_project_i" >
			<column name="project_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="project_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_jira_project_i" unique="PRIMARY_KEY" >
				<column name="project_key" />
			</index>
		</table>
		<table name="jira_release_d" >
			<column name="release_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="description" type="text" decimal="0" jt="12" />
			<column name="start_date" type="text" decimal="0" jt="12" />
			<column name="release_date" type="text" decimal="0" jt="12" />
			<column name="project_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="jira_release_i" >
			<column name="release_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="description" type="text" decimal="0" jt="12" />
			<column name="start_date" type="text" decimal="0" jt="12" />
			<column name="release_date" type="text" decimal="0" jt="12" />
			<column name="project_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_jira_release_i" unique="PRIMARY_KEY" >
				<column name="release_id" />
			</index>
		</table>
		<table name="jira_tempo_account_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="key" type="text" decimal="0" jt="12" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="status" type="text" decimal="0" jt="12" />
			<column name="customer_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="customer_key" type="text" decimal="0" jt="12" />
			<column name="customer_name" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="lead_account_id" type="text" decimal="0" jt="12" />
			<column name="lead_display_name" type="text" decimal="0" jt="12" />
			<column name="global" type="text" decimal="0" jt="12" />
		</table>
		<table name="jira_tempo_account_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="key" type="text" decimal="0" jt="12" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="status" type="text" decimal="0" jt="12" />
			<column name="customer_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="customer_key" type="text" decimal="0" jt="12" />
			<column name="customer_name" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="lead_account_id" type="text" decimal="0" jt="12" />
			<column name="lead_display_name" type="text" decimal="0" jt="12" />
			<column name="global" type="text" decimal="0" jt="12" />
		</table>
		<table name="jira_tempo_customer_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="key" type="text" decimal="0" jt="12" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="jira_tempo_customer_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="key" type="text" decimal="0" jt="12" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="jira_user_d" >
			<column name="user_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="account_id" type="text" decimal="0" jt="12" />
			<column name="account_type" type="text" decimal="0" jt="12" />
			<column name="display_name" type="text" decimal="0" jt="12" />
			<column name="active" type="bool" length="1" decimal="0" jt="-7" />
		</table>
		<table name="jira_user_employee_d" >
			<column name="user_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="account_id" type="text" decimal="0" jt="12" />
			<column name="account_type" type="text" decimal="0" jt="12" />
			<column name="display_name" type="text" decimal="0" jt="12" />
			<column name="active" type="bool" length="1" decimal="0" jt="-7" />
		</table>
		<table name="jira_user_employee_i" >
			<column name="user_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="account_id" type="text" decimal="0" jt="12" />
			<column name="account_type" type="text" decimal="0" jt="12" />
			<column name="display_name" type="text" decimal="0" jt="12" />
			<column name="active" type="bool" length="1" decimal="0" jt="-7" />
		</table>
		<table name="jira_user_i" >
			<column name="user_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="account_id" type="text" decimal="0" jt="12" />
			<column name="account_type" type="text" decimal="0" jt="12" />
			<column name="display_name" type="text" decimal="0" jt="12" />
			<column name="active" type="bool" length="1" decimal="0" jt="-7" />
		</table>
		<table name="jira_worklog_d" >
			<column name="issue_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="tempo_worklog_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="jira_worklog_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="issue_key" type="text" decimal="0" jt="12" />
			<column name="worklog_comment" type="text" decimal="0" jt="12" />
			<column name="time_logged_seconds" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="author_account_id" type="text" decimal="0" jt="12" />
			<column name="work_started_at_date" type="text" decimal="0" jt="12" />
			<column name="work_started_at_time" type="text" decimal="0" jt="12" />
			<column name="created_at_timestamp" type="text" decimal="0" jt="12" />
			<column name="updated_at_timestamp" type="text" decimal="0" jt="12" />
		</table>
		<table name="jira_worklog_i" >
			<column name="issue_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="tempo_worklog_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="jira_worklog_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="issue_key" type="text" decimal="0" jt="12" />
			<column name="worklog_comment" type="text" decimal="0" jt="12" />
			<column name="time_logged_seconds" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="author_account_id" type="text" decimal="0" jt="12" />
			<column name="work_started_at_date" type="text" decimal="0" jt="12" />
			<column name="work_started_at_time" type="text" decimal="0" jt="12" />
			<column name="created_at_timestamp" type="text" decimal="0" jt="12" />
			<column name="updated_at_timestamp" type="text" decimal="0" jt="12" />
		</table>
		<table name="mailchimp_campaign_d" >
			<column name="id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="web_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="create_time" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="archive_url" type="text" decimal="0" jt="12" />
			<column name="long_archive_url" type="text" decimal="0" jt="12" />
			<column name="status" type="text" decimal="0" jt="12" />
			<column name="emails_sent" type="integer" length="10" decimal="0" jt="4" />
			<column name="content_type" type="text" decimal="0" jt="12" />
			<column name="needs_block_refresh" type="bool" length="1" decimal="0" jt="-7" />
			<column name="recipients_list_id" type="text" decimal="0" jt="12" />
			<column name="recipients_list_is_active" type="text" decimal="0" jt="12" />
			<column name="recipients_list_name" type="text" decimal="0" jt="12" />
			<column name="recipients_segment_text" type="text" decimal="0" jt="12" />
			<column name="recipients_recipient_count" type="integer" length="10" decimal="0" jt="4" />
			<column name="settings_subject_line" type="text" decimal="0" jt="12" />
			<column name="settings_title" type="text" decimal="0" jt="12" />
			<column name="settings_from_name" type="text" decimal="0" jt="12" />
			<column name="settings_reply_to" type="text" decimal="0" jt="12" />
			<column name="settings_use_conversation" type="bool" length="1" decimal="0" jt="-7" />
			<column name="settings_to_name" type="text" decimal="0" jt="12" />
			<column name="settings_folder_id" type="text" decimal="0" jt="12" />
			<column name="settings_authenticate" type="bool" length="1" decimal="0" jt="-7" />
			<column name="settings_auto_footer" type="bool" length="1" decimal="0" jt="-7" />
			<column name="settings_inline_css" type="bool" length="1" decimal="0" jt="-7" />
			<column name="settings_auto_tweet" type="bool" length="1" decimal="0" jt="-7" />
			<column name="settings_fb_comments" type="bool" length="1" decimal="0" jt="-7" />
			<column name="settings_timewarp" type="bool" length="1" decimal="0" jt="-7" />
			<column name="settings_template_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="settings_drag_and_drop" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tracking_opens" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tracking_html_clicks" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tracking_text_clicks" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tracking_goal_tracking" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tracking_ecomm360" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tracking_google_analytics" type="text" decimal="0" jt="12" />
			<column name="tracking_clicktale" type="text" decimal="0" jt="12" />
			<column name="report_summary_opens" type="integer" length="10" decimal="0" jt="4" />
			<column name="report_summary_unique_opens" type="integer" length="10" decimal="0" jt="4" />
			<column name="report_summary_open_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="report_summary_clicks" type="integer" length="10" decimal="0" jt="4" />
			<column name="report_summary_subscriber_clicks" type="integer" length="10" decimal="0" jt="4" />
			<column name="report_summary_click_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="report_summary_ecommerce_total_orders" type="integer" length="10" decimal="0" jt="4" />
			<column name="report_summary_ecommerce_total_spent" type="integer" length="10" decimal="0" jt="4" />
			<column name="report_summary_ecommerce_total_revenue" type="integer" length="10" decimal="0" jt="4" />
			<column name="delivery_status_enabled" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="mailchimp_campaign_i" >
			<column name="id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="web_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="create_time" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="archive_url" type="text" decimal="0" jt="12" />
			<column name="long_archive_url" type="text" decimal="0" jt="12" />
			<column name="status" type="text" decimal="0" jt="12" />
			<column name="emails_sent" type="integer" length="10" decimal="0" jt="4" />
			<column name="content_type" type="text" decimal="0" jt="12" />
			<column name="needs_block_refresh" type="bool" length="1" decimal="0" jt="-7" />
			<column name="recipients_list_id" type="text" decimal="0" jt="12" />
			<column name="recipients_list_is_active" type="text" decimal="0" jt="12" />
			<column name="recipients_list_name" type="text" decimal="0" jt="12" />
			<column name="recipients_segment_text" type="text" decimal="0" jt="12" />
			<column name="recipients_recipient_count" type="integer" length="10" decimal="0" jt="4" />
			<column name="settings_subject_line" type="text" decimal="0" jt="12" />
			<column name="settings_title" type="text" decimal="0" jt="12" />
			<column name="settings_from_name" type="text" decimal="0" jt="12" />
			<column name="settings_reply_to" type="text" decimal="0" jt="12" />
			<column name="settings_use_conversation" type="bool" length="1" decimal="0" jt="-7" />
			<column name="settings_to_name" type="text" decimal="0" jt="12" />
			<column name="settings_folder_id" type="text" decimal="0" jt="12" />
			<column name="settings_authenticate" type="bool" length="1" decimal="0" jt="-7" />
			<column name="settings_auto_footer" type="bool" length="1" decimal="0" jt="-7" />
			<column name="settings_inline_css" type="bool" length="1" decimal="0" jt="-7" />
			<column name="settings_auto_tweet" type="bool" length="1" decimal="0" jt="-7" />
			<column name="settings_fb_comments" type="bool" length="1" decimal="0" jt="-7" />
			<column name="settings_timewarp" type="bool" length="1" decimal="0" jt="-7" />
			<column name="settings_template_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="settings_drag_and_drop" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tracking_opens" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tracking_html_clicks" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tracking_text_clicks" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tracking_goal_tracking" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tracking_ecomm360" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tracking_google_analytics" type="text" decimal="0" jt="12" />
			<column name="tracking_clicktale" type="text" decimal="0" jt="12" />
			<column name="report_summary_opens" type="integer" length="10" decimal="0" jt="4" />
			<column name="report_summary_unique_opens" type="integer" length="10" decimal="0" jt="4" />
			<column name="report_summary_open_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="report_summary_clicks" type="integer" length="10" decimal="0" jt="4" />
			<column name="report_summary_subscriber_clicks" type="integer" length="10" decimal="0" jt="4" />
			<column name="report_summary_click_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="report_summary_ecommerce_total_orders" type="integer" length="10" decimal="0" jt="4" />
			<column name="report_summary_ecommerce_total_spent" type="integer" length="10" decimal="0" jt="4" />
			<column name="report_summary_ecommerce_total_revenue" type="integer" length="10" decimal="0" jt="4" />
			<column name="delivery_status_enabled" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_mailchimp_campaign_i_id" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="mailchimp_list_d" >
			<column name="id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="web_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="contact_company" type="text" decimal="0" jt="12" />
			<column name="contact_address1" type="text" decimal="0" jt="12" />
			<column name="contact_address2" type="text" decimal="0" jt="12" />
			<column name="contact_city" type="text" decimal="0" jt="12" />
			<column name="contact_state" type="text" decimal="0" jt="12" />
			<column name="contact_zip" type="text" decimal="0" jt="12" />
			<column name="contact_country" type="text" decimal="0" jt="12" />
			<column name="contact_phone" type="text" decimal="0" jt="12" />
			<column name="permission_reminder" type="text" decimal="0" jt="12" />
			<column name="use_archive_bar" type="text" decimal="0" jt="12" />
			<column name="campaign_defaults_from_name" type="text" decimal="0" jt="12" />
			<column name="campaign_defaults_from_email" type="text" decimal="0" jt="12" />
			<column name="campaign_defaults_subject" type="text" decimal="0" jt="12" />
			<column name="campaign_defaults_language" type="text" decimal="0" jt="12" />
			<column name="notify_on_subscribe" type="text" decimal="0" jt="12" />
			<column name="notify_on_unsubscribe" type="text" decimal="0" jt="12" />
			<column name="date_created" type="text" decimal="0" jt="12" />
			<column name="list_rating" type="integer" length="10" decimal="0" jt="4" />
			<column name="email_type_option" type="bool" length="1" decimal="0" jt="-7" />
			<column name="subscribe_url_short" type="text" decimal="0" jt="12" />
			<column name="subscribe_url_long" type="text" decimal="0" jt="12" />
			<column name="beamer_address" type="text" decimal="0" jt="12" />
			<column name="visibility" type="text" decimal="0" jt="12" />
			<column name="double_optin" type="bool" length="1" decimal="0" jt="-7" />
			<column name="marketing_permissions" type="bool" length="1" decimal="0" jt="-7" />
			<column name="modules" type="text" decimal="0" jt="12" />
			<column name="stats_member_count" type="integer" length="10" decimal="0" jt="4" />
			<column name="stats_unsubscribe_count" type="integer" length="10" decimal="0" jt="4" />
			<column name="stats_cleaned_count" type="integer" length="10" decimal="0" jt="4" />
			<column name="stats_member_count_since_send" type="integer" length="10" decimal="0" jt="4" />
			<column name="stats_unsubscribe_count_since_send" type="integer" length="10" decimal="0" jt="4" />
			<column name="stats_cleaned_count_since_send" type="integer" length="10" decimal="0" jt="4" />
			<column name="stats_campaign_count" type="integer" length="10" decimal="0" jt="4" />
			<column name="stats_campaign_last_sent" type="text" decimal="0" jt="12" />
			<column name="stats_merge_field_count" type="integer" length="10" decimal="0" jt="4" />
			<column name="stats_avg_sub_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="stats_avg_unsub_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="stats_target_sub_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="stats_open_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="stats_click_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="stats_last_sub_date" type="text" decimal="0" jt="12" />
			<column name="stats_last_unsub_date" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="mailchimp_list_i" >
			<column name="id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="web_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="contact_company" type="text" decimal="0" jt="12" />
			<column name="contact_address1" type="text" decimal="0" jt="12" />
			<column name="contact_address2" type="text" decimal="0" jt="12" />
			<column name="contact_city" type="text" decimal="0" jt="12" />
			<column name="contact_state" type="text" decimal="0" jt="12" />
			<column name="contact_zip" type="text" decimal="0" jt="12" />
			<column name="contact_country" type="text" decimal="0" jt="12" />
			<column name="contact_phone" type="text" decimal="0" jt="12" />
			<column name="permission_reminder" type="text" decimal="0" jt="12" />
			<column name="use_archive_bar" type="text" decimal="0" jt="12" />
			<column name="campaign_defaults_from_name" type="text" decimal="0" jt="12" />
			<column name="campaign_defaults_from_email" type="text" decimal="0" jt="12" />
			<column name="campaign_defaults_subject" type="text" decimal="0" jt="12" />
			<column name="campaign_defaults_language" type="text" decimal="0" jt="12" />
			<column name="notify_on_subscribe" type="text" decimal="0" jt="12" />
			<column name="notify_on_unsubscribe" type="text" decimal="0" jt="12" />
			<column name="date_created" type="text" decimal="0" jt="12" />
			<column name="list_rating" type="integer" length="10" decimal="0" jt="4" />
			<column name="email_type_option" type="bool" length="1" decimal="0" jt="-7" />
			<column name="subscribe_url_short" type="text" decimal="0" jt="12" />
			<column name="subscribe_url_long" type="text" decimal="0" jt="12" />
			<column name="beamer_address" type="text" decimal="0" jt="12" />
			<column name="visibility" type="text" decimal="0" jt="12" />
			<column name="double_optin" type="bool" length="1" decimal="0" jt="-7" />
			<column name="marketing_permissions" type="bool" length="1" decimal="0" jt="-7" />
			<column name="modules" type="text" decimal="0" jt="12" />
			<column name="stats_member_count" type="integer" length="10" decimal="0" jt="4" />
			<column name="stats_unsubscribe_count" type="integer" length="10" decimal="0" jt="4" />
			<column name="stats_cleaned_count" type="integer" length="10" decimal="0" jt="4" />
			<column name="stats_member_count_since_send" type="integer" length="10" decimal="0" jt="4" />
			<column name="stats_unsubscribe_count_since_send" type="integer" length="10" decimal="0" jt="4" />
			<column name="stats_cleaned_count_since_send" type="integer" length="10" decimal="0" jt="4" />
			<column name="stats_campaign_count" type="integer" length="10" decimal="0" jt="4" />
			<column name="stats_campaign_last_sent" type="text" decimal="0" jt="12" />
			<column name="stats_merge_field_count" type="integer" length="10" decimal="0" jt="4" />
			<column name="stats_avg_sub_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="stats_avg_unsub_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="stats_target_sub_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="stats_open_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="stats_click_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="stats_last_sub_date" type="text" decimal="0" jt="12" />
			<column name="stats_last_unsub_date" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_mailchimp_mailing_list_i_id" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="mailchimp_list_member_d" >
			<column name="id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="unique_email_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="status" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="merge_fields_fname" type="text" decimal="0" jt="12" />
			<column name="merge_fields_lname" type="text" decimal="0" jt="12" />
			<column name="merge_fields" type="text" decimal="0" jt="12" />
			<column name="stats_avg_open_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="stats_avg_click_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="ip_signup" type="text" decimal="0" jt="12" />
			<column name="timestamp_signup" type="text" decimal="0" jt="12" />
			<column name="ip_opt" type="text" decimal="0" jt="12" />
			<column name="timestamp_opt" type="text" decimal="0" jt="12" />
			<column name="member_rating" type="integer" length="10" decimal="0" jt="4" />
			<column name="last_changed" type="text" decimal="0" jt="12" />
			<column name="language" type="text" decimal="0" jt="12" />
			<column name="vip" type="bool" length="1" decimal="0" jt="-7" />
			<column name="email_client" type="text" decimal="0" jt="12" />
			<column name="location_latitude" type="integer" length="10" decimal="0" jt="4" />
			<column name="location_longitude" type="integer" length="10" decimal="0" jt="4" />
			<column name="location_gmtoff" type="integer" length="10" decimal="0" jt="4" />
			<column name="location_dstoff" type="integer" length="10" decimal="0" jt="4" />
			<column name="location_country_code" type="text" decimal="0" jt="12" />
			<column name="location_timezone" type="text" decimal="0" jt="12" />
			<column name="list_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="mailchimp_list_member_i" >
			<column name="id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="unique_email_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="status" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="merge_fields_fname" type="text" decimal="0" jt="12" />
			<column name="merge_fields_lname" type="text" decimal="0" jt="12" />
			<column name="merge_fields" type="text" decimal="0" jt="12" />
			<column name="stats_avg_open_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="stats_avg_click_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="ip_signup" type="text" decimal="0" jt="12" />
			<column name="timestamp_signup" type="text" decimal="0" jt="12" />
			<column name="ip_opt" type="text" decimal="0" jt="12" />
			<column name="timestamp_opt" type="text" decimal="0" jt="12" />
			<column name="member_rating" type="integer" length="10" decimal="0" jt="4" />
			<column name="last_changed" type="text" decimal="0" jt="12" />
			<column name="language" type="text" decimal="0" jt="12" />
			<column name="vip" type="bool" length="1" decimal="0" jt="-7" />
			<column name="email_client" type="text" decimal="0" jt="12" />
			<column name="location_latitude" type="integer" length="10" decimal="0" jt="4" />
			<column name="location_longitude" type="integer" length="10" decimal="0" jt="4" />
			<column name="location_gmtoff" type="integer" length="10" decimal="0" jt="4" />
			<column name="location_dstoff" type="integer" length="10" decimal="0" jt="4" />
			<column name="location_country_code" type="text" decimal="0" jt="12" />
			<column name="location_timezone" type="text" decimal="0" jt="12" />
			<column name="list_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="mailchimp_list_segment_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="member_count" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="created_at" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="updated_at" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="options" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="list_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="mailchimp_list_segment_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="member_count" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="created_at" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="updated_at" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="options" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="list_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_mailchimp_segment_i_id" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="mailchimp_list_segment_member_d" >
			<column name="id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="unique_email_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="list_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="list_segment_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="mailchimp_list_segment_member_i" >
			<column name="id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="unique_email_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="list_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="list_segment_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="mailchimp_report_click_report_d" >
			<column name="id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="url" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="total_clicks" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="click_percentage" type="real" length="8" decimal="8" jt="7" />
			<column name="unique_clicks" type="integer" length="10" decimal="0" jt="4" />
			<column name="unique_click_percentage" type="real" length="8" decimal="8" jt="7" />
			<column name="last_click" type="text" decimal="0" jt="12" />
			<column name="campaign_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="mailchimp_report_click_report_i" >
			<column name="id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="url" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="total_clicks" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="click_percentage" type="real" length="8" decimal="8" jt="7" />
			<column name="unique_clicks" type="integer" length="10" decimal="0" jt="4" />
			<column name="unique_click_percentage" type="real" length="8" decimal="8" jt="7" />
			<column name="last_click" type="text" decimal="0" jt="12" />
			<column name="campaign_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="mailchimp_report_click_report_member_d" >
			<column name="email_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="clicks" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="campaign_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="url_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="list_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="mailchimp_report_click_report_member_i" >
			<column name="email_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="clicks" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="campaign_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="url_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="list_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="merge_fields_fname" type="text" decimal="0" jt="12" />
			<column name="merge_fields_lname" type="text" decimal="0" jt="12" />
		</table>
		<table name="mailchimp_report_d" >
			<column name="id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="campaign_title" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="list_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="list_is_active" type="bool" length="1" decimal="0" jt="-7" />
			<column name="list_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="subject_line" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="preview_text" type="text" decimal="0" jt="12" />
			<column name="emails_sent" type="integer" length="10" decimal="0" jt="4" />
			<column name="abuse_reports" type="integer" length="10" decimal="0" jt="4" />
			<column name="unsubscribed" type="integer" length="10" decimal="0" jt="4" />
			<column name="send_time" type="text" decimal="0" jt="12" />
			<column name="bounces_hard_bounces" type="integer" length="10" decimal="0" jt="4" />
			<column name="bounces_soft_bounces" type="integer" length="10" decimal="0" jt="4" />
			<column name="bounces_syntax_errors" type="integer" length="10" decimal="0" jt="4" />
			<column name="forwards_forwards_count" type="integer" length="10" decimal="0" jt="4" />
			<column name="forwards_forwards_opens" type="integer" length="10" decimal="0" jt="4" />
			<column name="opens_opens_total" type="integer" length="10" decimal="0" jt="4" />
			<column name="opens_unique_opens" type="integer" length="10" decimal="0" jt="4" />
			<column name="opens_open_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="opens_last_open" type="text" decimal="0" jt="12" />
			<column name="clicks_clicks_total" type="integer" length="10" decimal="0" jt="4" />
			<column name="clicks_unique_clicks" type="integer" length="10" decimal="0" jt="4" />
			<column name="clicks_unique_subscriber_clicks" type="integer" length="10" decimal="0" jt="4" />
			<column name="clicks_click_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="clicks_last_click" type="text" decimal="0" jt="12" />
			<column name="facebook_likes_recipient_likes" type="integer" length="10" decimal="0" jt="4" />
			<column name="facebook_likes_unique_likes" type="integer" length="10" decimal="0" jt="4" />
			<column name="facebook_likes_facebook_likes" type="integer" length="10" decimal="0" jt="4" />
			<column name="industry_stats_type" type="text" decimal="0" jt="12" />
			<column name="industry_stats_open_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_stats_click_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_stats_bounce_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_stats_unopen_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_stats_unsub_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_stats_abuse_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="list_stats_sub_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="list_stats_unsub_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="list_stats_open_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="list_stats_click_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="ecommerce_total_orders" type="integer" length="10" decimal="0" jt="4" />
			<column name="ecommerce_total_spent" type="integer" length="10" decimal="0" jt="4" />
			<column name="ecommerce_total_revenue" type="integer" length="10" decimal="0" jt="4" />
			<column name="delivery_status_enabled" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="mailchimp_report_email_activity_d" >
			<column name="campaign_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="list_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="activity_action" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="activity_type" type="text" decimal="0" jt="12" />
			<column name="activity_timestamp" type="text" decimal="0" jt="12" />
			<column name="activity_url" type="text" decimal="0" jt="12" />
			<column name="activity_ip" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="mailchimp_report_email_activity_i" >
			<column name="campaign_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="list_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="activity_action" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="activity_type" type="text" decimal="0" jt="12" />
			<column name="activity_timestamp" type="text" decimal="0" jt="12" />
			<column name="activity_url" type="text" decimal="0" jt="12" />
			<column name="activity_ip" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="mailchimp_report_i" >
			<column name="id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="campaign_title" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="list_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="list_is_active" type="bool" length="1" decimal="0" jt="-7" />
			<column name="list_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="subject_line" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="preview_text" type="text" decimal="0" jt="12" />
			<column name="emails_sent" type="integer" length="10" decimal="0" jt="4" />
			<column name="abuse_reports" type="integer" length="10" decimal="0" jt="4" />
			<column name="unsubscribed" type="integer" length="10" decimal="0" jt="4" />
			<column name="send_time" type="text" decimal="0" jt="12" />
			<column name="bounces_hard_bounces" type="integer" length="10" decimal="0" jt="4" />
			<column name="bounces_soft_bounces" type="integer" length="10" decimal="0" jt="4" />
			<column name="bounces_syntax_errors" type="integer" length="10" decimal="0" jt="4" />
			<column name="forwards_forwards_count" type="integer" length="10" decimal="0" jt="4" />
			<column name="forwards_forwards_opens" type="integer" length="10" decimal="0" jt="4" />
			<column name="opens_opens_total" type="integer" length="10" decimal="0" jt="4" />
			<column name="opens_unique_opens" type="integer" length="10" decimal="0" jt="4" />
			<column name="opens_open_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="opens_last_open" type="text" decimal="0" jt="12" />
			<column name="clicks_clicks_total" type="integer" length="10" decimal="0" jt="4" />
			<column name="clicks_unique_clicks" type="integer" length="10" decimal="0" jt="4" />
			<column name="clicks_unique_subscriber_clicks" type="integer" length="10" decimal="0" jt="4" />
			<column name="clicks_click_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="clicks_last_click" type="text" decimal="0" jt="12" />
			<column name="facebook_likes_recipient_likes" type="integer" length="10" decimal="0" jt="4" />
			<column name="facebook_likes_unique_likes" type="integer" length="10" decimal="0" jt="4" />
			<column name="facebook_likes_facebook_likes" type="integer" length="10" decimal="0" jt="4" />
			<column name="industry_stats_type" type="text" decimal="0" jt="12" />
			<column name="industry_stats_open_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_stats_click_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_stats_bounce_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_stats_unopen_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_stats_unsub_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="industry_stats_abuse_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="list_stats_sub_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="list_stats_unsub_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="list_stats_open_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="list_stats_click_rate" type="real" length="8" decimal="8" jt="7" />
			<column name="ecommerce_total_orders" type="integer" length="10" decimal="0" jt="4" />
			<column name="ecommerce_total_spent" type="integer" length="10" decimal="0" jt="4" />
			<column name="ecommerce_total_revenue" type="integer" length="10" decimal="0" jt="4" />
			<column name="delivery_status_enabled" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_mailchimp_report_i_id" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="mailchimp_report_open_report_d" >
			<column name="campaign_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="list_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="vip" type="text" decimal="0" jt="12" />
			<column name="opens_count" type="integer" length="10" decimal="0" jt="4" />
			<column name="opens_timestamp" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="merge_fields_fname" type="text" decimal="0" jt="12" />
			<column name="merge_fields_lname" type="text" decimal="0" jt="12" />
		</table>
		<table name="mailchimp_report_open_report_i" >
			<column name="campaign_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="list_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="vip" type="text" decimal="0" jt="12" />
			<column name="opens_count" type="integer" length="10" decimal="0" jt="4" />
			<column name="opens_timestamp" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="merge_fields_fname" type="text" decimal="0" jt="12" />
			<column name="merge_fields_lname" type="text" decimal="0" jt="12" />
		</table>
		<table name="mailchimp_report_sent_to_d" >
			<column name="campaign_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="merge_fields_fname" type="text" decimal="0" jt="12" />
			<column name="merge_fields_lname" type="text" decimal="0" jt="12" />
			<column name="list_id" type="text" decimal="0" jt="12" mandatory="y" />
		</table>
		<table name="mailchimp_report_sent_to_i" >
			<column name="campaign_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="email_address" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="list_id" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="merge_fields_fname" type="text" decimal="0" jt="12" />
			<column name="merge_fields_lname" type="text" decimal="0" jt="12" />
		</table>
		<table name="mailchimp_template_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="type" type="text" decimal="0" jt="12" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="drag_and_drop" type="bool" length="1" decimal="0" jt="-7" />
			<column name="responsive" type="bool" length="1" decimal="0" jt="-7" />
			<column name="category" type="text" decimal="0" jt="12" />
			<column name="date_created" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="date_edited" type="text" decimal="0" jt="12" />
			<column name="created_by" type="text" decimal="0" jt="12" />
			<column name="edited_by" type="text" decimal="0" jt="12" />
			<column name="active" type="bool" length="1" decimal="0" jt="-7" />
			<column name="thumbnail" type="text" decimal="0" jt="12" />
			<column name="share_url" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="mailchimp_template_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="type" type="text" decimal="0" jt="12" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="drag_and_drop" type="bool" length="1" decimal="0" jt="-7" />
			<column name="responsive" type="bool" length="1" decimal="0" jt="-7" />
			<column name="category" type="text" decimal="0" jt="12" />
			<column name="date_created" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="date_edited" type="text" decimal="0" jt="12" />
			<column name="created_by" type="text" decimal="0" jt="12" />
			<column name="edited_by" type="text" decimal="0" jt="12" />
			<column name="active" type="bool" length="1" decimal="0" jt="-7" />
			<column name="thumbnail" type="text" decimal="0" jt="12" />
			<column name="share_url" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="ocean_currency_d" >
			<column name="currency" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="error" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="error_description" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="ocean_currency_i" >
			<column name="currency" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="error" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="error_description" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_ocean_currency_i" unique="PRIMARY_KEY" >
				<column name="currency" />
			</index>
		</table>
		<table name="ocean_organziation_to_crm_map_d" >
			<column name="organization_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="crm_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="error" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="error_description" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="ocean_organziation_to_crm_map_i" >
			<column name="organization_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="crm_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="error" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="error_description" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_ocean_organziation_to_crm_map_i" unique="PRIMARY_KEY" >
				<column name="organization_name" />
			</index>
		</table>
		<table name="ocean_partner_list_d" >
			<column name="partner_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="ocean_partner_list_i" >
			<column name="partner_name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="is_tracked" type="bool" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_ocean_partner_list_i_partner_name" unique="PRIMARY_KEY" >
				<column name="partner_name" />
			</index>
		</table>
		<table name="ocean_payment_received_d" >
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="payment_received" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="error" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="error_description" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="ocean_payment_received_i" >
			<column name="payment_received" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="error" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="error_description" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_ocean_payment_received_i" unique="PRIMARY_KEY" >
				<column name="payment_received" />
			</index>
		</table>
		<table name="ocean_removed_jira_user_d" >
			<column name="removed_user_accountid" type="text" decimal="0" jt="12" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="ocean_removed_jira_user_i" >
			<column name="removed_user_accountid" type="text" decimal="0" jt="12" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="ux_ocean_removed_jira_user_i_accountid" unique="UNIQUE" >
				<column name="removed_user_accountid" />
			</index>
		</table>
		<table name="ocean_revenue_type_d" >
			<column name="revenue_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="error" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="error_description" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="ocean_revenue_type_i" >
			<column name="revenue_type" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="error" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="error_description" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_ocean_revenue_type_i" unique="PRIMARY_KEY" >
				<column name="revenue_type" />
			</index>
		</table>
		<table name="ocean_sales_report_d" >
			<column name="sale_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="customer" type="text" decimal="0" jt="12" />
			<column name="reseller" type="text" decimal="0" jt="12" />
			<column name="seller" type="text" decimal="0" jt="12" />
			<column name="revenue_type" type="text" decimal="0" jt="12" />
			<column name="invoice" type="text" decimal="0" jt="12" />
			<column name="booking_date" type="text" decimal="0" jt="12" />
			<column name="amount" type="numeric" length="10" decimal="2" jt="2" />
			<column name="currency" type="text" decimal="0" jt="12" />
			<column name="revenue_start" type="text" decimal="0" jt="12" />
			<column name="revenue_end" type="text" decimal="0" jt="12" />
			<column name="trade_comment" type="text" decimal="0" jt="12" />
			<column name="error" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="error_description" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="sales_rep" type="text" decimal="0" jt="12" />
			<column name="paid" type="text" decimal="0" jt="12" />
		</table>
		<table name="ocean_sales_report_i" >
			<column name="sale_key" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="customer" type="text" decimal="0" jt="12" />
			<column name="reseller" type="text" decimal="0" jt="12" />
			<column name="seller" type="text" decimal="0" jt="12" />
			<column name="revenue_type" type="text" decimal="0" jt="12" />
			<column name="invoice" type="text" decimal="0" jt="12" />
			<column name="booking_date" type="text" decimal="0" jt="12" />
			<column name="amount" type="numeric" length="10" decimal="2" jt="2" />
			<column name="currency" type="text" decimal="0" jt="12" />
			<column name="revenue_start" type="text" decimal="0" jt="12" />
			<column name="revenue_end" type="text" decimal="0" jt="12" />
			<column name="trade_comment" type="text" decimal="0" jt="12" />
			<column name="error" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="error_description" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="sales_rep" type="text" decimal="0" jt="12" />
			<column name="paid" type="text" decimal="0" jt="12" />
			<index name="pk_ocean_sales_report_i_sale_key" unique="PRIMARY_KEY" >
				<column name="sale_key" />
			</index>
		</table>
		<table name="ocean_sales_representative_d" >
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="sales_rep_code" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="crm_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="error" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="error_description" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="ocean_sales_representative_i" >
			<column name="sales_rep_code" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="crm_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="error" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="error_description" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_ocean_sales_representative_i" unique="PRIMARY_KEY" >
				<column name="sales_rep_code" />
			</index>
		</table>
		<table name="ocean_seller_d" >
			<column name="seller_code" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="error" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="error_description" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="crm_id" type="integer" length="10" decimal="0" jt="4" />
		</table>
		<table name="ocean_seller_i" >
			<column name="seller_code" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="error" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="error_description" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="crm_id" type="integer" length="10" decimal="0" jt="4" />
			<index name="pk_ocean_seller_i" unique="PRIMARY_KEY" >
				<column name="seller_code" />
			</index>
		</table>
		<table name="pipedrive_activity_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="done" type="bool" length="1" decimal="0" jt="-7" />
			<column name="type" type="text" decimal="0" jt="12" />
			<column name="reference_type" type="text" decimal="0" jt="12" />
			<column name="reference_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="due_date" type="text" decimal="0" jt="12" />
			<column name="due_time" type="text" decimal="0" jt="12" />
			<column name="duration" type="text" decimal="0" jt="12" />
			<column name="add_time" type="text" decimal="0" jt="12" />
			<column name="marked_as_done_time" type="text" decimal="0" jt="12" />
			<column name="last_notification_time" type="text" decimal="0" jt="12" />
			<column name="last_notification_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="subject" type="text" decimal="0" jt="12" />
			<column name="org_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="person_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="deal_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="active_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="update_time" type="text" decimal="0" jt="12" />
			<column name="update_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="gcal_event_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="google_calendar_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="google_calendar_etag" type="text" decimal="0" jt="12" />
			<column name="note" type="text" decimal="0" jt="12" />
			<column name="created_by_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="org_name" type="text" decimal="0" jt="12" />
			<column name="person_name" type="text" decimal="0" jt="12" />
			<column name="deal_title" type="text" decimal="0" jt="12" />
			<column name="owner_name" type="text" decimal="0" jt="12" />
			<column name="assigned_to_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_activity_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="done" type="bool" length="1" decimal="0" jt="-7" />
			<column name="type" type="text" decimal="0" jt="12" />
			<column name="reference_type" type="text" decimal="0" jt="12" />
			<column name="reference_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="due_date" type="text" decimal="0" jt="12" />
			<column name="due_time" type="text" decimal="0" jt="12" />
			<column name="duration" type="text" decimal="0" jt="12" />
			<column name="add_time" type="text" decimal="0" jt="12" />
			<column name="marked_as_done_time" type="text" decimal="0" jt="12" />
			<column name="last_notification_time" type="text" decimal="0" jt="12" />
			<column name="last_notification_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="subject" type="text" decimal="0" jt="12" />
			<column name="org_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="person_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="deal_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="active_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="update_time" type="text" decimal="0" jt="12" />
			<column name="update_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="gcal_event_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="google_calendar_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="google_calendar_etag" type="text" decimal="0" jt="12" />
			<column name="note" type="text" decimal="0" jt="12" />
			<column name="created_by_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="org_name" type="text" decimal="0" jt="12" />
			<column name="person_name" type="text" decimal="0" jt="12" />
			<column name="deal_title" type="text" decimal="0" jt="12" />
			<column name="owner_name" type="text" decimal="0" jt="12" />
			<column name="assigned_to_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_currency_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="code" type="text" decimal="0" jt="12" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="decimal_points" type="integer" length="10" decimal="0" jt="4" />
			<column name="symbol" type="text" decimal="0" jt="12" />
			<column name="active_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="is_custom_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_currency_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="code" type="text" decimal="0" jt="12" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="decimal_points" type="integer" length="10" decimal="0" jt="4" />
			<column name="symbol" type="text" decimal="0" jt="12" />
			<column name="active_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="is_custom_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_deal_category_options_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_deal_category_options_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_deal_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="creator_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="person_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="org_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="stage_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="title" type="text" decimal="0" jt="12" />
			<column name="value" type="integer" length="10" decimal="0" jt="4" />
			<column name="currency" type="text" decimal="0" jt="12" />
			<column name="add_time" type="text" decimal="0" jt="12" />
			<column name="update_time" type="text" decimal="0" jt="12" />
			<column name="stage_change_time" type="text" decimal="0" jt="12" />
			<column name="active" type="bool" length="1" decimal="0" jt="-7" />
			<column name="deleted" type="bool" length="1" decimal="0" jt="-7" />
			<column name="status" type="text" decimal="0" jt="12" />
			<column name="probability" type="integer" length="10" decimal="0" jt="4" />
			<column name="visible_to" type="integer" length="10" decimal="0" jt="4" />
			<column name="close_time" type="text" decimal="0" jt="12" />
			<column name="pipeline_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="won_time" type="text" decimal="0" jt="12" />
			<column name="first_won_time" type="text" decimal="0" jt="12" />
			<column name="lost_time" type="text" decimal="0" jt="12" />
			<column name="expected_close_date" type="text" decimal="0" jt="12" />
			<column name="industry" type="integer" length="10" decimal="0" jt="4" />
			<column name="deal_source" type="integer" length="10" decimal="0" jt="4" />
			<column name="deal_source_detail" type="text" decimal="0" jt="12" />
			<column name="region" type="integer" length="10" decimal="0" jt="4" />
			<column name="reason_lost" type="integer" length="10" decimal="0" jt="4" />
			<column name="resulting_state" type="integer" length="10" decimal="0" jt="4" />
			<column name="jira_issue_key" type="text" decimal="0" jt="12" />
			<column name="category" type="integer" length="10" decimal="0" jt="4" />
			<column name="country" type="text" decimal="0" jt="12" />
			<column name="country_subpremise" type="text" decimal="0" jt="12" />
			<column name="country_street_number" type="text" decimal="0" jt="12" />
			<column name="country_route" type="text" decimal="0" jt="12" />
			<column name="country_sublocality" type="text" decimal="0" jt="12" />
			<column name="country_locality" type="text" decimal="0" jt="12" />
			<column name="country_admin_area_level_1" type="text" decimal="0" jt="12" />
			<column name="country_admin_area_level_2" type="text" decimal="0" jt="12" />
			<column name="country_country" type="text" decimal="0" jt="12" />
			<column name="country_postal_code" type="text" decimal="0" jt="12" />
			<column name="country_formatted_address" type="text" decimal="0" jt="12" />
			<column name="vtiger_id" type="text" decimal="0" jt="12" />
			<column name="partner_identified_by" type="text" decimal="0" jt="12" />
			<column name="partner_qualified_by" type="text" decimal="0" jt="12" />
			<column name="partner_poc_done_by" type="text" decimal="0" jt="12" />
			<column name="partner_closed_by" type="text" decimal="0" jt="12" />
			<column name="partner_resold_by" type="text" decimal="0" jt="12" />
			<column name="partner_owned_by" type="text" decimal="0" jt="12" />
			<column name="partner_supported_by" type="text" decimal="0" jt="12" />
			<column name="stage_order_nr" type="integer" length="10" decimal="0" jt="4" />
			<column name="rotten_time" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="lost_reason" type="text" decimal="0" jt="12" />
		</table>
		<table name="pipedrive_deal_deal_change_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="item_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="field_key" type="text" decimal="0" jt="12" />
			<column name="old_value" type="text" decimal="0" jt="12" />
			<column name="new_value" type="text" decimal="0" jt="12" />
			<column name="is_bulk_update_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="log_time" type="text" decimal="0" jt="12" />
			<column name="change_source" type="text" decimal="0" jt="12" />
			<column name="timestamp" type="text" decimal="0" jt="12" />
			<column name="additional_data_old_value_formatted" type="text" decimal="0" jt="12" />
			<column name="additional_data_new_value_formatted" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_deal_deal_change_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="item_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="field_key" type="text" decimal="0" jt="12" />
			<column name="old_value" type="text" decimal="0" jt="12" />
			<column name="new_value" type="text" decimal="0" jt="12" />
			<column name="is_bulk_update_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="log_time" type="text" decimal="0" jt="12" />
			<column name="change_source" type="text" decimal="0" jt="12" />
			<column name="timestamp" type="text" decimal="0" jt="12" />
			<column name="additional_data_old_value_formatted" type="text" decimal="0" jt="12" />
			<column name="additional_data_new_value_formatted" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_deal_deal_source_options_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_deal_deal_source_options_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_deal_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="creator_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="person_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="org_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="stage_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="title" type="text" decimal="0" jt="12" />
			<column name="value" type="integer" length="10" decimal="0" jt="4" />
			<column name="currency" type="text" decimal="0" jt="12" />
			<column name="add_time" type="text" decimal="0" jt="12" />
			<column name="update_time" type="text" decimal="0" jt="12" />
			<column name="stage_change_time" type="text" decimal="0" jt="12" />
			<column name="active" type="bool" length="1" decimal="0" jt="-7" />
			<column name="deleted" type="bool" length="1" decimal="0" jt="-7" />
			<column name="status" type="text" decimal="0" jt="12" />
			<column name="probability" type="integer" length="10" decimal="0" jt="4" />
			<column name="visible_to" type="integer" length="10" decimal="0" jt="4" />
			<column name="close_time" type="text" decimal="0" jt="12" />
			<column name="pipeline_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="won_time" type="text" decimal="0" jt="12" />
			<column name="first_won_time" type="text" decimal="0" jt="12" />
			<column name="lost_time" type="text" decimal="0" jt="12" />
			<column name="expected_close_date" type="text" decimal="0" jt="12" />
			<column name="industry" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[pipedrive field id - 0b8f4c916653fca572a26ee0d8a65b73a9a3d6c2]]></comment>
			</column>
			<column name="deal_source" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[64896c7962fd27b8b0c719c3bbc3c9d77a2060cb]]></comment>
			</column>
			<column name="deal_source_detail" type="text" decimal="0" jt="12" >
				<comment><![CDATA[5f987ab7b72ef1083f09ed8f3011951419a6f450]]></comment>
			</column>
			<column name="region" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[e3a01ee1cb7171c2984c563024d6de5db252d945]]></comment>
			</column>
			<column name="reason_lost" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[cab2c98910b32f44caa20f84bec2db658ad2669e]]></comment>
			</column>
			<column name="resulting_state" type="integer" length="10" decimal="0" jt="4" >
				<comment><![CDATA[f6ab0c86f427fcb5d4119fc98b39805b76aea254]]></comment>
			</column>
			<column name="jira_issue_key" type="text" decimal="0" jt="12" >
				<comment><![CDATA[904ff11676a2106c5537ea5925fc5b580049693a]]></comment>
			</column>
			<column name="category" type="integer" length="10" decimal="0" jt="4" />
			<column name="country" type="text" decimal="0" jt="12" >
				<comment><![CDATA[pipedrive field id - 23a057766a74fd80cee4fbee8fd88312b4f12173]]></comment>
			</column>
			<column name="country_subpremise" type="text" decimal="0" jt="12" >
				<comment><![CDATA[pipedrive field id - 23a057766a74fd80cee4fbee8fd88312b4f12173]]></comment>
			</column>
			<column name="country_street_number" type="text" decimal="0" jt="12" >
				<comment><![CDATA[pipedrive field id - 23a057766a74fd80cee4fbee8fd88312b4f12173]]></comment>
			</column>
			<column name="country_route" type="text" decimal="0" jt="12" >
				<comment><![CDATA[pipedrive field id - 23a057766a74fd80cee4fbee8fd88312b4f12173]]></comment>
			</column>
			<column name="country_sublocality" type="text" decimal="0" jt="12" >
				<comment><![CDATA[pipedrive field id - 23a057766a74fd80cee4fbee8fd88312b4f12173]]></comment>
			</column>
			<column name="country_locality" type="text" decimal="0" jt="12" >
				<comment><![CDATA[pipedrive field id - 23a057766a74fd80cee4fbee8fd88312b4f12173]]></comment>
			</column>
			<column name="country_admin_area_level_1" type="text" decimal="0" jt="12" >
				<comment><![CDATA[pipedrive field id - 23a057766a74fd80cee4fbee8fd88312b4f12173]]></comment>
			</column>
			<column name="country_admin_area_level_2" type="text" decimal="0" jt="12" >
				<comment><![CDATA[pipedrive field id - 23a057766a74fd80cee4fbee8fd88312b4f12173]]></comment>
			</column>
			<column name="country_country" type="text" decimal="0" jt="12" >
				<comment><![CDATA[pipedrive field id - 23a057766a74fd80cee4fbee8fd88312b4f12173]]></comment>
			</column>
			<column name="country_postal_code" type="text" decimal="0" jt="12" >
				<comment><![CDATA[pipedrive field id - 23a057766a74fd80cee4fbee8fd88312b4f12173]]></comment>
			</column>
			<column name="country_formatted_address" type="text" decimal="0" jt="12" >
				<comment><![CDATA[pipedrive field id - 23a057766a74fd80cee4fbee8fd88312b4f12173]]></comment>
			</column>
			<column name="vtiger_id" type="text" decimal="0" jt="12" />
			<column name="partner_identified_by" type="text" decimal="0" jt="12" />
			<column name="partner_qualified_by" type="text" decimal="0" jt="12" />
			<column name="partner_poc_done_by" type="text" decimal="0" jt="12" />
			<column name="partner_closed_by" type="text" decimal="0" jt="12" />
			<column name="partner_resold_by" type="text" decimal="0" jt="12" />
			<column name="partner_owned_by" type="text" decimal="0" jt="12" />
			<column name="partner_supported_by" type="text" decimal="0" jt="12" />
			<column name="stage_order_nr" type="integer" length="10" decimal="0" jt="4" />
			<column name="rotten_time" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="lost_reason" type="text" decimal="0" jt="12" />
		</table>
		<table name="pipedrive_deal_industry_options_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_deal_industry_options_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_deal_mail_message_d" >
			<column name="timestamp" type="text" decimal="0" jt="12" />
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="from_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="from_email_address" type="text" decimal="0" jt="12" />
			<column name="from_name" type="text" decimal="0" jt="12" />
			<column name="from_linked_person_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="from_linked_person_name" type="text" decimal="0" jt="12" />
			<column name="from_mail_message_party_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="to_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="to_email_address" type="text" decimal="0" jt="12" />
			<column name="to_name" type="text" decimal="0" jt="12" />
			<column name="to_linked_person_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="to_linked_person_name" type="text" decimal="0" jt="12" />
			<column name="to_mail_message_party_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="cc_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="cc_email_address" type="text" decimal="0" jt="12" />
			<column name="cc_name" type="text" decimal="0" jt="12" />
			<column name="cc_linked_person_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="cc_linked_person_name" type="text" decimal="0" jt="12" />
			<column name="cc_mail_message_party_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="bcc_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="bcc_email_address" type="text" decimal="0" jt="12" />
			<column name="bcc_name" type="text" decimal="0" jt="12" />
			<column name="bcc_linked_person_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="bcc_linked_person_name" type="text" decimal="0" jt="12" />
			<column name="bcc_mail_message_party_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="body_url" type="text" decimal="0" jt="12" />
			<column name="nylas_id" type="text" decimal="0" jt="12" />
			<column name="account_id" type="text" decimal="0" jt="12" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="mail_thread_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="subject" type="text" decimal="0" jt="12" />
			<column name="snippet" type="text" decimal="0" jt="12" />
			<column name="mail_tracking_status" type="text" decimal="0" jt="12" />
			<column name="mail_link_tracking_enabled_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="read_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="draft_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="synced_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="deleted_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="has_body_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="sent_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="sent_from_pipedrive_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="smart_bcc_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="message_time" type="text" decimal="0" jt="12" />
			<column name="add_time" type="text" decimal="0" jt="12" />
			<column name="update_time" type="text" decimal="0" jt="12" />
			<column name="has_attachments_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="has_inline_attachments_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="has_real_attachments_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="mua_message_id" type="text" decimal="0" jt="12" />
			<column name="write_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="item_type" type="text" decimal="0" jt="12" />
			<column name="company_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="deal_id" type="integer" length="10" decimal="0" jt="4" />
		</table>
		<table name="pipedrive_deal_mail_message_i" >
			<column name="timestamp" type="text" decimal="0" jt="12" />
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="from_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="from_email_address" type="text" decimal="0" jt="12" />
			<column name="from_name" type="text" decimal="0" jt="12" />
			<column name="from_linked_person_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="from_linked_person_name" type="text" decimal="0" jt="12" />
			<column name="from_mail_message_party_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="to_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="to_email_address" type="text" decimal="0" jt="12" />
			<column name="to_name" type="text" decimal="0" jt="12" />
			<column name="to_linked_person_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="to_linked_person_name" type="text" decimal="0" jt="12" />
			<column name="to_mail_message_party_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="cc_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="cc_email_address" type="text" decimal="0" jt="12" />
			<column name="cc_name" type="text" decimal="0" jt="12" />
			<column name="cc_linked_person_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="cc_linked_person_name" type="text" decimal="0" jt="12" />
			<column name="cc_mail_message_party_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="bcc_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="bcc_email_address" type="text" decimal="0" jt="12" />
			<column name="bcc_name" type="text" decimal="0" jt="12" />
			<column name="bcc_linked_person_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="bcc_linked_person_name" type="text" decimal="0" jt="12" />
			<column name="bcc_mail_message_party_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="body_url" type="text" decimal="0" jt="12" />
			<column name="nylas_id" type="text" decimal="0" jt="12" />
			<column name="account_id" type="text" decimal="0" jt="12" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="mail_thread_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="subject" type="text" decimal="0" jt="12" />
			<column name="snippet" type="text" decimal="0" jt="12" />
			<column name="mail_tracking_status" type="text" decimal="0" jt="12" />
			<column name="mail_link_tracking_enabled_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="read_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="draft_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="synced_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="deleted_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="has_body_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="sent_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="sent_from_pipedrive_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="smart_bcc_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="message_time" type="text" decimal="0" jt="12" />
			<column name="add_time" type="text" decimal="0" jt="12" />
			<column name="update_time" type="text" decimal="0" jt="12" />
			<column name="has_attachments_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="has_inline_attachments_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="has_real_attachments_flag" type="integer" length="10" decimal="0" jt="4" />
			<column name="mua_message_id" type="text" decimal="0" jt="12" />
			<column name="write_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="item_type" type="text" decimal="0" jt="12" />
			<column name="company_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="deal_id" type="integer" length="10" decimal="0" jt="4" />
		</table>
		<table name="pipedrive_deal_participants_d" >
			<column name="deal_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="participant_person_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_deal_participants_i" >
			<column name="deal_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="participant_person_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_deal_reason_lost_options_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_deal_reason_lost_options_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_deal_region_options_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_deal_region_options_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_deal_resulting_state_options_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_deal_resulting_state_options_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_deal_visible_to_options_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_deal_visible_to_options_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_note_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="deal_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="person_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="org_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="content" type="text" decimal="0" jt="12" />
			<column name="add_time" type="text" decimal="0" jt="12" />
			<column name="update_time" type="text" decimal="0" jt="12" />
			<column name="active_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="pinned_to_deal_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="pinned_to_person_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="pinned_to_organization_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="last_update_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_note_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="deal_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="person_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="org_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="content" type="text" decimal="0" jt="12" />
			<column name="add_time" type="text" decimal="0" jt="12" />
			<column name="update_time" type="text" decimal="0" jt="12" />
			<column name="active_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="pinned_to_deal_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="pinned_to_person_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="pinned_to_organization_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="last_update_user_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_organization_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="company_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="owner_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="active_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="update_time" type="text" decimal="0" jt="12" />
			<column name="add_time" type="text" decimal="0" jt="12" />
			<column name="visible_to" type="integer" length="10" decimal="0" jt="4" />
			<column name="next_activity_date" type="text" decimal="0" jt="12" />
			<column name="next_activity_time" type="text" decimal="0" jt="12" />
			<column name="next_activity_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="last_activity_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="last_activity_date" type="text" decimal="0" jt="12" />
			<column name="address" type="text" decimal="0" jt="12" />
			<column name="address_subpremise" type="text" decimal="0" jt="12" />
			<column name="address_street_number" type="text" decimal="0" jt="12" />
			<column name="address_route" type="text" decimal="0" jt="12" />
			<column name="address_sublocality" type="text" decimal="0" jt="12" />
			<column name="address_locality" type="text" decimal="0" jt="12" />
			<column name="address_admin_area_level_1" type="text" decimal="0" jt="12" />
			<column name="address_admin_area_level_2" type="text" decimal="0" jt="12" />
			<column name="address_country" type="text" decimal="0" jt="12" />
			<column name="address_postal_code" type="text" decimal="0" jt="12" />
			<column name="address_formatted_address" type="text" decimal="0" jt="12" />
			<column name="label" type="integer" length="10" decimal="0" jt="4" />
			<column name="owner_name" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_organization_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="company_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="owner_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="active_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="update_time" type="text" decimal="0" jt="12" />
			<column name="add_time" type="text" decimal="0" jt="12" />
			<column name="visible_to" type="integer" length="10" decimal="0" jt="4" />
			<column name="next_activity_date" type="text" decimal="0" jt="12" />
			<column name="next_activity_time" type="text" decimal="0" jt="12" />
			<column name="next_activity_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="last_activity_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="last_activity_date" type="text" decimal="0" jt="12" />
			<column name="address" type="text" decimal="0" jt="12" />
			<column name="address_subpremise" type="text" decimal="0" jt="12" />
			<column name="address_street_number" type="text" decimal="0" jt="12" />
			<column name="address_route" type="text" decimal="0" jt="12" />
			<column name="address_sublocality" type="text" decimal="0" jt="12" />
			<column name="address_locality" type="text" decimal="0" jt="12" />
			<column name="address_admin_area_level_1" type="text" decimal="0" jt="12" />
			<column name="address_admin_area_level_2" type="text" decimal="0" jt="12" />
			<column name="address_country" type="text" decimal="0" jt="12" />
			<column name="address_postal_code" type="text" decimal="0" jt="12" />
			<column name="address_formatted_address" type="text" decimal="0" jt="12" />
			<column name="label" type="integer" length="10" decimal="0" jt="4" />
			<column name="owner_name" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_organization_label_options_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_organization_label_options_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_organization_relation_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="type" type="text" decimal="0" jt="12" />
			<column name="rel_linked_org_id_value" type="integer" length="10" decimal="0" jt="4" />
			<column name="add_time" type="text" decimal="0" jt="12" />
			<column name="update_time" type="text" decimal="0" jt="12" />
			<column name="active_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="calculated_type" type="text" decimal="0" jt="12" />
			<column name="calculated_related_org_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_organization_visible_to_options_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_organization_visible_to_options_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_person_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="company_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="owner_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="org_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="first_name" type="text" decimal="0" jt="12" />
			<column name="last_name" type="text" decimal="0" jt="12" />
			<column name="active_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="phone_1_label" type="text" decimal="0" jt="12" />
			<column name="phone_1_value" type="text" decimal="0" jt="12" />
			<column name="phone_2_label" type="text" decimal="0" jt="12" />
			<column name="phone_2_value" type="text" decimal="0" jt="12" />
			<column name="email_1_label" type="text" decimal="0" jt="12" />
			<column name="email_1_value" type="text" decimal="0" jt="12" />
			<column name="email_2_label" type="text" decimal="0" jt="12" />
			<column name="email_2_value" type="text" decimal="0" jt="12" />
			<column name="update_time" type="text" decimal="0" jt="12" />
			<column name="add_time" type="text" decimal="0" jt="12" />
			<column name="visible_to" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="integer" length="10" decimal="0" jt="4" />
			<column name="location" type="text" decimal="0" jt="12" />
			<column name="location_subpremise" type="text" decimal="0" jt="12" />
			<column name="location_street_number" type="text" decimal="0" jt="12" />
			<column name="location_route" type="text" decimal="0" jt="12" />
			<column name="location_sublocality" type="text" decimal="0" jt="12" />
			<column name="location_locality" type="text" decimal="0" jt="12" />
			<column name="location_admin_area_level_1" type="text" decimal="0" jt="12" />
			<column name="location_admin_area_level_2" type="text" decimal="0" jt="12" />
			<column name="location_country" type="text" decimal="0" jt="12" />
			<column name="location_postal_code" type="text" decimal="0" jt="12" />
			<column name="location_formatted_address" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_person_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="company_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="owner_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="org_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="first_name" type="text" decimal="0" jt="12" />
			<column name="last_name" type="text" decimal="0" jt="12" />
			<column name="active_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="phone_1_label" type="text" decimal="0" jt="12" />
			<column name="phone_1_value" type="text" decimal="0" jt="12" />
			<column name="phone_2_label" type="text" decimal="0" jt="12" />
			<column name="phone_2_value" type="text" decimal="0" jt="12" />
			<column name="email_1_label" type="text" decimal="0" jt="12" />
			<column name="email_1_value" type="text" decimal="0" jt="12" />
			<column name="email_2_label" type="text" decimal="0" jt="12" />
			<column name="email_2_value" type="text" decimal="0" jt="12" />
			<column name="update_time" type="text" decimal="0" jt="12" />
			<column name="add_time" type="text" decimal="0" jt="12" />
			<column name="visible_to" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="integer" length="10" decimal="0" jt="4" />
			<column name="location" type="text" decimal="0" jt="12" />
			<column name="location_subpremise" type="text" decimal="0" jt="12" />
			<column name="location_street_number" type="text" decimal="0" jt="12" />
			<column name="location_route" type="text" decimal="0" jt="12" />
			<column name="location_sublocality" type="text" decimal="0" jt="12" />
			<column name="location_locality" type="text" decimal="0" jt="12" />
			<column name="location_admin_area_level_1" type="text" decimal="0" jt="12" />
			<column name="location_admin_area_level_2" type="text" decimal="0" jt="12" />
			<column name="location_country" type="text" decimal="0" jt="12" />
			<column name="location_postal_code" type="text" decimal="0" jt="12" />
			<column name="location_formatted_address" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_person_label_options_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_person_label_options_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_person_visible_to_options_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_person_visible_to_options_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_pipeline_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="url_title" type="text" decimal="0" jt="12" />
			<column name="order_nr" type="integer" length="10" decimal="0" jt="4" />
			<column name="active" type="bool" length="1" decimal="0" jt="-7" />
			<column name="deal_probability" type="bool" length="1" decimal="0" jt="-7" />
			<column name="add_time" type="text" decimal="0" jt="12" />
			<column name="update_time" type="text" decimal="0" jt="12" />
			<column name="selected" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_pipeline_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="url_title" type="text" decimal="0" jt="12" />
			<column name="order_nr" type="integer" length="10" decimal="0" jt="4" />
			<column name="active" type="bool" length="1" decimal="0" jt="-7" />
			<column name="deal_probability" type="bool" length="1" decimal="0" jt="-7" />
			<column name="add_time" type="text" decimal="0" jt="12" />
			<column name="update_time" type="text" decimal="0" jt="12" />
			<column name="selected" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_stage_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="order_nr" type="integer" length="10" decimal="0" jt="4" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="active_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="deal_probability" type="integer" length="10" decimal="0" jt="4" />
			<column name="pipeline_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="add_time" type="text" decimal="0" jt="12" />
			<column name="update_time" type="text" decimal="0" jt="12" />
			<column name="pipeline_name" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_stage_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="order_nr" type="integer" length="10" decimal="0" jt="4" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="active_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="deal_probability" type="integer" length="10" decimal="0" jt="4" />
			<column name="pipeline_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="add_time" type="text" decimal="0" jt="12" />
			<column name="update_time" type="text" decimal="0" jt="12" />
			<column name="pipeline_name" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_user_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="default_currency" type="text" decimal="0" jt="12" />
			<column name="locale" type="text" decimal="0" jt="12" />
			<column name="lang" type="integer" length="10" decimal="0" jt="4" />
			<column name="email" type="text" decimal="0" jt="12" />
			<column name="activated" type="bool" length="1" decimal="0" jt="-7" />
			<column name="last_login" type="text" decimal="0" jt="12" />
			<column name="created" type="text" decimal="0" jt="12" />
			<column name="modified" type="text" decimal="0" jt="12" />
			<column name="signup_flow_variation" type="text" decimal="0" jt="12" />
			<column name="has_created_company" type="bool" length="1" decimal="0" jt="-7" />
			<column name="is_admin" type="integer" length="10" decimal="0" jt="4" />
			<column name="timezone_name" type="text" decimal="0" jt="12" />
			<column name="timezone_offset" type="text" decimal="0" jt="12" />
			<column name="role_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="icon_url" type="text" decimal="0" jt="12" />
			<column name="active_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="pipedrive_user_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" />
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="default_currency" type="text" decimal="0" jt="12" />
			<column name="locale" type="text" decimal="0" jt="12" />
			<column name="lang" type="integer" length="10" decimal="0" jt="4" />
			<column name="email" type="text" decimal="0" jt="12" />
			<column name="activated" type="bool" length="1" decimal="0" jt="-7" />
			<column name="last_login" type="text" decimal="0" jt="12" />
			<column name="created" type="text" decimal="0" jt="12" />
			<column name="modified" type="text" decimal="0" jt="12" />
			<column name="signup_flow_variation" type="text" decimal="0" jt="12" />
			<column name="has_created_company" type="bool" length="1" decimal="0" jt="-7" />
			<column name="is_admin" type="integer" length="10" decimal="0" jt="4" />
			<column name="timezone_name" type="text" decimal="0" jt="12" />
			<column name="timezone_offset" type="text" decimal="0" jt="12" />
			<column name="role_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="icon_url" type="text" decimal="0" jt="12" />
			<column name="active_flag" type="bool" length="1" decimal="0" jt="-7" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="restcountries_country_list_d" >
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="alpha2code" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="alpha3code" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="capital" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="region" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="subregion" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="numericcode" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="restcountries_country_list_i" >
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="alpha2code" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="alpha3code" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="capital" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="region" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="subregion" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="numericcode" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_account_d" >
			<column name="accountid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="account_no" type="varchar" length="100" decimal="0" jt="12" />
			<column name="accountname" type="varchar" length="100" decimal="0" jt="12" />
			<column name="parentid" type="integer" length="10" decimal="0" jt="4" />
			<column name="account_type" type="varchar" length="200" decimal="0" jt="12" />
			<column name="industry" type="varchar" length="200" decimal="0" jt="12" />
			<column name="annualrevenue" type="numeric" length="33" decimal="8" jt="2" />
			<column name="rating" type="varchar" length="200" decimal="0" jt="12" />
			<column name="ownership" type="varchar" length="50" decimal="0" jt="12" />
			<column name="siccode" type="varchar" length="50" decimal="0" jt="12" />
			<column name="tickersymbol" type="varchar" length="30" decimal="0" jt="12" />
			<column name="phone" type="varchar" length="30" decimal="0" jt="12" />
			<column name="otherphone" type="varchar" length="30" decimal="0" jt="12" >
				<comment><![CDATA[not used in CRM]]></comment>
			</column>
			<column name="email1" type="varchar" length="100" decimal="0" jt="12" />
			<column name="email2" type="varchar" length="100" decimal="0" jt="12" />
			<column name="website" type="varchar" length="100" decimal="0" jt="12" />
			<column name="fax" type="varchar" length="30" decimal="0" jt="12" />
			<column name="employees" type="integer" length="10" decimal="0" jt="4" />
			<column name="emailoptout" type="varchar" length="3" decimal="0" jt="12" />
			<column name="notify_owner" type="varchar" length="3" decimal="0" jt="12" />
			<column name="isconvertedfromlead" type="varchar" length="3" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_account_i" >
			<column name="accountid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="account_no" type="varchar" length="100" decimal="0" jt="12" />
			<column name="accountname" type="varchar" length="100" decimal="0" jt="12" />
			<column name="parentid" type="integer" length="10" decimal="0" jt="4" />
			<column name="account_type" type="varchar" length="200" decimal="0" jt="12" />
			<column name="industry" type="varchar" length="200" decimal="0" jt="12" />
			<column name="annualrevenue" type="numeric" length="33" decimal="8" jt="2" />
			<column name="rating" type="varchar" length="200" decimal="0" jt="12" />
			<column name="ownership" type="varchar" length="50" decimal="0" jt="12" />
			<column name="siccode" type="varchar" length="50" decimal="0" jt="12" />
			<column name="tickersymbol" type="varchar" length="30" decimal="0" jt="12" />
			<column name="phone" type="varchar" length="30" decimal="0" jt="12" />
			<column name="otherphone" type="varchar" length="30" decimal="0" jt="12" >
				<comment><![CDATA[not used in CRM]]></comment>
			</column>
			<column name="email1" type="varchar" length="100" decimal="0" jt="12" />
			<column name="email2" type="varchar" length="100" decimal="0" jt="12" />
			<column name="website" type="varchar" length="100" decimal="0" jt="12" />
			<column name="fax" type="varchar" length="30" decimal="0" jt="12" />
			<column name="employees" type="integer" length="10" decimal="0" jt="4" />
			<column name="emailoptout" type="varchar" length="3" decimal="0" jt="12" />
			<column name="notify_owner" type="varchar" length="3" decimal="0" jt="12" />
			<column name="isconvertedfromlead" type="varchar" length="3" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_account_i" unique="PRIMARY_KEY" >
				<column name="accountid" />
			</index>
		</table>
		<table name="vtiger_accountbillads_d" >
			<column name="accountaddressid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="bill_city" type="varchar" length="30" decimal="0" jt="12" />
			<column name="bill_code" type="varchar" length="30" decimal="0" jt="12" />
			<column name="bill_country" type="varchar" length="30" decimal="0" jt="12" />
			<column name="bill_state" type="varchar" length="30" decimal="0" jt="12" />
			<column name="bill_street" type="varchar" length="250" decimal="0" jt="12" />
			<column name="bill_pobox" type="varchar" length="30" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_accountbillads_i" >
			<column name="accountaddressid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="bill_city" type="varchar" length="30" decimal="0" jt="12" />
			<column name="bill_code" type="varchar" length="30" decimal="0" jt="12" />
			<column name="bill_country" type="varchar" length="30" decimal="0" jt="12" />
			<column name="bill_state" type="varchar" length="30" decimal="0" jt="12" />
			<column name="bill_street" type="varchar" length="250" decimal="0" jt="12" />
			<column name="bill_pobox" type="varchar" length="30" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_accountbillads_i" unique="PRIMARY_KEY" >
				<column name="accountaddressid" />
			</index>
		</table>
		<table name="vtiger_accountscf_d" >
			<column name="accountid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="cf_751" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[Region]]></comment>
			</column>
			<column name="cf_753" type="varchar" length="10" decimal="0" jt="12" />
			<column name="cf_755" type="varchar" length="200" decimal="0" jt="12" >
				<comment><![CDATA[Partner - string of company name i.e. Agile Solutions]]></comment>
			</column>
			<column name="cf_803" type="integer" length="10" decimal="0" jt="4" />
			<column name="cf_813" type="varchar" length="3" decimal="0" jt="12" >
				<comment><![CDATA[NDA  0 or 1]]></comment>
			</column>
			<column name="cf_815" type="varchar" length="3" decimal="0" jt="12" />
			<column name="cf_817" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="cf_835" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_839" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[external_inteligence - usually www.discovery.com link]]></comment>
			</column>
			<column name="cf_841" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_868" type="integer" length="10" decimal="0" jt="4" />
			<column name="cf_886" type="varchar" length="255" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_accountscf_i" >
			<column name="accountid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="cf_751" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[Region]]></comment>
			</column>
			<column name="cf_753" type="varchar" length="10" decimal="0" jt="12" />
			<column name="cf_755" type="varchar" length="200" decimal="0" jt="12" >
				<comment><![CDATA[Partner - string of company name i.e. Agile Solutions]]></comment>
			</column>
			<column name="cf_803" type="integer" length="10" decimal="0" jt="4" />
			<column name="cf_813" type="varchar" length="3" decimal="0" jt="12" >
				<comment><![CDATA[NDA  0 or 1]]></comment>
			</column>
			<column name="cf_815" type="varchar" length="3" decimal="0" jt="12" />
			<column name="cf_817" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="cf_835" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_839" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[external_inteligence - usually www.discovery.com link]]></comment>
			</column>
			<column name="cf_841" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_868" type="integer" length="10" decimal="0" jt="4" />
			<column name="cf_886" type="varchar" length="255" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_accountscf_i" unique="PRIMARY_KEY" >
				<column name="accountid" />
			</index>
		</table>
		<table name="vtiger_accountshipads_d" >
			<column name="accountaddressid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ship_city" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="ship_code" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="ship_country" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="ship_state" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="ship_pobox" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="ship_street" type="varchar" length="250" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_accountshipads_i" >
			<column name="accountaddressid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ship_city" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="ship_code" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="ship_country" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="ship_state" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="ship_pobox" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="ship_street" type="varchar" length="250" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_accountshipads_i" unique="PRIMARY_KEY" >
				<column name="accountaddressid" />
			</index>
		</table>
		<table name="vtiger_activity_d" >
			<column name="activityid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="subject" type="varchar" length="100" decimal="0" jt="12" />
			<column name="semodule" type="varchar" length="20" decimal="0" jt="12" />
			<column name="activitytype" type="varchar" length="200" decimal="0" jt="12" />
			<column name="date_start" type="varchar" length="10" decimal="0" jt="12" />
			<column name="due_date" type="varchar" length="10" decimal="0" jt="12" />
			<column name="time_start" type="varchar" length="50" decimal="0" jt="12" />
			<column name="time_end" type="varchar" length="50" decimal="0" jt="12" />
			<column name="sendnotification" type="varchar" length="3" decimal="0" jt="12" />
			<column name="duration_hours" type="varchar" length="200" decimal="0" jt="12" />
			<column name="duration_minutes" type="varchar" length="200" decimal="0" jt="12" />
			<column name="status" type="varchar" length="200" decimal="0" jt="12" />
			<column name="eventstatus" type="varchar" length="200" decimal="0" jt="12" />
			<column name="priority" type="varchar" length="200" decimal="0" jt="12" />
			<column name="location" type="varchar" length="150" decimal="0" jt="12" />
			<column name="notime" type="varchar" length="3" decimal="0" jt="12" />
			<column name="visibility" type="varchar" length="50" decimal="0" jt="12" />
			<column name="recurringtype" type="varchar" length="200" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_activity_i" >
			<column name="activityid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="subject" type="varchar" length="100" decimal="0" jt="12" />
			<column name="semodule" type="varchar" length="20" decimal="0" jt="12" />
			<column name="activitytype" type="varchar" length="200" decimal="0" jt="12" />
			<column name="date_start" type="varchar" length="10" decimal="0" jt="12" />
			<column name="due_date" type="varchar" length="10" decimal="0" jt="12" />
			<column name="time_start" type="varchar" length="50" decimal="0" jt="12" />
			<column name="time_end" type="varchar" length="50" decimal="0" jt="12" />
			<column name="sendnotification" type="varchar" length="3" decimal="0" jt="12" />
			<column name="duration_hours" type="varchar" length="200" decimal="0" jt="12" />
			<column name="duration_minutes" type="varchar" length="200" decimal="0" jt="12" />
			<column name="status" type="varchar" length="200" decimal="0" jt="12" />
			<column name="eventstatus" type="varchar" length="200" decimal="0" jt="12" />
			<column name="priority" type="varchar" length="200" decimal="0" jt="12" />
			<column name="location" type="varchar" length="150" decimal="0" jt="12" />
			<column name="notime" type="varchar" length="3" decimal="0" jt="12" />
			<column name="visibility" type="varchar" length="50" decimal="0" jt="12" />
			<column name="recurringtype" type="varchar" length="200" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_activity_i" unique="PRIMARY_KEY" >
				<column name="activityid" />
			</index>
		</table>
		<table name="vtiger_campaign_d" >
			<column name="campaign_no" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="campaignname" type="varchar" length="255" decimal="0" jt="12" />
			<column name="campaigntype" type="varchar" length="200" decimal="0" jt="12" />
			<column name="campaignstatus" type="varchar" length="200" decimal="0" jt="12" />
			<column name="expectedrevenue" type="numeric" length="33" decimal="8" jt="2" />
			<column name="budgetcost" type="numeric" length="33" decimal="8" jt="2" />
			<column name="actualcost" type="numeric" length="33" decimal="8" jt="2" />
			<column name="expectedresponse" type="varchar" length="200" decimal="0" jt="12" />
			<column name="numsent" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="product_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="sponsor" type="varchar" length="255" decimal="0" jt="12" />
			<column name="targetaudience" type="varchar" length="255" decimal="0" jt="12" />
			<column name="targetsize" type="integer" length="10" decimal="0" jt="4" />
			<column name="expectedresponsecount" type="integer" length="10" decimal="0" jt="4" />
			<column name="expectedsalescount" type="integer" length="10" decimal="0" jt="4" />
			<column name="expectedroi" type="numeric" length="33" decimal="8" jt="2" />
			<column name="actualresponsecount" type="integer" length="10" decimal="0" jt="4" />
			<column name="actualsalescount" type="integer" length="10" decimal="0" jt="4" />
			<column name="actualroi" type="numeric" length="33" decimal="8" jt="2" />
			<column name="campaignid" type="integer" length="10" decimal="0" jt="4" />
			<column name="closingdate" type="varchar" length="10" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_campaign_i" >
			<column name="campaign_no" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="campaignname" type="varchar" length="255" decimal="0" jt="12" />
			<column name="campaigntype" type="varchar" length="200" decimal="0" jt="12" />
			<column name="campaignstatus" type="varchar" length="200" decimal="0" jt="12" />
			<column name="expectedrevenue" type="numeric" length="33" decimal="8" jt="2" />
			<column name="budgetcost" type="numeric" length="33" decimal="8" jt="2" />
			<column name="actualcost" type="numeric" length="33" decimal="8" jt="2" />
			<column name="expectedresponse" type="varchar" length="200" decimal="0" jt="12" />
			<column name="numsent" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="product_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="sponsor" type="varchar" length="255" decimal="0" jt="12" />
			<column name="targetaudience" type="varchar" length="255" decimal="0" jt="12" />
			<column name="targetsize" type="integer" length="10" decimal="0" jt="4" />
			<column name="expectedresponsecount" type="integer" length="10" decimal="0" jt="4" />
			<column name="expectedsalescount" type="integer" length="10" decimal="0" jt="4" />
			<column name="expectedroi" type="numeric" length="33" decimal="8" jt="2" />
			<column name="actualresponsecount" type="integer" length="10" decimal="0" jt="4" />
			<column name="actualsalescount" type="integer" length="10" decimal="0" jt="4" />
			<column name="actualroi" type="numeric" length="33" decimal="8" jt="2" />
			<column name="campaignid" type="integer" length="10" decimal="0" jt="4" />
			<column name="closingdate" type="varchar" length="10" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_campaign_i" unique="PRIMARY_KEY" >
				<column name="campaign_no" />
			</index>
		</table>
		<table name="vtiger_campaignaccountrel_d" >
			<column name="campaignid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="accountid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="campaignrelstatusid" type="integer" length="10" decimal="0" jt="4" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_campaignaccountrel_i" >
			<column name="campaignid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="accountid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="campaignrelstatusid" type="integer" length="10" decimal="0" jt="4" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_campaigncontrel_d" >
			<column name="campaignid" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="contactid" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="campaignrelstatusid" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_campaigncontrel_i" >
			<column name="campaignid" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="contactid" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="campaignrelstatusid" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_campaigncontrel_i" unique="PRIMARY_KEY" >
				<column name="campaignid" />
				<column name="contactid" />
				<column name="campaignrelstatusid" />
			</index>
		</table>
		<table name="vtiger_campaignleadrel_d" >
			<column name="campaignid" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="leadid" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="campaignrelstatusid" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_campaignleadrel_i" >
			<column name="campaignid" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="leadid" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="campaignrelstatusid" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_campaignleadrel_i" unique="PRIMARY_KEY" >
				<column name="campaignid" />
				<column name="leadid" />
				<column name="campaignrelstatusid" />
			</index>
		</table>
		<table name="vtiger_campaignrelstatus_d" >
			<column name="campaignrelstatusid" type="integer" length="10" decimal="0" jt="4" />
			<column name="campaignrelstatus" type="varchar" length="256" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="sortorderid" type="integer" length="10" decimal="0" jt="4" />
			<column name="presence" type="integer" length="10" decimal="0" jt="4" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_campaignrelstatus_i" >
			<column name="campaignrelstatusid" type="integer" length="10" decimal="0" jt="4" />
			<column name="campaignrelstatus" type="varchar" length="256" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="sortorderid" type="integer" length="10" decimal="0" jt="4" />
			<column name="presence" type="integer" length="10" decimal="0" jt="4" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_campaignscf_d" >
			<column name="campaignid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="cf_779" type="varchar" length="10" decimal="0" jt="12" />
			<column name="cf_781" type="varchar" length="3" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_campaignscf_i" >
			<column name="campaignid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="cf_779" type="varchar" length="10" decimal="0" jt="12" />
			<column name="cf_781" type="varchar" length="3" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_campaignscf_i" unique="PRIMARY_KEY" >
				<column name="campaignid" />
			</index>
		</table>
		<table name="vtiger_cf_874_d" >
			<column name="cf_874id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="cf_874" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="sortorderid" type="integer" length="10" decimal="0" jt="4" />
			<column name="presence" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>1</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_cf_874_i" >
			<column name="cf_874id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="cf_874" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="sortorderid" type="integer" length="10" decimal="0" jt="4" />
			<column name="presence" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>1</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_cntactivityrel_d" >
			<column name="contactid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="activityid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_cntactivityrel_i" >
			<column name="contactid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="activityid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_cntactivityrel_i" unique="PRIMARY_KEY" >
				<column name="contactid" />
				<column name="activityid" />
			</index>
		</table>
		<table name="vtiger_contactaddress_d" >
			<column name="contactaddressid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="mailingcity" type="varchar" length="40" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="mailingstreet" type="varchar" length="250" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="mailingcountry" type="varchar" length="40" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="othercountry" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="mailingstate" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="mailingpobox" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="othercity" type="varchar" length="40" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="otherstate" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="mailingzip" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="otherzip" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="otherstreet" type="varchar" length="250" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="otherpobox" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_contactaddress_i" >
			<column name="contactaddressid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="mailingcity" type="varchar" length="40" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="mailingstreet" type="varchar" length="250" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="mailingcountry" type="varchar" length="40" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="othercountry" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="mailingstate" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="mailingpobox" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="othercity" type="varchar" length="40" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="otherstate" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="mailingzip" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="otherzip" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="otherstreet" type="varchar" length="250" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="otherpobox" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_contactaddress_i" unique="PRIMARY_KEY" >
				<column name="contactaddressid" />
			</index>
		</table>
		<table name="vtiger_contactdetails_d" >
			<column name="contactid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="contact_no" type="varchar" length="100" decimal="0" jt="12" />
			<column name="accountid" type="integer" length="10" decimal="0" jt="4" />
			<column name="salutation" type="varchar" length="200" decimal="0" jt="12" />
			<column name="firstname" type="varchar" length="40" decimal="0" jt="12" />
			<column name="lastname" type="varchar" length="80" decimal="0" jt="12" />
			<column name="email" type="varchar" length="100" decimal="0" jt="12" />
			<column name="phone" type="varchar" length="50" decimal="0" jt="12" />
			<column name="mobile" type="varchar" length="50" decimal="0" jt="12" />
			<column name="title" type="varchar" length="50" decimal="0" jt="12" />
			<column name="department" type="varchar" length="30" decimal="0" jt="12" />
			<column name="fax" type="varchar" length="50" decimal="0" jt="12" />
			<column name="reportsto" type="varchar" length="30" decimal="0" jt="12" />
			<column name="training" type="varchar" length="50" decimal="0" jt="12" />
			<column name="usertype" type="varchar" length="50" decimal="0" jt="12" />
			<column name="contacttype" type="varchar" length="50" decimal="0" jt="12" >
				<comment><![CDATA[null - not used in CRM]]></comment>
			</column>
			<column name="otheremail" type="varchar" length="100" decimal="0" jt="12" />
			<column name="secondaryemail" type="varchar" length="100" decimal="0" jt="12" />
			<column name="donotcall" type="varchar" length="3" decimal="0" jt="12" />
			<column name="emailoptout" type="varchar" length="3" decimal="0" jt="12" />
			<column name="imagename" type="varchar" length="150" decimal="0" jt="12" />
			<column name="reference" type="varchar" length="3" decimal="0" jt="12" />
			<column name="notify_owner" type="varchar" length="3" decimal="0" jt="12" />
			<column name="isconvertedfromlead" type="varchar" length="3" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_contactdetails_i" >
			<column name="contactid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="contact_no" type="varchar" length="100" decimal="0" jt="12" />
			<column name="accountid" type="integer" length="10" decimal="0" jt="4" />
			<column name="salutation" type="varchar" length="200" decimal="0" jt="12" />
			<column name="firstname" type="varchar" length="40" decimal="0" jt="12" />
			<column name="lastname" type="varchar" length="80" decimal="0" jt="12" />
			<column name="email" type="varchar" length="100" decimal="0" jt="12" />
			<column name="phone" type="varchar" length="50" decimal="0" jt="12" />
			<column name="mobile" type="varchar" length="50" decimal="0" jt="12" />
			<column name="title" type="varchar" length="50" decimal="0" jt="12" />
			<column name="department" type="varchar" length="30" decimal="0" jt="12" />
			<column name="fax" type="varchar" length="50" decimal="0" jt="12" />
			<column name="reportsto" type="varchar" length="30" decimal="0" jt="12" />
			<column name="training" type="varchar" length="50" decimal="0" jt="12" />
			<column name="usertype" type="varchar" length="50" decimal="0" jt="12" />
			<column name="contacttype" type="varchar" length="50" decimal="0" jt="12" >
				<comment><![CDATA[null - not used in CRM]]></comment>
			</column>
			<column name="otheremail" type="varchar" length="100" decimal="0" jt="12" />
			<column name="secondaryemail" type="varchar" length="100" decimal="0" jt="12" />
			<column name="donotcall" type="varchar" length="3" decimal="0" jt="12" />
			<column name="emailoptout" type="varchar" length="3" decimal="0" jt="12" />
			<column name="imagename" type="varchar" length="150" decimal="0" jt="12" />
			<column name="reference" type="varchar" length="3" decimal="0" jt="12" />
			<column name="notify_owner" type="varchar" length="3" decimal="0" jt="12" />
			<column name="isconvertedfromlead" type="varchar" length="3" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_contactdetails_i" unique="PRIMARY_KEY" >
				<column name="contactid" />
			</index>
		</table>
		<table name="vtiger_contactscf_d" >
			<column name="contactid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="cf_773" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[profesional_profile]]></comment>
			</column>
			<column name="cf_787" type="varchar" length="200" decimal="0" jt="12" >
				<comment><![CDATA[lead_source_details]]></comment>
			</column>
			<column name="cf_811" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_843" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[external_inteligence - usually discovery link]]></comment>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_contactscf_i" >
			<column name="contactid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="cf_773" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[profesional_profile]]></comment>
			</column>
			<column name="cf_787" type="varchar" length="200" decimal="0" jt="12" >
				<comment><![CDATA[lead_source_details]]></comment>
			</column>
			<column name="cf_811" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_843" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[external_inteligence - usually discovery link]]></comment>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_contactscf_i" unique="PRIMARY_KEY" >
				<column name="contactid" />
			</index>
		</table>
		<table name="vtiger_contactsubdetails_d" >
			<column name="contactsubscriptionid" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="homephone" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="otherphone" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="assistant" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="assistantphone" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="birthday" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="laststayintouchrequest" type="bigint" length="19" decimal="0" jt="-5" >
				<defo>0</defo>
			</column>
			<column name="laststayintouchsavedate" type="integer" length="10" decimal="0" jt="4" >
				<defo>0</defo>
			</column>
			<column name="leadsource" type="varchar" length="200" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_contactsubdetails_i" >
			<column name="contactsubscriptionid" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="homephone" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="otherphone" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="assistant" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="assistantphone" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="birthday" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="laststayintouchrequest" type="bigint" length="19" decimal="0" jt="-5" >
				<defo>0</defo>
			</column>
			<column name="laststayintouchsavedate" type="integer" length="10" decimal="0" jt="4" >
				<defo>0</defo>
			</column>
			<column name="leadsource" type="varchar" length="200" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_contactsubdetails_i" unique="PRIMARY_KEY" >
				<column name="contactsubscriptionid" />
			</index>
		</table>
		<table name="vtiger_contpotentialrel_d" >
			<column name="contactid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="potentialid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_contpotentialrel_i" >
			<column name="contactid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="potentialid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_contpotentialrel_i" unique="PRIMARY_KEY" >
				<column name="contactid" />
				<column name="potentialid" />
			</index>
		</table>
		<table name="vtiger_crmentity_d" >
			<column name="crmid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="smcreatorid" type="integer" length="10" decimal="0" jt="4" />
			<column name="smownerid" type="integer" length="10" decimal="0" jt="4" />
			<column name="modifiedby" type="integer" length="10" decimal="0" jt="4" />
			<column name="setype" type="text" decimal="0" jt="12" />
			<column name="description" type="text" decimal="0" jt="12" />
			<column name="createdtime" type="text" decimal="0" jt="12" />
			<column name="modifiedtime" type="text" decimal="0" jt="12" />
			<column name="viewedtime" type="text" decimal="0" jt="12" />
			<column name="status" type="text" decimal="0" jt="12" />
			<column name="version" type="integer" length="10" decimal="0" jt="4" />
			<column name="presence" type="integer" length="10" decimal="0" jt="4" />
			<column name="deleted" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_crmentity_i" >
			<column name="crmid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="smcreatorid" type="integer" length="10" decimal="0" jt="4" />
			<column name="smownerid" type="integer" length="10" decimal="0" jt="4" />
			<column name="modifiedby" type="integer" length="10" decimal="0" jt="4" />
			<column name="setype" type="text" decimal="0" jt="12" />
			<column name="description" type="text" decimal="0" jt="12" />
			<column name="createdtime" type="text" decimal="0" jt="12" />
			<column name="modifiedtime" type="text" decimal="0" jt="12" />
			<column name="viewedtime" type="text" decimal="0" jt="12" />
			<column name="status" type="text" decimal="0" jt="12" />
			<column name="version" type="integer" length="10" decimal="0" jt="4" />
			<column name="presence" type="integer" length="10" decimal="0" jt="4" />
			<column name="deleted" type="integer" length="10" decimal="0" jt="4" />
			<column name="label" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_crmentity_i" unique="PRIMARY_KEY" >
				<column name="crmid" />
			</index>
		</table>
		<table name="vtiger_crmentityrel_d" >
			<column name="crmid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="relcrmid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="relmodule" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="module" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_crmentityrel_i" >
			<column name="crmid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="relcrmid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="relmodule" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="module" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_crmentityrel_i" unique="PRIMARY_KEY" >
				<column name="crmid" />
				<column name="relcrmid" />
				<column name="relmodule" />
				<column name="module" />
			</index>
		</table>
		<table name="vtiger_emaildetails_d" >
			<column name="emailid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="from_email" type="varchar" length="50" decimal="0" jt="12" />
			<column name="to_email" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="cc_email" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="bcc_email" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="assigned_user_email" type="varchar" length="50" decimal="0" jt="12" />
			<column name="idlists" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="email_flag" type="varchar" length="50" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_emaildetails_i" >
			<column name="emailid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="from_email" type="varchar" length="50" decimal="0" jt="12" />
			<column name="to_email" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="cc_email" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="bcc_email" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="assigned_user_email" type="varchar" length="50" decimal="0" jt="12" />
			<column name="idlists" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="email_flag" type="varchar" length="50" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_emaildetails_i" unique="PRIMARY_KEY" >
				<column name="emailid" />
			</index>
		</table>
		<table name="vtiger_entityname_d" >
			<column name="tabid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="modulename" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tablename" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fieldname" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="entityidfield" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="entityidcolumn" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_entityname_i" >
			<column name="tabid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="modulename" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tablename" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fieldname" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="entityidfield" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="entityidcolumn" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_entityname_i" unique="PRIMARY_KEY" >
				<column name="tabid" />
			</index>
		</table>
		<table name="vtiger_field_d" >
			<column name="tabid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fieldid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="columnname" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tablename" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="generatedtype" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="uitype" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fieldname" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fieldlabel" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="readonly" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="presence" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="defaultvalue" type="text" decimal="0" jt="12" />
			<column name="maximumlength" type="integer" length="10" decimal="0" jt="4" />
			<column name="sequence" type="integer" length="10" decimal="0" jt="4" />
			<column name="block" type="integer" length="10" decimal="0" jt="4" />
			<column name="displaytype" type="integer" length="10" decimal="0" jt="4" />
			<column name="typeofdata" type="text" decimal="0" jt="12" />
			<column name="quickcreate" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="quickcreatesequence" type="integer" length="10" decimal="0" jt="4" />
			<column name="info_type" type="text" decimal="0" jt="12" />
			<column name="masseditable" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="helpinfo" type="text" decimal="0" jt="12" />
			<column name="summaryfield" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_field_i" >
			<column name="fieldid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tabid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="columnname" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tablename" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="generatedtype" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="uitype" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fieldname" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="fieldlabel" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="readonly" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="presence" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="defaultvalue" type="text" decimal="0" jt="12" />
			<column name="maximumlength" type="integer" length="10" decimal="0" jt="4" />
			<column name="sequence" type="integer" length="10" decimal="0" jt="4" />
			<column name="block" type="integer" length="10" decimal="0" jt="4" />
			<column name="displaytype" type="integer" length="10" decimal="0" jt="4" />
			<column name="typeofdata" type="text" decimal="0" jt="12" />
			<column name="quickcreate" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="quickcreatesequence" type="integer" length="10" decimal="0" jt="4" />
			<column name="info_type" type="text" decimal="0" jt="12" />
			<column name="masseditable" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="helpinfo" type="text" decimal="0" jt="12" />
			<column name="summaryfield" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_field_i" unique="PRIMARY_KEY" >
				<column name="fieldid" />
			</index>
		</table>
		<table name="vtiger_leadaddress_d" >
			<column name="leadaddressid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="city" type="varchar" length="30" decimal="0" jt="12" />
			<column name="code" type="varchar" length="30" decimal="0" jt="12" />
			<column name="state" type="varchar" length="30" decimal="0" jt="12" />
			<column name="pobox" type="varchar" length="30" decimal="0" jt="12" />
			<column name="country" type="varchar" length="30" decimal="0" jt="12" />
			<column name="phone" type="varchar" length="50" decimal="0" jt="12" />
			<column name="mobile" type="varchar" length="50" decimal="0" jt="12" />
			<column name="fax" type="varchar" length="50" decimal="0" jt="12" />
			<column name="lane" type="varchar" length="250" decimal="0" jt="12" />
			<column name="leadaddresstype" type="varchar" length="30" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_leadaddress_i" >
			<column name="leadaddressid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="city" type="varchar" length="30" decimal="0" jt="12" />
			<column name="code" type="varchar" length="30" decimal="0" jt="12" />
			<column name="state" type="varchar" length="30" decimal="0" jt="12" />
			<column name="pobox" type="varchar" length="30" decimal="0" jt="12" />
			<column name="country" type="varchar" length="30" decimal="0" jt="12" />
			<column name="phone" type="varchar" length="50" decimal="0" jt="12" />
			<column name="mobile" type="varchar" length="50" decimal="0" jt="12" />
			<column name="fax" type="varchar" length="50" decimal="0" jt="12" />
			<column name="lane" type="varchar" length="250" decimal="0" jt="12" />
			<column name="leadaddresstype" type="varchar" length="30" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_leadaddress_i_leadaddressid" unique="PRIMARY_KEY" >
				<column name="leadaddressid" />
			</index>
		</table>
		<table name="vtiger_leaddetails_d" >
			<column name="leadid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="lead_no" type="varchar" length="100" decimal="0" jt="12" />
			<column name="email" type="varchar" length="100" decimal="0" jt="12" />
			<column name="interest" type="varchar" length="50" decimal="0" jt="12" />
			<column name="firstname" type="varchar" length="40" decimal="0" jt="12" />
			<column name="salutation" type="varchar" length="200" decimal="0" jt="12" />
			<column name="lastname" type="varchar" length="80" decimal="0" jt="12" />
			<column name="company" type="varchar" length="100" decimal="0" jt="12" />
			<column name="annualrevenue" type="numeric" length="33" decimal="8" jt="2" />
			<column name="industry" type="varchar" length="200" decimal="0" jt="12" />
			<column name="campaign" type="varchar" length="30" decimal="0" jt="12" />
			<column name="rating" type="varchar" length="200" decimal="0" jt="12" />
			<column name="leadstatus" type="varchar" length="50" decimal="0" jt="12" />
			<column name="leadsource" type="varchar" length="200" decimal="0" jt="12" />
			<column name="converted" type="integer" length="10" decimal="0" jt="4" />
			<column name="designation" type="varchar" length="50" decimal="0" jt="12" />
			<column name="licencekeystatus" type="varchar" length="50" decimal="0" jt="12" />
			<column name="space" type="varchar" length="250" decimal="0" jt="12" />
			<column name="comments" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="priority" type="varchar" length="50" decimal="0" jt="12" />
			<column name="demorequest" type="varchar" length="50" decimal="0" jt="12" />
			<column name="partnercontact" type="varchar" length="50" decimal="0" jt="12" />
			<column name="productversion" type="varchar" length="20" decimal="0" jt="12" />
			<column name="product" type="varchar" length="50" decimal="0" jt="12" />
			<column name="maildate" type="varchar" length="10" decimal="0" jt="12" />
			<column name="nextstepdate" type="varchar" length="10" decimal="0" jt="12" />
			<column name="fundingsituation" type="varchar" length="50" decimal="0" jt="12" />
			<column name="purpose" type="varchar" length="50" decimal="0" jt="12" />
			<column name="evaluationstatus" type="varchar" length="50" decimal="0" jt="12" />
			<column name="transferdate" type="varchar" length="10" decimal="0" jt="12" />
			<column name="revenuetype" type="varchar" length="50" decimal="0" jt="12" />
			<column name="noofemployees" type="integer" length="10" decimal="0" jt="4" />
			<column name="secondaryemail" type="varchar" length="100" decimal="0" jt="12" />
			<column name="assignleadchk" type="integer" length="10" decimal="0" jt="4" />
			<column name="emailoptout" type="varchar" length="3" decimal="0" jt="12" />
			<column name="cf_863" type="integer" length="10" decimal="0" jt="4" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_leaddetails_i" >
			<column name="leadid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="lead_no" type="varchar" length="100" decimal="0" jt="12" />
			<column name="email" type="varchar" length="100" decimal="0" jt="12" />
			<column name="interest" type="varchar" length="50" decimal="0" jt="12" />
			<column name="firstname" type="varchar" length="40" decimal="0" jt="12" />
			<column name="salutation" type="varchar" length="200" decimal="0" jt="12" />
			<column name="lastname" type="varchar" length="80" decimal="0" jt="12" />
			<column name="company" type="varchar" length="100" decimal="0" jt="12" />
			<column name="annualrevenue" type="numeric" length="33" decimal="8" jt="2" />
			<column name="industry" type="varchar" length="200" decimal="0" jt="12" />
			<column name="campaign" type="varchar" length="30" decimal="0" jt="12" />
			<column name="rating" type="varchar" length="200" decimal="0" jt="12" />
			<column name="leadstatus" type="varchar" length="50" decimal="0" jt="12" />
			<column name="leadsource" type="varchar" length="200" decimal="0" jt="12" />
			<column name="converted" type="integer" length="10" decimal="0" jt="4" />
			<column name="designation" type="varchar" length="50" decimal="0" jt="12" />
			<column name="licencekeystatus" type="varchar" length="50" decimal="0" jt="12" />
			<column name="space" type="varchar" length="250" decimal="0" jt="12" />
			<column name="comments" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="priority" type="varchar" length="50" decimal="0" jt="12" />
			<column name="demorequest" type="varchar" length="50" decimal="0" jt="12" />
			<column name="partnercontact" type="varchar" length="50" decimal="0" jt="12" />
			<column name="productversion" type="varchar" length="20" decimal="0" jt="12" />
			<column name="product" type="varchar" length="50" decimal="0" jt="12" />
			<column name="maildate" type="varchar" length="10" decimal="0" jt="12" />
			<column name="nextstepdate" type="varchar" length="10" decimal="0" jt="12" />
			<column name="fundingsituation" type="varchar" length="50" decimal="0" jt="12" />
			<column name="purpose" type="varchar" length="50" decimal="0" jt="12" />
			<column name="evaluationstatus" type="varchar" length="50" decimal="0" jt="12" />
			<column name="transferdate" type="varchar" length="10" decimal="0" jt="12" />
			<column name="revenuetype" type="varchar" length="50" decimal="0" jt="12" />
			<column name="noofemployees" type="integer" length="10" decimal="0" jt="4" />
			<column name="secondaryemail" type="varchar" length="100" decimal="0" jt="12" />
			<column name="assignleadchk" type="integer" length="10" decimal="0" jt="4" />
			<column name="emailoptout" type="varchar" length="3" decimal="0" jt="12" />
			<column name="cf_863" type="integer" length="10" decimal="0" jt="4" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_leaddetails_i" unique="PRIMARY_KEY" >
				<column name="leadid" />
			</index>
		</table>
		<table name="vtiger_leadscf_d" >
			<column name="leadid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="cf_757" type="varchar" length="200" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
				<comment><![CDATA[reference]]></comment>
			</column>
			<column name="cf_771" type="varchar" length="255" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
				<comment><![CDATA[profesional_profile]]></comment>
			</column>
			<column name="cf_775" type="varchar" length="10" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
				<comment><![CDATA[last_action_date]]></comment>
			</column>
			<column name="cf_777" type="varchar" length="200" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
				<comment><![CDATA[next_step]]></comment>
			</column>
			<column name="cf_791" type="varchar" length="200" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
				<comment><![CDATA[lead_source_details]]></comment>
			</column>
			<column name="cf_795" type="varchar" length="255" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
			</column>
			<column name="cf_797" type="varchar" length="10" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
				<comment><![CDATA[manual_inception_date]]></comment>
			</column>
			<column name="cf_799" type="varchar" length="255" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
				<comment><![CDATA[organization_type]]></comment>
			</column>
			<column name="cf_807" type="integer" length="10" decimal="0" jt="4" />
			<column name="cf_845" type="varchar" length="255" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
				<comment><![CDATA[presales_thread]]></comment>
			</column>
			<column name="cf_847" type="varchar" length="255" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
				<comment><![CDATA[sales_thread]]></comment>
			</column>
			<column name="cf_857" type="varchar" length="200" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
				<comment><![CDATA[subject]]></comment>
			</column>
			<column name="cf_864" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[external_inteligence - usually discovery link]]></comment>
			</column>
			<column name="cf_866" type="integer" length="10" decimal="0" jt="4" />
			<column name="cf_884" type="varchar" length="10" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
				<comment><![CDATA[next_step_date]]></comment>
			</column>
			<column name="cf_892" type="varchar" length="16" decimal="0" jt="12" />
			<column name="cf_894" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_896" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_898" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_900" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_902" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_904" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_920" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_922" type="varchar" length="255" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_leadscf_i" >
			<column name="leadid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="cf_757" type="varchar" length="200" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
				<comment><![CDATA[reference]]></comment>
			</column>
			<column name="cf_771" type="varchar" length="255" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
				<comment><![CDATA[profesional_profile]]></comment>
			</column>
			<column name="cf_775" type="varchar" length="10" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
				<comment><![CDATA[last_action_date]]></comment>
			</column>
			<column name="cf_777" type="varchar" length="200" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
				<comment><![CDATA[next_step]]></comment>
			</column>
			<column name="cf_791" type="varchar" length="200" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
				<comment><![CDATA[lead_source_details]]></comment>
			</column>
			<column name="cf_795" type="varchar" length="255" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
			</column>
			<column name="cf_797" type="varchar" length="10" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
				<comment><![CDATA[manual_inception_date]]></comment>
			</column>
			<column name="cf_799" type="varchar" length="255" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
				<comment><![CDATA[organization_type]]></comment>
			</column>
			<column name="cf_807" type="integer" length="10" decimal="0" jt="4" />
			<column name="cf_845" type="varchar" length="255" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
				<comment><![CDATA[presales_thread]]></comment>
			</column>
			<column name="cf_847" type="varchar" length="255" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
				<comment><![CDATA[sales_thread]]></comment>
			</column>
			<column name="cf_857" type="varchar" length="200" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
				<comment><![CDATA[subject]]></comment>
			</column>
			<column name="cf_864" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[external_inteligence - usually discovery link]]></comment>
			</column>
			<column name="cf_866" type="integer" length="10" decimal="0" jt="4" />
			<column name="cf_884" type="varchar" length="10" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
				<comment><![CDATA[next_step_date]]></comment>
			</column>
			<column name="cf_892" type="varchar" length="16" decimal="0" jt="12" />
			<column name="cf_894" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_896" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_898" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_900" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_902" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_904" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_920" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_922" type="varchar" length="255" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_leadscf_i" unique="PRIMARY_KEY" >
				<column name="leadid" />
			</index>
		</table>
		<table name="vtiger_leadsource_d" >
			<column name="leadsourceid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="leadsource" type="varchar" length="200" decimal="0" jt="12" />
			<column name="presence" type="integer" length="10" decimal="0" jt="4" />
			<column name="picklist_valueid" type="integer" length="10" decimal="0" jt="4" />
			<column name="sortorderid" type="integer" length="10" decimal="0" jt="4" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_leadsource_i" >
			<column name="leadsourceid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="leadsource" type="varchar" length="200" decimal="0" jt="12" />
			<column name="presence" type="integer" length="10" decimal="0" jt="4" />
			<column name="picklist_valueid" type="integer" length="10" decimal="0" jt="4" />
			<column name="sortorderid" type="integer" length="10" decimal="0" jt="4" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_leadsource_i" unique="PRIMARY_KEY" >
				<column name="leadsourceid" />
			</index>
		</table>
		<table name="vtiger_leadstatus_d" >
			<column name="leadstatusid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="leadstatus" type="varchar" length="200" decimal="0" jt="12" />
			<column name="presence" type="integer" length="10" decimal="0" jt="4" />
			<column name="picklist_valueid" type="integer" length="10" decimal="0" jt="4" />
			<column name="sortorderid" type="integer" length="10" decimal="0" jt="4" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_leadstatus_i" >
			<column name="leadstatusid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="leadstatus" type="varchar" length="200" decimal="0" jt="12" />
			<column name="presence" type="integer" length="10" decimal="0" jt="4" />
			<column name="picklist_valueid" type="integer" length="10" decimal="0" jt="4" />
			<column name="sortorderid" type="integer" length="10" decimal="0" jt="4" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_leadstatus_i" unique="PRIMARY_KEY" >
				<column name="leadstatusid" />
			</index>
		</table>
		<table name="vtiger_leadsubdetails_d" >
			<column name="leadsubscriptionid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="website" type="varchar" length="255" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="callornot" type="integer" length="10" decimal="0" jt="4" >
				<defo>0</defo>
			</column>
			<column name="readornot" type="integer" length="10" decimal="0" jt="4" >
				<defo>0</defo>
			</column>
			<column name="empct" type="integer" length="10" decimal="0" jt="4" >
				<defo>0</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_leadsubdetails_i" >
			<column name="leadsubscriptionid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="website" type="varchar" length="255" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="callornot" type="integer" length="10" decimal="0" jt="4" >
				<defo>0</defo>
			</column>
			<column name="readornot" type="integer" length="10" decimal="0" jt="4" >
				<defo>0</defo>
			</column>
			<column name="empct" type="integer" length="10" decimal="0" jt="4" >
				<defo>0</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_leadsubdetails_i" unique="PRIMARY_KEY" >
				<column name="leadsubscriptionid" />
			</index>
		</table>
		<table name="vtiger_modcomments_d" >
			<column name="modcommentsid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="commentcontent" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="related_to" type="integer" length="10" decimal="0" jt="4" />
			<column name="parent_comments" type="varchar" length="100" decimal="0" jt="12" />
			<column name="customer" type="varchar" length="100" decimal="0" jt="12" />
			<column name="userid" type="varchar" length="100" decimal="0" jt="12" />
			<column name="reasontoedit" type="varchar" length="100" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_modcomments_i" >
			<column name="modcommentsid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="commentcontent" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="related_to" type="integer" length="10" decimal="0" jt="4" />
			<column name="parent_comments" type="varchar" length="100" decimal="0" jt="12" />
			<column name="customer" type="varchar" length="100" decimal="0" jt="12" />
			<column name="userid" type="varchar" length="100" decimal="0" jt="12" />
			<column name="reasontoedit" type="varchar" length="100" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_modcomments_i" unique="PRIMARY_KEY" >
				<column name="modcommentsid" />
			</index>
		</table>
		<table name="vtiger_modtracker_basic_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="crmid" type="integer" length="10" decimal="0" jt="4" />
			<column name="module" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="whodid" type="integer" length="10" decimal="0" jt="4" />
			<column name="changedon" type="text" decimal="0" jt="12" />
			<column name="status" type="integer" length="10" decimal="0" jt="4" >
				<defo>0</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_modtracker_basic_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="crmid" type="integer" length="10" decimal="0" jt="4" />
			<column name="module" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="whodid" type="integer" length="10" decimal="0" jt="4" />
			<column name="changedon" type="text" decimal="0" jt="12" />
			<column name="status" type="integer" length="10" decimal="0" jt="4" >
				<defo>0</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="vtiger_modtracker_basic_i_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="ix_vtiger_modtracker_basic_i_crmid" unique="NORMAL" >
				<column name="crmid" />
			</index>
		</table>
		<table name="vtiger_modtracker_detail_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fieldname" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="prevalue" type="text" decimal="0" jt="12" />
			<column name="postvalue" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_modtracker_detail_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="fieldname" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="prevalue" type="text" decimal="0" jt="12" />
			<column name="postvalue" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="ix_vtiger_modtracker_detail_i_id" unique="NORMAL" >
				<column name="id" />
			</index>
		</table>
		<table name="vtiger_modtracker_relations_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="targetmodule" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="targetid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="changedon" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_modtracker_relations_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="targetmodule" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="targetid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="changedon" type="text" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="vtiger_modtracker_relations_i_pkey" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="ix_vtiger_modtracker_relations_i_targetid" unique="NORMAL" >
				<column name="targetid" />
			</index>
		</table>
		<table name="vtiger_potential_d" >
			<column name="potentialid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="potential_no" type="varchar" length="100" decimal="0" jt="12" />
			<column name="related_to" type="integer" length="10" decimal="0" jt="4" />
			<column name="potentialname" type="varchar" length="120" decimal="0" jt="12" />
			<column name="amount" type="numeric" length="33" decimal="8" jt="2" />
			<column name="currency" type="varchar" length="20" decimal="0" jt="12" />
			<column name="closingdate" type="varchar" length="10" decimal="0" jt="12" />
			<column name="typeofrevenue" type="varchar" length="50" decimal="0" jt="12" />
			<column name="nextstep" type="varchar" length="100" decimal="0" jt="12" />
			<column name="private" type="integer" length="10" decimal="0" jt="4" />
			<column name="probability" type="numeric" length="10" decimal="3" jt="2" />
			<column name="campaignid" type="integer" length="10" decimal="0" jt="4" />
			<column name="sales_stage" type="varchar" length="200" decimal="0" jt="12" />
			<column name="potentialtype" type="varchar" length="200" decimal="0" jt="12" />
			<column name="leadsource" type="varchar" length="200" decimal="0" jt="12" />
			<column name="productid" type="integer" length="10" decimal="0" jt="4" />
			<column name="productversion" type="varchar" length="50" decimal="0" jt="12" />
			<column name="quotationref" type="varchar" length="50" decimal="0" jt="12" />
			<column name="partnercontact" type="varchar" length="50" decimal="0" jt="12" >
				<comment><![CDATA[null not used in CRM]]></comment>
			</column>
			<column name="remarks" type="varchar" length="50" decimal="0" jt="12" />
			<column name="runtimefee" type="integer" length="10" decimal="0" jt="4" />
			<column name="followupdate" type="varchar" length="10" decimal="0" jt="12" />
			<column name="evaluationstatus" type="varchar" length="50" decimal="0" jt="12" />
			<column name="description" type="varchar" length="21845" decimal="0" jt="12" >
				<comment><![CDATA[null - crm_entiry.description is used instead]]></comment>
			</column>
			<column name="forecastcategory" type="integer" length="10" decimal="0" jt="4" />
			<column name="outcomeanalysis" type="integer" length="10" decimal="0" jt="4" />
			<column name="forecast_amount" type="numeric" length="33" decimal="8" jt="2" />
			<column name="isconvertedfromlead" type="varchar" length="3" decimal="0" jt="12" />
			<column name="contact_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_potential_i" >
			<column name="potentialid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="potential_no" type="varchar" length="100" decimal="0" jt="12" />
			<column name="related_to" type="integer" length="10" decimal="0" jt="4" />
			<column name="potentialname" type="varchar" length="120" decimal="0" jt="12" />
			<column name="amount" type="numeric" length="33" decimal="8" jt="2" />
			<column name="currency" type="varchar" length="20" decimal="0" jt="12" />
			<column name="closingdate" type="varchar" length="10" decimal="0" jt="12" />
			<column name="typeofrevenue" type="varchar" length="50" decimal="0" jt="12" />
			<column name="nextstep" type="varchar" length="100" decimal="0" jt="12" />
			<column name="private" type="integer" length="10" decimal="0" jt="4" />
			<column name="probability" type="numeric" length="10" decimal="3" jt="2" />
			<column name="campaignid" type="integer" length="10" decimal="0" jt="4" />
			<column name="sales_stage" type="varchar" length="200" decimal="0" jt="12" />
			<column name="potentialtype" type="varchar" length="200" decimal="0" jt="12" />
			<column name="leadsource" type="varchar" length="200" decimal="0" jt="12" />
			<column name="productid" type="integer" length="10" decimal="0" jt="4" />
			<column name="productversion" type="varchar" length="50" decimal="0" jt="12" />
			<column name="quotationref" type="varchar" length="50" decimal="0" jt="12" />
			<column name="partnercontact" type="varchar" length="50" decimal="0" jt="12" >
				<comment><![CDATA[null not used in CRM]]></comment>
			</column>
			<column name="remarks" type="varchar" length="50" decimal="0" jt="12" />
			<column name="runtimefee" type="integer" length="10" decimal="0" jt="4" />
			<column name="followupdate" type="varchar" length="10" decimal="0" jt="12" />
			<column name="evaluationstatus" type="varchar" length="50" decimal="0" jt="12" />
			<column name="description" type="varchar" length="21845" decimal="0" jt="12" >
				<comment><![CDATA[null - crm_entiry.description is used instead]]></comment>
			</column>
			<column name="forecastcategory" type="integer" length="10" decimal="0" jt="4" />
			<column name="outcomeanalysis" type="integer" length="10" decimal="0" jt="4" />
			<column name="forecast_amount" type="numeric" length="33" decimal="8" jt="2" />
			<column name="isconvertedfromlead" type="varchar" length="3" decimal="0" jt="12" />
			<column name="contact_id" type="integer" length="10" decimal="0" jt="4" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_potential_i" unique="PRIMARY_KEY" >
				<column name="potentialid" />
			</index>
		</table>
		<table name="vtiger_potentialscf_d" >
			<column name="potentialid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="cf_759" type="varchar" length="200" decimal="0" jt="12" >
				<comment><![CDATA[referring_partner]]></comment>
			</column>
			<column name="cf_761" type="varchar" length="200" decimal="0" jt="12" >
				<comment><![CDATA[reselling_partner]]></comment>
			</column>
			<column name="cf_763" type="varchar" length="200" decimal="0" jt="12" />
			<column name="cf_765" type="varchar" length="10" decimal="0" jt="12" >
				<comment><![CDATA[manual_inception_date]]></comment>
			</column>
			<column name="cf_769" type="varchar" length="10" decimal="0" jt="12" />
			<column name="cf_789" type="varchar" length="200" decimal="0" jt="12" >
				<comment><![CDATA[source_detail]]></comment>
			</column>
			<column name="cf_809" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[reason_lost]]></comment>
			</column>
			<column name="cf_831" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[sales_thread]]></comment>
			</column>
			<column name="cf_833" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[presales_thread]]></comment>
			</column>
			<column name="cf_870" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_872" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[postsales_thread]]></comment>
			</column>
			<column name="cf_874" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[category]]></comment>
			</column>
			<column name="cf_876" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_880" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[case_study]]></comment>
			</column>
			<column name="cf_882" type="varchar" length="10" decimal="0" jt="12" />
			<column name="cf_888" type="varchar" length="10" decimal="0" jt="12" />
			<column name="cf_890" type="varchar" length="16" decimal="0" jt="12" />
			<column name="cf_906" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_908" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_910" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_912" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_914" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_916" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_918" type="varchar" length="255" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_potentialscf_i" >
			<column name="potentialid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="cf_759" type="varchar" length="200" decimal="0" jt="12" >
				<comment><![CDATA[referring_partner]]></comment>
			</column>
			<column name="cf_761" type="varchar" length="200" decimal="0" jt="12" >
				<comment><![CDATA[reselling_partner]]></comment>
			</column>
			<column name="cf_763" type="varchar" length="200" decimal="0" jt="12" />
			<column name="cf_765" type="varchar" length="10" decimal="0" jt="12" >
				<comment><![CDATA[manual_inception_date]]></comment>
			</column>
			<column name="cf_769" type="varchar" length="10" decimal="0" jt="12" />
			<column name="cf_789" type="varchar" length="200" decimal="0" jt="12" >
				<comment><![CDATA[source_detail]]></comment>
			</column>
			<column name="cf_809" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[reason_lost]]></comment>
			</column>
			<column name="cf_831" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[sales_thread]]></comment>
			</column>
			<column name="cf_833" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[presales_thread]]></comment>
			</column>
			<column name="cf_870" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_872" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[postsales_thread]]></comment>
			</column>
			<column name="cf_874" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[category]]></comment>
			</column>
			<column name="cf_876" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_880" type="varchar" length="255" decimal="0" jt="12" >
				<comment><![CDATA[case_study]]></comment>
			</column>
			<column name="cf_882" type="varchar" length="10" decimal="0" jt="12" />
			<column name="cf_888" type="varchar" length="10" decimal="0" jt="12" />
			<column name="cf_890" type="varchar" length="16" decimal="0" jt="12" />
			<column name="cf_906" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_908" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_910" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_912" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_914" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_916" type="varchar" length="255" decimal="0" jt="12" />
			<column name="cf_918" type="varchar" length="255" decimal="0" jt="12" />
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_potentialscf_i" unique="PRIMARY_KEY" >
				<column name="potentialid" />
			</index>
		</table>
		<table name="vtiger_servicecontracts_d" >
			<column name="servicecontractsid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="start_date" type="varchar" length="10" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="end_date" type="varchar" length="10" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="sc_related_to" type="integer" length="10" decimal="0" jt="4" />
			<column name="tracking_unit" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="total_units" type="numeric" length="5" decimal="2" jt="2" >
				<defo>NULL::numeric</defo>
			</column>
			<column name="used_units" type="numeric" length="5" decimal="2" jt="2" >
				<defo>NULL::numeric</defo>
			</column>
			<column name="subject" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="due_date" type="varchar" length="10" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="planned_duration" type="varchar" length="256" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="actual_duration" type="varchar" length="256" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="contract_status" type="varchar" length="200" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="priority" type="varchar" length="200" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="contract_type" type="varchar" length="200" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="progress" type="numeric" length="5" decimal="2" jt="2" >
				<defo>NULL::numeric</defo>
			</column>
			<column name="contract_no" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_servicecontracts_i" >
			<column name="servicecontractsid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="start_date" type="varchar" length="10" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="end_date" type="varchar" length="10" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="sc_related_to" type="integer" length="10" decimal="0" jt="4" />
			<column name="tracking_unit" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="total_units" type="numeric" length="5" decimal="2" jt="2" >
				<defo>NULL::numeric</defo>
			</column>
			<column name="used_units" type="numeric" length="5" decimal="2" jt="2" >
				<defo>NULL::numeric</defo>
			</column>
			<column name="subject" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="due_date" type="varchar" length="10" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="planned_duration" type="varchar" length="256" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="actual_duration" type="varchar" length="256" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="contract_status" type="varchar" length="200" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="priority" type="varchar" length="200" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="contract_type" type="varchar" length="200" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="progress" type="numeric" length="5" decimal="2" jt="2" >
				<defo>NULL::numeric</defo>
			</column>
			<column name="contract_no" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_servicecontracts_i_servicecontractsid" unique="PRIMARY_KEY" >
				<column name="servicecontractsid" />
			</index>
		</table>
		<table name="vtiger_servicecontractscf_d" >
			<column name="servicecontractsid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="cf_801" type="varchar" length="100" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
			</column>
			<column name="cf_849" type="varchar" length="255" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
			</column>
			<column name="cf_878" type="varchar" length="10" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_servicecontractscf_i" >
			<column name="servicecontractsid" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="cf_801" type="varchar" length="100" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
			</column>
			<column name="cf_849" type="varchar" length="255" decimal="0" jt="12" >
				<defo>&#039;&#039;::character varying</defo>
			</column>
			<column name="cf_878" type="varchar" length="10" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_servicecontractscf_i" unique="PRIMARY_KEY" >
				<column name="servicecontractsid" />
			</index>
		</table>
		<table name="vtiger_users_d" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="user_name" type="varchar" length="255" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="user_password" type="varchar" length="200" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="user_hash" type="varchar" length="32" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="cal_color" type="varchar" length="25" decimal="0" jt="12" >
				<defo>&#039;#E6FAD8&#039;::character varying</defo>
			</column>
			<column name="first_name" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="last_name" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="reports_to_id" type="varchar" length="36" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="is_admin" type="varchar" length="3" decimal="0" jt="12" >
				<defo>&#039;0&#039;::character varying</defo>
			</column>
			<column name="currency_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>1</defo>
			</column>
			<column name="description" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="date_entered" type="varchar" length="21" decimal="0" jt="12" mandatory="y" />
			<column name="date_modified" type="varchar" length="19" decimal="0" jt="12" >
				<defo>&#039;0000-00-00 00:00:00&#039;::character varying</defo>
			</column>
			<column name="modified_user_id" type="varchar" length="36" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="title" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="department" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="phone_home" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="phone_mobile" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="phone_work" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="phone_other" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="phone_fax" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="email1" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="email2" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="secondaryemail" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="status" type="varchar" length="25" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="signature" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="address_street" type="varchar" length="150" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="address_city" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="address_state" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="address_country" type="varchar" length="25" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="address_postalcode" type="varchar" length="9" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="user_preferences" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="tz" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="holidays" type="varchar" length="60" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="namedays" type="varchar" length="60" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="workdays" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="weekstart" type="integer" length="10" decimal="0" jt="4" />
			<column name="date_format" type="varchar" length="200" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="hour_format" type="varchar" length="30" decimal="0" jt="12" >
				<defo>&#039;am/pm&#039;::character varying</defo>
			</column>
			<column name="start_hour" type="varchar" length="30" decimal="0" jt="12" >
				<defo>&#039;10:00&#039;::character varying</defo>
			</column>
			<column name="end_hour" type="varchar" length="30" decimal="0" jt="12" >
				<defo>&#039;23:00&#039;::character varying</defo>
			</column>
			<column name="activity_view" type="varchar" length="200" decimal="0" jt="12" >
				<defo>&#039;Today&#039;::character varying</defo>
			</column>
			<column name="lead_view" type="varchar" length="200" decimal="0" jt="12" >
				<defo>&#039;Today&#039;::character varying</defo>
			</column>
			<column name="imagename" type="varchar" length="250" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="deleted" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="confirm_password" type="varchar" length="300" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="internal_mailer" type="varchar" length="3" decimal="0" jt="12" mandatory="y" >
				<defo>&#039;1&#039;::character varying</defo>
			</column>
			<column name="reminder_interval" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="reminder_next_time" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="crypt_type" type="varchar" length="20" decimal="0" jt="12" mandatory="y" >
				<defo>&#039;MD5&#039;::character varying</defo>
			</column>
			<column name="accesskey" type="varchar" length="36" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="theme" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="language" type="varchar" length="36" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="time_zone" type="varchar" length="200" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="currency_grouping_pattern" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="currency_decimal_separator" type="varchar" length="2" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="currency_grouping_separator" type="varchar" length="2" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="currency_symbol_placement" type="varchar" length="20" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="phone_crm_extension" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="no_of_currency_decimals" type="varchar" length="2" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="truncate_trailing_zeros" type="varchar" length="3" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="dayoftheweek" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="callduration" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="othereventduration" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="calendarsharedtype" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="default_record_view" type="varchar" length="10" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="leftpanelhide" type="varchar" length="3" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="rowheight" type="varchar" length="10" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="defaulteventstatus" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="defaultactivitytype" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="hidecompletedevents" type="integer" length="10" decimal="0" jt="4" />
			<column name="is_owner" type="varchar" length="5" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="tech_snapshot_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
		</table>
		<table name="vtiger_users_i" >
			<column name="id" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="user_name" type="varchar" length="255" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="user_password" type="varchar" length="200" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="user_hash" type="varchar" length="32" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="cal_color" type="varchar" length="25" decimal="0" jt="12" >
				<defo>&#039;#E6FAD8&#039;::character varying</defo>
			</column>
			<column name="first_name" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="last_name" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="reports_to_id" type="varchar" length="36" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="is_admin" type="varchar" length="3" decimal="0" jt="12" >
				<defo>&#039;0&#039;::character varying</defo>
			</column>
			<column name="currency_id" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>1</defo>
			</column>
			<column name="description" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="date_entered" type="varchar" length="21" decimal="0" jt="12" mandatory="y" />
			<column name="date_modified" type="varchar" length="19" decimal="0" jt="12" >
				<defo>&#039;0000-00-00 00:00:00&#039;::character varying</defo>
			</column>
			<column name="modified_user_id" type="varchar" length="36" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="title" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="department" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="phone_home" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="phone_mobile" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="phone_work" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="phone_other" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="phone_fax" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="email1" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="email2" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="secondaryemail" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="status" type="varchar" length="25" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="signature" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="address_street" type="varchar" length="150" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="address_city" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="address_state" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="address_country" type="varchar" length="25" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="address_postalcode" type="varchar" length="9" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="user_preferences" type="varchar" length="21845" decimal="0" jt="12" />
			<column name="tz" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="holidays" type="varchar" length="60" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="namedays" type="varchar" length="60" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="workdays" type="varchar" length="30" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="weekstart" type="integer" length="10" decimal="0" jt="4" />
			<column name="date_format" type="varchar" length="200" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="hour_format" type="varchar" length="30" decimal="0" jt="12" >
				<defo>&#039;am/pm&#039;::character varying</defo>
			</column>
			<column name="start_hour" type="varchar" length="30" decimal="0" jt="12" >
				<defo>&#039;10:00&#039;::character varying</defo>
			</column>
			<column name="end_hour" type="varchar" length="30" decimal="0" jt="12" >
				<defo>&#039;23:00&#039;::character varying</defo>
			</column>
			<column name="activity_view" type="varchar" length="200" decimal="0" jt="12" >
				<defo>&#039;Today&#039;::character varying</defo>
			</column>
			<column name="lead_view" type="varchar" length="200" decimal="0" jt="12" >
				<defo>&#039;Today&#039;::character varying</defo>
			</column>
			<column name="imagename" type="varchar" length="250" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="deleted" type="integer" length="10" decimal="0" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="confirm_password" type="varchar" length="300" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="internal_mailer" type="varchar" length="3" decimal="0" jt="12" mandatory="y" >
				<defo>&#039;1&#039;::character varying</defo>
			</column>
			<column name="reminder_interval" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="reminder_next_time" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="crypt_type" type="varchar" length="20" decimal="0" jt="12" mandatory="y" >
				<defo>&#039;MD5&#039;::character varying</defo>
			</column>
			<column name="accesskey" type="varchar" length="36" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="theme" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="language" type="varchar" length="36" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="time_zone" type="varchar" length="200" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="currency_grouping_pattern" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="currency_decimal_separator" type="varchar" length="2" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="currency_grouping_separator" type="varchar" length="2" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="currency_symbol_placement" type="varchar" length="20" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="phone_crm_extension" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="no_of_currency_decimals" type="varchar" length="2" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="truncate_trailing_zeros" type="varchar" length="3" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="dayoftheweek" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="callduration" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="othereventduration" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="calendarsharedtype" type="varchar" length="100" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="default_record_view" type="varchar" length="10" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="leftpanelhide" type="varchar" length="3" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="rowheight" type="varchar" length="10" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="defaulteventstatus" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="defaultactivitytype" type="varchar" length="50" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="hidecompletedevents" type="integer" length="10" decimal="0" jt="4" />
			<column name="is_owner" type="varchar" length="5" decimal="0" jt="12" >
				<defo>NULL::character varying</defo>
			</column>
			<column name="tech_data_load_uuid" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="tech_data_load_utc_timestamp" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_vtiger_users_i" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<procedure name="tf_e_ocean_organziation_to_crm_map_i" id="Procedure_261b2ca" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION stage.tf_e_ocean_organziation_to_crm_map_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
    /*
    ===========================================================================================================
    DESCRIPTION:        Marks rows which have invalid data in stage input table sales_report_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-15 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================================
    */
BEGIN
    UPDATE stage.ocean_organziation_to_crm_map_i
    SET error = True
    WHERE organization_name IN (
            SELECT organization_name
            FROM stage.ocean_organziation_to_crm_map_i
            GROUP BY organization_name
            HAVING count(organization_name) > 1
            );
    UPDATE stage.ocean_organziation_to_crm_map_i
    SET error = True
    WHERE crm_id IN (
            SELECT crm_id
            FROM stage.ocean_organziation_to_crm_map_i
            GROUP BY crm_id
            HAVING count(crm_id) > 1
            );
    UPDATE stage.ocean_organziation_to_crm_map_i
    SET error = True
    WHERE (organization_name <> '') IS NOT TRUE
        OR (crm_id <> 0) IS NOT TRUE;
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_e_ocean_sales_report_i" id="Procedure_3f7c01c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION stage.tf_e_ocean_sales_report_i()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$

    /*
    ===========================================================================================================
    DESCRIPTION:        Marks rows which have invalid data in stage input table sales_report_i
    AUTHOR:             Martin Vrabel (https://github.com/mvrabel)
    CREATED ON:         2018-05-15 (YYYY-MM-DD)
    NOTE:
    ===========================================================================================================
    */
    DECLARE
    CURRENCY_ERROR_MESSAGE TEXT := 'Incorrect currency';
    REVENUE_TYPE_ERROR_MESSAGE TEXT := 'Incorrect revenue type';
    SELLER_ERROR_MESSAGE TEXT := 'Incorrect seller';
    SALES_REPRESENTATIVE_ERROR_MESSAGE TEXT := 'Incorrect sales representative';
    REVENUE_START_ERROR_MESSAGE TEXT := 'Revenue End before Revenue Start';
    PAID_ERROR_MESSAGE TEXT := 'Incorrect paid';
    NULL_CHECK_ERROR_MESSAGE TEXT := 'Null values in one of these columns: customer, seller, revenue_type, booking_date, currency, amount, revenue_start';
    BEGIN
        -- Unique sale_key
        UPDATE stage.ocean_sales_report_i
        SET error = TRUE
        WHERE sale_key IN (
                SELECT sales_report.sale_key
                FROM stage.ocean_sales_report_i AS sales_report
                GROUP BY sales_report.sale_key
                HAVING count(sales_report.sale_key) > 1
                );
        -- currency check
        UPDATE stage.ocean_sales_report_i
        SET error = True, error_description = COALESCE(error_description || ' | ' || CURRENCY_ERROR_MESSAGE, CURRENCY_ERROR_MESSAGE)
        WHERE currency NOT IN (SELECT currency FROM stage.ocean_currency_i);
        -- revenue type check
        UPDATE stage.ocean_sales_report_i
        SET error = True, error_description = COALESCE(error_description || ' | ' || REVENUE_TYPE_ERROR_MESSAGE, REVENUE_TYPE_ERROR_MESSAGE)
        WHERE revenue_type NOT IN (SELECT revenue_type FROM stage.ocean_revenue_type_i);
        -- seller check
        UPDATE stage.ocean_sales_report_i
        SET error = True, error_description = COALESCE(error_description || ' | ' || SELLER_ERROR_MESSAGE, SELLER_ERROR_MESSAGE)
        WHERE seller NOT IN (SELECT seller FROM stage.ocean_seller_i);
        -- sales representative check
        UPDATE stage.ocean_sales_report_i
        SET error = True, error_description = COALESCE(error_description || ' | ' || SALES_REPRESENTATIVE_ERROR_MESSAGE, SALES_REPRESENTATIVE_ERROR_MESSAGE)
        WHERE sales_rep NOT IN (SELECT sales_rep_code FROM stage.ocean_sales_representative_i) AND sales_rep <> '';
        -- revenue_start is before revenue_end check
        UPDATE stage.ocean_sales_report_i
        SET error = TRUE, error_description = COALESCE(error_description || ' | ' || REVENUE_START_ERROR_MESSAGE, REVENUE_START_ERROR_MESSAGE)
        WHERE revenue_end <> ''
            AND revenue_start <> ''
            AND to_date(revenue_start,'dd.mm.yyyy') > to_date(revenue_end,'dd.mm.yyyy');
        -- paid check
        UPDATE stage.ocean_sales_report_i
        SET error = True, error_description = COALESCE(error_description || ' | ' || PAID_ERROR_MESSAGE, PAID_ERROR_MESSAGE)
        WHERE paid NOT IN (SELECT payment_received FROM stage.ocean_payment_received_i);
        -- NULL or empty string check
        UPDATE stage.ocean_sales_report_i
        SET error = TRUE, error_description = COALESCE(error_description || ' | ' || NULL_CHECK_ERROR_MESSAGE, NULL_CHECK_ERROR_MESSAGE)
        WHERE (customer <> '') IS NOT TRUE
            OR (seller <> '') IS NOT TRUE
            OR (revenue_type <> '') IS NOT TRUE
            OR (booking_date <> '') IS NOT TRUE
            OR (currency <> '') IS NOT TRUE
            OR (amount <> 0) IS NOT TRUE
            OR (revenue_start <> '')IS NOT TRUE ;
        RETURN 0;
    END;$function$
]]></string>
		</procedure>
		<procedure name="tf_e_stage_data_quality_uber_check" id="Procedure_14d5842" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION stage.tf_e_stage_data_quality_uber_check()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
BEGIN
    ------------------------
    -- NextClooud / Ocean --
    ------------------------
    PERFORM stage.tf_e_ocean_organziation_to_crm_map_i();
    PERFORM stage.tf_e_ocean_sales_report_i();
    RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_u_clear_stage_i_tables" id="Procedure_4cc6c73" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION stage.tf_u_clear_stage_i_tables()
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
DECLARE
tables CURSOR
FOR
SELECT tablename
FROM pg_tables
WHERE tablename NOT LIKE 'pg_%'
    AND schemaname = 'stage'
    AND tablename LIKE '%_i';
BEGIN
    FOR table_record IN tables LOOP        
        EXECUTE
            'DELETE FROM stage.' || table_record.tablename;
    END LOOP;
RETURN 0;
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_u_empty_check_stage_input_tables" id="Procedure_2bd0597" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION stage.tf_u_empty_check_stage_input_tables(OUT is_empty text)
 RETURNS text
 LANGUAGE plpgsql
AS $function$
BEGIN
    is_empty := (SELECT * FROM tf_u_empty_check('stage','_i'));
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_u_gen_inserts_into_stage_d_tables" id="Procedure_40882ab" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION stage.tf_u_gen_inserts_into_stage_d_tables()
 RETURNS SETOF text
 LANGUAGE plpgsql
AS $function$
DECLARE
BEGIN
  RETURN QUERY
    SELECT
    ('INSERT INTO '
    || foo.table_schema
    || '.'
    || foo.table_name
    || ' ( '
    || foo.table_columns
    || ' ) '
    || 'SELECT '
    || '(TO_CHAR(current_timestamp AT TIME ZONE ''UTC''  , ''YYYYMMddHH24MISS''))::BIGINT, '
    || replace(foo.table_columns, 'tech_snapshot_utc_timestamp,','')
    || ' FROM '
    || table_info.table_schema
    || '.'
    || table_info.table_name) as insert_statement_into_d_tables
FROM information_schema.columns AS table_info
LEFT JOIN (
    SELECT
    table_schema
        ,table_name
        ,string_agg(table_info.column_name, ', '::TEXT ORDER BY array_position(array ['tech_snapshot_utc_timestamp','tech_data_load_uuid','tech_data_load_utc_timestamp'] , table_info.column_name::TEXT)) AS table_columns
    FROM information_schema.columns AS table_info
    WHERE table_name LIKE '%_d'
        AND table_schema = 'stage'
    GROUP BY table_schema
        ,table_name
    ) AS foo ON substring(foo.table_name for length(foo.table_name) - 2) = substring(table_info.table_name for length(table_info.table_name) - 2)
WHERE table_info.table_name LIKE '%_i'
    AND table_info.table_schema = 'stage'
GROUP BY 
    table_info.table_schema
    ,table_info.table_name
    ,foo.table_schema
    ,foo.table_name
    ,foo.table_columns;
 END
   $function$
]]></string>
		</procedure>
		<procedure name="tf_u_generate_vacuum_statements_daily_snapshot_tables" id="Procedure_2c768a2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION stage.tf_u_generate_vacuum_statements_daily_snapshot_tables()
 RETURNS TABLE(vacuum_statement text)
 LANGUAGE plpgsql
AS $function$
BEGIN
    RETURN QUERY SELECT tf_u_generate_vacuum_statements('stage','_d');
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_u_generate_vacuum_statements_stage_daily_tables" id="Procedure_40cbeec" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION stage.tf_u_generate_vacuum_statements_stage_daily_tables()
 RETURNS TABLE(vacuum_statement text)
 LANGUAGE plpgsql
AS $function$
BEGIN
    RETURN QUERY SELECT tf_u_generate_vacuum_statements('stage', '_d');
END;$function$
]]></string>
		</procedure>
		<procedure name="tf_u_generate_vacuum_statements_stage_input_tables" id="Procedure_4e6a9d9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION stage.tf_u_generate_vacuum_statements_stage_input_tables()
 RETURNS TABLE(vacuum_statement text)
 LANGUAGE plpgsql
AS $function$
BEGIN
    RETURN QUERY SELECT tf_u_generate_vacuum_statements('stage', '_i');
END;$function$
]]></string>
		</procedure>
	</schema>
	<connector name="dwh" database="PostgreSQL" driver_class="org.postgresql.Driver" driver_jar="postgresql-42.1.4.jar" driver_desc="Standard" host="localhost" port="5432" instance="dwh" user="postgres" passwd="c2VjcmV0MTIz" />
	<layout name="core_i" id="Layout_27ddb7" show_column_type="y" show_relation="columns" >
		<entity schema="core" name="activity_i" color="bcd5f1" x="405" y="2790" />
		<entity schema="core" name="c_partner_list_i" color="bcd5f1" x="2880" y="2445" />
		<entity schema="core" name="c_revenue_type_i" color="bcd5f1" x="1830" y="2400" />
		<entity schema="core" name="contact_i" color="bcd5f1" x="1125" y="1515" />
		<entity schema="core" name="deal_change_log_i" color="bcd5f1" x="1125" y="375" />
		<entity schema="core" name="deal_contact_map_i" color="bcd5f1" x="1125" y="45" />
		<entity schema="core" name="deal_i" color="bcd5f1" x="765" y="1515" />
		<entity schema="core" name="email_campaign_bounced_email_i" color="bcd5f1" x="1830" y="2070" />
		<entity schema="core" name="email_campaign_clicked_url_i" color="bcd5f1" x="2190" y="2070" />
		<entity schema="core" name="email_campaign_opened_by_i" color="bcd5f1" x="2535" y="2070" />
		<entity schema="core" name="email_campaign_recipient_i" color="bcd5f1" x="2880" y="2070" />
		<entity schema="core" name="email_campaign_report_i" color="bcd5f1" x="1470" y="1560" />
		<entity schema="core" name="employee_i" color="bcd5f1" x="765" y="2400" />
		<entity schema="core" name="iso_3166_country_list_i" color="bcd5f1" x="2535" y="2445" />
		<entity schema="core" name="issue_comment_i" color="bcd5f1" x="60" y="2790" />
		<entity schema="core" name="issue_i" color="bcd5f1" x="405" y="1515" />
		<entity schema="core" name="issue_relation_map_i" color="bcd5f1" x="60" y="1515" />
		<entity schema="core" name="list_segment_list_member_map_i" color="bcd5f1" x="1845" y="765" />
		<entity schema="core" name="mail_message_i" color="bcd5f1" x="780" y="960" />
		<entity schema="core" name="mailing_list_i" color="bcd5f1" x="1125" y="765" />
		<entity schema="core" name="mailing_list_member_i" color="bcd5f1" x="1500" y="765" />
		<entity schema="core" name="mailing_list_segment_i" color="bcd5f1" x="780" y="345" />
		<entity schema="core" name="organization_i" color="bcd5f1" x="1125" y="2400" />
		<entity schema="core" name="organization_relation_i" color="bcd5f1" x="1845" y="1350" />
		<entity schema="core" name="party_i" color="bcd5f1" x="765" y="2790" />
		<entity schema="core" name="project_i" color="bcd5f1" x="60" y="1185" />
		<entity schema="core" name="release_i" color="bcd5f1" x="1500" y="345" />
		<entity schema="core" name="sale_i" color="bcd5f1" x="1470" y="2400" />
		<entity schema="core" name="worklog_i" color="bcd5f1" x="45" y="2370" />
		<entity schema="core" name="note_i" color="bcd5f1" x="420" y="1050" />
	</layout>
	<layout name="core_ih" id="Layout_4e81b1" show_column_type="y" show_relation="columns" >
		<entity schema="core" name="contact_ih" color="bcd5f1" x="765" y="540" />
		<entity schema="core" name="deal_ih" color="bcd5f1" x="405" y="1350" />
		<entity schema="core" name="employee_ih" color="bcd5f1" x="405" y="540" />
		<entity schema="core" name="issue_ih" color="bcd5f1" x="45" y="540" />
		<entity schema="core" name="organization_ih" color="bcd5f1" x="45" y="45" />
		<entity schema="core" name="party_ih" color="bcd5f1" x="405" y="945" />
		<entity schema="core" name="project_ih" color="bcd5f1" x="45" y="1350" />
	</layout>
	<layout name="core_t" id="Layout_1db204b" show_column_type="y" show_relation="columns" >
		<entity schema="core" name="activity_t" color="bcd5f1" x="405" y="1995" />
		<entity schema="core" name="c_partner_list_t" color="bcd5f1" x="1485" y="135" />
		<entity schema="core" name="c_revenue_type_t" color="bcd5f1" x="1830" y="1605" />
		<entity schema="core" name="contact_t" color="bcd5f1" x="1125" y="735" />
		<entity schema="core" name="deal_change_log_t" color="bcd5f1" x="1125" y="1230" />
		<entity schema="core" name="deal_contact_map_t" color="bcd5f1" x="1470" y="420" />
		<entity schema="core" name="deal_t" color="bcd5f1" x="765" y="735" />
		<entity schema="core" name="email_campaign_bounced_email_t" color="bcd5f1" x="1830" y="780" />
		<entity schema="core" name="email_campaign_clicked_url_t" color="bcd5f1" x="1830" y="1230" />
		<entity schema="core" name="email_campaign_opened_by_t" color="bcd5f1" x="1830" y="420" />
		<entity schema="core" name="email_campaign_recipient_t" color="bcd5f1" x="2175" y="420" />
		<entity schema="core" name="email_campaign_report_t" color="bcd5f1" x="1470" y="780" />
		<entity schema="core" name="employee_t" color="bcd5f1" x="765" y="1620" />
		<entity schema="core" name="iso_3166_country_list_t" color="bcd5f1" x="1830" y="45" />
		<entity schema="core" name="issue_comment_t" color="bcd5f1" x="60" y="1995" />
		<entity schema="core" name="issue_relation_map_t" color="bcd5f1" x="60" y="735" />
		<entity schema="core" name="issue_t" color="bcd5f1" x="405" y="735" />
		<entity schema="core" name="list_segment_list_member_map_t" color="bcd5f1" x="1125" y="2955" />
		<entity schema="core" name="mail_message_t" color="bcd5f1" x="780" y="195" />
		<entity schema="core" name="mailing_list_member_t" color="bcd5f1" x="1125" y="2385" />
		<entity schema="core" name="mailing_list_segment_t" color="bcd5f1" x="1845" y="2385" />
		<entity schema="core" name="mailing_list_t" color="bcd5f1" x="1470" y="2385" />
		<entity schema="core" name="note_t" color="bcd5f1" x="1125" y="285" />
		<entity schema="core" name="organization_relation_t" color="bcd5f1" x="735" y="2955" />
		<entity schema="core" name="organization_t" color="bcd5f1" x="1125" y="1605" />
		<entity schema="core" name="party_t" color="bcd5f1" x="765" y="1995" />
		<entity schema="core" name="project_t" color="bcd5f1" x="60" y="420" />
		<entity schema="core" name="release_t" color="bcd5f1" x="420" y="330" />
		<entity schema="core" name="sale_t" color="bcd5f1" x="1470" y="1605" />
		<entity schema="core" name="worklog_t" color="bcd5f1" x="45" y="1590" />
	</layout>
	<layout name="mart" id="Layout_62d206" show_column_type="y" show_relation="columns" >
		<entity schema="mart" name="booking_by_time_report" color="bcd5f1" x="3090" y="300" />
		<entity schema="mart" name="booking_per_revenue_type_per_month" color="bcd5f1" x="3375" y="300" />
		<entity schema="mart" name="booking_per_revenue_type_per_quarter" color="bcd5f1" x="3705" y="300" />
		<entity schema="mart" name="booking_per_revenue_type_per_year" color="bcd5f1" x="3705" y="555" />
		<entity schema="mart" name="bugs_created_after_affected_version_release" color="bcd5f1" x="3000" y="45" />
		<entity schema="mart" name="bugs_created_after_fix_version_release" color="bcd5f1" x="3375" y="45" />
		<entity schema="mart" name="deal" color="bcd5f1" x="2565" y="300" />
		<entity schema="mart" name="deal_activity" color="bcd5f1" x="2565" y="1455" />
		<entity schema="mart" name="deal_pipedrive_close_date_differs_from_jira_sale_date" color="bcd5f1" x="2880" y="1785" />
		<entity schema="mart" name="deal_reconnecting" color="bcd5f1" x="2445" y="1785" />
		<entity schema="mart" name="deal_to_be_closed_soon" color="bcd5f1" x="2220" y="675" />
		<entity schema="mart" name="duplicate_emails_in_contacts" color="bcd5f1" x="2880" y="2205" />
		<entity schema="mart" name="emails_in_mailchimp_and_crm" color="bcd5f1" x="2445" y="2205" />
		<entity schema="mart" name="jira_account_dates" color="bcd5f1" x="2085" y="2205" />
		<entity schema="mart" name="jira_support_issues_not_linked_with_pipedrive" color="bcd5f1" x="2445" y="2820" />
		<entity schema="mart" name="mailchimp_campaign_success_rate" color="bcd5f1" x="2445" y="3075" />
		<entity schema="mart" name="mailchimp_emails_not_in_pipedrive" color="bcd5f1" x="2790" y="3075" />
		<entity schema="mart" name="partner_name_not_recognised" color="bcd5f1" x="2790" y="3390" />
		<entity schema="mart" name="pipedrive_emails_not_in_mailchimp" color="bcd5f1" x="2445" y="3390" />
		<entity schema="mart" name="report_bugs_per_account" color="bcd5f1" x="2040" y="3390" />
		<entity schema="mart" name="report_bugs_per_component_pre_release" color="bcd5f1" x="2445" y="3750" />
		<entity schema="mart" name="report_bugs_per_release" color="bcd5f1" x="2040" y="3750" />
		<entity schema="mart" name="report_hours_logged_per_account" color="bcd5f1" x="1680" y="3750" />
		<entity schema="mart" name="report_hours_logged_per_component" color="bcd5f1" x="1680" y="3990" />
		<entity schema="mart" name="report_hours_logged_per_issue" color="bcd5f1" x="1320" y="3990" />
		<entity schema="mart" name="revenue_by_time_report" color="bcd5f1" x="1395" y="2520" />
		<entity schema="mart" name="revenue_per_customer_by_time" color="bcd5f1" x="1095" y="2520" />
		<entity schema="mart" name="revenue_per_month_per_sale" color="bcd5f1" x="810" y="3990" />
		<entity schema="mart" name="revenue_per_revenue_type_per_month" color="bcd5f1" x="765" y="3720" />
		<entity schema="mart" name="revenue_per_revenue_type_per_quarter" color="bcd5f1" x="420" y="3990" />
		<entity schema="mart" name="revenue_per_revenue_type_per_year" color="bcd5f1" x="435" y="3780" />
		<entity schema="mart" name="sales_report" color="bcd5f1" x="420" y="3330" />
		<entity schema="mart" name="sales_report_czk_revenue_broken_down_by_time" color="bcd5f1" x="45" y="3720" />
		<entity schema="mart" name="sales_report_eur_revenue_broken_down_by_time" color="bcd5f1" x="420" y="5385" />
		<entity schema="mart" name="sales_report_extended" color="bcd5f1" x="75" y="2055" />
		<entity schema="mart" name="sales_report_usd_revenue_broken_down_by_time" color="bcd5f1" x="795" y="5385" />
	</layout>
	<layout name="stage_d" id="Layout_423f54f" show_column_type="y" show_relation="columns" >
		<entity schema="stage" name="cnb_exchange_rate_counter_currency_czk_d" color="bcd5f1" x="1380" y="7305" />
		<entity schema="stage" name="jira_issue_comment_d" color="bcd5f1" x="1740" y="7305" />
		<entity schema="stage" name="jira_issue_d" color="bcd5f1" x="2085" y="7305" />
		<entity schema="stage" name="jira_issue_relation_d" color="bcd5f1" x="1740" y="7665" />
		<entity schema="stage" name="jira_project_d" color="bcd5f1" x="2460" y="7305" />
		<entity schema="stage" name="jira_release_d" color="bcd5f1" x="2460" y="7755" />
		<entity schema="stage" name="jira_tempo_account_d" color="bcd5f1" x="2460" y="8055" />
		<entity schema="stage" name="jira_tempo_customer_d" color="bcd5f1" x="2805" y="8055" />
		<entity schema="stage" name="jira_user_d" color="bcd5f1" x="2085" y="8055" />
		<entity schema="stage" name="jira_user_employee_d" color="bcd5f1" x="2085" y="8370" />
		<entity schema="stage" name="jira_worklog_d" color="bcd5f1" x="1740" y="8370" />
		<entity schema="stage" name="mailchimp_campaign_d" color="bcd5f1" x="1680" y="6390" />
		<entity schema="stage" name="mailchimp_list_d" color="bcd5f1" x="2085" y="6390" />
		<entity schema="stage" name="mailchimp_list_member_d" color="bcd5f1" x="2460" y="6390" />
		<entity schema="stage" name="mailchimp_list_segment_d" color="bcd5f1" x="1740" y="6060" />
		<entity schema="stage" name="mailchimp_list_segment_member_d" color="bcd5f1" x="2085" y="6060" />
		<entity schema="stage" name="mailchimp_report_click_report_d" color="bcd5f1" x="1395" y="6060" />
		<entity schema="stage" name="mailchimp_report_click_report_member_d" color="bcd5f1" x="1050" y="6390" />
		<entity schema="stage" name="mailchimp_report_d" color="bcd5f1" x="2460" y="5520" />
		<entity schema="stage" name="mailchimp_report_email_activity_d" color="bcd5f1" x="1050" y="6045" />
		<entity schema="stage" name="mailchimp_report_open_report_d" color="bcd5f1" x="2805" y="5520" />
		<entity schema="stage" name="mailchimp_report_sent_to_d" color="bcd5f1" x="2805" y="6090" />
		<entity schema="stage" name="mailchimp_template_d" color="bcd5f1" x="2805" y="6390" />
		<entity schema="stage" name="ocean_currency_d" color="bcd5f1" x="2115" y="5520" />
		<entity schema="stage" name="ocean_organziation_to_crm_map_d" color="bcd5f1" x="2115" y="5775" />
		<entity schema="stage" name="ocean_partner_list_d" color="bcd5f1" x="1770" y="5775" />
		<entity schema="stage" name="ocean_payment_received_d" color="bcd5f1" x="1425" y="5745" />
		<entity schema="stage" name="ocean_removed_jira_user_d" color="bcd5f1" x="1770" y="5535" />
		<entity schema="stage" name="ocean_revenue_type_d" color="bcd5f1" x="1425" y="5280" />
		<entity schema="stage" name="ocean_sales_report_d" color="bcd5f1" x="1770" y="5070" />
		<entity schema="stage" name="ocean_sales_representative_d" color="bcd5f1" x="2115" y="5070" />
		<entity schema="stage" name="ocean_seller_d" color="bcd5f1" x="2460" y="5250" />
		<entity schema="stage" name="pipedrive_activity_d" color="bcd5f1" x="1425" y="4410" />
		<entity schema="stage" name="pipedrive_currency_d" color="bcd5f1" x="1770" y="4410" />
		<entity schema="stage" name="pipedrive_deal_category_options_d" color="bcd5f1" x="1770" y="4830" />
		<entity schema="stage" name="pipedrive_deal_d" color="bcd5f1" x="1080" y="4065" />
		<entity schema="stage" name="pipedrive_deal_deal_change_d" color="bcd5f1" x="1050" y="5070" />
		<entity schema="stage" name="pipedrive_deal_deal_source_options_d" color="bcd5f1" x="1050" y="5460" />
		<entity schema="stage" name="pipedrive_deal_industry_options_d" color="bcd5f1" x="705" y="5460" />
		<entity schema="stage" name="pipedrive_deal_mail_message_d" color="bcd5f1" x="705" y="4440" />
		<entity schema="stage" name="pipedrive_deal_participants_d" color="bcd5f1" x="1425" y="4065" />
		<entity schema="stage" name="pipedrive_deal_reason_lost_options_d" color="bcd5f1" x="735" y="4065" />
		<entity schema="stage" name="pipedrive_deal_region_options_d" color="bcd5f1" x="735" y="3825" />
		<entity schema="stage" name="pipedrive_deal_resulting_state_options_d" color="bcd5f1" x="390" y="4065" />
		<entity schema="stage" name="pipedrive_deal_visible_to_options_d" color="bcd5f1" x="1080" y="3825" />
		<entity schema="stage" name="pipedrive_note_d" color="bcd5f1" x="1425" y="3660" />
		<entity schema="stage" name="pipedrive_organization_d" color="bcd5f1" x="1770" y="3810" />
		<entity schema="stage" name="pipedrive_organization_label_options_d" color="bcd5f1" x="2115" y="3810" />
		<entity schema="stage" name="pipedrive_organization_visible_to_options_d" color="bcd5f1" x="2115" y="4170" />
		<entity schema="stage" name="pipedrive_person_d" color="bcd5f1" x="1080" y="2985" />
		<entity schema="stage" name="pipedrive_person_label_options_d" color="bcd5f1" x="1425" y="2985" />
		<entity schema="stage" name="pipedrive_person_visible_to_options_d" color="bcd5f1" x="1425" y="3420" />
		<entity schema="stage" name="pipedrive_pipeline_d" color="bcd5f1" x="735" y="3315" />
		<entity schema="stage" name="pipedrive_stage_d" color="bcd5f1" x="1770" y="3315" />
		<entity schema="stage" name="pipedrive_user_d" color="bcd5f1" x="2115" y="3315" />
		<entity schema="stage" name="restcountries_country_list_d" color="bcd5f1" x="1770" y="3000" />
		<entity schema="stage" name="vtiger_account_d" color="bcd5f1" x="2115" y="2790" />
		<entity schema="stage" name="vtiger_accountbillads_d" color="bcd5f1" x="2460" y="2790" />
		<entity schema="stage" name="vtiger_accountscf_d" color="bcd5f1" x="2460" y="3315" />
		<entity schema="stage" name="vtiger_accountshipads_d" color="bcd5f1" x="2805" y="3315" />
		<entity schema="stage" name="vtiger_activity_d" color="bcd5f1" x="1770" y="2310" />
		<entity schema="stage" name="vtiger_campaign_d" color="bcd5f1" x="2115" y="2265" />
		<entity schema="stage" name="vtiger_campaignaccountrel_d" color="bcd5f1" x="2460" y="2265" />
		<entity schema="stage" name="vtiger_campaigncontrel_d" color="bcd5f1" x="2460" y="2535" />
		<entity schema="stage" name="vtiger_campaignleadrel_d" color="bcd5f1" x="1770" y="2010" />
		<entity schema="stage" name="vtiger_campaignrelstatus_d" color="bcd5f1" x="2115" y="1995" />
		<entity schema="stage" name="vtiger_campaignscf_d" color="bcd5f1" x="2460" y="2010" />
		<entity schema="stage" name="vtiger_cf_874_d" color="bcd5f1" x="1425" y="2520" />
		<entity schema="stage" name="vtiger_cntactivityrel_d" color="bcd5f1" x="2805" y="2010" />
		<entity schema="stage" name="vtiger_contactaddress_d" color="bcd5f1" x="2805" y="2265" />
		<entity schema="stage" name="vtiger_contactdetails_d" color="bcd5f1" x="3150" y="2265" />
		<entity schema="stage" name="vtiger_contactscf_d" color="bcd5f1" x="2805" y="2670" />
		<entity schema="stage" name="vtiger_contactsubdetails_d" color="bcd5f1" x="3150" y="2955" />
		<entity schema="stage" name="vtiger_contpotentialrel_d" color="bcd5f1" x="2805" y="2955" />
		<entity schema="stage" name="vtiger_crmentity_d" color="bcd5f1" x="1080" y="2370" />
		<entity schema="stage" name="vtiger_crmentityrel_d" color="bcd5f1" x="735" y="2790" />
		<entity schema="stage" name="vtiger_emaildetails_d" color="bcd5f1" x="735" y="2460" />
		<entity schema="stage" name="vtiger_entityname_d" color="bcd5f1" x="390" y="2790" />
		<entity schema="stage" name="vtiger_field_d" color="bcd5f1" x="1425" y="1980" />
		<entity schema="stage" name="vtiger_leadaddress_d" color="bcd5f1" x="735" y="1995" />
		<entity schema="stage" name="vtiger_leaddetails_d" color="bcd5f1" x="1080" y="1620" />
		<entity schema="stage" name="vtiger_leadscf_d" color="bcd5f1" x="390" y="1785" />
		<entity schema="stage" name="vtiger_leadsource_d" color="bcd5f1" x="390" y="2370" />
		<entity schema="stage" name="vtiger_leadstatus_d" color="bcd5f1" x="45" y="2370" />
		<entity schema="stage" name="vtiger_leadsubdetails_d" color="bcd5f1" x="45" y="2085" />
		<entity schema="stage" name="vtiger_modcomments_d" color="bcd5f1" x="45" y="1470" />
		<entity schema="stage" name="vtiger_modtracker_basic_d" color="bcd5f1" x="390" y="1470" />
		<entity schema="stage" name="vtiger_modtracker_detail_d" color="bcd5f1" x="735" y="1470" />
		<entity schema="stage" name="vtiger_modtracker_relations_d" color="bcd5f1" x="45" y="1200" />
		<entity schema="stage" name="vtiger_potential_d" color="bcd5f1" x="1425" y="1335" />
		<entity schema="stage" name="vtiger_potentialscf_d" color="bcd5f1" x="1770" y="1335" />
		<entity schema="stage" name="vtiger_servicecontracts_d" color="bcd5f1" x="1080" y="885" />
		<entity schema="stage" name="vtiger_servicecontractscf_d" color="bcd5f1" x="1425" y="885" />
		<entity schema="stage" name="vtiger_users_d" color="bcd5f1" x="1770" y="45" />
	</layout>
	<layout name="stage_i" id="Layout_72da5" show_column_type="y" show_relation="columns" >
		<entity schema="stage" name="cnb_exchange_rate_counter_currency_czk_i" color="bcd5f1" x="2475" y="2910" />
		<entity schema="stage" name="jira_issue_comment_i" color="bcd5f1" x="2835" y="2910" />
		<entity schema="stage" name="jira_issue_i" color="bcd5f1" x="3180" y="2910" />
		<entity schema="stage" name="jira_issue_relation_i" color="bcd5f1" x="2835" y="3255" />
		<entity schema="stage" name="jira_project_i" color="bcd5f1" x="3555" y="2910" />
		<entity schema="stage" name="jira_release_i" color="bcd5f1" x="3555" y="3360" />
		<entity schema="stage" name="jira_tempo_account_i" color="bcd5f1" x="3555" y="3645" />
		<entity schema="stage" name="jira_tempo_customer_i" color="bcd5f1" x="3900" y="3645" />
		<entity schema="stage" name="jira_user_employee_i" color="bcd5f1" x="3900" y="3990" />
		<entity schema="stage" name="jira_user_i" color="bcd5f1" x="4245" y="3990" />
		<entity schema="stage" name="jira_worklog_i" color="bcd5f1" x="3180" y="3645" />
		<entity schema="stage" name="mailchimp_campaign_i" color="bcd5f1" x="2775" y="3645" />
		<entity schema="stage" name="mailchimp_list_i" color="bcd5f1" x="3180" y="4545" />
		<entity schema="stage" name="mailchimp_list_member_i" color="bcd5f1" x="3555" y="4545" />
		<entity schema="stage" name="mailchimp_list_segment_i" color="bcd5f1" x="3555" y="5415" />
		<entity schema="stage" name="mailchimp_list_segment_member_i" color="bcd5f1" x="3900" y="5415" />
		<entity schema="stage" name="mailchimp_report_click_report_i" color="bcd5f1" x="3900" y="5730" />
		<entity schema="stage" name="mailchimp_report_click_report_member_i" color="bcd5f1" x="4245" y="5730" />
		<entity schema="stage" name="mailchimp_report_email_activity_i" color="bcd5f1" x="4245" y="6045" />
		<entity schema="stage" name="mailchimp_report_i" color="bcd5f1" x="3180" y="5415" />
		<entity schema="stage" name="mailchimp_report_open_report_i" color="bcd5f1" x="3525" y="5940" />
		<entity schema="stage" name="mailchimp_report_sent_to_i" color="bcd5f1" x="3525" y="6270" />
		<entity schema="stage" name="mailchimp_template_i" color="bcd5f1" x="3180" y="6270" />
		<entity schema="stage" name="ocean_currency_i" color="bcd5f1" x="2835" y="6270" />
		<entity schema="stage" name="ocean_organziation_to_crm_map_i" color="bcd5f1" x="2835" y="6510" />
		<entity schema="stage" name="ocean_partner_list_i" color="bcd5f1" x="2490" y="6510" />
		<entity schema="stage" name="ocean_payment_received_i" color="bcd5f1" x="2490" y="6735" />
		<entity schema="stage" name="ocean_removed_jira_user_i" color="bcd5f1" x="2145" y="6735" />
		<entity schema="stage" name="ocean_revenue_type_i" color="bcd5f1" x="2145" y="6960" />
		<entity schema="stage" name="ocean_sales_report_i" color="bcd5f1" x="2145" y="6300" />
		<entity schema="stage" name="ocean_sales_representative_i" color="bcd5f1" x="1800" y="6735" />
		<entity schema="stage" name="ocean_seller_i" color="bcd5f1" x="2490" y="6255" />
		<entity schema="stage" name="pipedrive_activity_i" color="bcd5f1" x="2835" y="5625" />
		<entity schema="stage" name="pipedrive_currency_i" color="bcd5f1" x="2490" y="5625" />
		<entity schema="stage" name="pipedrive_deal_category_options_i" color="bcd5f1" x="2490" y="5400" />
		<entity schema="stage" name="pipedrive_deal_deal_change_i" color="bcd5f1" x="2115" y="5625" />
		<entity schema="stage" name="pipedrive_deal_deal_source_options_i" color="bcd5f1" x="2490" y="6000" />
		<entity schema="stage" name="pipedrive_deal_i" color="bcd5f1" x="1770" y="5010" />
		<entity schema="stage" name="pipedrive_deal_industry_options_i" color="bcd5f1" x="2115" y="5010" />
		<entity schema="stage" name="pipedrive_deal_mail_message_i" color="bcd5f1" x="1425" y="6000" />
		<entity schema="stage" name="pipedrive_deal_participants_i" color="bcd5f1" x="2115" y="6000" />
		<entity schema="stage" name="pipedrive_deal_reason_lost_options_i" color="bcd5f1" x="1770" y="6000" />
		<entity schema="stage" name="pipedrive_deal_region_options_i" color="bcd5f1" x="1425" y="5775" />
		<entity schema="stage" name="pipedrive_deal_resulting_state_options_i" color="bcd5f1" x="1770" y="6225" />
		<entity schema="stage" name="pipedrive_deal_visible_to_options_i" color="bcd5f1" x="1080" y="6000" />
		<entity schema="stage" name="pipedrive_note_i" color="bcd5f1" x="1425" y="5010" />
		<entity schema="stage" name="pipedrive_organization_i" color="bcd5f1" x="1425" y="4425" />
		<entity schema="stage" name="pipedrive_organization_label_options_i" color="bcd5f1" x="1770" y="4425" />
		<entity schema="stage" name="pipedrive_organization_relation_i" color="bcd5f1" x="1770" y="4695" />
		<entity schema="stage" name="pipedrive_organization_visible_to_options_i" color="bcd5f1" x="1080" y="5010" />
		<entity schema="stage" name="pipedrive_person_i" color="bcd5f1" x="2115" y="4350" />
		<entity schema="stage" name="pipedrive_person_label_options_i" color="bcd5f1" x="2460" y="4785" />
		<entity schema="stage" name="pipedrive_person_visible_to_options_i" color="bcd5f1" x="2460" y="5010" />
		<entity schema="stage" name="pipedrive_pipeline_i" color="bcd5f1" x="1770" y="4020" />
		<entity schema="stage" name="pipedrive_stage_i" color="bcd5f1" x="1425" y="5400" />
		<entity schema="stage" name="pipedrive_user_i" color="bcd5f1" x="1080" y="5400" />
		<entity schema="stage" name="restcountries_country_list_i" color="bcd5f1" x="1080" y="4710" />
		<entity schema="stage" name="vtiger_account_i" color="bcd5f1" x="2115" y="3840" />
		<entity schema="stage" name="vtiger_accountbillads_i" color="bcd5f1" x="1770" y="3540" />
		<entity schema="stage" name="vtiger_accountscf_i" color="bcd5f1" x="2115" y="3450" />
		<entity schema="stage" name="vtiger_accountshipads_i" color="bcd5f1" x="1770" y="3150" />
		<entity schema="stage" name="vtiger_activity_i" color="bcd5f1" x="2115" y="2985" />
		<entity schema="stage" name="vtiger_campaign_i" color="bcd5f1" x="1770" y="2475" />
		<entity schema="stage" name="vtiger_campaignaccountrel_i" color="bcd5f1" x="2115" y="2475" />
		<entity schema="stage" name="vtiger_campaigncontrel_i" color="bcd5f1" x="2115" y="2745" />
		<entity schema="stage" name="vtiger_campaignleadrel_i" color="bcd5f1" x="1425" y="2985" />
		<entity schema="stage" name="vtiger_campaignrelstatus_i" color="bcd5f1" x="1425" y="2730" />
		<entity schema="stage" name="vtiger_campaignscf_i" color="bcd5f1" x="1425" y="2475" />
		<entity schema="stage" name="vtiger_cf_874_i" color="bcd5f1" x="1425" y="2220" />
		<entity schema="stage" name="vtiger_cntactivityrel_i" color="bcd5f1" x="1770" y="2250" />
		<entity schema="stage" name="vtiger_contactaddress_i" color="bcd5f1" x="2115" y="2085" />
		<entity schema="stage" name="vtiger_contactdetails_i" color="bcd5f1" x="2460" y="2085" />
		<entity schema="stage" name="vtiger_contactscf_i" color="bcd5f1" x="1770" y="1815" />
		<entity schema="stage" name="vtiger_contactsubdetails_i" color="bcd5f1" x="2115" y="1755" />
		<entity schema="stage" name="vtiger_contpotentialrel_i" color="bcd5f1" x="1425" y="1860" />
		<entity schema="stage" name="vtiger_crmentity_i" color="bcd5f1" x="1080" y="2475" />
		<entity schema="stage" name="vtiger_crmentityrel_i" color="bcd5f1" x="1080" y="2880" />
		<entity schema="stage" name="vtiger_emaildetails_i" color="bcd5f1" x="735" y="2880" />
		<entity schema="stage" name="vtiger_entityname_i" color="bcd5f1" x="1080" y="3195" />
		<entity schema="stage" name="vtiger_field_i" color="bcd5f1" x="1080" y="1950" />
		<entity schema="stage" name="vtiger_leadaddress_i" color="bcd5f1" x="735" y="2520" />
		<entity schema="stage" name="vtiger_leaddetails_i" color="bcd5f1" x="390" y="2880" />
		<entity schema="stage" name="vtiger_leadscf_i" color="bcd5f1" x="390" y="2310" />
		<entity schema="stage" name="vtiger_leadsource_i" color="bcd5f1" x="45" y="2880" />
		<entity schema="stage" name="vtiger_leadstatus_i" color="bcd5f1" x="45" y="2610" />
		<entity schema="stage" name="vtiger_leadsubdetails_i" color="bcd5f1" x="45" y="2310" />
		<entity schema="stage" name="vtiger_modcomments_i" color="bcd5f1" x="45" y="2010" />
		<entity schema="stage" name="vtiger_modtracker_basic_i" color="bcd5f1" x="390" y="2010" />
		<entity schema="stage" name="vtiger_modtracker_detail_i" color="bcd5f1" x="735" y="2010" />
		<entity schema="stage" name="vtiger_modtracker_relations_i" color="bcd5f1" x="45" y="1755" />
		<entity schema="stage" name="vtiger_potential_i" color="bcd5f1" x="735" y="1320" />
		<entity schema="stage" name="vtiger_potentialscf_i" color="bcd5f1" x="1080" y="1320" />
		<entity schema="stage" name="vtiger_servicecontracts_i" color="bcd5f1" x="390" y="1515" />
		<entity schema="stage" name="vtiger_servicecontractscf_i" color="bcd5f1" x="45" y="1260" />
		<entity schema="stage" name="vtiger_users_i" color="bcd5f1" x="735" y="45" />
	</layout>
</project>